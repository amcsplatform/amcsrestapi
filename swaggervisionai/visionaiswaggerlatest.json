{
  "openapi": "3.0.1",
  "info": {
    "description": "# Getting Started\n\n## Document Purpose and Scope\n\nThe VisionAI REST API endpoints are technically described in this document. This document's goal is to instruct readers on how to interface with the VisionAI External REST API.\n\n## Security\n\nWe use PAT Tokens for authentication over HTTPS encrypted comms.\n\nA PAT token will be provided for you to use in your integration.\n\nYou will use this PAT token to authenticate as follows.\n\n### Request Format:\n\nPOST: /visionai/api/authTokens\n\nBody: {\"privateKey\":\"PATtokenstring\"}\n\n### Response Format:\n\nThe response passes a SessionToken as a cookie called Platform.Tracker.SessionToken.\n\nThis cookie should be included in the subsequent calls to the REST API.\n\nThe API endpoints that are currently available are detailed below.",
    "title": "External API",
    "version": "external"
  },
  "security": [
    {
      "cookieAuth": []
    }
  ],
  "servers": [
    {
      "url": "https://o1-dev-svc-core.amcsplatform.com/",
      "description": "AMCS VisionAI Developer Environment"
    }
  ],
  "paths": {
	"/visionai/api/authTokens": {
      "post": {
        "tags": [
          "Auth"
        ],
        "summary": "Auth by Private Key",
        "description": "This endpoint is used for authentication and authorisation of a calling application by supplying the Tenant Private Key in the privateKey property. When successful, Platform.VisionAI.SessionToken is added to the cookie. \n\n## Request\n\n| **Property** | **Description** |\n| --- | --- |\n| PrivateKey | This is a Personal Access Token (PAT), generated during Tenant Registration. |\n\n## Response\nAdditional fields from the response, other from the one below, can be disregarded.\n\n| **Property** | **Description** |\n| --- | --- |\n| AuthResult | The authentication and authorization result. Returns \"ok\" if successful otherwise returns \"invalidCredentials\".",
        "security": [],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/AMCS.IoT.UserCredentials"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Ok",
            "headers": {
              "Set-Cookie": {
                "schema": {
                  "type": "string",
                  "example": "Platform.VisionAI.SessionToken=abcde12345; Path=/; HttpOnly",
                  "description": "Subsequent calls to the REST API will use this cookie to authenticate and authorize requests."
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AMCS.IoT.LoginResponse"
                }
              }
            }
          }
        }
      }
    },
     "/integrator/allContaminationEvents/changes": {
      "get": {
        "tags": [
          "AllContaminationEvent"
        ],
        "summary": "Request list of All Contamination Event changes",
        "description": "# Request list of All Contamination Event changes\r\n\r\nRetrieve changes in the list of Contamination Events for all tenants, that have been made since a specific point in the history where ReviewProcessEnabled for tenant is false\r\n\r\n## Input\r\n\r\n| Parameter               | Description                |\r\n| ----------------------- | -------------------------- |\r\n| since                   | Bookmark from extra.until  |\r\n| cursor                  | Bookmark from extra.cursor |\r\n| links                   | N/A                        |\r\n\r\n## Output\r\n\r\n| Property\t\t\t\t\t\t| Type     | Description\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t                              |\r\n| ------------------- | -------- | ---------------------------------------------------------------------------------- |\r\n| GUID\t\t\t\t\t\t\t\t| GUID     | ID of the Contamination Event.\t\t\t\t\t\t\t\t\t\t\t\t\t                          \t|\r\n| TenantId\t\t\t\t\t\t| GUID     | ID of the Tenant associated with the Contamination Event\t\t                        |\r\n| CustomerName\t\t\t\t\t|string| Name of the customer of the Contamination Event|\r\n| CompanyOutletId\t\t\t| GUID     | ID of the Company Outlet associated with the Contamination Event                  \t|\r\n| OutletName\t\t\t| string     | Name of the Company Outlet associated with the Contamination Event                  \t|\r\n| CustomerSiteId\t\t\t| GUID     | ID of the Customer Site associated with the Contamination Event                     |\r\n| SiteName\t\t\t| string     | Name of the Site associated with the Contamination Event                     |\r\n| CustomerType\t\t\t| string     | Type of customer associated with the Contamination Event                     |\r\n| CustomerAddress\t\t\t| string     | Address of customer associated with the Contamination Event                     |\r\n| VehicleId\t\t\t\t\t\t| GUID     | ID of the Vehicle associated with the Contamination Event\t\t\t\t                  \t|\r\n| Latitude\t   \t\t\t  | double   | Location of the Contamination Event                                                |\r\n| Longitude\t\t\t\t\t\t| double   | Location of the Contamination Event                                                |\r\n| Timestamp\t\t\t\t\t\t| DateTime | Timestamp of the Contamination Event\t                                              |\r\n| ContaminationScore \t| int      | Degree of Contamination found                                                      |\r\n| GrossWeight\t\t\t|double|Gross weight of the Contamination Event\t|\r\n| TareWeight\t\t\t\t|double| Tare weight of the Contamination Event |\r\n| NetWeight\t\t\t\t|double| Net weight of the Contamination Event|\r\n| Seq\t\t\t\t\t|int|Sequence of the Contamination Event |\r\n| Lifter\t\t\t\t|int|Lifter of the Contamination Event\t|\r\n| ContainerId\t\t\t|string|Conntainer Id of the Contamination Event |\r\n| WasteType\t\t\t\t|string|Waste type of the Contamination Event |\r\n| QRCodeRawText\t\t\t|string| Raw QR code value of the COntamination Event |\r\n| TotalSurfaceAreaVolume\t\t\t|double| The total surface area of the Contamination Event |\r\n| Materials\t\t\t|string| The materials detected of the Contamination Event |\r\n| ExternalEventId\t\t\t|string| The external event Id of the Contamination Event |\r\n| ImageSas\t\t\t|string| The image SAS url of the Contamination Event expires within 24 hours|\r\n| extra.until         | string   | Bookmark to put in as \"since\" later - appears when there are no more pages for now |\r\n| link.next           | URI      | Link to follow to get next page with changes                                       |",
        "parameters": [
          {
            "name": "since",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "cursor",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "links",
            "in": "query",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiResourceChanges[ApiAllContaminationEventExternalResource]"
                }
              }
            }
          }
        }
      }
    },
    "/integrator/allOverfilledContainerEvents/changes": {
      "get": {
        "tags": [
          "AllOverfilledContainerEvent"
        ],
        "summary": "Request list of All Overfilled Container Event changes",
        "description": "# Request list of All Overfilled Container Event changes\r\n\r\nRetrieve changes in the list of All Overfilled Container Events for all tenants, that have been made since a specific point in the history where ReviewProcessEnabled for tenant is false\r\n\r\n## Input\r\n\r\n| Parameter               | Description                |\r\n| ----------------------- | -------------------------- |\r\n| since                   | Bookmark from extra.until  |\r\n| cursor                  | Bookmark from extra.cursor |\r\n| links                   | N/A                        |\r\n\r\n## Output\r\n\r\n| Property              | Type     | Description\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t                              |\r\n| --------------------- | -------- | ---------------------------------------------------------------------------------- |\r\n| GUID\t\t\t\t\t\t\t  \t| GUID     | ID of the Overfilled Container Event.\t\t\t\t\t\t\t\t\t\t\t\t\t                    |\r\n| TenantId\t\t\t\t\t  \t| GUID     | ID of the Tenant associated with the Overfilled Container Event\t\t                |\r\n| CustomerName\t\t\t\t| string\t\t| Name of the Customer with Overfilled Container Event |\r\n| CompanyOutletId\t\t  \t| GUID     | ID of the Company Outlet associated with the Overfilled Container Event            |\r\n| OutletName\t\t\t\t| string\t| Name of the Company Outlet associated with the Overfilled Container Event\t\t|\r\n| CustomerSiteId\t  \t\t| GUID     | ID of the Customer Site associated with the Overfilled Container Event             |\r\n| SiteName\t\t\t\t\t| string\t| Name of the Site associated with the Overfilled Container Event\t|\r\n| CustomerType\t\t\t\t| string\t| Type of Customer associated withe Overfilled Container Event |\r\n| CustomerAddress\t\t\t| string\t| Address of the Customer associated withe Overfilled Container Event |\r\n| VehicleId\t\t\t\t\t  \t| GUID     | ID of the Vehicle associated with the Overfilled Container Event\t\t\t\t            |\r\n| VehicleReg\t\t\t\t| string\t| Vehicle Registration associated with the Overfilled Container Event |\r\n| Latitude\t   \t\t\t    | double   | Geographic coordinate of the Overfilled Container Event                                         |\r\n| Longitude\t\t\t\t\t\t  | double   | Geographic coordinate of the Overfilled Container Event                                         |\r\n| Timestamp\t\t\t\t   \t\t| DateTime | Timestamp of the Overfilled Container Event\t                                      |\r\n| GrossWeight\t\t\t| double |\tGross weight of the Overfilled Container Event |\r\n| TareWeight\t\t\t| double |\tTare weight  of the Overfilled Container Event |\r\n| NetWeight\t\t\t| double |\tNet weight of the Overfilled Container Event |\r\n| Seq\t\t\t| int |\tSequence of the Overfilled Container Event |\r\n| RFID\t\t\t| GUID | RFID of the Overfilled Container Event |\r\n| WeighErrorCode\t\t| int | Weight error code of the Overfilled Container Event |\r\n| ContainerId\t\t| string | ContainerId of the Overfilled Container Event |\r\n| WasteType\t\t| string | Waste type of the Overfilled Container Event |\r\n| QRCodeRawText\t\t| string | QRCode raw text of the Overfilled Container Event |\r\n| ExternalEventId\t\t\t|string| The external event Id of the Overfilled Container Event |\r\n| ImageSas\t\t\t|string| The image SAS url of the Contamination Event expires within 24 hours|\r\n| extra.until           | string   | Bookmark to put in as \"since\" later - appears when there are no more pages for now |\r\n| link.next             | URI      | Link to follow to get next page with changes                                       |",
        "parameters": [
          {
            "name": "since",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "cursor",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "links",
            "in": "query",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiResourceChanges[ApiAllOverfilledContainerEventExternalResource]"
                }
              }
            }
          }
        }
      }
    },
    "/visionai/api/integrator/assets": {
      "post": {
        "tags": [
          "Asset"
        ],
        "summary": "Create or Update an Asset (Vehicle)",
        "description": "# Create or Update an Asset (Vehicle)\r\n\r\n| Parameter    | Type   | Description                                                     |\r\n|--------------|--------|-----------------------------------------------------------------|\r\n| AssetId      | GUID   | ID of the Asset                                                 |\r\n| AssetName    | string | Display name (vehicle registration plate)                       |\r\n| AssetType    | string | Front Loader, Side Loader, Rear End Loader                      |\r\n| OutletId     | GUID   | ID of the Company Outlet associated with the Asset              |\r\n| IsDeleted    | bool   | Asset is no longer in use                                       |\r\n\r\n## Sample API Requests\r\n\r\n```\r\n{\r\n  \"AssetId\": \"B3E43C4D-BC76-4E59-9E2E-25BC33EA2EC4\",\r\n  \"AssetName\": \"VEH 001\",\r\n  \"AssetType\": \"Front Loader\",\r\n  \"OutletId\": \"2FAD788D-A748-4520-9120-923DA1E42942\",\r\n  \"IsDeleted\": false \r\n}\r\n```",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/AMCS.IoT.Contamination.Api.Integrator.Asset.ApiAsset"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiauthTokens200"
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiauthTokens500Error"
                }
              }
            }
          },
          "501": {
            "$ref": "#/components/responses/NotImplemented"
          },
          "502": {
            "$ref": "#/components/responses/BadGateway"
          },
          "503": {
            "$ref": "#/components/responses/ServiceUnavailable"
          },
          "504": {
            "$ref": "#/components/responses/GatewayTimeout"
          }
        }
      }
    },
	"/visionai/api/integrator/cameraEvents": {
      "post": {
        "tags": [
          "CameraEvent"
        ],
        "summary": "Create a contamination/overfilled from  camera",
        "description": "# Create a contamination/overfilled from camera\r\n\r\n| Parameter   | Type   | Description                      |\r\n|-------------|--------|----------------------------------|\r\n| Asset\t\t  | string | Vehicle Identified Registration or Asset Id|\r\n| Timestamp   | DateTime | Local time or UTC time of the event|\r\n| Lat         | double   | Latitude       |\r\n| Lon         | double   | Longitude       |\r\n| EventType   | string   | Contamination or Overfilled event       |\r\n| EventId     | string   | Unique Id for each event       |\r\n| WasteType   | string   | The waste stream the truck is collecting       |\r\n| MediaLink   | string   | URL to access the media file associate with each event    |\r\n\r\n## Sample API Requests\r\n\r\n```\r\n{\r\n    \"Asset\": \"M879 EUS\",\r\n    \"Timestamp\": \"2025-04-23 11:00:00\",\r\n    \"Lon\":-121.56767,\r\n    \"Lat\":39.49120,\r\n    \"EventType\": \"Contamination\",\r\n    \"EventId\": \"12345\",\r\n    \"WasteType\": \"General Waste\",\r\n    \"MediaLink\" :\"https://tem-production.s3.amazonaws.com/final_files/2025_03_14/82416/AWTI_VIN_2025_03_14_14_19_19_14019_c2_1ffdc5a0-0c80-4f15-b8be-9a16f690b2d0.mp4\"\r\n}\r\n```\r\n\r\n## Sample API Response\r\n```\r\n{\r\n    \"resource\" : 1\r\n}\r\n```",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/AMCS.IoT.Contamination.Api.Integrator.CameraEvent.ApiCameraEvent"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiResourceId"
                }
              }
            }
          },
		   "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          },
          "500": {
            "$ref": "#/components/responses/InternalServerError"
          },
          "501": {
            "$ref": "#/components/responses/NotImplemented"
          },
          "502": {
            "$ref": "#/components/responses/BadGateway"
          },
          "503": {
            "$ref": "#/components/responses/ServiceUnavailable"
          },
          "504": {
            "$ref": "#/components/responses/GatewayTimeout"
          }
        }
      }
    },
    "/visionai/api/integrator/contaminationEvents/changes": {
      "get": {
        "tags": [
          "ContaminationEvent"
        ],
        "operationId": "GetContaminationEventChanges",
        "summary": "Request list of Contamination Event changes",
        "description": "# Request list of Contamination Event changes\r\n\r\nRetrieve changes in the list of Contamination Events for all tenants, that have been made since a specific point in the history\r\n\r\n## Input\r\n\r\n| Parameter               | Description                |\r\n| ----------------------- | -------------------------- |\r\n| since                   | Bookmark from extra.until  |\r\n| cursor                  | Bookmark from extra.cursor |\r\n| links                   | N/A                        |\r\n\r\n## Output\r\n\r\n| Property\t\t\t\t\t\t| Type     | Description\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t                              |\r\n| ------------------- | -------- | ---------------------------------------------------------------------------------- |\r\n| GUID\t\t\t\t\t\t\t\t| GUID     | ID of the Contamination Event.\t\t\t\t\t\t\t\t\t\t\t\t\t                          \t|\r\n| TenantId\t\t\t\t\t\t| GUID     | ID of the Tenant associated with the Contamination Event\t\t                        |\r\n| CustomerName\t\t\t\t\t|string| Name of the customer of the Contamination Event|\r\n| CompanyOutletId\t\t\t| GUID     | ID of the Company Outlet associated with the Contamination Event                  \t|\r\n| OutletName\t\t\t| string     | Name of the Company Outlet associated with the Contamination Event                  \t|\r\n| CustomerSiteId\t\t\t| GUID     | ID of the Customer Site associated with the Contamination Event                     |\r\n| SiteName\t\t\t| string     | Name of the Site associated with the Contamination Event                     |\r\n| CustomerType\t\t\t| string     | Type of customer associated with the Contamination Event                     |\r\n| CustomerAddress\t\t\t| string     | Address of customer associated with the Contamination Event                     |\r\n| VehicleId\t\t\t\t\t\t| GUID     | ID of the Vehicle associated with the Contamination Event\t\t\t\t                  \t|\r\n| Latitude\t   \t\t\t  | double   | Location of the Contamination Event                                                |\r\n| Longitude\t\t\t\t\t\t| double   | Location of the Contamination Event                                                |\r\n| Timestamp\t\t\t\t\t\t| DateTime | Timestamp of the Contamination Event\t                                              |\r\n| ContaminationScore \t| int      | Degree of Contamination found                                                      |\r\n| GrossWeight\t\t\t|double|Gross weight of the Contamination Event\t|\r\n| TareWeight\t\t\t\t|double| Tare weight of the Contamination Event |\r\n| NetWeight\t\t\t\t|double| Net weight of the Contamination Event|\r\n| Seq\t\t\t\t\t|int|Sequence of the Contamination Event |\r\n| Lifter\t\t\t\t|int|Lifter of the Contamination Event\t|\r\n| ContainerId\t\t\t|string|Conntainer Id of the Contamination Event |\r\n| WasteType\t\t\t\t|string|Waste type of the Contamination Event |\r\n| QRCodeRawText\t\t\t|string| Raw QR code value of the COntamination Event\r\n| TotalSurfaceAreaVolume\t\t\t|double| The total surface area of the Contamination Event\r\n|  Materials\t\t\t|string| The materials detected of the Contamination Event\r\n| ExternalEventId\t\t\t|string| The external event Id of the Contamination Event\r\n| ImageSas\t\t\t|byte[]| The image SAS url of the Contamination Event expires within 24 hours\r\n|extra.until         | string   | Bookmark to put in as \"since\" later - appears when there are no more pages for now |\r\n| link.next           | URI      | Link to follow to get next page with changes                                       |",
        "parameters": [
          {
            "name": "since",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "cursor",
            "required": false,
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "links",
            "required": false,
            "in": "query",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiResourceChanges[ApiContaminationEventExternalResource]"
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "description": ""
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          },
          "500": {
            "$ref": "#/components/responses/InternalServerError"
          },
          "501": {
            "$ref": "#/components/responses/NotImplemented"
          },
          "502": {
            "$ref": "#/components/responses/BadGateway"
          },
          "503": {
            "$ref": "#/components/responses/ServiceUnavailable"
          },
          "504": {
            "$ref": "#/components/responses/GatewayTimeout"
          }
        }
      }
    },
    "/visionai/api/integrator/customerSites": {
      "post": {
        "tags": [
          "CustomerSite"
        ],
        "summary": "Create or Update a Customer Site",
        "description": "# Create or Update a Customer Site\r\n\r\n| Parameter          | Type     | Description                                                               |\r\n| -------------------| -------- | ------------------------------------------------------------------------- |\r\n| CustomerSiteId     | GUID     | ID of the Customer Site                                                   |\r\n| Name               | string   | Display name of the Customer Site (Customer Name)                         |\r\n| Country            | string   | Address part                                                              |\r\n| City               | string   | Address part                                                              |\r\n| Street             | string   | Address part                                                              |\r\n| Address1           | string   | Address part                                                              |\r\n| Address2           | string   | Address part                                                              |\r\n| Address3           | string   | Address part                                                              |\r\n| Address4           | string   | Additional address part                                                   |\r\n| Address5           | string   | Additional address part                                                   |\r\n| PostalCode         | string   | Address part                                                              |\r\n| HouseNumber        | string   | Address part                                                              |\r\n| Latitude           | double   | Geographic coordinate                                                     |\r\n| Longitude          | double   | Geographic coordinate                                                     |\r\n| OutletId           | GUID     | ID of the Company Outlet associated with the Customer Site                |\r\n| IsDeleted          | bool     | Indicates if the Customer Site is no longer in use                        |\r\n| SiteType           | string   | Type of the site                                                          |\r\n| CustomerType       | string   | Type of the customer                                                      |\r\n\r\n## Sample API Requests\r\n\r\n```\r\n{\r\n  \"CustomerSiteId\": \"B3E43C4D-BC76-4E59-9E2E-25BC33EA2EC4\",\r\n  \"Name\": \"Alterwerth Group\",\r\n  \"Country\": \"United States\",\r\n  \"City\": \"Upper Marlboro\",\r\n  \"Street\": \"Trent Oval\",\r\n  \"PostalCode\": \"MD 20792\",\r\n  \"HouseNumber\": \"1762\",\r\n  \"Address1\": \"Building A\",\r\n  \"Address2\": \"Suite 5\",\r\n  \"Address3\": \"Near Landmark Mall\",\r\n  \"Address4\": \"PO Box 123\",\r\n  \"Address5\": \"Additional Info\",\r\n  \"Latitude\": 38.82000560748161,\r\n  \"Longitude\": -76.75000011205616,\r\n  \"OutletId\": \"2FAD788D-A748-4520-9120-923DA1E42942\",\r\n  \"IsDeleted\": false,\r\n  \"SiteType\": \"\",\r\n  \"CustomerType\": \"\"\r\n}\r\n```\r\n",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/AMCS.IoT.Contamination.Api.Integrator.CustomerSite.ApiCustomerAddress"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiResourceId"
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          },
          "500": {
            "$ref": "#/components/responses/InternalServerError"
          },
          "501": {
            "$ref": "#/components/responses/NotImplemented"
          },
          "502": {
            "$ref": "#/components/responses/BadGateway"
          },
          "503": {
            "$ref": "#/components/responses/ServiceUnavailable"
          },
          "504": {
            "$ref": "#/components/responses/GatewayTimeout"
          }
        }
      }
    },
    "/visionai/api/integrator/image/{eventGuid}": {
      "get": {
        "tags": [
          "EventImage"
        ],
        "summary": "Download Event Image",
        "description": "# Download Event Image\r\n\r\nDownload the inferenced jpeg image associated with an Event.\r\n\r\n| Property                | Description                                            |\r\n| ----------------------- | ------------------------------------------------------ |\r\n| GUID                    | GUID associated to the Event.                          |",
        "parameters": [
          {
            "name": "eventGuid",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "image/jpeg": {
                "schema": {
                  "type": "string",
                  "format": "binary"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request - Invalid Guid Please check your Guid.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "type": "string",
                      "example": "Invalid Guid Please check your Guid."
                    }
                  },
                  "additionalProperties": false
                }
              }
            }
          },
          "401": {
            "description": ""
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          },
          "500": {
            "$ref": "#/components/responses/InternalServerError"
          },
          "501": {
            "$ref": "#/components/responses/NotImplemented"
          },
          "502": {
            "$ref": "#/components/responses/BadGateway"
          },
          "503": {
            "$ref": "#/components/responses/ServiceUnavailable"
          },
          "504": {
            "$ref": "#/components/responses/GatewayTimeout"
          }
        }
      }
    },
    "/visionai/api/integrator/outlets": {
      "post": {
        "tags": [
          "Outlet"
        ],
        "summary": "Create or Update an Outlet",
        "description": "# Create or Update an Outlet\r\n\r\n| Parameter   | Type   | Description                      |\r\n|-------------|--------|----------------------------------|\r\n| OutletId    | GUID   | ID of the Outlet                 |\r\n| OutletName  | string | Display name                     |\r\n| IsDeleted   | bool   | Outlet is no longer in use       |\r\n\r\n## Sample API Requests\r\n\r\n```\r\n{\r\n  \"OutletId\": \"B3E43C4D-BC76-4E59-9E2E-25BC33EA2EC4\",\r\n  \"OutletName\": \"Primary Company Outlet\",\r\n  \"IsDeleted\": false\r\n}\r\n```",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/AMCS.IoT.Contamination.Api.Integrator.Outlet.ApiOutlet"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiResourceId"
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          },
          "500": {
            "$ref": "#/components/responses/InternalServerError"
          },
          "501": {
            "$ref": "#/components/responses/NotImplemented"
          },
          "502": {
            "$ref": "#/components/responses/BadGateway"
          },
          "503": {
            "$ref": "#/components/responses/ServiceUnavailable"
          },
          "504": {
            "$ref": "#/components/responses/GatewayTimeout"
          }
        }
      }
    },
    "/visionai/api/integrator/overfilledContainerEvents/changes": {
      "get": {
        "tags": [
          "OverfilledContainerEvent"
        ],
        "operationId": "GetOverfilledContainerEventChanges",
        "summary": "Request list of Overfilled Container Event changes",
        "description": "# Request list of Overfilled Container Event changes\r\n\r\nRetrieve changes in the list of Overfilled Container Events for all tenants, that have been made since a specific point in the history\r\n\r\n## Input\r\n\r\n| Parameter               | Description                |\r\n| ----------------------- | -------------------------- |\r\n| since                   | Bookmark from extra.until  |\r\n| cursor                  | Bookmark from extra.cursor |\r\n| links                   | N/A                        |\r\n\r\n## Output\r\n\r\n| Property              | Type     | Description\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t                              |\r\n| --------------------- | -------- | ---------------------------------------------------------------------------------- |\r\n| GUID\t\t\t\t\t\t\t  \t| GUID     | ID of the Overfilled Container Event.\t\t\t\t\t\t\t\t\t\t\t\t\t                    |\r\n| TenantId\t\t\t\t\t  \t| GUID     | ID of the Tenant associated with the Overfilled Container Event\t\t                |\r\n| CustomerName\t\t\t\t| string\t\t| Name of the Customer with Overfilled Container Event |\r\n| CompanyOutletId\t\t  \t| GUID     | ID of the Company Outlet associated with the Overfilled Container Event            |\r\n| OutletName\t\t\t\t| string\t| Name of the Company Outlet associated with the Overfilled Container Event\t\t|\r\n| CustomerSiteId\t  \t\t| GUID     | ID of the Customer Site associated with the Overfilled Container Event             |\r\n| SiteName\t\t\t\t\t| string\t| Name of the Site associated with the Overfilled Container Event\t|\r\n| CustomerType\t\t\t\t| string\t| Type of Customer associated withe Overfilled Container Event |\r\n| CustomerAddress\t\t\t| string\t| Address of the Customer associated withe Overfilled Container Event |\r\n| VehicleId\t\t\t\t\t  \t| GUID     | ID of the Vehicle associated with the Overfilled Container Event\t\t\t\t            |\r\n| VehicleReg\t\t\t\t| string\t| Vehicle Registration associated with the Overfilled Container Event |\r\n| Latitude\t   \t\t\t    | double   | Geographic coordinate of the Overfilled Container Event                                         |\r\n| Longitude\t\t\t\t\t\t  | double   | Geographic coordinate of the Overfilled Container Event                                         |\r\n| Timestamp\t\t\t\t   \t\t| DateTime | Timestamp of the Overfilled Container Event\t                                      |\r\n| GrossWeight\t\t\t| double |\tGross weight of the Overfilled Container Event |\r\n| TareWeight\t\t\t| double |\tTare weight  of the Overfilled Container Event |\r\n| NetWeight\t\t\t| double |\tNet weight of the Overfilled Container Event |\r\n| Seq\t\t\t| int |\tSequence of the Overfilled Container Event |\r\n| RFID\t\t\t| GUID | RFID of the Overfilled Container Event |\r\n| WeighErrorCode\t\t| int | Weight error code of the Overfilled Container Event |\r\n| ContainerId\t\t| string | ContainerId of the Overfilled Container Event |\r\n| WasteType\t\t| string | Waste type of the Overfilled Container Event |\r\n| QRCodeRawText\t\t| string | QRCode raw text of the Overfilled Container Event |\r\n|ExternalEventId\t\t| string | The external event id of the Overfilled Container Event |\r\n| ImageSas\t\t\t|byte[]| The image SAS url of the Overfilled Event expires within 24 hours\r\n| extra.until           | string   | Bookmark to put in as \"since\" later - appears when there are no more pages for now |\r\n| link.next             | URI      | Link to follow to get next page with changes                                       |",
        "parameters": [
          {
            "name": "since",
            "required": false,
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "cursor",
            "required": false,
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "links",
            "required": false,
            "in": "query",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiResourceChanges[ApiOverfilledContainerEventExternalResource]"
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          },
          "500": {
            "$ref": "#/components/responses/InternalServerError"
          },
          "501": {
            "$ref": "#/components/responses/NotImplemented"
          },
          "502": {
            "$ref": "#/components/responses/BadGateway"
          },
          "503": {
            "$ref": "#/components/responses/ServiceUnavailable"
          },
          "504": {
            "$ref": "#/components/responses/GatewayTimeout"
          }
        }
      }
    }
  },
  "components": {
    "schemas": {
	  "AMCS.IoT.UserCredentials": {
        "type": "object",
        "required": [
          "privateKey"
        ],
        "properties": {
          "privateKey": {
            "type": "string",
            "nullable": false,
            "example": "1zEFtwJQE0cmKUE3AvnzBbm5"
          }
        },
        "additionalProperties": false
      },
	  "AMCS.IoT.LoginResponse": {
        "type": "object",
        "properties": {
          "authResult": {
            "type": "string",
            "nullable": false,
            "example": "ok"
          },
          "userName": {
            "type": "string",
            "nullable": true,
            "example": "ADMIN01"
          },
          "userIdentity": {
            "type": "string",
            "nullable": true,
            "example": "ADMIN"
          },
          "sysUserId": {
            "type": "integer",
            "format": "int32",
            "nullable": true,
            "example": 3
          },
          "userGuid": {
            "type": "string",
            "format": "uuid",
            "nullable": true,
            "example": "607e37cd-4f51-4148-af23-4459b74fc3b2"
          },
          "companyOutletId": {
            "type": "integer",
            "format": "int32",
            "nullable": true,
            "example": 10
          },
          "companyOutletGuid": {
            "type": "string",
            "format": "uuid",
            "nullable": true,
            "example": "5feaaae5-7733-4e45-ac39-87d46cf138e0"
          },
          "stayLoggedIn": {
            "type": "boolean",
            "example": false,
            "nullable": true
          }
        }
      },
      "AMCS.IoT.Contamination.Api.Integrator.Asset.ApiAsset": {
        "type": "object",
        "properties": {
          "assetId": {
            "type": "string",
            "format": "uuid",
            "nullable": true
          },
          "assetName": {
            "type": "string",
            "nullable": true
          },
          "assetType": {
            "type": "string",
            "nullable": true
          },
          "outletId": {
            "type": "string",
            "format": "uuid",
            "nullable": true
          },
          "isDeleted": {
            "type": "boolean"
          }
        },
        "additionalProperties": false
      },
	  "AMCS.IoT.Contamination.Api.Integrator.CameraEvent.ApiCameraEvent": {
        "type": "object",
        "properties": {
          "isValid": {
            "type": "boolean",
            "readOnly": true
          },
          "id": {
            "type": "integer",
            "format": "int32",
            "nullable": true,
            "readOnly": true
          },
          "id32": {
            "type": "integer",
            "format": "int32",
            "readOnly": true
          },
          "guid": {
            "type": "string",
            "format": "uuid",
            "nullable": true
          },
          "lastChangeReasonId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "tempIdentifier": {
            "type": "string",
            "nullable": true
          },
          "asset": {
            "type": "string",
            "nullable": true
          },
          "timestamp": {
            "type": "string",
            "format": "dateTime",
            "example": "2000-01-01 00:00:00.000"
          },
          "lon": {
            "type": "number",
            "format": "double"
          },
          "lat": {
            "type": "number",
            "format": "double"
          },
          "eventType": {
            "type": "string",
            "nullable": true
          },
          "eventId": {
            "type": "string",
            "nullable": true
          },
          "wasteType": {
            "type": "string",
            "nullable": true
          },
          "mediaLink": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "AMCS.IoT.Contamination.Api.Integrator.ContaminationEvent.ApiAllContaminationEventExternal": {
        "type": "object",
        "properties": {
          "resource": {
            "$ref": "#/components/schemas/AMCS.IoT.Contamination.Api.Integrator.ContaminationEvent.ApiContaminationEventExternalResourceItem"
          }
        },
        "additionalProperties": false
      },
      "AMCS.IoT.Contamination.Api.Integrator.ContaminationEvent.ApiContaminationEventExternal": {
        "type": "object",
        "properties": {
          "resource": {
            "$ref": "#/components/schemas/AMCS.IoT.Contamination.Api.Integrator.ContaminationEvent.ApiContaminationEventExternalResourceItem"
          }
        },
        "additionalProperties": false
      },
      "AMCS.IoT.Contamination.Api.Integrator.ContaminationEvent.ApiContaminationEventExternalResourceItem": {
        "type": "object",
        "properties": {
          "isValid": {
            "type": "boolean",
            "readOnly": true
          },
          "id": {
            "type": "integer",
            "format": "int32",
            "nullable": true,
            "readOnly": true
          },
          "id32": {
            "type": "integer",
            "format": "int32",
            "readOnly": true
          },
          "guid": {
            "type": "string",
            "format": "uuid",
            "nullable": true
          },
          "lastChangeReasonId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "tempIdentifier": {
            "type": "string",
            "nullable": true
          },
          "tenantId": {
            "type": "string",
            "format": "uuid"
          },
          "customerName": {
            "type": "string",
            "nullable": true
          },
          "companyOutletId": {
            "type": "string",
            "format": "uuid",
            "nullable": true
          },
          "outletName": {
            "type": "string",
            "nullable": true
          },
          "customerSiteId": {
            "type": "string",
            "format": "uuid",
            "nullable": true
          },
          "siteName": {
            "type": "string",
            "nullable": true
          },
          "customerType": {
            "type": "string",
            "nullable": true
          },
          "customerAddress": {
            "type": "string",
            "nullable": true
          },
          "vehicleId": {
            "type": "string",
            "format": "uuid",
            "nullable": true
          },
          "vehicleReg": {
            "type": "string",
            "nullable": true
          },
          "latitude": {
            "type": "number",
            "format": "double",
            "nullable": true
          },
          "longitude": {
            "type": "number",
            "format": "double",
            "nullable": true
          },
          "timestamp": {
            "type": "string",
            "format": "dateTime",
            "example": "2000-01-01 00:00:00.000"
          },
          "contaminationScore": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "grossWeight": {
            "type": "number",
            "format": "double",
            "nullable": true
          },
          "tareWeight": {
            "type": "number",
            "format": "double",
            "nullable": true
          },
          "netWeight": {
            "type": "number",
            "format": "double",
            "nullable": true
          },
          "seq": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "rfid": {
            "type": "string",
            "format": "uuid",
            "nullable": true
          },
          "weighErrorCode": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "lifter": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "containerId": {
            "type": "string",
            "nullable": true
          },
          "wasteType": {
            "type": "string",
            "nullable": true
          },
          "qrCodeRawText": {
            "type": "string",
            "nullable": true
          },
          "totalSurfaceAreaVolume": {
            "type": "number",
            "format": "double",
            "nullable": true
          },
          "materials": {
            "type": "string",
            "nullable": true
          },
	   "externalEventId": {
            "type": "string",
            "nullable": true
          },
          "imageSas": {
            "type": "string",
            "format": "byte",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "AMCS.IoT.Contamination.Api.Integrator.CustomerSite.ApiCustomerAddress": {
        "type": "object",
        "properties": {
          "customerSiteId": {
            "type": "string",
            "format": "uuid"
          },
          "name": {
            "type": "string",
            "nullable": true
          },
          "postalCode": {
            "type": "string",
            "nullable": true
          },
          "houseNumber": {
            "type": "string",
            "nullable": true
          },
          "address1": {
            "type": "string",
            "nullable": true
          },
          "address2": {
            "type": "string",
            "nullable": true
          },
          "address3": {
            "type": "string",
            "nullable": true
          },
          "address4": {
            "type": "string",
            "nullable": true
          },
          "address5": {
            "type": "string",
            "nullable": true
          },
          "latitude": {
            "type": "number",
            "format": "double",
            "nullable": true
          },
          "longitude": {
            "type": "number",
            "format": "double",
            "nullable": true
          },
          "outletId": {
            "type": "string",
            "format": "uuid"
          },
          "isDeleted": {
            "type": "boolean"
          },
          "siteType": {
            "type": "string",
            "nullable": true
          },
          "customerType": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "AMCS.IoT.Contamination.Api.Integrator.Outlet.ApiOutlet": {
        "type": "object",
        "properties": {
          "outletId": {
            "type": "string",
            "format": "uuid",
            "nullable": true
          },
          "outletName": {
            "type": "string",
            "nullable": true
          },
          "isDeleted": {
            "type": "boolean"
          },
          "tenantId": {
            "type": "integer",
            "format": "int32"
          }
        },
        "additionalProperties": false
      },
      "AMCS.IoT.Contamination.Api.Integrator.OverfilledContainerEvent.ApiAllOverfilledContainerEventExternal": {
        "type": "object",
        "properties": {
          "resource": {
            "$ref": "#/components/schemas/AMCS.IoT.Contamination.Api.Integrator.OverfilledContainerEvent.ApiOverfilledContainerEventExternalResourceItem"
          }
        },
        "additionalProperties": false
      },
      "AMCS.IoT.Contamination.Api.Integrator.OverfilledContainerEvent.ApiOverfilledContainerEventExternal": {
        "type": "object",
        "properties": {
          "resource": {
            "$ref": "#/components/schemas/AMCS.IoT.Contamination.Api.Integrator.OverfilledContainerEvent.ApiOverfilledContainerEventExternalResourceItem"
          }
        },
        "additionalProperties": false
      },
      "AMCS.IoT.Contamination.Api.Integrator.OverfilledContainerEvent.ApiOverfilledContainerEventExternalResourceItem": {
        "type": "object",
        "properties": {
          "guid": {
            "type": "string",
            "format": "uuid",
            "nullable": true
          },
          "lastChangeReasonId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "tenantId": {
            "type": "string",
            "format": "uuid"
          },
          "customerName": {
            "type": "string",
            "nullable": true
          },
          "companyOutletId": {
            "type": "string",
            "format": "uuid",
            "nullable": true
          },
          "outletName": {
            "type": "string",
            "nullable": true
          },
          "customerSiteId": {
            "type": "string",
            "format": "uuid",
            "nullable": true
          },
          "siteName": {
            "type": "string",
            "nullable": true
          },
          "customerType": {
            "type": "string",
            "nullable": true
          },
          "customerAddress": {
            "type": "string",
            "nullable": true
          },
          "vehicleId": {
            "type": "string",
            "format": "uuid",
            "nullable": true
          },
          "vehicleReg": {
            "type": "string",
            "nullable": true
          },
          "latitude": {
            "type": "number",
            "format": "double",
            "nullable": true
          },
          "longitude": {
            "type": "number",
            "format": "double",
            "nullable": true
          },
          "timestamp": {
            "type": "string",
            "format": "dateTime",
            "example": "2000-01-01 00:00:00.000"
          },
          "grossWeight": {
            "type": "number",
            "format": "double",
            "nullable": true
          },
          "tareWeight": {
            "type": "number",
            "format": "double",
            "nullable": true
          },
          "netWeight": {
            "type": "number",
            "format": "double",
            "nullable": true
          },
          "seq": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "rfid": {
            "type": "string",
            "format": "uuid",
            "nullable": true
          },
          "weighErrorCode": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "containerId": {
            "type": "string",
            "nullable": true
          },
          "wasteType": {
            "type": "string",
            "nullable": true
          },
          "qrCodeRawText": {
            "type": "string",
            "nullable": true
          },
          "totalSurfaceAreaVolume": {
            "type": "number",
            "format": "double",
            "nullable": true
          },
          "materials": {
            "type": "string",
            "nullable": true
          },
	  "externalEventId": {
            "type": "string",
            "nullable": true
          },
          "imageSas": {
            "type": "string",
            "format": "byte",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "AMCS.IoT.Contamination.Api.Integrator.SmartDispatchWasteStream.ApiSmartDispatchWasteStream": {
        "type": "object",
        "properties": {
          "isValid": {
            "type": "boolean",
            "readOnly": true
          },
          "id": {
            "type": "integer",
            "format": "int32",
            "nullable": true,
            "readOnly": true
          },
          "id32": {
            "type": "integer",
            "format": "int32",
            "readOnly": true
          },
          "guid": {
            "type": "string",
            "format": "uuid",
            "nullable": true
          },
          "lastChangeReasonId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "tempIdentifier": {
            "type": "string",
            "nullable": true
          },
          "tenantId": {
            "type": "integer",
            "format": "int32"
          },
          "tenant": {
            "$ref": "#/components/schemas/AMCS.IoT.Shared.Data.TenantEntity"
          },
          "smartDispatchWasteStreamId": {
            "type": "string",
            "format": "uuid",
            "nullable": true
          },
          "name": {
            "type": "string",
            "nullable": true
          },
          "isDeleted": {
            "type": "boolean"
          }
        },
        "additionalProperties": false
      },
      "AMCS.IoT.Shared.Data.CustomAttributes": {
        "type": "object",
        "properties": {
          "erpSync": {
            "type": "boolean"
          },
          "entities": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/AMCS.IoT.Shared.Data.ErpSyncAttribute"
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "AMCS.IoT.Shared.Data.ErpSyncAttribute": {
        "type": "object",
        "properties": {
          "entityName": {
            "enum": [
              "Site",
              "Outlet",
              "Vehicle",
              "MaterialClass"
            ],
            "type": "string"
          },
          "sync": {
            "type": "boolean"
          },
          "sinceToken": {
            "type": "string",
            "nullable": true
          },
          "sinceTokenDateTime": {
            "type": "string",
            "format": "dateTime",
            "example": "2000-01-01 00:00:00.000"
          }
        },
        "additionalProperties": false
      },
      "AMCS.IoT.Shared.Data.TenantCustomAttribute": {
        "type": "object",
        "properties": {
          "erpSync": {
            "type": "boolean"
          },
          "entities": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/AMCS.IoT.Shared.Data.ErpSyncAttribute"
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "AMCS.IoT.Shared.Data.TenantEntity": {
        "type": "object",
        "properties": {
          "isValid": {
            "type": "boolean",
            "readOnly": true
          },
          "id32": {
            "type": "integer",
            "format": "int32",
            "readOnly": true
          },
          "guid": {
            "type": "string",
            "format": "uuid",
            "nullable": true
          },
          "lastChangeReasonId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "tempIdentifier": {
            "type": "string",
            "nullable": true
          },
          "id": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "tenantId": {
            "type": "string",
            "format": "uuid"
          },
          "coreAppServiceRoot": {
            "type": "string",
            "nullable": true
          },
          "locale": {
            "type": "string",
            "nullable": true
          },
          "name": {
            "type": "string",
            "nullable": true
          },
          "customerCode": {
            "type": "string",
            "nullable": true
          },
          "deploymentStage": {
            "type": "string",
            "nullable": true
          },
          "customAttributesJson": {
            "type": "string",
            "nullable": true
          },
          "customAttributes": {
            "$ref": "#/components/schemas/AMCS.IoT.Shared.Data.CustomAttributes"
          },
          "tenantCustomAttribute": {
            "$ref": "#/components/schemas/AMCS.IoT.Shared.Data.TenantCustomAttribute"
          }
        },
        "additionalProperties": false
      },
       "ApiResourceChanges[ApiAllContaminationEventExternalResource]": {
        "type": "object",
        "properties": {
          "errors": {
            "$ref": "#/components/schemas/ApiResourceErrors"
          },
          "status": {
            "$ref": "#/components/schemas/ApiResourceStatus"
          },
          "resource": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/AMCS.IoT.Contamination.Api.Integrator.ContaminationEvent.ApiAllContaminationEventExternal"
            },
            "nullable": true
          },
          "extra": {
            "$ref": "#/components/schemas/ApiResourceResultUpdatesExtra"
          }
        },
        "additionalProperties": false
      },
      "ApiResourceChanges[ApiAllOverfilledContainerEventExternalResource]": {
        "type": "object",
        "properties": {
          "errors": {
            "$ref": "#/components/schemas/ApiResourceErrors"
          },
          "status": {
            "$ref": "#/components/schemas/ApiResourceStatus"
          },
          "resource": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/AMCS.IoT.Contamination.Api.Integrator.OverfilledContainerEvent.ApiAllOverfilledContainerEventExternal"
            },
            "nullable": true
          },
          "extra": {
            "$ref": "#/components/schemas/ApiResourceResultUpdatesExtra"
          }
        },
        "additionalProperties": false
      },
      "ApiResourceChanges[ApiAssetResource]": {
        "type": "object",
        "properties": {
          "errors": {
            "$ref": "#/components/schemas/ApiResourceErrors"
          },
          "status": {
            "$ref": "#/components/schemas/ApiResourceStatus"
          },
          "resource": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/AMCS.IoT.Contamination.Api.Integrator.Asset.ApiAsset"
            },
            "nullable": true
          },
          "extra": {
            "$ref": "#/components/schemas/ApiResourceResultUpdatesExtra"
          }
        },
        "additionalProperties": false
      },
      "ApiResourceChanges[ApiContaminationEventExternalResource]": {
        "type": "object",
        "properties": {
          "errors": {
            "$ref": "#/components/schemas/ApiResourceErrors"
          },
          "status": {
            "$ref": "#/components/schemas/ApiResourceStatus"
          },
          "resource": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/AMCS.IoT.Contamination.Api.Integrator.ContaminationEvent.ApiContaminationEventExternal"
            },
            "nullable": true
          },
          "extra": {
            "$ref": "#/components/schemas/ApiResourceResultUpdatesExtra"
          }
        },
        "additionalProperties": false
      },
      "ApiResourceChanges[ApiOverfilledContainerEventExternalResource]": {
        "type": "object",
        "properties": {
          "errors": {
            "$ref": "#/components/schemas/ApiResourceErrors"
          },
          "status": {
            "$ref": "#/components/schemas/ApiResourceStatus"
          },
          "resource": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/AMCS.IoT.Contamination.Api.Integrator.OverfilledContainerEvent.ApiOverfilledContainerEventExternal"
            },
            "nullable": true
          },
          "extra": {
            "$ref": "#/components/schemas/ApiResourceResultUpdatesExtra"
          }
        },
        "additionalProperties": false
      },
      "ApiResourceErrors": {
        "type": "object",
        "properties": {
          "errors": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "ApiResourceId": {
        "type": "object",
        "properties": {
          "errors": {
            "$ref": "#/components/schemas/ApiResourceErrors"
          },
          "status": {
            "$ref": "#/components/schemas/ApiResourceStatus"
          },
          "resource": {
            "type": "guid"
          }
        },
        "additionalProperties": false
      },
      "ApiauthTokens200": {
        "type": "object",
        "properties": {
          "authResult": {
            "type": "string",
            "readOnly": true
          },
          "username": {
            "type": "string",
            "readOnly": true,
            "nullable": true
          },
          "userIdentity": {
            "type": "string",
            "readOnly": true,
            "nullable": true
          },
          "sysUserId": {
            "type": "string",
            "readOnly": true,
            "nullable": true
          },
          "userGuid": {
            "type": "string",
            "format": "uuid",
            "nullable": true
          },
          "companyoutletid": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "companyOutletGuid": {
            "type": "string",
            "format": "uuid",
            "nullable": true
          },
          "stayLoggedIn": {
            "type": "boolean",
            "readOnly": true
          }
        }
      },
      "ApiauthTokens500Error": {
        "type": "object",
        "properties": {
          "message": {
            "type": "string",
            "nullable": true
          },
          "type": {
            "type": "string",
            "nullable": true
          },
          "stackTrace": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "ApiResourceResultUpdatesExtra": {
        "type": "object",
        "properties": {
          "until": {
            "type": "string",
            "nullable": true
          },
          "cursor": {
            "type": "string",
            "nullable": true
          },
          "since": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "ApiResourceStatus": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "isSuccess": {
            "type": "boolean"
          }
        },
        "additionalProperties": false
      }
    },
    "responses": {
      "BadRequest": {
        "description": "Bad Request - Invalid input parameters.",
        "content": {
          "application/json": {
            "schema": {
              "type": "object",
              "properties": {
                "error": {
                  "type": "string",
                  "example": "Invalid request. Please check your input parameters."
                }
              },
              "additionalProperties": false
            }
          }
        }
      },
      "Unauthorized": {
        "description": "Unauthorized - Authentication failed.",
        "content": {
          "application/json": {
            "schema": {
              "type": "object",
              "properties": {
                "error": {
                  "type": "string",
                  "example": "Unauthorized access. Please log in."
                }
              },
              "additionalProperties": false
            }
          }
        }
      },
      "Forbidden": {
        "description": "Forbidden - Access denied.",
        "content": {
          "application/json": {
            "schema": {
              "type": "object",
              "properties": {
                "error": {
                  "type": "string",
                  "example": "You do not have permission to access this resource."
                }
              },
              "additionalProperties": false
            }
          }
        }
      },
      "NotFound": {
        "description": "Not Found - The requested resource was not found.",
        "content": {
          "application/json": {
            "schema": {
              "type": "object",
              "properties": {
                "error": {
                  "type": "string",
                  "example": "The requested resource was not found."
                }
              },
              "additionalProperties": false
            }
          }
        }
      },
      "InternalServerError": {
        "description": "Supplied properties are not valid, please try again with proper request.",
        "content": {
          "application/json": {
            "schema": {
              "type": "object",
              "properties": {
                "error": {
                  "type": "string",
                  "example": "Supplied properties are not valid, please try again with proper request."
                }
              },
              "additionalProperties": false
            }
          }
        }
      },
      "NotImplemented": {
        "description": "This feature is not implemented.",
        "content": {
          "application/json": {
            "schema": {
              "type": "object",
              "properties": {
                "error": {
                  "type": "string",
                  "example": "This feature is not implemented."
                }
              },
              "additionalProperties": false
            }
          }
        }
      },
      "BadGateway": {
        "description": "Bad Gateway - The upstream server returned an invalid response.",
        "content": {
          "application/json": {
            "schema": {
              "type": "object",
              "properties": {
                "error": {
                  "type": "string",
                  "example": "Temporary issue with the server. Please try again later."
                }
              },
              "additionalProperties": false
            }
          }
        }
      },
      "ServiceUnavailable": {
        "description": "Service Unavailable - The server is currently unavailable.",
        "content": {
          "application/json": {
            "schema": {
              "type": "object",
              "properties": {
                "error": {
                  "type": "string",
                  "example": "Service is currently unavailable. Please try again later."
                }
              },
              "additionalProperties": false
            }
          }
        }
      },
      "GatewayTimeout": {
        "description": "Gateway Timeout - The server took too long to respond.",
        "content": {
          "application/json": {
            "schema": {
              "type": "object",
              "properties": {
                "error": {
                  "type": "string",
                  "example": "The request timed out. Please try again later."
                }
              },
              "additionalProperties": false
            }
          }
        }
      }
    }
  }
}
