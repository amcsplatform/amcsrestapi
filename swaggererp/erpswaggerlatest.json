{"swagger":"2.0","info":{"version":"8.12","title":"AMCS Platform REST API","description":"[![8.12 End points](./diagram/endpointslatest.svg)](./diagram/endpointslatest.svg)\n\n# Overview\n\n## Who Should Read this Document\n\nThis document contains a technical description of the AMCS Platform REST API. It is intended for:\n\n·    System integrators\n\n·    Customer IT team looking to integrate AMCS Platform with another system\n\n·    Third parties looking to integrate their system with AMCS Platform\n\n## Document Scope\n\nThis document introduces the technical aspects of the AMCS Platform REST API. The purpose of this document is to provide readers with detail on how to:\n\n·    Access the REST API\n\n·    Make calls to the API to retrieve, append and update resources\n\n·    Retrieve the incremental changes to a collection\n\n·    Find more detail on the end points that are available from an environment.\n\n## Summary\n\nAMCS Platform REST API is designed to support the integration of AMCS Platform with other systems. With care and additional infrastructure, the REST API can be used to build functionality on top of Platform but that is not it’s primary purpose.\n\nThe ‘changes since’ process provides the main means of performing an initial synchronisation of the AMCS Platform and another system, and then keeping them synchronised. Methods are also provided to create and update resources.\n\n# Integration Patterns and Tools\n\nThe AMCS Platform provides a number of tools that can be used to connect systems. Care should be taken to match the right tooling to the intended pattern of integration.\n\n·    When an extract-based approach is needed, use BI reporting.\n\n·    When derived values are require, use the data mart.\n\n·    When business processes on different systems need to be integrated by synchronising the data on each through an event style interface, use the REST API.\n\nAn integration using the REST API will need to take full responsibility for all aspects of the integration including:\n\n·    Pulling change events from AMCS Platform\n\n·    Filtering the changed resources for the ones that are of interest\n\n·    Pulling additional resources from the REST API in order the retrieve all the properties needed by the destination\n\n·    Mashing resources to create the complete view required\n\n·    Translating that into the form required by the destination\n\n·    Validating this to ensure it meet the entry rules of the destination\n\n·    Pushing the result to the destination\n\nIn the early stages of designing the interface care should be taken to ensure that the need for caching/staging has been considered. The changes since functionality is effectively a means of pulling create/change events from platform. The only filters available enable retrieval of related resources to build a view external to AMCS Platform\n\n# Basics\n\nThe AMCS REST API provides a RESTful interface that allows access to the primary business resources of the AMCS platform. The interface follows general HATEOAS compliance principles.\n\n## Quick start\n\nA quickstart walkthrough based on node.js and covering authentication and getting a page of customers [can be found here](./quickstart/index.html).\n\n## Interface definitions\n\nSwagger documentation for the end points available on an environment can be found at:\n\nBefore 8.5: https://{environment domain name}/swagger/ui/index\n\nFrom 8.5: https://{environment domain name}/erp/api/swagger/ui/index\n\n## HTTP Interface\n\nThe following HTTP RESTful methods are provided as part of this API:\n\n·    GET: Provides read access to retrieve details of one or more resources.\n\n·    POST: Creates or updates a single resource or a set of resources.\n\n·    PUT: Updates a single resource or a set of resources.\n\nNote:\n\n·    DELETE methods are currently not provided as part of the API.\n\nThe REST API URIs begin with\n\nhttps://{environment domain name}/erp/api/integrator/erp\n\nFor example:\n https://prod.amcs-at-mycompany.com/erp/api/integrator/erp\n\nThis should be used as the base of the URI. For instance, the full URI for the partial URI /directory/customers would be:\n\n[https://prod.amcs-at-mycompany.com\n /erp/api/integrator/erp/directory/customers](https://prod.amcs-at-mycompany.com/erp/api/integrator/erp/directory/customers)\n\n### Versioning\n\nThe x-api-version HTTP header should be used to indicate a specific version of an endpoint. e.g. x-api-version:8.3 will make a request to the version of endpoint released with 8.3 of the AMCS Platform.\n\nA request without the x-api-version HTTP header will default to the latest version of the endpoint available.\n\n### Content type and encoding\n\nAll requests should contain the correct content type. Content can be requested and passed in any encoding that can be mapped to utf-16. The AMCS REST API requires the following headers where applicable (i.e.: sending a JSON payload).\n\n·    Content-Type:application/json\n\n·    Accept:application/json\n\n### Result codes\n\nAppendix A contains a comprehensive list of possible HTTP status codes.\n\n## Naming Conventions\n\nThe AMCS REST API follows JSON and mixed Camel and Pascal notation on the format of the fields and entities returned.\n\n### Related properties\n\nProperties that link a resource with another resource begin with related. Most related properties have the GUID of the related resource as a value. i.e.: relatedCustomerGuid in a /sites resource endpoint contains the Guid for the customer that site belongs to.\n\nWhere more than one resource may be related the related property will consist of a list. This list may contain a simple list of GUIDs or it may contain a list of objects, with each object giving the detail of a relationship. The properties of these objects are the properties of the relationship, rather than the properties of the related resource.\n\n### ListItem properties\n\nProperties that are based on a selection from a list are named with ListItem at the end. The possible options for these properties are static or change via configuration. The list of possible values can be found by making a GET request to /lists/{property name with ListItem removed and pluralised}.\n\nThe response contains a JSON object containing an array of objects, each containing the GUID and details for each possible value.\n\nGET /integrator/lists/{property name with Enum removed and pluralized }/{guid} is also supported if you only want the details of an individual property.\n\n### Standard-compliant properties\n\nProperties with the following ending must comply with the indicated standard:\n\n| Type        | Standard                  |\n| ----------- | ------------------------- |\n| Dates       | RFC3339 subset of ISO8601 |\n| Identifiers | RFC4122                   |\n\n# Methods\n\nThis chapter specifies the different methods to be used when using the AMCS REST API.\n\n## Retrieving resources\n\nRetrieving a resource or list of resources is done with the GET request. The request could be sent to the resource collection or the specific GUID of a resource. \n\n/{grouping}/{collection} - requests the properties for all the resources in a collection.\n /{grouping}/{collection}/{guid} - requests the properties for a single resource\n\nThe result of either request is an array of resources for instance:\n\nGET /accounting/payments\n\nResponse:\n\n```\n{\n    resource: [\n        {\n            resource: {\n                Name: Test,\n                Reference: null,\n                ARAccountCode: null,\n                FederalId: null,\n                IsInternal: false,\n        ...\n       }\n    ]\n}\n```\n\nGET /payments/12345678-1234-1234-12345678ab\n\nResponse:\n\n```\n{\n    resource: {\n        Name: Hany,\n        Reference: null,\n        ARAccountCode: null,\n        FederalId: null,\n        IsInternal: false,\n        ReceiveServiceUpdatesByEmail: false,\n     ...\n   }\n}\n```\n\n### Pagination\n\nA GET to a collection results in a paginated response. To select the page use the page and max query parameters. For instance, the following request will return 100 items for page 3.\n\n/{grouping}/{collection}?page=3&max=100\n\n### Filters\n\nTo receive a filtered set of resources from a collection, the API offers as part of the GET request to /{collection} a filter parameter that can be specified with a selector property.\n\nFor instance: /{collection}?filter={property} eq {value}\n\nThe properties that can be filtered are called out in the Swagger documentation. These are typically the properties starting “Related” plus the references that allow resources to be unequally identified.\n\n## Retrieving changed resources\n\nThe AMCS REST API provides a way to retrieve changes that have been made since a point in the collection history by using the following URI /{collection}/changes?since={bookmark}\n\nThe API will provide as response a resource array containing the resources that have been created or updated since the bookmark. \n\nAs part of the response a next URI is provided. This URI that can be called to get the next batch of resources. A new bookmark is also provided for use in one of two ways:\n\nWhen there are more changes available to be retrieved the bookmark is provided via a cursor property.  A new cursor bookmark is provided with each response. The URI needs updating with the new bookmark each time, or just call the next URI that is provided with each response.\n\nUse the following URI to get the next batch of new or updated resources:\n\n/{collection}/changes?cursor={bookmark}\n\nWhen the response contains all the changes available the bookmark is provided via an until property. The next time you are ready to check for resources use this in a URI as follows. Cursor bookmarks cannot be used in a changes?since URI. Until bookmarks cannot be used in a changes?cursor URI.\n\nUse the following URI to get the resources changed since:\n\n/{collection}/changes?since={bookmark}\n\nNotes:\n\n·    The number of resources in the response is limited in order to maintain the overall performance of the AMCS Platform.\n\n·    It is expected that API clients make more than one call to retrieve all the changes that have been made to the collection. \n\nFor example:\n\n/customers/changes?since=890099ab99c0f\n\nResponse:\n\n```\n{\n    resource:[\n        ...\n    ],\n    links:{\n        next:#/customers/changes?cursor=absle3290\n    },\n    extra:{\n        cursor:absle3290\n    }\n}\n```\n\n##  How to create resources\n\nThe AMCS API Platform will create a resource when the client sends a POST request to a /{grouping}/{collection} without a GUID. The body of the request should contain a single JSON object containing all the properties of the resource. The value of Enum properties should an object containing a Guid property with the GUID of the value required.\n\nFor example, to create a customer:\n\nPOST /customers\n\n```\n{\n    Name:My Customer,\n    CustomerTypeEnum:{\n        guid:12345678-1234-1234-1234-12345678ab\n    },\n    ...\n}\n```\n\nExample 1: Create a resource\n\n##  How to update resources\n\nThe AMCS Platform API will create a resource when the client sends a POST request to a /{collection} without a GUID. The body of the request should contain a single JSON object containing all the properties of the resource. The value of Enum properties should an object containing a Guid property with the GUID of the value required.\n\nNotes:\n\n·    A POST request with a GUID to a collection replaces the entire resource. Any properties that are not supplied will result in their value being lost (set to NULL).\n\n\n·    To update part of a resource without impacting the other properties a PUT request to /{collection}/{resource guid} should be used. The request body should contain a JSON object containing the properties to be updated.\n\nFor example, to update a customer:\n\nPOST /customers\n\n```\n{\n    GUID:12345678-1234-1234-1234-12345678ab,\n    Name:My Customer,\n    CustomerTypeEnum:{\n        guid:12345678-1234-1234-1234-12345678ab\n    },\n    ...\n}\n```\n\n#   Security\n\nThe API uses HTTPS as transport layer for security and uses HTTP/1.1 – RFC 7230 for message syntax and routing.\n\nThere are 2 ways of authenticating in order to access the REST API.\n\n·    Requesting a bearer token from /authTokens using username and password\n\n·    Requesting a session log on from /authTokens using a PAT token\n\nAuthentication using username and password will be phased out after 8.6.\n\n##  GET /authTokens with username and password direct to the App server\n\nBefore using this method a user must be set up with access right “Can POST, PUT, GET to the REST API”. This can be done from User Management in the AMCS Platform UI.\n\n### Request format\n\nThe following table specifies the format and parameters for this request.\n\n| Method    | Type      | Name               | Type               |\n| --------- | --------- | ------------------ | ------------------ |\n| GET       | Parameter | Username           | URI encoded string |\n| Parameter | password  | URI encoded string |                    |\n\n### Response format\n\nThe following table specifies the format and parameters for the response.\n\n  \n\n| Successful response | Type      |      |\n| ------------------- | --------- | ---- |\n| Bearer token        | text/html |      |\n\nThe token returned is then uses as a Bearer token in the subsequent calls to the REST API\n\n### Example\n\nThe following shows an example of a request to the authentication endpoint:\n\nhttps://{elemos-url}/authTokens?username=john&password=password\n\nThe username and password in this request may need to be URI encoded.\n\nThe token in the response should be supplied in all subsequent requests in an authorization HTTP header.\n\nAuthorization: Bearer tcpRoNbIKOJZj9Yn0CL2oiX7m04JJmlAllaskd810incqjslasadjzxzza29axb\n\nNotes:\n\n·    No specific Accept or Content-Type header is required for the authentication endpoint as it will always return text/html as content.\n\n##  POST /erp/api/authTokens with PAT token\n\nBefore using this method, a user must be set up with:\n\n·    Access right “Can POST, PUT, GET to the REST API”\n\n·    A PAT token\n\nThis can be done from User Management in the AMCS Platform UI.\n\n### Request format\n\nThe following table specifies the format and parameters for this request.\n\n| Method | Body                           |\n| ------ | ------------------------------ |\n| POST   | { “privatekey”:”{PAT token}” } |\n\n### Response format\n\nThe response passes a Platform.ERP.SessionToken as a cookie.\n\nThis cookie should be included in the subsequent calls to the REST API.\""},"host":"{env}-svc-core.amcsplatform.com","basePath":"/erp/api/integrator/erp","schemes":["https"],"paths":{"/lists/accessGroups/{guid}":{"get":{"tags":["AccessGroup"],"summary":"Find with GUID","description":"| Property                  | Description                                                              |\r\n| ------------------------- | ------------------------------------------------------------------------ |\r\n| GUID                      | The GUID associated to the access group\t\t\t\t\t\t\t\t   |\r\n| Description               | The description of the access group\t\t\t\t\t\t\t\t\t   |\r\n| IsDeleted                 | Whether the access group is deleted\t         \t \t\t\t\t\t   |","operationId":"AccessGroup_Get","consumes":["application/json"],"produces":["application/json"],"parameters":[{"name":"guid","in":"path","required":true,"type":"string","format":"uuid"},{"name":"links","in":"query","required":false,"type":"string"},{"name":"include","in":"query","required":false,"type":"string"},{"name":"expand","in":"query","required":false,"type":"string"},{"name":"udf","in":"query","required":false,"type":"string"}],"responses":{"200":{"description":"OK","schema":{"$ref":"#/definitions/ApiResourceResultEntity[ApiIntegratorAccessGroupResource]"}}}}},"/lists/accessGroups":{"get":{"tags":["AccessGroup"],"summary":"Find with Filters","description":"| Property                  | Description                                                              |\r\n| ------------------------- | ------------------------------------------------------------------------ |\r\n| GUID                      | The GUID associated to the access group\t\t\t\t\t\t\t\t   |\r\n| Description               | The description of the access group\t\t\t\t\t\t\t\t\t   |\r\n| IsDeleted                 | Whether the access group is deleted\t         \t \t\t\t\t\t   |","operationId":"AccessGroup_GetCollection","consumes":["application/json"],"produces":["application/json"],"parameters":[{"name":"filter","in":"query","required":false,"type":"string"},{"name":"search","in":"query","required":false,"type":"string"},{"name":"order","in":"query","required":false,"type":"string"},{"name":"max","in":"query","required":false,"type":"integer","format":"int32"},{"name":"page","in":"query","required":false,"type":"integer","format":"int32"},{"name":"includeCount","in":"query","required":false,"type":"boolean"},{"name":"includeDeleted","in":"query","required":false,"type":"boolean"},{"name":"links","in":"query","required":false,"type":"string"},{"name":"udf","in":"query","required":false,"type":"string"}],"responses":{"200":{"description":"OK","schema":{"$ref":"#/definitions/ApiResourceResultCollection[ApiIntegratorAccessGroupResource]"}}}}},"/accounting/accountCustomers/changes":{"get":{"tags":["AccountCustomer"],"summary":"Retrieve changes","description":"| Property                  | Description                                                              |\r\n| ------------------------- | ------------------------------------------------------------------------ |\r\n| GUID                      | The GUID associated to the customer.                                     |\r\n| Name                      | The customer's name.                                                     |\r\n| Reference                 | An alternative name used for the customer.                               |\r\n| FederalId                 | The customer's local authority / government / tax reference.             |\r\n| IsInternal                | Whether the customer is an internal customer.                            |\r\n| ARAccountCode             | Used to filter customers on the accounts receivable code.\t\t           |\r\n| APAccountCode             | Used to filter customers on the accounts payable code.                   |\r\n| Notes\t\t\t\t\t\t| Notes of customer.\t\t\t\t\t\t\t\t\t\t\t\t\t   |\r\n| AMICENumber\t\t\t\t| AMICE Number of customer.\t\t\t\t\t\t\t\t\t\t\t\t   |\r\n| CoCNumber\t\t\t\t\t| CoC Number of customer.\t\t\t\t\t\t\t\t\t\t\t\t   |\r\n| HasRedLight               | Red light indicator passed to driver to indicate the mood of the end customer.|\r\n| CombineChargesRebates     | Rebate are included on the invoice, otherwise a separate bill is generated for rebates. |\r\n| ExternalVehicleValidation | The customer uses their own vehicles and the weighbridge will need to validate the vehicle registrations against a list held on the AMCS Platform. |\r\n| TicketsRequiredWithInvoice | Tickets are required with invoice.                                      |\r\n| RctCustomer               | In the Republic of Ireland the customer is a contractor liable for Relevent Contractors Tax. |\r\n| ProofOfServiceRequired    | Customers need to sign tickets.                      |\r\n| ExcludeFromStatementRun   | Excludes them from the batch statement run.          |\r\n| ReceiveServiceUpdatesByEmail   | Customer receives service updates by email.     |\r\n| ReceiveServiceUpdatesByText    | Customer receives service updates by text.      |\r\n| ReceiveMarketingUpdatesByEmail | Customer receives marketing updates by email.   |\r\n| ReceiveMarketingUpdatesByText  | Customer receives marketing updates by text.    |\r\n| CompanyListItem               | The GUID and name of the company this customer is associated to.           |\r\n| CustomerStateListItem         | The GUID and status of the customer (eg. Active, Suspended, etc.).         |\r\n| CustomerTypeListItem          | The GUID and type of customer (eg. Residential, Commerical, Municipal).    |\r\n| CustomerCategoryListItem      | The GUID and category of the customer (various values).                    |\r\n| CustomerGroupListItem         | The GUID and group of the customer (various values).                       |\r\n| VisitStatusListItem\t        | The GUID and description of the visit status of the customer\t\t\t\t |\r\n| CurrencyListItem              | The GUID and currency of the customer (various values).                    |\r\n| CustomerTemplateListItem\t\t| The GUID and customer template of the customer (various values).           |\r\n| BusinessTypeListItem          | The GUID and business type of the customer (various values).               |\r\n| AutoArAccountCode\t\t\t| The object allowing for creation of an ArAccountCode, depending on system configuration. |\r\n| AutoArAccountCode.CompanyOutletGuid | The GUID of the company outlet used for creation of an ArAccountCode, depending on system configuration. |\r\n| RelatedUserSalesRepGuid   | The GUID of the related sales rep.                                       |     \r\n| RelatedUserCreditControllerGuid | The GUID of the related credit controller.                         |     \r\n| RelatedMasterAccountGuid  | The GUID of the related master account.                                  |     \r\n| RelatedBillToCustomerGuid | The GUID of the related customer where the bills must be send to.        |     \r\n| RelatedLocationHQGuid\t\t| The GUID associated to the HQ location of the customer.\t\t\t\t   |     \r\n| BankDetails\t\t\t\t| The object where bank details are specified.\t\t\t\t\t\t\t   |\r\n| BankDetails.BankName      | The bank name of the direct debit.                                       |\r\n| BankDetails.AccountName   | The account name of the direct debit.\t\t\t                           |\r\n| BankDetails.AccountNo     | The account number of the direct debit.\t\t\t\t\t               |\r\n| BankDetails.SortCode      | The sort code of the direct debit.\t\t\t\t\t\t\t\t\t   |\r\n| BankDetails.BIC           | The Bank Identifier Code of the direct debit.\t\t\t\t\t\t\t   |\r\n| BankDetails.IBAN          | The International Bank Account Number of the direct debit.\t\t\t   |\r\n| BankDetails.NationalBankCode | The National Bank Code of the direct debit.\t\t\t\t\t\t   |\r\n| BankDetails.DirectDebitRunConfigListItem | The GUID and description of the direct debit run configuration. |\r\n| BankDetails.DirectDebitAccountTypeListItem | The GUID and description of the direct debit account type. |\r\n| BankDetails.Address       | The object where bank address details are specified.\t\t\t\t\t   |\r\n| BankDetails.Address.Address1 | The Address1 of the bank.\t\t\t\t\t\t\t\t\t\t\t   |\r\n| BankDetails.Address.Address2 | The Address2 of the bank.\t\t\t\t\t\t\t\t\t\t\t   |\r\n| BankDetails.Address.Address3 | The Address3 of the bank.\t\t\t\t\t\t\t\t\t\t\t   |\r\n| BankDetails.Address.Address4 | The Address4 of the bank.\t\t\t\t\t\t\t\t\t\t\t   |\r\n| BankDetails.Address.Address5 | The Address5 of the bank.\t\t\t\t\t\t\t\t\t\t\t   |\r\n| BankDetails.Address.Postcode | The Postcode of the bank.\t\t\t\t\t\t\t\t\t\t\t   |\r\n| Contract\t\t\t\t\t| The object allowing for creation of the contract.   \t\t\t\t\t   |\t\r\n| Contract.StartDate                 | The start date of the contract in ISO format (YYYY-MM-DD).      |\r\n| Contract.ApprovedDate              | The approved date of the contract in ISO format (YYYY-MM-DD).   |\r\n| Contract.CreditLimit               | The maximum credit limit stipulated on this contract.                    |\r\n| Contract.BalanceMigrated           | The balance which has been migrated. |\r\n| Contract.InvoiceCycleId            | The Id of the invoice cycle this contract will be invoice under (there may be cycles done monthly, daily, weekly, etc.) |\r\n| Contract.VATExemptNumber           | If the contract is exempt from VAT, this is the associated confirmation number. |\r\n| Contract.VATExemptionExpiryDate    | If the contract is exempt from VAT this is date this status is no longer valid in ISO format (YYYY-MM-DD). |\r\n| Contract.VATRegistrationNumber     | If the contract is registered with VAT, this is the relevant number.    |\r\n| Contract.RollUpInvoiceBySite\t\t | Whether the roll up of invoice are done by site.    |\r\n| Contract.RollUpInvoiceByService    | Whether the roll up of invoice are done by service.    |\r\n| Contract.IsInvoiceCollated\t\t | Whether the invoice are collated.\t\t\t\t\t\t\t\t|\r\n| Contract.DepartmentListItem            | The GUID and name of the department this contract is associated to.       |\r\n| Contract.ContractStatusListItem        | The GUID and status of the contract (eg. Approved, Pending, Un-Approved). |\r\n| Contract.PaymentTypeListItem           | The GUID and description of how payments for invoices under the contract will be paid (eg. Cash, Credit Card, etc.). |\r\n| Contract.PaymentTermListItem           | The GUID and description of the payment terms invoices under the contract are to the paid to (eg. Immediately, 30 Days Net, etc.). |\r\n| Contract.InvoiceFrequencyTermListItem  | The GUID and description of the invoice frequency term (eg. Quarterly, Immediate, etc.). |\r\n| Contract.InvoiceDocumentDeliveryMethods[]\t\t\t\t\t\t\t| The array of document delivery types associated to the Contract.\t\t\t\t\t\t\t\t|\r\n| Contract.InvoiceDocumentDeliveryMethods[0].DocumentDeliveryType\t| The GUID and description of the document delivery type associated to the InvoiceDocumentDeliveryMethods. |\r\n| Balance\t\t\t\t\t| The object which allows creation of Customer Balance.\t\t\t\t\t\t|\r\n| Balance.OutstandingAmount | The Outstanding Amount on the customers account.\t\t\t\t\t\t\t| \r\n| Balance.UnallocatedAmount | The Unallocated Amount on the customers account.\t\t\t\t\t\t\t| \r\n| Balance.UnconfirmedBalance | The Unconfirmed Balance Amount on the customers account.\t\t\t\t\t| \r\n| Balance.LedgerBalance | The Ledger Balance Amount on the customers account.\t\t\t\t\t\t\t| \r\n| TradingNames.Guid | The TradingNames Guid on the customers account.\t\t\t\t\t\t\t\t    | \r\n| TradingNames.Description | The TradingNames Description on the customers account.\t\t\t\t\t\t| \r\n| TradingNames.TradingNameTypeListItem.Guid | The Guid associated to the TradingNameTypeListItem on the customers account. | \r\n| TradingNames.TradingNameTypeListItem.Description | The Description associated to the TradingNameTypeListItem on the customers account. | \r\n| TradingNames.IsDeleted | Is the TradingName Deleted. | \r\n| TradingNames.IsForAllSites | IsForAllSites set for the TradingNames. | \r\n| TradingNameGuidFilter | Filter by the Guid of the Trading Name. |\r\n| TradingNameFilter | Filter by the Trading Name. |\r\n| PaymentProviderSettings[0].Name | The Name of the Payment Provider Settings. |\r\n| PaymentProviderSettings[0].Value | The Value of the Payment Provider Settings. |\r\n| PaymentProviderSettings[0].PaymentProviderListItem | The Guid and Description associated to the PaymentProviderListItem of the Payment Provider Settings. |\r\n| PaymentProviderSettings[0].IsDeleted | Is the PaymentProviderSettings deleted. |\r\n| PaymentProviderSettings[0].Guid | The Guid of the Payment Provider Settings. |\r\n| CreditCards[0].Forename | The Forename of the credit card holder. | \r\n| CreditCards[0].Surname | The Surname of the credit card holder. | \r\n| CreditCards[0].Postcode | The Postcode associated to the credit card. | \r\n| CreditCards[0].Province | The Province associated to the credit card. | \r\n| CreditCards[0].DateCreated | The DateCreated associated to the credit card. | \r\n| CreditCards[0].MaskedCreditCardNumber | The MaskedCreditCardNumber associated to the credit card. | \r\n| CreditCards[0].Address1 | The Address1 associated to the credit card. | \r\n| CreditCards[0].City | The City associated to the credit card. | \r\n| CreditCards[0].RelatedContactGuid | The RelatedContactGuid associated to the credit card. | \r\n| CreditCards[0].Country | The Country associated to the credit card. | \r\n| CreditCards[0].CreditCardExpiryDate | The CreditCardExpiryDate associated to the credit card. | \r\n| CreditCards[0].Currency | The Currency associated to the credit card. | \r\n| CreditCards[0].ExternalVaultCardReference | The ExternalVaultCardReference associated to the credit card. | \r\n| CreditCards[0].ExternalVaultReference | The ExternalVaultReference associated to the credit card. | \r\n| CreditCards[0].IsACH | Is the payment an ACH payment. | \r\n| CreditCards[0].Deleted | Is the CreditCard deleted. |\r\n| CreditCards[0].IsRequestWithImmediateResponse | The IsRequestWithImmediateResponse associated to the credit card.  | \r\n| CreditCards[0].PayerReference | The payer reference associated to the credit card.  | \r\n| CreditCards[0].PaymentReference | The payment reference associated to the credit card.  | \r\n| CreditCards[0].PaymentPointListItem | The Guid and Description associated to the PaymentPointListItem to the credit card. | \r\n| CreditCards[0].PaymentProviderListItem | The Guid and Description associated to the PaymentProviderListItem to the credit card.  | \r\n| CreditCards[0].Guid | The Guid associated to the credit card.  | \r\n| RelatedBlobHashes\t\t\t| The array of related external documents to the account customer. |\r\n| RelatedBlobHashes[0].Hash\t| The hash of the external document blob to be used against the /blob endpoint. Files are provided as an octet stream which will need to be converted. |\r\n| RelatedReportBlobs\t\t\t\t\t\t\t\t\t\t\t| The array of related report documents to the account customer. |\r\n| RelatedReportBlobs[0].Guid\t\t\t\t\t\t\t\t\t| The Guid associated to the customer report. |\r\n| RelatedReportBlobs[0].Hash\t\t\t\t\t\t\t\t\t| The hash of the report document blob to be used against the /blob endpoint. Files are provided as an octet stream which will need to be converted. |\r\n| RelatedReportBlobs[0].DocumentDescription\t\t\t\t\t\t| The description associated to the customer report.\t\t\t\t\t\t\t|\r\n| RelatedReportBlobs[0].DocumentName\t\t\t\t\t\t\t| The document name associated to the customer report.\t\t\t\t\t\t\t|\r\n| RelatedReportBlobs[0].IsForAllSites\t\t\t\t\t\t\t| Whether the customer report is for all sites of related customer.\t\t\t\t|\r\n| RelatedReportBlobs[0].RelatedSites\t\t\t\t\t\t\t| The list of related customer report sites.\t\t\t\t\t\t\t\t\t|\r\n| RelatedReportBlobs[0].RelatedSites[0].Guid\t\t\t\t\t| The guid associated to the customer report site.\t\t\t\t\t\t\t\t|\r\n| RelatedReportBlobs[0].RelatedSites[0].RelatedSiteGuid\t\t\t| The related customer site\tguid associated to the customer report site.\t\t|\r\n| RelatedReportBlobs[0].RelatedExcludedSites\t\t\t\t\t| The list of excluded related customer report sites.\t\t\t\t\t\t\t|\r\n| RelatedReportBlobs[0].RelatedExcludedSites[0].Guid\t\t\t| The guid associated to the customer report site.\t\t\t\t\t\t\t\t|\r\n| RelatedReportBlobs[0].RelatedExcludedSites[0].RelatedSiteGuid\t| The related customer site\tguid associated to the customer report site.\t\t|\r\n| RelatedExternalVehicles\t\t\t\t\t\t\t\t\t\t| The array of related external vehicles associated to the account customer.\t|\r\n| RelatedExternalVehicles[0].RelatedExternalVehicleGuid\t\t\t| The related external vehicle\tguid associated to the account customer.\t    |\r\n| RelatedExternalVehicles[0].IsForAllMaterials\t                | Whether the related external vehicle is for all Materials.\t\t    \t    |\r\n| RelatedExternalVehicles[0].IsForAllSites\t                    | Whether the related external vehicle is for all Sites.\t\t\t\t\t\t|\r\n| RelatedExternalVehicles[0].ValidFrom\t                        | The valid from date of the related external vehicles in ISO format (YYYY-MM-DD).\t|\r\n| RelatedExternalVehicles[0].ValidTo\t                        | The valid to date of the related external vehicles in ISO format (YYYY-MM-DD).\t|\r\n| RelatedExternalVehicles[0].IsDeleted\t                        | Whether the related external vehicle is deleted.\t\t|\r\n| RelatedExternalVehicles[0].Guid\t                            | The Guid associated to the related external vehicle.\t|\r\n| CustomerBusinessType\t\t\t\t\t\t\t\t\t\t\t| The array of related customer business type associated to the account customer. \t|\r\n| CustomerBusinessType[0].Guid\t\t\t\t\t\t\t\t\t| The customer business type Guid associated to the account customer.\t|\r\n| CustomerBusinessType[0].BusinessTypeOptionListItem\t\t\t| The Guid and Description associated to the BusinessTypeOptionListItem to the customer business type.\t|\r\n| DefaultSicCodeListItem\t\t\t\t\t\t\t\t\t\t| The Guid and Description associated to the DefaultSicCodeListItem to the account customer.\t|","operationId":"AccountCustomer_GetChanges","consumes":["application/json"],"produces":["application/json"],"parameters":[{"name":"since","in":"query","required":false,"type":"string"},{"name":"cursor","in":"query","required":false,"type":"string"},{"name":"links","in":"query","required":false,"type":"string"}],"responses":{"200":{"description":"OK","schema":{"$ref":"#/definitions/ApiResourceChanges[ApiIntegratorAccountCustomerResource]"}}}}},"/accounting/accountCustomers/{guid}":{"get":{"tags":["AccountCustomer"],"summary":"Find with GUID","description":"| Property                  | Description                                                              |\r\n| ------------------------- | ------------------------------------------------------------------------ |\r\n| GUID                      | The GUID associated to the customer.                                     |\r\n| Name                      | The customer's name.                                                     |\r\n| Reference                 | An alternative name used for the customer.                               |\r\n| FederalId                 | The customer's local authority / government / tax reference.             |\r\n| IsInternal                | Whether the customer is an internal customer.                            |\r\n| ARAccountCode             | Used to filter customers on the accounts receivable code.\t\t           |\r\n| APAccountCode             | Used to filter customers on the accounts payable code.                   |\r\n| Notes\t\t\t\t\t\t| Notes of customer.\t\t\t\t\t\t\t\t\t\t\t\t\t   |\r\n| AMICENumber\t\t\t\t| AMICE Number of customer.\t\t\t\t\t\t\t\t\t\t\t\t   |\r\n| CoCNumber\t\t\t\t\t| CoC Number of customer.\t\t\t\t\t\t\t\t\t\t\t\t   |\r\n| HasRedLight               | Red light indicator passed to driver to indicate the mood of the end customer.|\r\n| CombineChargesRebates     | Rebate are included on the invoice, otherwise a separate bill is generated for rebates. |\r\n| ExternalVehicleValidation | The customer uses their own vehicles and the weighbridge will need to validate the vehicle registrations against a list held on the AMCS Platform. |\r\n| TicketsRequiredWithInvoice | Tickets are required with invoice.                                      |\r\n| RctCustomer               | In the Republic of Ireland the customer is a contractor liable for Relevent Contractors Tax. |\r\n| ProofOfServiceRequired    | Customers need to sign tickets.                      |\r\n| ExcludeFromStatementRun   | Excludes them from the batch statement run.          |\r\n| ReceiveServiceUpdatesByEmail   | Customer receives service updates by email.     |\r\n| ReceiveServiceUpdatesByText    | Customer receives service updates by text.      |\r\n| ReceiveMarketingUpdatesByEmail | Customer receives marketing updates by email.   |\r\n| ReceiveMarketingUpdatesByText  | Customer receives marketing updates by text.    |\r\n| CompanyListItem               | The GUID and name of the company this customer is associated to.           |\r\n| CustomerStateListItem         | The GUID and status of the customer (eg. Active, Suspended, etc.).         |\r\n| CustomerTypeListItem          | The GUID and type of customer (eg. Residential, Commerical, Municipal).    |\r\n| CustomerCategoryListItem      | The GUID and category of the customer (various values).                    |\r\n| CustomerGroupListItem         | The GUID and group of the customer (various values).                       |\r\n| VisitStatusListItem\t        | The GUID and description of the visit status of the customer\t\t\t\t |\r\n| CurrencyListItem              | The GUID and currency of the customer (various values).                    |\r\n| CustomerTemplateListItem\t\t| The GUID and customer template of the customer (various values).           |\r\n| BusinessTypeListItem          | The GUID and business type of the customer (various values).               |\r\n| AutoArAccountCode\t\t\t| The object allowing for creation of an ArAccountCode, depending on system configuration. |\r\n| AutoArAccountCode.CompanyOutletGuid | The GUID of the company outlet used for creation of an ArAccountCode, depending on system configuration. |\r\n| RelatedUserSalesRepGuid   | The GUID of the related sales rep.                                       |     \r\n| RelatedUserCreditControllerGuid | The GUID of the related credit controller.                         |     \r\n| RelatedMasterAccountGuid  | The GUID of the related master account.                                  |     \r\n| RelatedBillToCustomerGuid | The GUID of the related customer where the bills must be send to.        |     \r\n| RelatedLocationHQGuid\t\t| The GUID associated to the HQ location of the customer.\t\t\t\t   |     \r\n| BankDetails\t\t\t\t| The object where bank details are specified.\t\t\t\t\t\t\t   |\r\n| BankDetails.BankName      | The bank name of the direct debit.                                       |\r\n| BankDetails.AccountName   | The account name of the direct debit.\t\t\t                           |\r\n| BankDetails.AccountNo     | The account number of the direct debit.\t\t\t\t\t               |\r\n| BankDetails.SortCode      | The sort code of the direct debit.\t\t\t\t\t\t\t\t\t   |\r\n| BankDetails.BIC           | The Bank Identifier Code of the direct debit.\t\t\t\t\t\t\t   |\r\n| BankDetails.IBAN          | The International Bank Account Number of the direct debit.\t\t\t   |\r\n| BankDetails.NationalBankCode | The National Bank Code of the direct debit.\t\t\t\t\t\t   |\r\n| BankDetails.DirectDebitRunConfigListItem | The GUID and description of the direct debit run configuration. |\r\n| BankDetails.DirectDebitAccountTypeListItem | The GUID and description of the direct debit account type. |\r\n| BankDetails.Address       | The object where bank address details are specified.\t\t\t\t\t   |\r\n| BankDetails.Address.Address1 | The Address1 of the bank.\t\t\t\t\t\t\t\t\t\t\t   |\r\n| BankDetails.Address.Address2 | The Address2 of the bank.\t\t\t\t\t\t\t\t\t\t\t   |\r\n| BankDetails.Address.Address3 | The Address3 of the bank.\t\t\t\t\t\t\t\t\t\t\t   |\r\n| BankDetails.Address.Address4 | The Address4 of the bank.\t\t\t\t\t\t\t\t\t\t\t   |\r\n| BankDetails.Address.Address5 | The Address5 of the bank.\t\t\t\t\t\t\t\t\t\t\t   |\r\n| BankDetails.Address.Postcode | The Postcode of the bank.\t\t\t\t\t\t\t\t\t\t\t   |\r\n| Contract\t\t\t\t\t| The object allowing for creation of the contract.   \t\t\t\t\t   |\t\r\n| Contract.StartDate                 | The start date of the contract in ISO format (YYYY-MM-DD).      |\r\n| Contract.ApprovedDate              | The approved date of the contract in ISO format (YYYY-MM-DD).   |\r\n| Contract.CreditLimit               | The maximum credit limit stipulated on this contract.                    |\r\n| Contract.BalanceMigrated           | The balance which has been migrated. |\r\n| Contract.InvoiceCycleId            | The Id of the invoice cycle this contract will be invoice under (there may be cycles done monthly, daily, weekly, etc.) |\r\n| Contract.VATExemptNumber           | If the contract is exempt from VAT, this is the associated confirmation number. |\r\n| Contract.VATExemptionExpiryDate    | If the contract is exempt from VAT this is date this status is no longer valid in ISO format (YYYY-MM-DD). |\r\n| Contract.VATRegistrationNumber     | If the contract is registered with VAT, this is the relevant number.    |\r\n| Contract.RollUpInvoiceBySite\t\t | Whether the roll up of invoice are done by site.    |\r\n| Contract.RollUpInvoiceByService    | Whether the roll up of invoice are done by service.    |\r\n| Contract.IsInvoiceCollated\t\t | Whether the invoice are collated.\t\t\t\t\t\t\t\t|\r\n| Contract.DepartmentListItem            | The GUID and name of the department this contract is associated to.       |\r\n| Contract.ContractStatusListItem        | The GUID and status of the contract (eg. Approved, Pending, Un-Approved). |\r\n| Contract.PaymentTypeListItem           | The GUID and description of how payments for invoices under the contract will be paid (eg. Cash, Credit Card, etc.). |\r\n| Contract.PaymentTermListItem           | The GUID and description of the payment terms invoices under the contract are to the paid to (eg. Immediately, 30 Days Net, etc.). |\r\n| Contract.InvoiceFrequencyTermListItem  | The GUID and description of the invoice frequency term (eg. Quarterly, Immediate, etc.). |\r\n| Contract.InvoiceDocumentDeliveryMethods[]\t\t\t\t\t\t\t| The array of document delivery types associated to the Contract.\t\t\t\t\t\t\t\t|\r\n| Contract.InvoiceDocumentDeliveryMethods[0].DocumentDeliveryType\t| The GUID and description of the document delivery type associated to the InvoiceDocumentDeliveryMethods. |\r\n| Balance\t\t\t\t\t| The object which allows creation of Customer Balance.\t\t\t\t\t\t|\r\n| Balance.OutstandingAmount | The Outstanding Amount on the customers account.\t\t\t\t\t\t\t| \r\n| Balance.UnallocatedAmount | The Unallocated Amount on the customers account.\t\t\t\t\t\t\t| \r\n| Balance.UnconfirmedBalance | The Unconfirmed Balance Amount on the customers account.\t\t\t\t\t| \r\n| Balance.LedgerBalance | The Ledger Balance Amount on the customers account.\t\t\t\t\t\t\t| \r\n| TradingNames.Guid | The TradingNames Guid on the customers account.\t\t\t\t\t\t\t\t    | \r\n| TradingNames.Description | The TradingNames Description on the customers account.\t\t\t\t\t\t| \r\n| TradingNames.TradingNameTypeListItem.Guid | The Guid associated to the TradingNameTypeListItem on the customers account. | \r\n| TradingNames.TradingNameTypeListItem.Description | The Description associated to the TradingNameTypeListItem on the customers account. | \r\n| TradingNames.IsDeleted | Is the TradingName Deleted. | \r\n| TradingNames.IsForAllSites | IsForAllSites set for the TradingNames. | \r\n| TradingNameGuidFilter | Filter by the Guid of the Trading Name. |\r\n| TradingNameFilter | Filter by the Trading Name. |\r\n| PaymentProviderSettings[0].Name | The Name of the Payment Provider Settings. |\r\n| PaymentProviderSettings[0].Value | The Value of the Payment Provider Settings. |\r\n| PaymentProviderSettings[0].PaymentProviderListItem | The Guid and Description associated to the PaymentProviderListItem of the Payment Provider Settings. |\r\n| PaymentProviderSettings[0].IsDeleted | Is the PaymentProviderSettings deleted. |\r\n| PaymentProviderSettings[0].Guid | The Guid of the Payment Provider Settings. |\r\n| CreditCards[0].Forename | The Forename of the credit card holder. | \r\n| CreditCards[0].Surname | The Surname of the credit card holder. | \r\n| CreditCards[0].Postcode | The Postcode associated to the credit card. | \r\n| CreditCards[0].Province | The Province associated to the credit card. | \r\n| CreditCards[0].DateCreated | The DateCreated associated to the credit card. | \r\n| CreditCards[0].MaskedCreditCardNumber | The MaskedCreditCardNumber associated to the credit card. | \r\n| CreditCards[0].Address1 | The Address1 associated to the credit card. | \r\n| CreditCards[0].City | The City associated to the credit card. | \r\n| CreditCards[0].RelatedContactGuid | The RelatedContactGuid associated to the credit card. | \r\n| CreditCards[0].Country | The Country associated to the credit card. | \r\n| CreditCards[0].CreditCardExpiryDate | The CreditCardExpiryDate associated to the credit card. | \r\n| CreditCards[0].Currency | The Currency associated to the credit card. | \r\n| CreditCards[0].ExternalVaultCardReference | The ExternalVaultCardReference associated to the credit card. | \r\n| CreditCards[0].ExternalVaultReference | The ExternalVaultReference associated to the credit card. | \r\n| CreditCards[0].IsACH | Is the payment an ACH payment. | \r\n| CreditCards[0].Deleted | Is the CreditCard deleted. |\r\n| CreditCards[0].IsRequestWithImmediateResponse | The IsRequestWithImmediateResponse associated to the credit card.  | \r\n| CreditCards[0].PayerReference | The payer reference associated to the credit card.  | \r\n| CreditCards[0].PaymentReference | The payment reference associated to the credit card.  | \r\n| CreditCards[0].PaymentPointListItem | The Guid and Description associated to the PaymentPointListItem to the credit card. | \r\n| CreditCards[0].PaymentProviderListItem | The Guid and Description associated to the PaymentProviderListItem to the credit card.  | \r\n| CreditCards[0].Guid | The Guid associated to the credit card.  | \r\n| RelatedBlobHashes\t\t\t| The array of related external documents to the account customer. |\r\n| RelatedBlobHashes[0].Hash\t| The hash of the external document blob to be used against the /blob endpoint. Files are provided as an octet stream which will need to be converted. |\r\n| RelatedReportBlobs\t\t\t\t\t\t\t\t\t\t\t| The array of related report documents to the account customer. |\r\n| RelatedReportBlobs[0].Guid\t\t\t\t\t\t\t\t\t| The Guid associated to the customer report. |\r\n| RelatedReportBlobs[0].Hash\t\t\t\t\t\t\t\t\t| The hash of the report document blob to be used against the /blob endpoint. Files are provided as an octet stream which will need to be converted. |\r\n| RelatedReportBlobs[0].DocumentDescription\t\t\t\t\t\t| The description associated to the customer report.\t\t\t\t\t\t\t|\r\n| RelatedReportBlobs[0].DocumentName\t\t\t\t\t\t\t| The document name associated to the customer report.\t\t\t\t\t\t\t|\r\n| RelatedReportBlobs[0].IsForAllSites\t\t\t\t\t\t\t| Whether the customer report is for all sites of related customer.\t\t\t\t|\r\n| RelatedReportBlobs[0].RelatedSites\t\t\t\t\t\t\t| The list of related customer report sites.\t\t\t\t\t\t\t\t\t|\r\n| RelatedReportBlobs[0].RelatedSites[0].Guid\t\t\t\t\t| The guid associated to the customer report site.\t\t\t\t\t\t\t\t|\r\n| RelatedReportBlobs[0].RelatedSites[0].RelatedSiteGuid\t\t\t| The related customer site\tguid associated to the customer report site.\t\t|\r\n| RelatedReportBlobs[0].RelatedExcludedSites\t\t\t\t\t| The list of excluded related customer report sites.\t\t\t\t\t\t\t|\r\n| RelatedReportBlobs[0].RelatedExcludedSites[0].Guid\t\t\t| The guid associated to the customer report site.\t\t\t\t\t\t\t\t|\r\n| RelatedReportBlobs[0].RelatedExcludedSites[0].RelatedSiteGuid\t| The related customer site\tguid associated to the customer report site.\t\t|\r\n| RelatedExternalVehicles\t\t\t\t\t\t\t\t\t\t| The array of related external vehicles associated to the account customer.\t|\r\n| RelatedExternalVehicles[0].RelatedExternalVehicleGuid\t\t\t| The related external vehicle\tguid associated to the account customer.\t    |\r\n| RelatedExternalVehicles[0].IsForAllMaterials\t                | Whether the related external vehicle is for all Materials.\t\t    \t    |\r\n| RelatedExternalVehicles[0].IsForAllSites\t                    | Whether the related external vehicle is for all Sites.\t\t\t\t\t\t|\r\n| RelatedExternalVehicles[0].ValidFrom\t                        | The valid from date of the related external vehicles in ISO format (YYYY-MM-DD).\t|\r\n| RelatedExternalVehicles[0].ValidTo\t                        | The valid to date of the related external vehicles in ISO format (YYYY-MM-DD).\t|\r\n| RelatedExternalVehicles[0].IsDeleted\t                        | Whether the related external vehicle is deleted.\t\t|\r\n| RelatedExternalVehicles[0].Guid\t                            | The Guid associated to the related external vehicle.\t|\r\n| CustomerBusinessType\t\t\t\t\t\t\t\t\t\t\t| The array of related customer business type associated to the account customer. \t|\r\n| CustomerBusinessType[0].Guid\t\t\t\t\t\t\t\t\t| The customer business type Guid associated to the account customer.\t|\r\n| CustomerBusinessType[0].BusinessTypeOptionListItem\t\t\t| The Guid and Description associated to the BusinessTypeOptionListItem to the customer business type.\t|\r\n| DefaultSicCodeListItem\t\t\t\t\t\t\t\t\t\t| The Guid and Description associated to the DefaultSicCodeListItem to the account customer.\t|","operationId":"AccountCustomer_Get","consumes":["application/json"],"produces":["application/json"],"parameters":[{"name":"guid","in":"path","required":true,"type":"string","format":"uuid"},{"name":"links","in":"query","required":false,"type":"string"},{"name":"include","in":"query","required":false,"type":"string"},{"name":"expand","in":"query","required":false,"type":"string"},{"name":"udf","in":"query","required":false,"type":"string"}],"responses":{"200":{"description":"OK","schema":{"$ref":"#/definitions/ApiResourceResultEntity[ApiIntegratorAccountCustomerResource]"}}}},"put":{"tags":["AccountCustomer"],"summary":"Partial update","description":"| Property                  | Description                                                                | Required |\r\n| ------------------------- | -------------------------------------------------------------------------- | -------- |\r\n| GUID                      | The GUID associated to the customer.                                       | No |\r\n| Name                      | The customer's name.                                                       | No |\r\n| Reference                 | An alternative name used for the customer.                                 | No |\r\n| FederalId                 | The customer's local authority / government / tax reference.               | No |\r\n| IsInternal                | Whether the customer is an internal customer.                              | No |\r\n| ARAccountCode             | The account code used for accounts receivable.                             | No |\r\n| APAccountCode             | The account code used for accounts payable.                                | No |\r\n| Notes\t\t\t\t\t\t| Notes of customer.\t\t\t\t\t\t\t\t\t\t\t\t\t\t | No |\r\n| AMICENumber\t\t\t\t| AMICE Number of customer.\t\t\t\t\t\t\t\t\t\t\t\t\t | No |\r\n| CoCNumber\t\t\t\t\t| CoC Number of customer.\t\t\t\t\t\t\t\t\t\t\t\t\t | No |\r\n| HasRedLight               | Red light indicator passed to driver to indicate the mood of the end customer.| No |\r\n| CombineChargesRebates     | Rebate are included on the invoice, otherwise a separate bill is generated for rebates. | Yes |\r\n| ExternalVehicleValidation | The customer uses their own vehicles and the weighbridge will need to validate the vehicle registrations against a list held on the AMCS Platform. | No |\r\n| TicketsRequiredWithInvoice | Tickets are required with invoice.                                        | No |\r\n| RctCustomer               | In the Republic of Ireland the customer is a contractor liable for Relevent Contractors Tax. | No |\r\n| ProofOfServiceRequired    | Customers need to sign tickets.                      | No |\r\n| ExcludeFromStatementRun   | Excludes them from the batch statement run.          | No |\r\n| ReceiveServiceUpdatesByEmail   | Customer receives service updates by email.     | No |\r\n| ReceiveServiceUpdatesByText    | Customer receives service updates by text.      | No |\r\n| ReceiveMarketingUpdatesByEmail | Customer receives marketing updates by email.   | No |\r\n| ReceiveMarketingUpdatesByText  | Customer receives marketing updates by text.    | No |\r\n| CompanyListItem               | The GUID and name of the company this customer is associated to.           | Yes |\r\n| CustomerStateListItem         | The GUID and status of the customer (eg. Active, Suspended, etc.).         | No |\r\n| CustomerCategoryListItem      | The GUID and category of the customer (various values).                    | No |\r\n| CustomerGroupListItem         | The GUID and group of the customer (various values).                       | No |\r\n| VisitStatusListItem\t        | The GUID and description of the visit status of the customer\t\t\t\t | No |\r\n| CurrencyListItem              | The GUID and currency of the customer (various values).                    | Yes |\r\n| CustomerTemplateListItem\t\t| The GUID and customer template of the customer (various values).           | No |\r\n| BusinessTypeListItem          | The GUID and business type of the customer (various values).               | No |\r\n| AutoArAccountCode\t\t\t| The object allowing for creation of an ArAccountCode, depending on system configuration. | No |\r\n| AutoArAccountCode.CompanyOutletGUID | The GUID of the company outlet used for creation of an ArAccountCode, depending on system configuration. | No |\r\n| RelatedUserSalesRepGuid   | The GUID of the related sales rep.                                         | No |\r\n| RelatedUserCreditControllerGuid | The GUID of the related credit controller.                           | No |\r\n| RelatedMasterAccountGuid  | The GUID of the related master account.                                    | No |\r\n| RelatedBillToCustomerGuid | The GUID of the related customer where the bills must be send to.          | No |   \r\n| RelatedLocationHQGuid\t\t| The GUID associated to the HQ location of the customer.\t\t\t\t\t | No |   \r\n| BankDetails\t\t\t\t| The object where bank details are specified.\t\t\t        \t\t     | No |\r\n| BankDetails.BankName      | The bank name of the direct debit.                                         | Yes |\r\n| BankDetails.AccountName   | The account name of the direct debit.\t\t\t                             | Yes |\r\n| BankDetails.AccountNo     | The account number of the direct debit.\t\t\t\t\t                 | Yes |\r\n| BankDetails.SortCode      | The sort code of the direct debit.\t\t\t\t\t\t\t\t\t     | Yes |\r\n| BankDetails.BIC           | The Bank Identifier Code of the direct debit.\t    \t\t\t\t\t     | No |\r\n| BankDetails.IBAN          | The International Bank Account Number of the direct debit.\t\t\t     | No |\r\n| BankDetails.NationalBankCode | The National Bank Code of the direct debit.\t\t\t\t\t\t\t | No |\r\n| BankDetails.DirectDebitRunConfigListItem | The GUID and description of the direct debit run configuration  | No |\r\n| BankDetails.DirectDebitAccountTypeListItem | The GUID and description of the direct debit account type. | Yes |\r\n| BankDetails.Address       | The object where bank address details are specified.\t\t\t\t\t     | No |\r\n| BankDetails.Address.Address1 | The Address1 of the bank.\t\t\t\t\t\t\t\t\t\t\t     | No |\r\n| BankDetails.Address.Address2 | The Address2 of the bank.\t\t\t\t\t\t\t\t\t\t\t     | No |\r\n| BankDetails.Address.Address3 | The Address3 of the bank.\t\t\t\t\t\t\t\t\t\t\t     | No |\r\n| BankDetails.Address.Address4 | The Address4 of the bank.\t\t\t\t\t\t\t\t\t\t\t     | No |\r\n| BankDetails.Address.Address5 | The Address5 of the bank.\t\t\t\t\t\t\t\t\t\t\t     | No |\r\n| BankDetails.Address.Postcode | The Postcode of the bank.\t\t\t\t\t\t\t\t\t\t\t     | No |\r\n| Contract\t\t\t\t\t| The object allowing for creation of the contract.   \t\t\t\t\t     | Yes |\r\n| Contract.StartDate                 | The start date of the contract in ISO format (YYYY-MM-DD).        | No |\r\n| Contract.ApprovedDate              | The approved date of the contract in ISO format (YYYY-MM-DD).\t | No |\r\n| Contract.CreditLimit               | The maximum credit limit stipulated on this contract.             | No |\r\n| Contract.BalanceMigrated           | The balance which has been migrated.                              | No |\r\n| Contract.InvoiceCycleId            | The Id of the invoice cycle this contract will be invoice under (there may be cycles done monthly, daily, weekly, etc.) | Yes |\r\n| Contract.VATExemptNumber           | If the contract is exempt from VAT, this is the associated confirmation number. | No |\r\n| Contract.VATExemptionExpiryDate    | If the contract is exempt from VAT this is date this status is no longer valid in ISO format (YYYY-MM-DD). | No |\r\n| Contract.VATRegistrationNumber     | If the contract is registered with VAT, this is the relevant number. | No |\r\n| Contract.RollUpInvoiceBySite\t\t | Whether the roll up of invoice are done by site.    | No |\r\n| Contract.RollUpInvoiceByService    | Whether the roll up of invoice are done by service.    | No |\r\n| Contract.IsInvoiceCollated\t\t | Whether the invoice are collated.\t\t\t\t\t\t\t\t| Yes |\r\n| Contract.DepartmentListItem            | The GUID and name of the department this contract is associated to.  | Yes |\r\n| Contract.ContractStatusListItem        | The GUID and status of the contract (eg. Approved, Pending, Un-Approved). | Yes |\r\n| Contract.PaymentTypeListItem           | The GUID and description of how payments for invoices under the contract will be paid (eg. Cash, Credit Card, etc.). | Yes |\r\n| Contract.PaymentTermListItem           | The GUID and description of the payment terms invoices under the contract are to the paid to (eg. Immediately, 30 Days Net, etc.). | Yes |\r\n| Contract.InvoiceFrequencyTermListItem  | The GUID and description of the invoice frequency term (eg. Quarterly, Immediate, etc.). | Yes |\r\n| Contract.InvoiceDocumentDeliveryMethods[]\t\t\t\t\t\t\t| The array of document delivery types associated to the Contract.\t\t\t\t\t\t\t\t| No |\r\n| Contract.InvoiceDocumentDeliveryMethods[0].DocumentDeliveryType\t| The GUID and description of the document delivery type associated to the InvoiceDocumentDeliveryMethods. | No |\r\n| Balance\t\t\t\t\t| The object which allows creation of Customer Balance\t\t\t\t\t\t| No |\r\n| Balance.OutstandingAmount | The outstanding amount on the customers account\t\t\t\t\t\t\t| Yes |\r\n| Balance.UnallocatedAmount | The Unallocated amount on the customers account\t\t\t\t\t\t\t| Yes |\r\n| Balance.UnconfirmedBalance | The Unconfirmed Balance amount on the customers account\t\t\t\t\t| Yes |\r\n| Balance.LedgerBalance | The Ledger Balance on the customers account\t\t\t\t\t\t\t\t\t| Yes |\r\n| TradingNames.Guid | The TradingNames Guid on the customers account.\t\t\t\t\t\t\t\t    | No  |\r\n| TradingNames.Description | The TradingNames Description on the customers account.\t\t\t\t\t\t| Yes | \r\n| TradingNames.TradingNameTypeListItem | The Guid and Description of the TradingNameTypeListItem associated to the TradingNames on the customers account. | Yes | \r\n| TradingNames.IsDeleted | Is the TradingName Deleted. | Yes | \r\n| TradingNames.IsForAllSites | IsForAllSites set for the TradingNames. | Yes | \r\n| TradingNameGuidFilter | Filter by the Guid of the Trading Name. | No |\r\n| TradingNameFilter | Filter by the Trading Name. | No |\r\n| PaymentProviderSettings[0].Name | The Name of the Payment Provider Settings. | Yes |\r\n| PaymentProviderSettings[0].Value | The Value of the Payment Provider Settings. | No |\r\n| PaymentProviderSettings[0].PaymentProviderListItem | The Guid and Description associated to the PaymentProviderListItem of the Payment Provider Settings. | Yes |\r\n| PaymentProviderSettings[0].IsDeleted | Is the PaymentProviderSettings deleted. | No |\r\n| PaymentProviderSettings[0].Guid | The Guid of the Payment Provider Settings. | No |\r\n| CreditCards[0].Forename | The Forename of the credit card holder. | No |\r\n| CreditCards[0].Surname | The Surname of the credit card holder. | No | \r\n| CreditCards[0].Postcode | The Postcode associated to the credit card. | No |\r\n| CreditCards[0].Province | The Province associated to the credit card. | No |\r\n| CreditCards[0].DateCreated | The DateCreated associated to the credit card. | Yes |\r\n| CreditCards[0].MaskedCreditCardNumber | The MaskedCreditCardNumber associated to the credit card. | Yes |\r\n| CreditCards[0].Address1 | The Address1 associated to the credit card. | No |\r\n| CreditCards[0].City | The City associated to the credit card. | No |\r\n| CreditCards[0].RelatedContactGuid | The RelatedContactGuid associated to the credit card. | No |\r\n| CreditCards[0].Country | The Country associated to the credit card. | No |\r\n| CreditCards[0].CreditCardExpiryDate | The CreditCardExpiryDate associated to the credit card. | No |\r\n| CreditCards[0].Currency | The Currency associated to the credit card. | No |\r\n| CreditCards[0].ExternalVaultCardReference | The ExternalVaultCardReference associated to the credit card. | No |\r\n| CreditCards[0].ExternalVaultReference | The ExternalVaultReference associated to the credit card. | No |\r\n| CreditCards[0].IsACH | Is the payment an ACH payment. | No |\r\n| CreditCards[0].Deleted | Is the CreditCard deleted. | No |\r\n| CreditCards[0].IsRequestWithImmediateResponse | The IsRequestWithImmediateResponse associated to the credit card.  | No |\r\n| CreditCards[0].PayerReference | The payer reference associated to the credit card.  | No |\r\n| CreditCards[0].PaymentReference | The payment reference associated to the credit card.  | No |\r\n| CreditCards[0].PaymentPointListItem | The Guid and Description associated to the PaymentPointListItem to the credit card. | No |\r\n| CreditCards[0].PaymentProviderListItem | The Guid and Description associated to the PaymentProviderListItem to the credit card.  | No |\r\n| CreditCards[0].Guid | The Guid associated to the credit card.  | No |\r\n| RelatedBlobHashes\t\t\t| The array of related external documents to the account customer. | No |\r\n| RelatedBlobHashes[0].Hash\t| The hash of the external document blob to be used against the /blob endpoint. Files are provided as an octet stream which will need to be converted. | No |\r\n| RelatedReportBlobs\t\t\t\t\t\t\t\t\t\t\t| The array of related report documents to the account customer. | No |\r\n| RelatedReportBlobs[0].Guid\t\t\t\t\t\t\t\t\t| The Guid associated to the customer report.\t\t\t\t\t\t\t\t\t| Yes |\r\n| RelatedReportBlobs[0].Hash\t\t\t\t\t\t\t\t\t| The hash of the report document blob to be used against the /blob endpoint. Files are provided as an octet stream which will need to be converted. | No |\r\n| RelatedReportBlobs[0].DocumentDescription\t\t\t\t\t\t| The description associated to the customer report.\t\t\t\t\t\t\t| No |\r\n| RelatedReportBlobs[0].DocumentName\t\t\t\t\t\t\t| The document name associated to the customer report.\t\t\t\t\t\t\t| No |\r\n| RelatedReportBlobs[0].IsForAllSites\t\t\t\t\t\t\t| Whether the customer report is for all sites of related customer.\t\t\t\t| No |\r\n| RelatedReportBlobs[0].RelatedSites\t\t\t\t\t\t\t| The list of related customer report sites.\t\t\t\t\t\t\t\t\t| No |\r\n| RelatedReportBlobs[0].RelatedSites[0].Guid\t\t\t\t\t| The guid associated to the customer report site.\t\t\t\t\t\t\t\t| No |\r\n| RelatedReportBlobs[0].RelatedSites[0].RelatedSiteGuid\t\t\t| The related customer site\tguid associated to the customer report site.\t\t| No |\r\n| RelatedReportBlobs[0].RelatedExcludedSites\t\t\t\t\t| The list of excluded related customer report sites.\t\t\t\t\t\t\t| No |\r\n| RelatedReportBlobs[0].RelatedExcludedSites[0].Guid\t\t\t| The guid associated to the customer report site.\t\t\t\t\t\t\t\t| No |\r\n| RelatedReportBlobs[0].RelatedExcludedSites[0].RelatedSiteGuid\t| The related customer site\tguid associated to the customer report site.\t\t| No |\r\n| RelatedExternalVehicles\t\t\t\t\t\t\t\t\t\t| The array of related external vehicles associated to the account customer.\t| No |\r\n| RelatedExternalVehicles[0].RelatedExternalVehicleGuid\t\t\t| The related external vehicle\tguid associated to the account customer.\t    | Yes |\r\n| RelatedExternalVehicles[0].IsForAllMaterials\t                | Whether the related external vehicle is for all Materials.\t\t    \t    | Yes |\r\n| RelatedExternalVehicles[0].IsForAllSites\t                    | Whether the related external vehicle is for all Sites.\t\t\t\t\t\t| Yes |\r\n| RelatedExternalVehicles[0].ValidFrom\t                        | The valid from date of the related external vehicles in ISO format (YYYY-MM-DD).\t| Yes |\r\n| RelatedExternalVehicles[0].ValidTo\t                        | The valid to date of the related external vehicles in ISO format (YYYY-MM-DD).\t| Yes |\r\n| RelatedExternalVehicles[0].IsDeleted\t                        | Whether the related external vehicle is deleted.\t\t\t\t\t\t\t\t\t| Yes |\r\n| RelatedExternalVehicles[0].Guid\t                            | The Guid associated to the related external vehicle.\t\t\t\t\t\t\t\t| Yes |\r\n| CustomerBusinessType\t\t\t\t\t\t\t\t\t\t\t| The array of related customer business type associated to the account customer.\t| No |\r\n| CustomerBusinessType[0].Guid\t\t\t\t\t\t\t\t\t| The customer business type Guid associated to the account customer.\t\t\t\t| No |\r\n| CustomerBusinessType[0].BusinessTypeOptionListItem\t\t\t| The Guid and Description associated to the BusinessTypeOptionListItem to the customer business type.\t\t| No |\r\n| DefaultSicCodeListItem\t\t\t\t\t\t\t\t\t\t| The Guid and Description associated to the DefaultSicCodeListItem to the account customer.\t\t\t\t| No |\r\n\r\n## Extra validations\r\n\r\n| Condition | Error message |\r\n| --------- | ------------- |\r\n| autoGenerateAccountNumbers and Update and (ARAccountCode is null or AutoArAccountCode is not null) | ARAccountCode should not be null and AutoArAccountCode should be null |\r\n| autoGenerateAccountNumbers and (ARAccountCode is not null or AutoArAccountCode is null) | AutoArAccountCode should not be null and ARAccountCode should be null |\r\n| autoGenerateAccountNumbers is No and (ARAccountCode is null or AutoArAccountCode is not null) | ARAccountCode should not be null and AutoArAccountCode should be null |\r\n| Update and ARAccountCode not equal to saved ARAccountCode | ARAccountCode is a read-only property |\r\n| Update ARAccountCode to be null | ARAccountCode is a read-only property |\r\n| Update and AutoArAccountCode not equal to saved AutoArAccountCode | A value for AutoARAccountCode has been included as part of an update. Could not update the resource. Only include a value for AutoARAccountCode when an AR Account code is to be system generated as part of creating a customer.|\r\n| CompanyOutlet not found with value AutoArAccountCode.CompanyOutletGuid | Failed to retrieve CompanyOutlet with AutoArAccountCode.CompanyOutletGuid of {value of AutoArAccountCode.CompanyOutletGUID} |\r\n| MasterAccount not found with value RelatedMasterAccountGuid | Failed to retrieve MasterAccount with RelatedMasterAccountGuid of {value of RelatedMasterAccountGuid} |\r\n| Customer not found with value RelatedBillToCustomerGuid | Failed to retrieve Customer with RelatedBillToCustomerGuid of {value of RelatedBillToCustomerGuid} |\r\n| SysUser not found with value RelatedUserSalesRepGuid | Failed to retrieve SysUser with RelatedUserSalesRepGuid of {value of RelatedUserSalesRepGuid} |\r\n| SysUser not found with value RelatedUserCreditControllerGuid | Failed to retrieve SysUser with RelatedUserCreditControllerGuid of {value of RelatedUserCreditControllerGuid} |\r\n| ARAccountCode is not unique | Failed to save. Entity already exists with arAccountCode of {value of ARAccountCode} |\r\n| DirectDebit not found for the AccountCustomer | The mandatory property DirectDebitId has a null value. The request could not be processed. Supply a value for the DirectDebitId property of the submitted resource. |\r\n| Provide TradingNames.Guid which is not linked to the customer | Failed to save/update AccountCustomer because Trading name with Guid {guid} is not linked to the customer. Could not update the customer. Ensure that the trading names listed in The TradingNames array are those for the customer. |\r\n| Duplicate TradingNames Description in the trading names array for the customer | Failed to save. Entity already exists with TradingNames.Description of {Description}  |\r\n| RelatedBlobHashes[0].Hash is not null for Update and the Customer did not have RelatedBlobHashes initially | Failed to save/update AccountCustomer because RelatedBlobHashes do not exist for the Customer. |\r\n| RelatedBlobHashes[0].Hash is not null for Update and Invalid Hash | Failed to retrieve CustomerExternalDocument with MediaContentHash of {value of Hash} |\r\n| RelatedReportBlobs is not empty for Update and the Customer did not have RelatedReportBlobs initially | Failed to save/update AccountCustomer because RelatedReportBlobs do not exist for the Customer. |\r\n| RelatedReportBlobs[0].Guid is invalid | Failed to retrieve PortalReport with RelatedReportBlobs.Guid of {RelatedReportBlobs.Guid} |\r\n| RelatedReportBlobs[0].Guid is changed | Failed to save. AccountCustomer with RelatedReportBlobs.Guid cannot be set if CustomerReport is not linked to AccountCustomer |\r\n| RelatedReportBlobs[0].Hash is changed | RelatedReportBlobs.Hash is a read-only property |\r\n| RelatedReportBlobs[0].DocumentDescription is changed | RelatedReportBlobs.DocumentDescription is a read-only property |\r\n| RelatedReportBlobs[0].IsForAllSites is changed | RelatedReportBlobs.IsForAllSites is a read-only property |\r\n| RelatedReportBlobs[0].RelatedSites is changed | RelatedReportBlobs.RelatedSites is a read-only property |\r\n| RelatedReportBlobs[0].RelatedSites.Guid is changed | RelatedReportBlobs.RelatedSites.Guid is a read-only property |\r\n| RelatedReportBlobs[0].RelatedSites.RelatedSiteGuid is changed | RelatedReportBlobs.RelatedSites.RelatedSiteGuid is a read-only property |\r\n| RelatedReportBlobs[0].RelatedExcludedSites is changed | RelatedReportBlobs.RelatedExcludedSites is a read-only property |\r\n| RelatedReportBlobs[0].RelatedExcludedSites.Guid is changed | RelatedReportBlobs.RelatedExcludedSites.Guid is a read-only property |\r\n| RelatedReportBlobs[0].RelatedExcludedSites.RelatedSiteGuid is changed | RelatedReportBlobs.RelatedExcludedSites.RelatedSiteGuid is a read-only property |\r\n| CustomerTemplateListItem.Guid is deleted | The provided CustomerTemplateListItem is deleted. Could not update the resource. Please check the relevant list end point for the available options. |\r\n| BusinessTypeListItem.Guid is not active | The provided BusinessTypeListItem is not active. Could not update the resource. Please check the relevant list end point for the available options. |\r\n| InvoiceDocumentDeliveryMethods[0].DocumentDeliveryType.Guid is not active | The provided DocumentDeliveryType is not active. Could not update the resource. Please check the relevant list end point for the available options. |\r\n| PaymentProviderSettings[0].Guid is provided for new account customer | Attempting to update payment provider settings when creating a customer. Could not process the request. Provide payment provider setting with out a Guid property to create new settings rather than attempting an update. |\r\n| PaymentProviderSettings[0].IsDeleted is true | IsDeleted is TRUE. Could not process the request. Resources can not be deleted via the REST API. |\r\n| CreditCards[0].IsDeleted is true | IsDeleted is TRUE. Could not process the request. Resources can not be deleted via the REST API. |\r\n| If the value for CreditCards.IsDeleted is changed on update | CreditCards.IsDeleted is a read-only property |\r\n| If the value for any {property} is changed on update for a deleted CreditCard | Attempt to update the {property} of a CreditCard that is deleted. Could not process the request |\r\n","operationId":"AccountCustomer_Update","consumes":["application/json"],"produces":["application/json"],"parameters":[{"name":"guid","in":"path","required":true,"type":"string","format":"uuid"},{"in":"body","required":true,"schema":{"$ref":"#/definitions/ApiIntegratorAccountCustomerResource"}}],"responses":{"200":{"description":"OK","schema":{"$ref":"#/definitions/ApiResourceId"}}}}},"/accounting/accountCustomers":{"get":{"tags":["AccountCustomer"],"summary":"Find with Filters","description":"| Property                  | Description                                                              |\r\n| ------------------------- | ------------------------------------------------------------------------ |\r\n| GUID                      | The GUID associated to the customer.                                     |\r\n| Name                      | The customer's name.                                                     |\r\n| Reference                 | An alternative name used for the customer.                               |\r\n| FederalId                 | The customer's local authority / government / tax reference.             |\r\n| IsInternal                | Whether the customer is an internal customer.                            |\r\n| ARAccountCode             | Used to filter customers on the accounts receivable code.\t\t           |\r\n| APAccountCode             | Used to filter customers on the accounts payable code.                   |\r\n| Notes\t\t\t\t\t\t| Notes of customer.\t\t\t\t\t\t\t\t\t\t\t\t\t   |\r\n| AMICENumber\t\t\t\t| AMICE Number of customer.\t\t\t\t\t\t\t\t\t\t\t\t   |\r\n| CoCNumber\t\t\t\t\t| CoC Number of customer.\t\t\t\t\t\t\t\t\t\t\t\t   |\r\n| HasRedLight               | Red light indicator passed to driver to indicate the mood of the end customer.|\r\n| CombineChargesRebates     | Rebate are included on the invoice, otherwise a separate bill is generated for rebates. |\r\n| ExternalVehicleValidation | The customer uses their own vehicles and the weighbridge will need to validate the vehicle registrations against a list held on the AMCS Platform. |\r\n| TicketsRequiredWithInvoice | Tickets are required with invoice.                                      |\r\n| RctCustomer               | In the Republic of Ireland the customer is a contractor liable for Relevent Contractors Tax. |\r\n| ProofOfServiceRequired    | Customers need to sign tickets.                      |\r\n| ExcludeFromStatementRun   | Excludes them from the batch statement run.          |\r\n| ReceiveServiceUpdatesByEmail   | Customer receives service updates by email.     |\r\n| ReceiveServiceUpdatesByText    | Customer receives service updates by text.      |\r\n| ReceiveMarketingUpdatesByEmail | Customer receives marketing updates by email.   |\r\n| ReceiveMarketingUpdatesByText  | Customer receives marketing updates by text.    |\r\n| CompanyListItem               | The GUID and name of the company this customer is associated to.           |\r\n| CustomerStateListItem         | The GUID and status of the customer (eg. Active, Suspended, etc.).         |\r\n| CustomerTypeListItem          | The GUID and type of customer (eg. Residential, Commerical, Municipal).    |\r\n| CustomerCategoryListItem      | The GUID and category of the customer (various values).                    |\r\n| CustomerGroupListItem         | The GUID and group of the customer (various values).                       |\r\n| VisitStatusListItem\t        | The GUID and description of the visit status of the customer\t\t\t\t |\r\n| CurrencyListItem              | The GUID and currency of the customer (various values).                    |\r\n| CustomerTemplateListItem\t\t| The GUID and customer template of the customer (various values).           |\r\n| BusinessTypeListItem          | The GUID and business type of the customer (various values).               |\r\n| AutoArAccountCode\t\t\t| The object allowing for creation of an ArAccountCode, depending on system configuration. |\r\n| AutoArAccountCode.CompanyOutletGuid | The GUID of the company outlet used for creation of an ArAccountCode, depending on system configuration. |\r\n| RelatedUserSalesRepGuid   | The GUID of the related sales rep.                                       |     \r\n| RelatedUserCreditControllerGuid | The GUID of the related credit controller.                         |     \r\n| RelatedMasterAccountGuid  | The GUID of the related master account.                                  |     \r\n| RelatedBillToCustomerGuid | The GUID of the related customer where the bills must be send to.        |     \r\n| RelatedLocationHQGuid\t\t| The GUID associated to the HQ location of the customer.\t\t\t\t   |     \r\n| BankDetails\t\t\t\t| The object where bank details are specified.\t\t\t\t\t\t\t   |\r\n| BankDetails.BankName      | The bank name of the direct debit.                                       |\r\n| BankDetails.AccountName   | The account name of the direct debit.\t\t\t                           |\r\n| BankDetails.AccountNo     | The account number of the direct debit.\t\t\t\t\t               |\r\n| BankDetails.SortCode      | The sort code of the direct debit.\t\t\t\t\t\t\t\t\t   |\r\n| BankDetails.BIC           | The Bank Identifier Code of the direct debit.\t\t\t\t\t\t\t   |\r\n| BankDetails.IBAN          | The International Bank Account Number of the direct debit.\t\t\t   |\r\n| BankDetails.NationalBankCode | The National Bank Code of the direct debit.\t\t\t\t\t\t   |\r\n| BankDetails.DirectDebitRunConfigListItem | The GUID and description of the direct debit run configuration. |\r\n| BankDetails.DirectDebitAccountTypeListItem | The GUID and description of the direct debit account type. |\r\n| BankDetails.Address       | The object where bank address details are specified.\t\t\t\t\t   |\r\n| BankDetails.Address.Address1 | The Address1 of the bank.\t\t\t\t\t\t\t\t\t\t\t   |\r\n| BankDetails.Address.Address2 | The Address2 of the bank.\t\t\t\t\t\t\t\t\t\t\t   |\r\n| BankDetails.Address.Address3 | The Address3 of the bank.\t\t\t\t\t\t\t\t\t\t\t   |\r\n| BankDetails.Address.Address4 | The Address4 of the bank.\t\t\t\t\t\t\t\t\t\t\t   |\r\n| BankDetails.Address.Address5 | The Address5 of the bank.\t\t\t\t\t\t\t\t\t\t\t   |\r\n| BankDetails.Address.Postcode | The Postcode of the bank.\t\t\t\t\t\t\t\t\t\t\t   |\r\n| Contract\t\t\t\t\t| The object allowing for creation of the contract.   \t\t\t\t\t   |\t\r\n| Contract.StartDate                 | The start date of the contract in ISO format (YYYY-MM-DD).      |\r\n| Contract.ApprovedDate              | The approved date of the contract in ISO format (YYYY-MM-DD).   |\r\n| Contract.CreditLimit               | The maximum credit limit stipulated on this contract.                    |\r\n| Contract.BalanceMigrated           | The balance which has been migrated. |\r\n| Contract.InvoiceCycleId            | The Id of the invoice cycle this contract will be invoice under (there may be cycles done monthly, daily, weekly, etc.) |\r\n| Contract.VATExemptNumber           | If the contract is exempt from VAT, this is the associated confirmation number. |\r\n| Contract.VATExemptionExpiryDate    | If the contract is exempt from VAT this is date this status is no longer valid in ISO format (YYYY-MM-DD). |\r\n| Contract.VATRegistrationNumber     | If the contract is registered with VAT, this is the relevant number.    |\r\n| Contract.RollUpInvoiceBySite\t\t | Whether the roll up of invoice are done by site.    |\r\n| Contract.RollUpInvoiceByService    | Whether the roll up of invoice are done by service.    |\r\n| Contract.IsInvoiceCollated\t\t | Whether the invoice are collated.\t\t\t\t\t\t\t\t|\r\n| Contract.DepartmentListItem            | The GUID and name of the department this contract is associated to.       |\r\n| Contract.ContractStatusListItem        | The GUID and status of the contract (eg. Approved, Pending, Un-Approved). |\r\n| Contract.PaymentTypeListItem           | The GUID and description of how payments for invoices under the contract will be paid (eg. Cash, Credit Card, etc.). |\r\n| Contract.PaymentTermListItem           | The GUID and description of the payment terms invoices under the contract are to the paid to (eg. Immediately, 30 Days Net, etc.). |\r\n| Contract.InvoiceFrequencyTermListItem  | The GUID and description of the invoice frequency term (eg. Quarterly, Immediate, etc.). |\r\n| Contract.InvoiceDocumentDeliveryMethods[]\t\t\t\t\t\t\t| The array of document delivery types associated to the Contract.\t\t\t\t\t\t\t\t|\r\n| Contract.InvoiceDocumentDeliveryMethods[0].DocumentDeliveryType\t| The GUID and description of the document delivery type associated to the InvoiceDocumentDeliveryMethods. |\r\n| Balance\t\t\t\t\t| The object which allows creation of Customer Balance.\t\t\t\t\t\t|\r\n| Balance.OutstandingAmount | The Outstanding Amount on the customers account.\t\t\t\t\t\t\t| \r\n| Balance.UnallocatedAmount | The Unallocated Amount on the customers account.\t\t\t\t\t\t\t| \r\n| Balance.UnconfirmedBalance | The Unconfirmed Balance Amount on the customers account.\t\t\t\t\t| \r\n| Balance.LedgerBalance | The Ledger Balance Amount on the customers account.\t\t\t\t\t\t\t| \r\n| TradingNames.Guid | The TradingNames Guid on the customers account.\t\t\t\t\t\t\t\t    | \r\n| TradingNames.Description | The TradingNames Description on the customers account.\t\t\t\t\t\t| \r\n| TradingNames.TradingNameTypeListItem.Guid | The Guid associated to the TradingNameTypeListItem on the customers account. | \r\n| TradingNames.TradingNameTypeListItem.Description | The Description associated to the TradingNameTypeListItem on the customers account. | \r\n| TradingNames.IsDeleted | Is the TradingName Deleted. | \r\n| TradingNames.IsForAllSites | IsForAllSites set for the TradingNames. | \r\n| TradingNameGuidFilter | Filter by the Guid of the Trading Name. |\r\n| TradingNameFilter | Filter by the Trading Name. |\r\n| PaymentProviderSettings[0].Name | The Name of the Payment Provider Settings. |\r\n| PaymentProviderSettings[0].Value | The Value of the Payment Provider Settings. |\r\n| PaymentProviderSettings[0].PaymentProviderListItem | The Guid and Description associated to the PaymentProviderListItem of the Payment Provider Settings. |\r\n| PaymentProviderSettings[0].IsDeleted | Is the PaymentProviderSettings deleted. |\r\n| PaymentProviderSettings[0].Guid | The Guid of the Payment Provider Settings. |\r\n| CreditCards[0].Forename | The Forename of the credit card holder. | \r\n| CreditCards[0].Surname | The Surname of the credit card holder. | \r\n| CreditCards[0].Postcode | The Postcode associated to the credit card. | \r\n| CreditCards[0].Province | The Province associated to the credit card. | \r\n| CreditCards[0].DateCreated | The DateCreated associated to the credit card. | \r\n| CreditCards[0].MaskedCreditCardNumber | The MaskedCreditCardNumber associated to the credit card. | \r\n| CreditCards[0].Address1 | The Address1 associated to the credit card. | \r\n| CreditCards[0].City | The City associated to the credit card. | \r\n| CreditCards[0].RelatedContactGuid | The RelatedContactGuid associated to the credit card. | \r\n| CreditCards[0].Country | The Country associated to the credit card. | \r\n| CreditCards[0].CreditCardExpiryDate | The CreditCardExpiryDate associated to the credit card. | \r\n| CreditCards[0].Currency | The Currency associated to the credit card. | \r\n| CreditCards[0].ExternalVaultCardReference | The ExternalVaultCardReference associated to the credit card. | \r\n| CreditCards[0].ExternalVaultReference | The ExternalVaultReference associated to the credit card. | \r\n| CreditCards[0].IsACH | Is the payment an ACH payment. | \r\n| CreditCards[0].Deleted | Is the CreditCard deleted. |\r\n| CreditCards[0].IsRequestWithImmediateResponse | The IsRequestWithImmediateResponse associated to the credit card.  | \r\n| CreditCards[0].PayerReference | The payer reference associated to the credit card.  | \r\n| CreditCards[0].PaymentReference | The payment reference associated to the credit card.  | \r\n| CreditCards[0].PaymentPointListItem | The Guid and Description associated to the PaymentPointListItem to the credit card. | \r\n| CreditCards[0].PaymentProviderListItem | The Guid and Description associated to the PaymentProviderListItem to the credit card.  | \r\n| CreditCards[0].Guid | The Guid associated to the credit card.  | \r\n| RelatedBlobHashes\t\t\t| The array of related external documents to the account customer. |\r\n| RelatedBlobHashes[0].Hash\t| The hash of the external document blob to be used against the /blob endpoint. Files are provided as an octet stream which will need to be converted. |\r\n| RelatedReportBlobs\t\t\t\t\t\t\t\t\t\t\t| The array of related report documents to the account customer. |\r\n| RelatedReportBlobs[0].Guid\t\t\t\t\t\t\t\t\t| The Guid associated to the customer report. |\r\n| RelatedReportBlobs[0].Hash\t\t\t\t\t\t\t\t\t| The hash of the report document blob to be used against the /blob endpoint. Files are provided as an octet stream which will need to be converted. |\r\n| RelatedReportBlobs[0].DocumentDescription\t\t\t\t\t\t| The description associated to the customer report.\t\t\t\t\t\t\t|\r\n| RelatedReportBlobs[0].DocumentName\t\t\t\t\t\t\t| The document name associated to the customer report.\t\t\t\t\t\t\t|\r\n| RelatedReportBlobs[0].IsForAllSites\t\t\t\t\t\t\t| Whether the customer report is for all sites of related customer.\t\t\t\t|\r\n| RelatedReportBlobs[0].RelatedSites\t\t\t\t\t\t\t| The list of related customer report sites.\t\t\t\t\t\t\t\t\t|\r\n| RelatedReportBlobs[0].RelatedSites[0].Guid\t\t\t\t\t| The guid associated to the customer report site.\t\t\t\t\t\t\t\t|\r\n| RelatedReportBlobs[0].RelatedSites[0].RelatedSiteGuid\t\t\t| The related customer site\tguid associated to the customer report site.\t\t|\r\n| RelatedReportBlobs[0].RelatedExcludedSites\t\t\t\t\t| The list of excluded related customer report sites.\t\t\t\t\t\t\t|\r\n| RelatedReportBlobs[0].RelatedExcludedSites[0].Guid\t\t\t| The guid associated to the customer report site.\t\t\t\t\t\t\t\t|\r\n| RelatedReportBlobs[0].RelatedExcludedSites[0].RelatedSiteGuid\t| The related customer site\tguid associated to the customer report site.\t\t|\r\n| RelatedExternalVehicles\t\t\t\t\t\t\t\t\t\t| The array of related external vehicles associated to the account customer.\t|\r\n| RelatedExternalVehicles[0].RelatedExternalVehicleGuid\t\t\t| The related external vehicle\tguid associated to the account customer.\t    |\r\n| RelatedExternalVehicles[0].IsForAllMaterials\t                | Whether the related external vehicle is for all Materials.\t\t    \t    |\r\n| RelatedExternalVehicles[0].IsForAllSites\t                    | Whether the related external vehicle is for all Sites.\t\t\t\t\t\t|\r\n| RelatedExternalVehicles[0].ValidFrom\t                        | The valid from date of the related external vehicles in ISO format (YYYY-MM-DD).\t|\r\n| RelatedExternalVehicles[0].ValidTo\t                        | The valid to date of the related external vehicles in ISO format (YYYY-MM-DD).\t|\r\n| RelatedExternalVehicles[0].IsDeleted\t                        | Whether the related external vehicle is deleted.\t\t|\r\n| RelatedExternalVehicles[0].Guid\t                            | The Guid associated to the related external vehicle.\t|\r\n| CustomerBusinessType\t\t\t\t\t\t\t\t\t\t\t| The array of related customer business type associated to the account customer. \t|\r\n| CustomerBusinessType[0].Guid\t\t\t\t\t\t\t\t\t| The customer business type Guid associated to the account customer.\t|\r\n| CustomerBusinessType[0].BusinessTypeOptionListItem\t\t\t| The Guid and Description associated to the BusinessTypeOptionListItem to the customer business type.\t|\r\n| DefaultSicCodeListItem\t\t\t\t\t\t\t\t\t\t| The Guid and Description associated to the DefaultSicCodeListItem to the account customer.\t|","operationId":"AccountCustomer_GetCollection","consumes":["application/json"],"produces":["application/json"],"parameters":[{"name":"filter","in":"query","required":false,"type":"string"},{"name":"search","in":"query","required":false,"type":"string"},{"name":"order","in":"query","required":false,"type":"string"},{"name":"max","in":"query","required":false,"type":"integer","format":"int32"},{"name":"page","in":"query","required":false,"type":"integer","format":"int32"},{"name":"includeCount","in":"query","required":false,"type":"boolean"},{"name":"includeDeleted","in":"query","required":false,"type":"boolean"},{"name":"links","in":"query","required":false,"type":"string"},{"name":"udf","in":"query","required":false,"type":"string"}],"responses":{"200":{"description":"OK","schema":{"$ref":"#/definitions/ApiResourceResultCollection[ApiIntegratorAccountCustomerResource]"}}}},"post":{"tags":["AccountCustomer"],"summary":"Create or update","description":"| Property                  | Description                                                                | Required |\r\n| ------------------------- | -------------------------------------------------------------------------- | -------- |\r\n| GUID                      | The GUID associated to the customer.                                       | No |\r\n| Name                      | The customer's name.                                                       | No |\r\n| Reference                 | An alternative name used for the customer.                                 | No |\r\n| FederalId                 | The customer's local authority / government / tax reference.               | No |\r\n| IsInternal                | Whether the customer is an internal customer.                              | No |\r\n| ARAccountCode             | The account code used for accounts receivable.                             | No |\r\n| APAccountCode             | The account code used for accounts payable.                                | No |\r\n| Notes\t\t\t\t\t\t| Notes of customer.\t\t\t\t\t\t\t\t\t\t\t\t\t\t | No |\r\n| AMICENumber\t\t\t\t| AMICE Number of customer.\t\t\t\t\t\t\t\t\t\t\t\t\t | No |\r\n| CoCNumber\t\t\t\t\t| CoC Number of customer.\t\t\t\t\t\t\t\t\t\t\t\t\t | No |\r\n| HasRedLight               | Red light indicator passed to driver to indicate the mood of the end customer.| No |\r\n| CombineChargesRebates     | Rebate are included on the invoice, otherwise a separate bill is generated for rebates. | Yes |\r\n| ExternalVehicleValidation | The customer uses their own vehicles and the weighbridge will need to validate the vehicle registrations against a list held on the AMCS Platform. | No |\r\n| TicketsRequiredWithInvoice | Tickets are required with invoice.                                        | No |\r\n| RctCustomer               | In the Republic of Ireland the customer is a contractor liable for Relevent Contractors Tax. | No |\r\n| ProofOfServiceRequired    | Customers need to sign tickets.                      | No |\r\n| ExcludeFromStatementRun   | Excludes them from the batch statement run.          | No |\r\n| ReceiveServiceUpdatesByEmail   | Customer receives service updates by email.     | No |\r\n| ReceiveServiceUpdatesByText    | Customer receives service updates by text.      | No |\r\n| ReceiveMarketingUpdatesByEmail | Customer receives marketing updates by email.   | No |\r\n| ReceiveMarketingUpdatesByText  | Customer receives marketing updates by text.    | No |\r\n| CompanyListItem               | The GUID and name of the company this customer is associated to.           | Yes |\r\n| CustomerStateListItem         | The GUID and status of the customer (eg. Active, Suspended, etc.).         | No |\r\n| CustomerCategoryListItem      | The GUID and category of the customer (various values).                    | No |\r\n| CustomerGroupListItem         | The GUID and group of the customer (various values).                       | No |\r\n| VisitStatusListItem\t        | The GUID and description of the visit status of the customer\t\t\t\t | No |\r\n| CurrencyListItem              | The GUID and currency of the customer (various values).                    | Yes |\r\n| CustomerTemplateListItem\t\t| The GUID and customer template of the customer (various values).           | No |\r\n| BusinessTypeListItem          | The GUID and business type of the customer (various values).               | No |\r\n| AutoArAccountCode\t\t\t| The object allowing for creation of an ArAccountCode, depending on system configuration. | No |\r\n| AutoArAccountCode.CompanyOutletGUID | The GUID of the company outlet used for creation of an ArAccountCode, depending on system configuration. | No |\r\n| RelatedUserSalesRepGuid   | The GUID of the related sales rep.                                         | No |\r\n| RelatedUserCreditControllerGuid | The GUID of the related credit controller.                           | No |\r\n| RelatedMasterAccountGuid  | The GUID of the related master account.                                    | No |\r\n| RelatedBillToCustomerGuid | The GUID of the related customer where the bills must be send to.          | No |   \r\n| RelatedLocationHQGuid\t\t| The GUID associated to the HQ location of the customer.\t\t\t\t\t | No |   \r\n| BankDetails\t\t\t\t| The object where bank details are specified.\t\t\t        \t\t     | No |\r\n| BankDetails.BankName      | The bank name of the direct debit.                                         | Yes |\r\n| BankDetails.AccountName   | The account name of the direct debit.\t\t\t                             | Yes |\r\n| BankDetails.AccountNo     | The account number of the direct debit.\t\t\t\t\t                 | Yes |\r\n| BankDetails.SortCode      | The sort code of the direct debit.\t\t\t\t\t\t\t\t\t     | Yes |\r\n| BankDetails.BIC           | The Bank Identifier Code of the direct debit.\t    \t\t\t\t\t     | No |\r\n| BankDetails.IBAN          | The International Bank Account Number of the direct debit.\t\t\t     | No |\r\n| BankDetails.NationalBankCode | The National Bank Code of the direct debit.\t\t\t\t\t\t\t | No |\r\n| BankDetails.DirectDebitRunConfigListItem | The GUID and description of the direct debit run configuration  | No |\r\n| BankDetails.DirectDebitAccountTypeListItem | The GUID and description of the direct debit account type. | Yes |\r\n| BankDetails.Address       | The object where bank address details are specified.\t\t\t\t\t     | No |\r\n| BankDetails.Address.Address1 | The Address1 of the bank.\t\t\t\t\t\t\t\t\t\t\t     | No |\r\n| BankDetails.Address.Address2 | The Address2 of the bank.\t\t\t\t\t\t\t\t\t\t\t     | No |\r\n| BankDetails.Address.Address3 | The Address3 of the bank.\t\t\t\t\t\t\t\t\t\t\t     | No |\r\n| BankDetails.Address.Address4 | The Address4 of the bank.\t\t\t\t\t\t\t\t\t\t\t     | No |\r\n| BankDetails.Address.Address5 | The Address5 of the bank.\t\t\t\t\t\t\t\t\t\t\t     | No |\r\n| BankDetails.Address.Postcode | The Postcode of the bank.\t\t\t\t\t\t\t\t\t\t\t     | No |\r\n| Contract\t\t\t\t\t| The object allowing for creation of the contract.   \t\t\t\t\t     | Yes |\r\n| Contract.StartDate                 | The start date of the contract in ISO format (YYYY-MM-DD).        | No |\r\n| Contract.ApprovedDate              | The approved date of the contract in ISO format (YYYY-MM-DD).\t | No |\r\n| Contract.CreditLimit               | The maximum credit limit stipulated on this contract.             | No |\r\n| Contract.BalanceMigrated           | The balance which has been migrated.                              | No |\r\n| Contract.InvoiceCycleId            | The Id of the invoice cycle this contract will be invoice under (there may be cycles done monthly, daily, weekly, etc.) | Yes |\r\n| Contract.VATExemptNumber           | If the contract is exempt from VAT, this is the associated confirmation number. | No |\r\n| Contract.VATExemptionExpiryDate    | If the contract is exempt from VAT this is date this status is no longer valid in ISO format (YYYY-MM-DD). | No |\r\n| Contract.VATRegistrationNumber     | If the contract is registered with VAT, this is the relevant number. | No |\r\n| Contract.RollUpInvoiceBySite\t\t | Whether the roll up of invoice are done by site.    | No |\r\n| Contract.RollUpInvoiceByService    | Whether the roll up of invoice are done by service.    | No |\r\n| Contract.IsInvoiceCollated\t\t | Whether the invoice are collated.\t\t\t\t\t\t\t\t| Yes |\r\n| Contract.DepartmentListItem            | The GUID and name of the department this contract is associated to.  | Yes |\r\n| Contract.ContractStatusListItem        | The GUID and status of the contract (eg. Approved, Pending, Un-Approved). | Yes |\r\n| Contract.PaymentTypeListItem           | The GUID and description of how payments for invoices under the contract will be paid (eg. Cash, Credit Card, etc.). | Yes |\r\n| Contract.PaymentTermListItem           | The GUID and description of the payment terms invoices under the contract are to the paid to (eg. Immediately, 30 Days Net, etc.). | Yes |\r\n| Contract.InvoiceFrequencyTermListItem  | The GUID and description of the invoice frequency term (eg. Quarterly, Immediate, etc.). | Yes |\r\n| Contract.InvoiceDocumentDeliveryMethods[]\t\t\t\t\t\t\t| The array of document delivery types associated to the Contract.\t\t\t\t\t\t\t\t| No |\r\n| Contract.InvoiceDocumentDeliveryMethods[0].DocumentDeliveryType\t| The GUID and description of the document delivery type associated to the InvoiceDocumentDeliveryMethods. | No |\r\n| Balance\t\t\t\t\t| The object which allows creation of Customer Balance\t\t\t\t\t\t| No |\r\n| Balance.OutstandingAmount | The outstanding amount on the customers account\t\t\t\t\t\t\t| Yes |\r\n| Balance.UnallocatedAmount | The Unallocated amount on the customers account\t\t\t\t\t\t\t| Yes |\r\n| Balance.UnconfirmedBalance | The Unconfirmed Balance amount on the customers account\t\t\t\t\t| Yes |\r\n| Balance.LedgerBalance | The Ledger Balance on the customers account\t\t\t\t\t\t\t\t\t| Yes |\r\n| TradingNames.Guid | The TradingNames Guid on the customers account.\t\t\t\t\t\t\t\t    | No  |\r\n| TradingNames.Description | The TradingNames Description on the customers account.\t\t\t\t\t\t| Yes | \r\n| TradingNames.TradingNameTypeListItem | The Guid and Description of the TradingNameTypeListItem associated to the TradingNames on the customers account. | Yes |\r\n| TradingNames.IsDeleted | Is the TradingName Deleted. | Yes | \r\n| TradingNames.IsForAllSites | IsForAllSites set for the TradingNames. | Yes | \r\n| TradingNameGuidFilter | Filter by the Guid of the Trading Name. | No |\r\n| TradingNameFilter | Filter by the Trading Name. | No |\r\n| PaymentProviderSettings[0].Name | The Name of the Payment Provider Settings. | Yes |\r\n| PaymentProviderSettings[0].Value | The Value of the Payment Provider Settings. | No |\r\n| PaymentProviderSettings[0].PaymentProviderListItem | The Guid and Description associated to the PaymentProviderListItem of the Payment Provider Settings. | Yes |\r\n| PaymentProviderSettings[0].IsDeleted | Is the PaymentProviderSettings deleted. | No |\r\n| PaymentProviderSettings[0].Guid | The Guid of the Payment Provider Settings. | No |\r\n| CreditCards[0].Forename | The Forename of the credit card holder. | No |\r\n| CreditCards[0].Surname | The Surname of the credit card holder. | No | \r\n| CreditCards[0].Postcode | The Postcode associated to the credit card. | No |\r\n| CreditCards[0].Province | The Province associated to the credit card. | No |\r\n| CreditCards[0].DateCreated | The DateCreated associated to the credit card. | Yes |\r\n| CreditCards[0].MaskedCreditCardNumber | The MaskedCreditCardNumber associated to the credit card. | Yes |\r\n| CreditCards[0].Address1 | The Address1 associated to the credit card. | No |\r\n| CreditCards[0].City | The City associated to the credit card. | No |\r\n| CreditCards[0].RelatedContactGuid | The RelatedContactGuid associated to the credit card. | No |\r\n| CreditCards[0].Country | The Country associated to the credit card. | No |\r\n| CreditCards[0].CreditCardExpiryDate | The CreditCardExpiryDate associated to the credit card. | No |\r\n| CreditCards[0].Currency | The Currency associated to the credit card. | No |\r\n| CreditCards[0].ExternalVaultCardReference | The ExternalVaultCardReference associated to the credit card. | No |\r\n| CreditCards[0].ExternalVaultReference | The ExternalVaultReference associated to the credit card. | No |\r\n| CreditCards[0].IsACH | Is the payment an ACH payment. | No |\r\n| CreditCards[0].Deleted | Is the CreditCard deleted. | No |\r\n| CreditCards[0].IsRequestWithImmediateResponse | The IsRequestWithImmediateResponse associated to the credit card.  | No |\r\n| CreditCards[0].PayerReference | The payer reference associated to the credit card.  | No |\r\n| CreditCards[0].PaymentReference | The payment reference associated to the credit card.  | No |\r\n| CreditCards[0].PaymentPointListItem | The Guid and Description associated to the PaymentPointListItem to the credit card. | No |\r\n| CreditCards[0].PaymentProviderListItem | The Guid and Description associated to the PaymentProviderListItem to the credit card.  | No |\r\n| CreditCards[0].Guid | The Guid associated to the credit card.  | No |\r\n| RelatedBlobHashes\t\t\t| The array of related external documents to the account customer. | No |\r\n| RelatedBlobHashes[0].Hash\t| The hash of the external document blob to be used against the /blob endpoint. Files are provided as an octet stream which will need to be converted. | No |\r\n| RelatedReportBlobs\t\t\t\t\t\t\t\t\t\t\t| The array of related report documents to the account customer. | No |\r\n| RelatedReportBlobs[0].Guid\t\t\t\t\t\t\t\t\t| The Guid associated to the customer report.\t\t\t\t\t\t\t\t\t| Yes |\r\n| RelatedReportBlobs[0].Hash\t\t\t\t\t\t\t\t\t| The hash of the report document blob to be used against the /blob endpoint. Files are provided as an octet stream which will need to be converted. | No |\r\n| RelatedReportBlobs[0].DocumentDescription\t\t\t\t\t\t| The description associated to the customer report.\t\t\t\t\t\t\t| No |\r\n| RelatedReportBlobs[0].DocumentName\t\t\t\t\t\t\t| The document name associated to the customer report.\t\t\t\t\t\t\t| No |\r\n| RelatedReportBlobs[0].IsForAllSites\t\t\t\t\t\t\t| Whether the customer report is for all sites of related customer.\t\t\t\t| No |\r\n| RelatedReportBlobs[0].RelatedSites\t\t\t\t\t\t\t| The list of related customer report sites.\t\t\t\t\t\t\t\t\t| No |\r\n| RelatedReportBlobs[0].RelatedSites[0].Guid\t\t\t\t\t| The guid associated to the customer report site.\t\t\t\t\t\t\t\t| No |\r\n| RelatedReportBlobs[0].RelatedSites[0].RelatedSiteGuid\t\t\t| The related customer site\tguid associated to the customer report site.\t\t| No |\r\n| RelatedReportBlobs[0].RelatedExcludedSites\t\t\t\t\t| The list of excluded related customer report sites.\t\t\t\t\t\t\t| No |\r\n| RelatedReportBlobs[0].RelatedExcludedSites[0].Guid\t\t\t| The guid associated to the customer report site.\t\t\t\t\t\t\t\t| No |\r\n| RelatedReportBlobs[0].RelatedExcludedSites[0].RelatedSiteGuid\t| The related customer site\tguid associated to the customer report site.\t\t| No |\r\n| RelatedExternalVehicles\t\t\t\t\t\t\t\t\t\t| The array of related external vehicles associated to the account customer.\t| No |\r\n| RelatedExternalVehicles[0].RelatedExternalVehicleGuid\t\t\t| The related external vehicle\tguid associated to the account customer.\t    | Yes |\r\n| RelatedExternalVehicles[0].IsForAllMaterials\t                | Whether the related external vehicle is for all Materials.\t\t    \t    | Yes |\r\n| RelatedExternalVehicles[0].IsForAllSites\t                    | Whether the related external vehicle is for all Sites.\t\t\t\t\t\t| Yes |\r\n| RelatedExternalVehicles[0].ValidFrom\t                        | The valid from date of the related external vehicles in ISO format (YYYY-MM-DD).\t| Yes |\r\n| RelatedExternalVehicles[0].ValidTo\t                        | The valid to date of the related external vehicles in ISO format (YYYY-MM-DD).\t| Yes |\r\n| RelatedExternalVehicles[0].IsDeleted\t                        | Whether the related external vehicle is deleted.\t\t\t\t\t\t\t\t\t| Yes |\r\n| RelatedExternalVehicles[0].Guid\t                            | The Guid associated to the related external vehicle.\t\t\t\t\t\t\t\t| Yes |\r\n| CustomerBusinessType\t\t\t\t\t\t\t\t\t\t\t| The array of related customer business type associated to the account customer.\t| No |\r\n| CustomerBusinessType[0].Guid\t\t\t\t\t\t\t\t\t| The customer business type Guid associated to the account customer.\t\t\t\t| No |\r\n| CustomerBusinessType[0].BusinessTypeOptionListItem\t\t\t| The Guid and Description associated to the BusinessTypeOptionListItem to the customer business type.\t\t| No |\r\n| DefaultSicCodeListItem\t\t\t\t\t\t\t\t\t\t| The Guid and Description associated to the DefaultSicCodeListItem to the account customer.\t\t\t\t| No |\r\n\r\n\r\n## Extra validations\r\n\r\n| Condition | Error message |\r\n| --------- | ------------- |\r\n| autoGenerateAccountNumbers and Update and (ARAccountCode is null or AutoArAccountCode is not null) | ARAccountCode should not be null and AutoArAccountCode should be null |\r\n| autoGenerateAccountNumbers and (ARAccountCode is not null or AutoArAccountCode is null) | AutoArAccountCode should not be null and ARAccountCode should be null |\r\n| autoGenerateAccountNumbers is No and (ARAccountCode is null or AutoArAccountCode is not null) | ARAccountCode should not be null and AutoArAccountCode should be null |\r\n| Update and ARAccountCode not equal to saved ARAccountCode | ARAccountCode is a read-only property |\r\n| Update and AutoArAccountCode not equal to saved AutoArAccountCode | A value for AutoARAccountCode has been included as part of an update. Could not update the resource. Only include a value for AutoARAccountCode when an AR Account code is to be system generated as part of creating a customer.|\r\n| CompanyOutlet not found with value AutoArAccountCode.CompanyOutletGuid | Failed to retrieve CompanyOutlet with AutoArAccountCode.CompanyOutletGuid of {value of AutoArAccountCode.CompanyOutletGUID} |\r\n| MasterAccount not found with value RelatedMasterAccountGuid | Failed to retrieve MasterAccount with RelatedMasterAccountGuid of {value of RelatedMasterAccountGuid} |\r\n| Customer not found with value RelatedBillToCustomerGuid | Failed to retrieve Customer with RelatedBillToCustomerGuid of {value of RelatedBillToCustomerGuid} |\r\n| SysUser not found with value RelatedUserSalesRepGuid | Failed to retrieve SysUser with RelatedUserSalesRepGuid of {value of RelatedUserSalesRepGuid} |\r\n| SysUser not found with value RelatedUserCreditControllerGuid | Failed to retrieve SysUser with RelatedUserCreditControllerGuid of {value of RelatedUserCreditControllerGuid} |\r\n| ARAccountCode is not unique | Failed to save. Entity already exists with arAccountCode of {value of ARAccountCode} |\r\n| Provide TradingNames.Guid which is not linked to the customer | Failed to save/update AccountCustomer because Trading name with Guid {guid} is not linked to the customer. Could not update the customer. Ensure that the trading names listed in The TradingNames array are those for the customer. |\r\n| Duplicate TradingNames Description in the trading names array for the customer | Failed to save. Entity already exists with TradingNames.Description of {Description} |\r\n| RelatedBlobHashes[0].Hash is not null for Insert | Failed to save/update AccountCustomer because RelatedBlobHashes creation is not permitted |\r\n| RelatedBlobHashes[0].Hash is not null for Update and the Customer did not have RelatedBlobHashes initially | Failed to save/update AccountCustomer because RelatedBlobHashes do not exist for the Customer. |\r\n| RelatedBlobHashes[0].Hash is not null for Update and Invalid Hash | Failed to retrieve CustomerExternalDocument with MediaContentHash of {value of Hash} |\r\n| RelatedReportBlobs is not empty for Insert | Failed to save/update AccountCustomer because RelatedReportBlobs creation is not permitted |\r\n| RelatedReportBlobs is not empty for Update and the Customer did not have RelatedReportBlobs initially | Failed to save/update AccountCustomer because RelatedReportBlobs do not exist for the Customer. |\r\n| RelatedReportBlobs[0].Guid is invalid | Failed to retrieve PortalReport with RelatedReportBlobs.Guid of {RelatedReportBlobs.Guid} |\r\n| RelatedReportBlobs[0].Guid is changed | Failed to save. AccountCustomer with RelatedReportBlobs.Guid cannot be set if CustomerReport is not linked to AccountCustomer |\r\n| RelatedReportBlobs[0].Hash is changed | RelatedReportBlobs.Hash is a read-only property |\r\n| RelatedReportBlobs[0].DocumentDescription is changed | RelatedReportBlobs.DocumentDescription is a read-only property |\r\n| RelatedReportBlobs[0].IsForAllSites is changed | RelatedReportBlobs.IsForAllSites is a read-only property |\r\n| RelatedReportBlobs[0].RelatedSites is changed | RelatedReportBlobs.RelatedSites is a read-only property |\r\n| RelatedReportBlobs[0].RelatedSites.Guid is changed | RelatedReportBlobs.RelatedSites.Guid is a read-only property |\r\n| RelatedReportBlobs[0].RelatedSites.RelatedSiteGuid is changed | RelatedReportBlobs.RelatedSites.RelatedSiteGuid is a read-only property |\r\n| RelatedReportBlobs[0].RelatedExcludedSites is changed | RelatedReportBlobs.RelatedExcludedSites is a read-only property |\r\n| RelatedReportBlobs[0].RelatedExcludedSites.Guid is changed | RelatedReportBlobs.RelatedExcludedSites.Guid is a read-only property |\r\n| RelatedReportBlobs[0].RelatedExcludedSites.RelatedSiteGuid is changed | RelatedReportBlobs.RelatedExcludedSites.RelatedSiteGuid is a read-only property |\r\n| CustomerTemplateListItem.Guid is deleted | The provided CustomerTemplateListItem is deleted. Could not update the resource. Please check the relevant list end point for the available options. |\r\n| BusinessTypeListItem.Guid is not active | The provided BusinessTypeListItem is not active. Could not update the resource. Please check the relevant list end point for the available options. |\r\n| InvoiceDocumentDeliveryMethods[0].DocumentDeliveryType.Guid is not active | The provided DocumentDeliveryType is not active. Could not update the resource. Please check the relevant list end point for the available options. |\r\n| PaymentProviderSettings[0].Guid is provided for new account customer | Attempting to update payment provider settings when creating a customer. Could not process the request. Provide payment provider setting with out a Guid property to create new settings rather than attempting an update. |\r\n| PaymentProviderSettings[0].IsDeleted is true | IsDeleted is TRUE. Could not process the request. Resources can not be deleted via the REST API. |\r\n| CreditCards[0].Guid is not null on insert | Attempting to update credit card settings when creating the customer. Could not process the request. Provide credit card setting without a Guid property to create new settings rather than attempting an update. |\r\n| CreditCards[0].IsDeleted is true | IsDeleted is TRUE. Could not process the request. Resources can not be deleted via the REST API. |\r\n| If the value for CreditCards.IsDeleted is changed on update | CreditCards.IsDeleted is a read-only property |\r\n| If the value for any {property} is changed on update for a deleted CreditCard | Attempt to update the {property} of a CreditCard that is deleted. Could not process the request |\r\n","operationId":"AccountCustomer_Create","consumes":["application/json"],"produces":["application/json"],"parameters":[{"in":"body","required":true,"schema":{"$ref":"#/definitions/ApiIntegratorAccountCustomerResource"}}],"responses":{"200":{"description":"OK","schema":{"$ref":"#/definitions/ApiResourceId"}}}}},"/lists/accountingPeriods/changes":{"get":{"tags":["AccountingPeriod"],"summary":"Retrieve changes","description":"| Property                  | Description                                                              |\r\n| ------------------------- | ------------------------------------------------------------------------ |\r\n| GUID                      | The GUID associated to the accounting period                             |\r\n| Description               | The description of the accounting period                                 |\r\n| Code                      | The code of the accounting period                                        |\r\n| IsClosed\t\t\t\t\t| Whether the accounting period is closed\t\t\t\t\t\t\t\t   |\r\n| StartDate                 | The Start Date associated to the accounting period                       |\r\n| EndDate                   | The End Date associated to the accounting period                         |","operationId":"AccountingPeriod_GetChanges","consumes":["application/json"],"produces":["application/json"],"parameters":[{"name":"since","in":"query","required":false,"type":"string"},{"name":"cursor","in":"query","required":false,"type":"string"},{"name":"links","in":"query","required":false,"type":"string"}],"responses":{"200":{"description":"OK","schema":{"$ref":"#/definitions/ApiResourceChanges[ApiIntegratorAccountingPeriodResource]"}}}}},"/lists/accountingPeriods/{guid}":{"get":{"tags":["AccountingPeriod"],"summary":"Find with GUID","description":"| Property                  | Description                                                              |\r\n| ------------------------- | ------------------------------------------------------------------------ |\r\n| GUID                      | The GUID associated to the accounting period                             |\r\n| Description               | The description of the accounting period                                 |\r\n| Code                      | The code of the accounting period                                        |\r\n| IsClosed\t\t\t\t\t| Whether the accounting period is closed\t\t\t\t\t\t\t\t   |\r\n| StartDate                 | The Start Date associated to the accounting period                       |\r\n| EndDate                   | The End Date associated to the accounting period                         |","operationId":"AccountingPeriod_Get","consumes":["application/json"],"produces":["application/json"],"parameters":[{"name":"guid","in":"path","required":true,"type":"string","format":"uuid"},{"name":"links","in":"query","required":false,"type":"string"},{"name":"include","in":"query","required":false,"type":"string"},{"name":"expand","in":"query","required":false,"type":"string"},{"name":"udf","in":"query","required":false,"type":"string"}],"responses":{"200":{"description":"OK","schema":{"$ref":"#/definitions/ApiResourceResultEntity[ApiIntegratorAccountingPeriodResource]"}}}}},"/lists/accountingPeriods":{"get":{"tags":["AccountingPeriod"],"summary":"Find with Filters","description":"| Property                  | Description                                                              |\r\n| ------------------------- | ------------------------------------------------------------------------ |\r\n| GUID                      | The GUID associated to the accounting period                             |\r\n| Description               | The description of the accounting period                                 |\r\n| Code                      | The code of the accounting period                                        |\r\n| IsClosed\t\t\t\t\t| Whether the accounting period is closed\t\t\t\t\t\t\t\t   |\r\n| StartDate                 | The Start Date associated to the accounting period                       |\r\n| EndDate                   | The End Date associated to the accounting period                         |","operationId":"AccountingPeriod_GetCollection","consumes":["application/json"],"produces":["application/json"],"parameters":[{"name":"filter","in":"query","required":false,"type":"string"},{"name":"search","in":"query","required":false,"type":"string"},{"name":"order","in":"query","required":false,"type":"string"},{"name":"max","in":"query","required":false,"type":"integer","format":"int32"},{"name":"page","in":"query","required":false,"type":"integer","format":"int32"},{"name":"includeCount","in":"query","required":false,"type":"boolean"},{"name":"includeDeleted","in":"query","required":false,"type":"boolean"},{"name":"links","in":"query","required":false,"type":"string"},{"name":"udf","in":"query","required":false,"type":"string"}],"responses":{"200":{"description":"OK","schema":{"$ref":"#/definitions/ApiResourceResultCollection[ApiIntegratorAccountingPeriodResource]"}}}}},"/mirror/imm/accountingPeriodInventoryBatches":{"post":{"tags":["AccountingPeriodInventoryBatch"],"operationId":"AccountingPeriodInventoryBatch_Create","consumes":["application/json"],"produces":["application/json"],"parameters":[{"in":"body","required":true,"schema":{"$ref":"#/definitions/ApiResourceId"}}],"responses":{"200":{"description":"OK","schema":{"$ref":"#/definitions/ApiResourceId"}}}}},"/mirror/imm/accountingPeriodInventoryBatches/{id}":{"put":{"tags":["AccountingPeriodInventoryBatch"],"operationId":"AccountingPeriodInventoryBatch_Update","consumes":["application/json"],"produces":["application/json"],"parameters":[{"name":"id","in":"path","required":true,"type":"string","format":"uuid"},{"in":"body","required":true,"schema":{"$ref":"#/definitions/ApiResourceId"}}],"responses":{"200":{"description":"OK","schema":{"$ref":"#/definitions/ApiResourceId"}}}}},"/lists/actions/{guid}":{"get":{"tags":["Action"],"summary":"Find with GUID","description":"| Property                  | Description                                                              |\r\n| ------------------------- | ------------------------------------------------------------------------ |\r\n| GUID                      | The GUID associated to the action\t\t\t\t\t                       |\r\n| Description               | The description of the action\t\t\t\t\t\t\t\t               |\r\n| AnalysisCode              | The analysis code of the action\t\t\t\t\t\t\t\t\t       |\r\n| IsDeleted                 | Whether the action is deleted\t            \t \t\t          \t       |\r\n| ShortAction               | The short code of the action                                             |\r\n| EquivalentHaul            | The equivalent haul of the action                                        |\r\n| ActionTypes\t\t\t\t| The array of ActionType properties associated to the action\t\t\t   |\r\n| ActionTypes[0].Guid\t    | The GUID associated to the ActionTypeAction\t\t\t\t\t\t\t   |\r\n| ActionTypes[0].ActionTypeListItem\t    | The GUID and description of the ActionType\t\t\t\t   |\r\n\r\n","operationId":"Action_Get","consumes":["application/json"],"produces":["application/json"],"parameters":[{"name":"guid","in":"path","required":true,"type":"string","format":"uuid"},{"name":"links","in":"query","required":false,"type":"string"},{"name":"include","in":"query","required":false,"type":"string"},{"name":"expand","in":"query","required":false,"type":"string"},{"name":"udf","in":"query","required":false,"type":"string"}],"responses":{"200":{"description":"OK","schema":{"$ref":"#/definitions/ApiResourceResultEntity[ApiIntegratorActionResource]"}}}}},"/lists/actions":{"get":{"tags":["Action"],"summary":"Find with Filters","description":"| Property                  | Description                                                              |\r\n| ------------------------- | ------------------------------------------------------------------------ |\r\n| GUID                      | The GUID associated to the action\t\t\t\t\t                       |\r\n| Description               | The description of the action\t\t\t\t\t\t\t\t               |\r\n| AnalysisCode              | The analysis code of the action\t\t\t\t\t\t\t\t\t       |\r\n| IsDeleted                 | Whether the action is deleted\t            \t \t\t          \t       |\r\n| ShortAction               | The short code of the action                                             |\r\n| EquivalentHaul            | The equivalent haul of the action                                        |\r\n| ActionTypes\t\t\t\t| The array of ActionType properties associated to the action\t\t\t   |\r\n| ActionTypes[0].Guid\t    | The GUID associated to the ActionTypeAction\t\t\t\t\t\t\t   |\r\n| ActionTypes[0].ActionTypeListItem\t    | The GUID and description of the ActionType\t\t\t\t   |\r\n\r\n","operationId":"Action_GetCollection","consumes":["application/json"],"produces":["application/json"],"parameters":[{"name":"filter","in":"query","required":false,"type":"string"},{"name":"search","in":"query","required":false,"type":"string"},{"name":"order","in":"query","required":false,"type":"string"},{"name":"max","in":"query","required":false,"type":"integer","format":"int32"},{"name":"page","in":"query","required":false,"type":"integer","format":"int32"},{"name":"includeCount","in":"query","required":false,"type":"boolean"},{"name":"includeDeleted","in":"query","required":false,"type":"boolean"},{"name":"links","in":"query","required":false,"type":"string"},{"name":"udf","in":"query","required":false,"type":"string"}],"responses":{"200":{"description":"OK","schema":{"$ref":"#/definitions/ApiResourceResultCollection[ApiIntegratorActionResource]"}}}}},"/lists/actionTypes/{guid}":{"get":{"tags":["ActionType"],"summary":"Find with GUID","description":"| Property                  | Description                                                              |\r\n| ------------------------- | ------------------------------------------------------------------------ |\r\n| GUID                      | The GUID associated to the actionType\t\t\t\t\t                   |\r\n| Description               | The description of the actionType\t\t\t\t\t\t\t\t           |\r\n","operationId":"ActionType_Get","consumes":["application/json"],"produces":["application/json"],"parameters":[{"name":"guid","in":"path","required":true,"type":"string","format":"uuid"},{"name":"links","in":"query","required":false,"type":"string"},{"name":"include","in":"query","required":false,"type":"string"},{"name":"expand","in":"query","required":false,"type":"string"},{"name":"udf","in":"query","required":false,"type":"string"}],"responses":{"200":{"description":"OK","schema":{"$ref":"#/definitions/ApiResourceResultEntity[ApiIntegratorActionTypeResource]"}}}}},"/lists/actionTypes":{"get":{"tags":["ActionType"],"summary":"Find with Filters","description":"| Property                  | Description                                                              |\r\n| ------------------------- | ------------------------------------------------------------------------ |\r\n| GUID                      | The GUID associated to the actionType\t\t\t\t\t                   |\r\n| Description               | The description of the actionType\t\t\t\t\t\t\t\t           |\r\n","operationId":"ActionType_GetCollection","consumes":["application/json"],"produces":["application/json"],"parameters":[{"name":"filter","in":"query","required":false,"type":"string"},{"name":"search","in":"query","required":false,"type":"string"},{"name":"order","in":"query","required":false,"type":"string"},{"name":"max","in":"query","required":false,"type":"integer","format":"int32"},{"name":"page","in":"query","required":false,"type":"integer","format":"int32"},{"name":"includeCount","in":"query","required":false,"type":"boolean"},{"name":"includeDeleted","in":"query","required":false,"type":"boolean"},{"name":"links","in":"query","required":false,"type":"string"},{"name":"udf","in":"query","required":false,"type":"string"}],"responses":{"200":{"description":"OK","schema":{"$ref":"#/definitions/ApiResourceResultCollection[ApiIntegratorActionTypeResource]"}}}}},"/purchasing/appliedCosts/changes":{"get":{"tags":["AppliedCost"],"summary":"Retrieve changes","description":"| Property                  | Description                                                              |\r\n| ------------------------- | ------------------------------------------------------------------------ |\r\n| GUID                      | The GUID associated to the applied cost.                                 |\r\n| RelatedSupplierSiteGuid   | The GUID associated to the supplier site of the applied cost.            |\r\n| RelatedOrderGuid\t\t\t| The GUID associated to the order of the applied cost.\t\t               |\r\n| RelatedSupplierBillGuid                          | The GUID of the supplier bill of the applied cost.|\r\n| RelatedApplicationJobGuid                        | The GUID of the job this applied cost is applied to.                            |\r\n| RelatedApplicationRouteVisitGuid                 | The GUID of the route visit this applied cost is applied to.                    |\r\n| RelatedApplicationRouteGuid                      | The GUID of the route this applied cost is applied to.                          |\r\n| RelatedApplicationCostAgreementRouteCostGuid     | The GUID of the cost agreement route cost this applied cost is applied to.      |\r\n| RelatedApplicationRentalActionGuid               | The GUID of the rental action this applied cost is applied to.                  |\r\n| RelatedApplicationRentTermGuid                   | The GUID of the rent term this applied cost is applied to.                      |\r\n| RelatedApplicationWeighingInGuid                 | The GUID of the weighing in this applied cost is applied to.                    |\r\n| RelatedApplicationWeighingOutGuid                | The GUID of the weighing out this applied cost is applied to.                   |\r\n| RelatedApplicationRouteVisitJobGuid              | The GUID of the route visit job this applied cost is applied to.                |\r\n| RelatedApplicationOneOffActionGuid               | The GUID of the one off action this applied cost is applied to.                 |\r\n| RelatedApplicationJobDetailGuid                  | The GUID of the job detail this applied cost is applied to.                     |\r\n| RelatedApplicationVehicleFuelEventGuid           | The GUID of the vehicle fuel event this applied cost is applied to.             |\r\n| RelatedApplicationOneOffCostActionGuid           | The GUID of the one off cost action this applied cost is applied to.            |\r\n| RelatedApplicationRouteVisitMissedCollectionGuid | The GUID of the route visit missed collection this applied cost is applied to.  |\r\n| RelatedApplicationDamageContainerIncidentCostGuid | The GUID of the damage container incident cost is applied to.\t\t\t\t\t |\r\n| RelatedApplicationRouteProRataCollectionCostGuid | The GUID of the route pro rata collection cost this applied cost is applied to. |\r\n| RelatedApplicationInternalPurchaseOrderCostGuid  | The GUID of the internal purchase order cost this applied cost is applied to.   |\r\n| RelatedCostAgreementCostGuid\t\t     \t\t   | The GUID associated to the cost of the applied cost.\t\t\t\t\t\t\t |\r\n| ActionListItem\t\t\t  | The GUID and description of the action of the applied cost.\t\t       |\r\n| ServiceListItem\t\t\t  | The GUID and description of the service of the applied cost. \t       |\r\n| PricingBasisListItem\t\t  | The GUID and description of the pricing basis of the applied cost.     |\r\n| ContainerListItem  \t\t  | The GUID and description of the container of the applied cost.         |\r\n| Rate\t\t\t\t\t      | The rate of the applied cost.\t\t\t\t\t                       |\r\n| CostExVat\t\t\t    \t  | The cost excluding VAT of the applied cost. \t\t\t               |\r\n| CostIncVat\t\t\t      | The cost including VAT of the applied cost. \t\t\t               |\r\n| CostDate      \t\t      | The cost date of the applied cost in ISO format (YYYY-MM-DD).          |\r\n| IsAdjustment\t\t    \t  | Is this applied cost an adjustment? \t\t\t                       |\r\n| IsApproved\t\t\t      | Is this applied cost approved? \t\t\t                               |\r\n| IsDisputed\t\t\t      | Is this applied cost disputed? \t\t\t                               |\r\n| IsSupplierBillConfirmed     | Is the supplier bill of this applied cost confirmed?                   |\r\n| FilterAccountingPeriodListItem\t\t\t\t| Used to filter on the accounting period list item GUID.\t\t\t\t\t\t|","operationId":"AppliedCost_GetChanges","consumes":["application/json"],"produces":["application/json"],"parameters":[{"name":"since","in":"query","required":false,"type":"string"},{"name":"cursor","in":"query","required":false,"type":"string"},{"name":"links","in":"query","required":false,"type":"string"}],"responses":{"200":{"description":"OK","schema":{"$ref":"#/definitions/ApiResourceChanges[ApiIntegratorAppliedCostResource]"}}}}},"/purchasing/appliedCosts/{guid}":{"get":{"tags":["AppliedCost"],"summary":"Find with GUID","description":"| Property                  | Description                                                              |\r\n| ------------------------- | ------------------------------------------------------------------------ |\r\n| GUID                      | The GUID associated to the applied cost.                                 |\r\n| RelatedSupplierSiteGuid   | The GUID associated to the supplier site of the applied cost.            |\r\n| RelatedOrderGuid\t\t\t| The GUID associated to the order of the applied cost.\t\t               |\r\n| RelatedSupplierBillGuid                          | The GUID of the supplier bill of the applied cost.|\r\n| RelatedApplicationJobGuid                        | The GUID of the job this applied cost is applied to.                            |\r\n| RelatedApplicationRouteVisitGuid                 | The GUID of the route visit this applied cost is applied to.                    |\r\n| RelatedApplicationRouteGuid                      | The GUID of the route this applied cost is applied to.                          |\r\n| RelatedApplicationCostAgreementRouteCostGuid     | The GUID of the cost agreement route cost this applied cost is applied to.      |\r\n| RelatedApplicationRentalActionGuid               | The GUID of the rental action this applied cost is applied to.                  |\r\n| RelatedApplicationRentTermGuid                   | The GUID of the rent term this applied cost is applied to.                      |\r\n| RelatedApplicationWeighingInGuid                 | The GUID of the weighing in this applied cost is applied to.                    |\r\n| RelatedApplicationWeighingOutGuid                | The GUID of the weighing out this applied cost is applied to.                   |\r\n| RelatedApplicationRouteVisitJobGuid              | The GUID of the route visit job this applied cost is applied to.                |\r\n| RelatedApplicationOneOffActionGuid               | The GUID of the one off action this applied cost is applied to.                 |\r\n| RelatedApplicationJobDetailGuid                  | The GUID of the job detail this applied cost is applied to.                     |\r\n| RelatedApplicationVehicleFuelEventGuid           | The GUID of the vehicle fuel event this applied cost is applied to.             |\r\n| RelatedApplicationOneOffCostActionGuid           | The GUID of the one off cost action this applied cost is applied to.            |\r\n| RelatedApplicationRouteVisitMissedCollectionGuid | The GUID of the route visit missed collection this applied cost is applied to.  |\r\n| RelatedApplicationDamageContainerIncidentCostGuid | The GUID of the damage container incident cost is applied to.\t\t\t\t\t |\r\n| RelatedApplicationRouteProRataCollectionCostGuid | The GUID of the route pro rata collection cost this applied cost is applied to. |\r\n| RelatedApplicationInternalPurchaseOrderCostGuid  | The GUID of the internal purchase order cost this applied cost is applied to.   |\r\n| RelatedCostAgreementCostGuid\t\t     \t\t   | The GUID associated to the cost of the applied cost.\t\t\t\t\t\t\t |\r\n| ActionListItem\t\t\t  | The GUID and description of the action of the applied cost.\t\t       |\r\n| ServiceListItem\t\t\t  | The GUID and description of the service of the applied cost. \t       |\r\n| PricingBasisListItem\t\t  | The GUID and description of the pricing basis of the applied cost.     |\r\n| ContainerListItem  \t\t  | The GUID and description of the container of the applied cost.         |\r\n| Rate\t\t\t\t\t      | The rate of the applied cost.\t\t\t\t\t                       |\r\n| CostExVat\t\t\t    \t  | The cost excluding VAT of the applied cost. \t\t\t               |\r\n| CostIncVat\t\t\t      | The cost including VAT of the applied cost. \t\t\t               |\r\n| CostDate      \t\t      | The cost date of the applied cost in ISO format (YYYY-MM-DD).          |\r\n| IsAdjustment\t\t    \t  | Is this applied cost an adjustment? \t\t\t                       |\r\n| IsApproved\t\t\t      | Is this applied cost approved? \t\t\t                               |\r\n| IsDisputed\t\t\t      | Is this applied cost disputed? \t\t\t                               |\r\n| IsSupplierBillConfirmed     | Is the supplier bill of this applied cost confirmed?                   |\r\n| FilterAccountingPeriodListItem\t\t\t\t| Used to filter on the accounting period list item GUID.\t\t\t\t\t\t|","operationId":"AppliedCost_Get","consumes":["application/json"],"produces":["application/json"],"parameters":[{"name":"guid","in":"path","required":true,"type":"string","format":"uuid"},{"name":"links","in":"query","required":false,"type":"string"},{"name":"include","in":"query","required":false,"type":"string"},{"name":"expand","in":"query","required":false,"type":"string"},{"name":"udf","in":"query","required":false,"type":"string"}],"responses":{"200":{"description":"OK","schema":{"$ref":"#/definitions/ApiResourceResultEntity[ApiIntegratorAppliedCostResource]"}}}},"put":{"tags":["AppliedCost"],"summary":"Partial update","description":"| Property                  | Description                                                              | Required |\r\n| ------------------------- | ------------------------------------------------------------------------ | -------- |\r\n| GUID                      | The GUID associated to the applied cost.                                 | No |\r\n| RelatedSupplierSiteGuid   | The GUID associated to the supplier site of the applied cost.            | Yes |\r\n| RelatedOrderGuid\t\t\t| The GUID associated to the order of the applied cost.\t\t\t\t\t   | No |\r\n| RelatedSupplierBillGuid                          | The GUID of the supplier bill of the applied cost.| No |\r\n| RelatedApplicationJobGuid                        | The GUID of the job this applied cost is applied to.                            | No |\r\n| RelatedApplicationRouteVisitGuid                 | The GUID of the route visit this applied cost is applied to.                    | No |\r\n| RelatedApplicationRouteGuid                      | The GUID of the route this applied cost is applied to.                          | No |\r\n| RelatedApplicationCostAgreementRouteCostGuid     | The GUID of the cost agreement route cost this applied cost is applied to.      | No |\r\n| RelatedApplicationRentalActionGuid               | The GUID of the rental action this applied cost is applied to.                  | No |\r\n| RelatedApplicationRentTermGuid                   | The GUID of the rent term this applied cost is applied to.                      | No |\r\n| RelatedApplicationWeighingInGuid                 | The GUID of the weighing in this applied cost is applied to.                    | No |\r\n| RelatedApplicationWeighingOutGuid                | The GUID of the weighing out this applied cost is applied to.                   | No |\r\n| RelatedApplicationRouteVisitJobGuid              | The GUID of the route visit job this applied cost is applied to.                | No |\r\n| RelatedApplicationOneOffActionGuid               | The GUID of the one off action this applied cost is applied to.                 | No |\r\n| RelatedApplicationJobDetailGuid                  | The GUID of the job detail this applied cost is applied to.                     | No |\r\n| RelatedApplicationVehicleFuelEventGuid           | The GUID of the vehicle fuel event this applied cost is applied to.             | No |\r\n| RelatedApplicationOneOffCostActionGuid           | The GUID of the one off cost action this applied cost is applied to.            | Yes |\r\n| RelatedApplicationRouteVisitMissedCollectionGuid | The GUID of the route visit missed collection this applied cost is applied to.  | No |\r\n| RelatedApplicationDamageContainerIncidentCostGuid | The GUID of the damage container incident cost is applied to.\t\t\t\t\t | No |\r\n| RelatedApplicationRouteProRataCollectionCostGuid | The GUID of the route pro rata collection cost this applied cost is applied to. | No |\r\n| RelatedApplicationInternalPurchaseOrderCostGuid  | The GUID of the internal purchase order cost this applied cost is applied to.   | No |\r\n| RelatedCostAgreementCostGuid\t\t     \t\t   | The GUID associated to the cost of the applied cost.\t\t\t\t\t\t\t | No |\r\n| ActionListItem\t\t\t  | The GUID and description of the action of the applied cost.\t\t       | No |\r\n| ServiceListItem\t\t\t  | The GUID and description of the service of the applied cost. \t       | No |\r\n| PricingBasisListItem\t\t  | The GUID and description of the pricing basis of the applied cost.     | No |\r\n| ContainerListItem  \t\t  | The GUID and description of the container of the applied cost.         | No |\r\n| AccountingPeriodListItem\t  | The GUID and description of the accounting period of the applied cost. | Yes |\r\n| Rate\t\t\t\t\t      | The rate of the applied cost.\t\t\t\t\t                       | No |\r\n| CostExVat\t\t\t    \t  | The cost excluding VAT of the applied cost. \t\t\t               | No |\r\n| CostIncVat\t\t\t      | The cost including VAT of the applied cost. \t\t\t               | No |\r\n| CostDate\t\t       \t\t  | The cost date of the applied cost in ISO format (YYYY-MM-DD).          | Yes |\r\n| IsAdjustment\t\t    \t  | Is this applied cost an adjustment? \t\t\t                       | No |\r\n| IsApproved                  | Is this applied cost approved? \t\t\t                               | No |\r\n| IsDisputed                  | Is this applied cost disputed? \t\t\t                               | No |\r\n| IsSupplierBillConfirmed     | Is the supplier bill of this applied cost confirmed?                   | No |\r\n\r\n## Extra validations\r\n\r\n| Condition | Error message |\r\n| --------- | ------------- |\r\n| RelatedApplicationJobGuid and RelatedApplicationRouteVisitGuid not provided. | Either RelatedApplicationJobGuid or RelatedApplicationRouteVisitGuid properties must be set. |\r\n| RelatedApplicationJobGuid and RelatedApplicationRouteVisitGuid provided. | Either RelatedApplicationJobGuid or RelatedApplicationRouteVisitGuid properties must be set. |\r\n| CostIncVat and CostIncVat not provided. | Either CostIncVat or CostIncVat properties must be set. |\r\n| CostIncVat and CostExVat provided. | Either CostIncVat or CostIncVat properties must be set. |\r\n| RelatedApplicationOneOffCostActionGuid is not from an Action of type OneOffCost or CostVATAdjustment. | RelatedApplicationOneOffCostActionGuid must be an Action with Primary Action Type OneOffCost or CostVATAdjustment. |\r\n| RelatedApplicationOneOffCostActionGuid is from Action type CostVATAdjustment and CostExtVat is provided. | Only CostIncVat can be set if RelatedApplicationOneOffCostActionGuid Action has Primary Action Type CostVATAdjustment. | \r\n| RelatedApplicationOneOffCostActionGuid is from Action type CostVATAdjustment and RelatedApplicationVATGuid or RelatedApplicationTaxTemplateCollectionGuid is provided. | Neither RelatedApplicationVATGuid or RelatedApplicationTaxTemplateCollectionGuid can be set if RelatedApplicationOneOffCostActionGuid Action has Primary Action Type CostVATAdjustment. | \r\n| RelatedApplicationOneOffCostActionGuid is not from Action type CostVATAdjustment and both RelatedApplicationVATGuid and RelatedApplicationTaxTemplateCollectionGuid are not provided. | Either RelatedApplicationVATGuid or RelatedApplicationTaxTemplateCollectionGuid must be set if RelatedApplicationOneOffCostActionGuid Action has Primary Action Type OneOffCost. | \r\n| Invalid open accounting period provided. | Failed to save. AppliedCost with AccountingPeriodListItem.GUID of c27e4508-851a-49e2-a305-b8de802d8f68 is not the earliest open accounting period. The earliest accounting period with status of open is: 7027C5FD-7023-EB11-8D03-98E74393FEE2 |S\r\n| Closed accounting period provided. | Failed to save. AppliedCost with AccountingPeriodListItem.GUID of 7027c5fd-7023-eb11-8d03-98e74393fee2 is not a valid accounting period because it is closed. |","operationId":"AppliedCost_Update","consumes":["application/json"],"produces":["application/json"],"parameters":[{"name":"guid","in":"path","required":true,"type":"string","format":"uuid"},{"in":"body","required":true,"schema":{"$ref":"#/definitions/ApiIntegratorAppliedCostResource"}}],"responses":{"200":{"description":"OK","schema":{"$ref":"#/definitions/ApiResourceId"}}}}},"/purchasing/appliedCosts":{"get":{"tags":["AppliedCost"],"summary":"Find with Filters","description":"| Property                  | Description                                                              |\r\n| ------------------------- | ------------------------------------------------------------------------ |\r\n| GUID                      | The GUID associated to the applied cost.                                 |\r\n| RelatedSupplierSiteGuid   | The GUID associated to the supplier site of the applied cost.            |\r\n| RelatedOrderGuid\t\t\t| The GUID associated to the order of the applied cost.\t\t               |\r\n| RelatedSupplierBillGuid                          | The GUID of the supplier bill of the applied cost.|\r\n| RelatedApplicationJobGuid                        | The GUID of the job this applied cost is applied to.                            |\r\n| RelatedApplicationRouteVisitGuid                 | The GUID of the route visit this applied cost is applied to.                    |\r\n| RelatedApplicationRouteGuid                      | The GUID of the route this applied cost is applied to.                          |\r\n| RelatedApplicationCostAgreementRouteCostGuid     | The GUID of the cost agreement route cost this applied cost is applied to.      |\r\n| RelatedApplicationRentalActionGuid               | The GUID of the rental action this applied cost is applied to.                  |\r\n| RelatedApplicationRentTermGuid                   | The GUID of the rent term this applied cost is applied to.                      |\r\n| RelatedApplicationWeighingInGuid                 | The GUID of the weighing in this applied cost is applied to.                    |\r\n| RelatedApplicationWeighingOutGuid                | The GUID of the weighing out this applied cost is applied to.                   |\r\n| RelatedApplicationRouteVisitJobGuid              | The GUID of the route visit job this applied cost is applied to.                |\r\n| RelatedApplicationOneOffActionGuid               | The GUID of the one off action this applied cost is applied to.                 |\r\n| RelatedApplicationJobDetailGuid                  | The GUID of the job detail this applied cost is applied to.                     |\r\n| RelatedApplicationVehicleFuelEventGuid           | The GUID of the vehicle fuel event this applied cost is applied to.             |\r\n| RelatedApplicationOneOffCostActionGuid           | The GUID of the one off cost action this applied cost is applied to.            |\r\n| RelatedApplicationRouteVisitMissedCollectionGuid | The GUID of the route visit missed collection this applied cost is applied to.  |\r\n| RelatedApplicationDamageContainerIncidentCostGuid | The GUID of the damage container incident cost is applied to.\t\t\t\t\t |\r\n| RelatedApplicationRouteProRataCollectionCostGuid | The GUID of the route pro rata collection cost this applied cost is applied to. |\r\n| RelatedApplicationInternalPurchaseOrderCostGuid  | The GUID of the internal purchase order cost this applied cost is applied to.   |\r\n| RelatedCostAgreementCostGuid\t\t     \t\t   | The GUID associated to the cost of the applied cost.\t\t\t\t\t\t\t |\r\n| ActionListItem\t\t\t  | The GUID and description of the action of the applied cost.\t\t       |\r\n| ServiceListItem\t\t\t  | The GUID and description of the service of the applied cost. \t       |\r\n| PricingBasisListItem\t\t  | The GUID and description of the pricing basis of the applied cost.     |\r\n| ContainerListItem  \t\t  | The GUID and description of the container of the applied cost.         |\r\n| Rate\t\t\t\t\t      | The rate of the applied cost.\t\t\t\t\t                       |\r\n| CostExVat\t\t\t    \t  | The cost excluding VAT of the applied cost. \t\t\t               |\r\n| CostIncVat\t\t\t      | The cost including VAT of the applied cost. \t\t\t               |\r\n| CostDate      \t\t      | The cost date of the applied cost in ISO format (YYYY-MM-DD).          |\r\n| IsAdjustment\t\t    \t  | Is this applied cost an adjustment? \t\t\t                       |\r\n| IsApproved\t\t\t      | Is this applied cost approved? \t\t\t                               |\r\n| IsDisputed\t\t\t      | Is this applied cost disputed? \t\t\t                               |\r\n| IsSupplierBillConfirmed     | Is the supplier bill of this applied cost confirmed?                   |\r\n| FilterAccountingPeriodListItem\t\t\t\t| Used to filter on the accounting period list item GUID.\t\t\t\t\t\t|","operationId":"AppliedCost_GetCollection","consumes":["application/json"],"produces":["application/json"],"parameters":[{"name":"filter","in":"query","required":false,"type":"string"},{"name":"search","in":"query","required":false,"type":"string"},{"name":"order","in":"query","required":false,"type":"string"},{"name":"max","in":"query","required":false,"type":"integer","format":"int32"},{"name":"page","in":"query","required":false,"type":"integer","format":"int32"},{"name":"includeCount","in":"query","required":false,"type":"boolean"},{"name":"includeDeleted","in":"query","required":false,"type":"boolean"},{"name":"links","in":"query","required":false,"type":"string"},{"name":"udf","in":"query","required":false,"type":"string"}],"responses":{"200":{"description":"OK","schema":{"$ref":"#/definitions/ApiResourceResultCollection[ApiIntegratorAppliedCostResource]"}}}},"post":{"tags":["AppliedCost"],"summary":"Create or update","description":"| Property                  | Description                                                              | Required |\r\n| ------------------------- | ------------------------------------------------------------------------ | -------- |\r\n| GUID                      | The GUID associated to the applied cost.                                 | No |\r\n| RelatedSupplierSiteGuid   | The GUID associated to the supplier site of the applied cost.            | Yes |\r\n| RelatedOrderGuid\t\t\t| The GUID associated to the order of the applied cost.\t\t               | No |\r\n| RelatedSupplierBillGuid                          | The GUID of the supplier bill of the applied cost.| No |\r\n| RelatedApplicationJobGuid                        | The GUID of the job this applied cost is applied to.                            | No |\r\n| RelatedApplicationRouteVisitGuid                 | The GUID of the route visit this applied cost is applied to.                    | No |\r\n| RelatedApplicationRouteGuid                      | The GUID of the route this applied cost is applied to.                          | No |\r\n| RelatedApplicationCostAgreementRouteCostGuid     | The GUID of the cost agreement route cost this applied cost is applied to.      | No |\r\n| RelatedApplicationRentalActionGuid               | The GUID of the rental action this applied cost is applied to.                  | No |\r\n| RelatedApplicationRentTermGuid                   | The GUID of the rent term this applied cost is applied to.                      | No |\r\n| RelatedApplicationWeighingInGuid                 | The GUID of the weighing in this applied cost is applied to.                    | No |\r\n| RelatedApplicationWeighingOutGuid                | The GUID of the weighing out this applied cost is applied to.                   | No |\r\n| RelatedApplicationRouteVisitJobGuid              | The GUID of the route visit job this applied cost is applied to.                | No |\r\n| RelatedApplicationOneOffActionGuid               | The GUID of the one off action this applied cost is applied to.                 | No |\r\n| RelatedApplicationJobDetailGuid                  | The GUID of the job detail this applied cost is applied to.                     | No |\r\n| RelatedApplicationVehicleFuelEventGuid           | The GUID of the vehicle fuel event this applied cost is applied to.             | No |\r\n| RelatedApplicationOneOffCostActionGuid           | The GUID of the one off cost action this applied cost is applied to.            | Yes |\r\n| RelatedApplicationRouteVisitMissedCollectionGuid | The GUID of the route visit missed collection this applied cost is applied to.  | No |\r\n| RelatedApplicationDamageContainerIncidentCostGuid | The GUID of the damage container incident cost is applied to.\t\t\t\t\t | No |\r\n| RelatedApplicationRouteProRataCollectionCostGuid | The GUID of the route pro rata collection cost this applied cost is applied to. | No |\r\n| RelatedApplicationInternalPurchaseOrderCostGuid  | The GUID of the internal purchase order cost this applied cost is applied to.   | No |\r\n| RelatedCostAgreementCostGuid\t\t     \t\t   | The GUID associated to the cost of the applied cost.\t\t\t\t\t\t\t | No |\r\n| ActionListItem\t\t\t  | The GUID and description of the action of the applied cost.\t\t       | No |\r\n| ServiceListItem\t\t\t  | The GUID and description of the service of the applied cost. \t       | No |\r\n| PricingBasisListItem\t\t  | The GUID and description of the pricing basis of the applied cost.     | No |\r\n| ContainerListItem  \t\t  | The GUID and description of the container of the applied cost.         | No |\r\n| AccountingPeriodListItem\t  | The GUID and description of the accounting period of the applied cost. | Yes |\r\n| Rate\t\t\t\t\t      | The rate of the applied cost.\t\t\t\t\t                       | No |\r\n| CostExVat\t\t\t    \t  | The cost excluding VAT of the applied cost. \t\t\t               | No |\r\n| CostIncVat\t\t\t      | The cost including VAT of the applied cost. \t\t\t               | No |\r\n| CostDate\t\t       \t\t  | The cost date of the applied cost in ISO format (YYYY-MM-DD).          | Yes |\r\n| IsAdjustment\t\t    \t  | Is this applied cost an adjustment? \t\t\t                       | No |\r\n| IsApproved\t\t\t      | Is this applied cost approved? \t\t\t                               | No |\r\n| IsDisputed\t\t\t      | Is this applied cost disputed? \t\t\t                               | No |\r\n| IsSupplierBillConfirmed     | Is the supplier bill of this applied cost confirmed?                   | No |\r\n\r\n## Extra validations\r\n\r\n| Condition | Error message |\r\n| --------- | ------------- |\r\n| RelatedApplicationJobGuid and RelatedApplicationRouteVisitGuid not provided. | Either RelatedApplicationJobGuid or RelatedApplicationRouteVisitGuid properties must be set. |\r\n| RelatedApplicationJobGuid and RelatedApplicationRouteVisitGuid provided. | Either RelatedApplicationJobGuid or RelatedApplicationRouteVisitGuid properties must be set. |\r\n| CostIncVat and CostIncVat not provided. | Either CostIncVat or CostIncVat properties must be set. |\r\n| CostIncVat and CostExVat provided. | Either CostIncVat or CostIncVat properties must be set. |\r\n| RelatedApplicationOneOffCostActionGuid is not from an Action of type OneOffCost or CostVATAdjustment. | RelatedApplicationOneOffCostActionGuid must be an Action with Primary Action Type OneOffCost or CostVATAdjustment. |\r\n| RelatedApplicationOneOffCostActionGuid is from Action type CostVATAdjustment and CostExtVat is provided. | Only CostIncVat can be set if RelatedApplicationOneOffCostActionGuid Action has Primary Action Type CostVATAdjustment. | \r\n| RelatedApplicationOneOffCostActionGuid is from Action type CostVATAdjustment and RelatedApplicationVATGuid or RelatedApplicationTaxTemplateCollectionGuid is provided. | Neither RelatedApplicationVATGuid or RelatedApplicationTaxTemplateCollectionGuid can be set if RelatedApplicationOneOffCostActionGuid Action has Primary Action Type CostVATAdjustment. | \r\n| RelatedApplicationOneOffCostActionGuid is not from Action type CostVATAdjustment and both RelatedApplicationVATGuid and RelatedApplicationTaxTemplateCollectionGuid are not provided. | Either RelatedApplicationVATGuid or RelatedApplicationTaxTemplateCollectionGuid must be set if RelatedApplicationOneOffCostActionGuid Action has Primary Action Type OneOffCost. | \r\n| Invalid open accounting period provided. | Failed to save. AppliedCost with AccountingPeriodListItem.GUID of c27e4508-851a-49e2-a305-b8de802d8f68 is not the earliest open accounting period. The earliest accounting period with status of open is: 7027C5FD-7023-EB11-8D03-98E74393FEE2 |S\r\n| Closed accounting period provided. | Failed to save. AppliedCost with AccountingPeriodListItem.GUID of 7027c5fd-7023-eb11-8d03-98e74393fee2 is not a valid accounting period because it is closed. |","operationId":"AppliedCost_Create","consumes":["application/json"],"produces":["application/json"],"parameters":[{"in":"body","required":true,"schema":{"$ref":"#/definitions/ApiIntegratorAppliedCostResource"}}],"responses":{"200":{"description":"OK","schema":{"$ref":"#/definitions/ApiResourceId"}}}}},"/lists/areaOfOrigins/{guid}":{"get":{"tags":["AreaOfOrigin"],"summary":"Find with GUID","description":"| Property                  | Description\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t|\r\n| ------------------------- | ----------------------------------------------------------------------------\t|\r\n| GUID                      | The GUID associated to the area of origin.\t\t                            |\r\n| Description               | The description of the area of origin.\t\t\t\t\t                    |\r\n| CompanyOutletListItem     | The GUID and description of the company outlet this area of origin is associated to.\t|\r\n| IsDeleted                 | Whether the area of origin is deleted.            \t \t          \t\t\t|\r\n","operationId":"AreaOfOrigin_Get","consumes":["application/json"],"produces":["application/json"],"parameters":[{"name":"guid","in":"path","required":true,"type":"string","format":"uuid"},{"name":"links","in":"query","required":false,"type":"string"},{"name":"include","in":"query","required":false,"type":"string"},{"name":"expand","in":"query","required":false,"type":"string"},{"name":"udf","in":"query","required":false,"type":"string"}],"responses":{"200":{"description":"OK","schema":{"$ref":"#/definitions/ApiResourceResultEntity[ApiIntegratorAreaOfOriginResource]"}}}}},"/lists/areaOfOrigins":{"get":{"tags":["AreaOfOrigin"],"summary":"Find with Filters","description":"| Property                  | Description\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t|\r\n| ------------------------- | ----------------------------------------------------------------------------\t|\r\n| GUID                      | The GUID associated to the area of origin.\t\t                            |\r\n| Description               | The description of the area of origin.\t\t\t\t\t                    |\r\n| CompanyOutletListItem     | The GUID and description of the company outlet this area of origin is associated to.\t|\r\n| IsDeleted                 | Whether the area of origin is deleted.            \t \t          \t\t\t|\r\n","operationId":"AreaOfOrigin_GetCollection","consumes":["application/json"],"produces":["application/json"],"parameters":[{"name":"filter","in":"query","required":false,"type":"string"},{"name":"search","in":"query","required":false,"type":"string"},{"name":"order","in":"query","required":false,"type":"string"},{"name":"max","in":"query","required":false,"type":"integer","format":"int32"},{"name":"page","in":"query","required":false,"type":"integer","format":"int32"},{"name":"includeCount","in":"query","required":false,"type":"boolean"},{"name":"includeDeleted","in":"query","required":false,"type":"boolean"},{"name":"links","in":"query","required":false,"type":"string"},{"name":"udf","in":"query","required":false,"type":"string"}],"responses":{"200":{"description":"OK","schema":{"$ref":"#/definitions/ApiResourceResultCollection[ApiIntegratorAreaOfOriginResource]"}}}}},"/lists/businessTypes/{guid}":{"get":{"tags":["BusinessType"],"summary":"Find with GUID","description":"| Property                  | Description                                                          |\r\n| ------------------------- | -------------------------------------------------------------------  |\r\n| GUID                      | The GUID associated to the business type\t\t\t\t\t\t\t   |\r\n| Description               | The description of the business type\t\t\t\t\t\t\t\t   |\r\n| IsDeleted                 | Whether the business type is deleted         \t \t\t\t\t\t   |","operationId":"BusinessType_Get","consumes":["application/json"],"produces":["application/json"],"parameters":[{"name":"guid","in":"path","required":true,"type":"string","format":"uuid"},{"name":"links","in":"query","required":false,"type":"string"},{"name":"include","in":"query","required":false,"type":"string"},{"name":"expand","in":"query","required":false,"type":"string"},{"name":"udf","in":"query","required":false,"type":"string"}],"responses":{"200":{"description":"OK","schema":{"$ref":"#/definitions/ApiResourceResultEntity[ApiIntegratorBusinessTypeResource]"}}}}},"/lists/businessTypes":{"get":{"tags":["BusinessType"],"summary":"Find with Filters","description":"| Property                  | Description                                                          |\r\n| ------------------------- | -------------------------------------------------------------------  |\r\n| GUID                      | The GUID associated to the business type\t\t\t\t\t\t\t   |\r\n| Description               | The description of the business type\t\t\t\t\t\t\t\t   |\r\n| IsDeleted                 | Whether the business type is deleted         \t \t\t\t\t\t   |","operationId":"BusinessType_GetCollection","consumes":["application/json"],"produces":["application/json"],"parameters":[{"name":"filter","in":"query","required":false,"type":"string"},{"name":"search","in":"query","required":false,"type":"string"},{"name":"order","in":"query","required":false,"type":"string"},{"name":"max","in":"query","required":false,"type":"integer","format":"int32"},{"name":"page","in":"query","required":false,"type":"integer","format":"int32"},{"name":"includeCount","in":"query","required":false,"type":"boolean"},{"name":"includeDeleted","in":"query","required":false,"type":"boolean"},{"name":"links","in":"query","required":false,"type":"string"},{"name":"udf","in":"query","required":false,"type":"string"}],"responses":{"200":{"description":"OK","schema":{"$ref":"#/definitions/ApiResourceResultCollection[ApiIntegratorBusinessTypeResource]"}}}}},"/lists/businessTypeOptions/{guid}":{"get":{"tags":["BusinessTypeOption"],"summary":"Find with GUID","description":"| Property                  | Description                                                          |\r\n| ------------------------- | -------------------------------------------------------------------  |\r\n| GUID                      | The GUID associated to the business type options\t\t\t\t\t\t\t   |\r\n| Description               | The description of the business type options\t\t\t\t\t\t   |","operationId":"BusinessTypeOption_Get","consumes":["application/json"],"produces":["application/json"],"parameters":[{"name":"guid","in":"path","required":true,"type":"string","format":"uuid"},{"name":"links","in":"query","required":false,"type":"string"},{"name":"include","in":"query","required":false,"type":"string"},{"name":"expand","in":"query","required":false,"type":"string"},{"name":"udf","in":"query","required":false,"type":"string"}],"responses":{"200":{"description":"OK","schema":{"$ref":"#/definitions/ApiResourceResultEntity[ApiIntegratorBusinessTypeOptionResource]"}}}}},"/lists/businessTypeOptions":{"get":{"tags":["BusinessTypeOption"],"summary":"Find with Filters","description":"| Property                  | Description                                                          |\r\n| ------------------------- | -------------------------------------------------------------------  |\r\n| GUID                      | The GUID associated to the business type options\t\t\t\t\t\t\t   |\r\n| Description               | The description of the business type options\t\t\t\t\t\t   |","operationId":"BusinessTypeOption_GetCollection","consumes":["application/json"],"produces":["application/json"],"parameters":[{"name":"filter","in":"query","required":false,"type":"string"},{"name":"search","in":"query","required":false,"type":"string"},{"name":"order","in":"query","required":false,"type":"string"},{"name":"max","in":"query","required":false,"type":"integer","format":"int32"},{"name":"page","in":"query","required":false,"type":"integer","format":"int32"},{"name":"includeCount","in":"query","required":false,"type":"boolean"},{"name":"includeDeleted","in":"query","required":false,"type":"boolean"},{"name":"links","in":"query","required":false,"type":"string"},{"name":"udf","in":"query","required":false,"type":"string"}],"responses":{"200":{"description":"OK","schema":{"$ref":"#/definitions/ApiResourceResultCollection[ApiIntegratorBusinessTypeOptionResource]"}}}}},"/accounting/charges/{guid}":{"get":{"tags":["Charge"],"summary":"Find with GUID","description":"| Property\t\t\t\t\t\t\t| Description\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t          |\r\n| --------------------------------- |-------------------------------------------------------------------------------- |\r\n| GUID\t\t\t\t\t\t\t\t| The Guid associated to the contact. Filterable\t      \t\t\t\t\t\t  |\r\n| RelatedSiteOrderGuid\t\t\t\t| The related site order Guid. Filterable\t\t\t\t\t\t\t\t\t\t  | \t \r\n| RelatedJobGuid\t\t\t\t\t| The related Job Guid. Filterable\t\t\t\t\t\t\t\t\t\t\t\t  | \r\n| RelatedLiftEventGuid\t\t\t\t| The related Lift event Guid. Filterable\t\t\t\t\t\t\t\t          | \r\n| RelatedPriceGuid\t\t\t\t\t| The related Price Guid. Filterable \t\t\t\t\t\t\t\t\t\t      |\r\n| RelatedRouteVisitGuid\t\t\t\t| The related Route visit Guid. Filterable\t\t\t\t\t\t\t\t\t\t  | \r\n| RelatedRouteVisitJobGuid\t\t\t| The related Route visit job Guid. Filterable\t\t\t\t\t\t\t\t\t  | \r\n| RelatedWeighingInGuid\t\t\t\t| The related Weighing In Guid. Filterable\t\t\t\t\t\t\t\t\t      |\r\n| RelatedWeighingOutGuid\t\t\t| The related Weighing Out Guid. Filterable\t\t\t\t\t\t\t\t\t\t  |\r\n| RelatedPONumberGuid\t\t\t\t| The related PO Number Guid. Filterable\t\t\t\t\t\t\t\t\t      | \r\n| RelatedPriceModifierGuid\t\t\t| The related Price modifier Guid.\tFilterable\t\t\t\t\t\t\t\t\t  |\r\n| RelatedInvoiceGuid\t\t\t\t| The related Invoice Guid.\tFilterable\t\t\t\t\t\t\t\t\t          |\r\n| PONumber\t\t\t\t\t\t\t| The related PO Number.\t\t\t\t\t\t\t\t\t\t\t\t\t\t  |\r\n| Amount.IsEstimate\t\t\t\t    | Is the Amount an Estimation. \t\t\t\t\t\t\t\t\t\t\t\t\t  |\r\n| Amount.Price\t\t\t\t\t\t| The price of the Amount.\t\t\t\t\t\t\t\t\t\t\t\t\t\t  |\r\n| Amount.PriceExVat\t\t\t\t    | The Price not including the Vat.\t\t\t\t\t\t\t\t\t\t\t\t  |\r\n| Amount.Rate\t\t\t\t\t\t| The Rate of the Amount.\t\t\t\t\t\t\t\t\t\t\t\t\t\t  |\r\n| DoNotInvoice\t\t\t\t\t\t| If the charge has not been invoiced or not.\t\t\t\t\t\t              |\t\r\n| DoNotInvoiceReasonListItem\t    | The Guid and Description associated to the Reason.\t\t\t\t              |\r\n| ActionListItem\t                | The Guid and Description associated to the Action.\t\t\t\t              |\r\n| ActionGuidFilter\t                | Used to filter the action guid associated to the charge.\t\t\t\t          |\r\n","operationId":"Charge_Get","consumes":["application/json"],"produces":["application/json"],"parameters":[{"name":"guid","in":"path","required":true,"type":"string","format":"uuid"},{"name":"links","in":"query","required":false,"type":"string"},{"name":"include","in":"query","required":false,"type":"string"},{"name":"expand","in":"query","required":false,"type":"string"},{"name":"udf","in":"query","required":false,"type":"string"}],"responses":{"200":{"description":"OK","schema":{"$ref":"#/definitions/ApiResourceResultEntity[ApiIntegratorChargeResource]"}}}},"put":{"tags":["Charge"],"summary":"Partial update","description":"| Property\t\t\t\t\t\t\t| Description\t\t\t\t\t\t\t\t\t\t\t\t\t\t   | Required |\r\n| --------------------------------- |--------------------------------------------------------------------- | -------- |\r\n| GUID\t\t\t\t\t\t\t\t| The Guid associated to the contact.\t      \t\t\t               | Yes      |\r\n| RelatedSiteOrderGuid\t\t\t\t| The related site order Guid.\t\t\t\t\t\t\t\t\t\t   | Yes      |\t\t \r\n| RelatedJobGuid\t\t\t\t\t| The related Job Guid.\t\t\t\t\t\t\t\t\t\t\t\t   | No       |\r\n| RelatedLiftEventGuid\t\t\t\t| The related Lift event Guid.\t\t\t\t\t\t\t\t\t\t   | No       |\r\n| RelatedPriceGuid\t\t\t\t\t| The related Price Guid. \t\t\t\t\t\t\t\t\t\t\t   | No       |\r\n| RelatedRouteVisitGuid\t\t\t\t| The related Route visit Guid.\t\t\t\t\t\t\t\t\t\t   | No       |\r\n| RelatedRouteVisitJobGuid\t\t\t| The related Route visit job Guid.\t\t\t\t\t\t\t\t\t   | No       |\r\n| RelatedWeighingInGuid\t\t\t\t| The related Weighing In Guid.\t\t\t\t\t\t\t\t\t\t   | No       |\r\n| RelatedWeighingOutGuid\t\t\t| The related Weighing Out Guid.\t\t\t\t\t\t\t\t\t   | No       |\r\n| RelatedPONumberGuid\t\t\t\t| The related PO Number Guid. \t\t\t\t\t\t\t\t\t\t   | No       |\r\n| RelatedPriceModifierGuid\t\t\t| The related Price modifier Guid.\t\t\t\t\t\t\t\t       | No       |\r\n| RelatedInvoiceGuid\t\t\t\t| The related Invoice Guid.\t\t\t\t\t\t\t\t\t\t       | No       |\r\n| PONumber\t\t\t\t\t\t\t| The related PO Number.\t\t\t\t\t\t\t\t\t\t\t   | No\t\t  |\r\n| Amount.IsEstimate\t\t\t\t    | Is the Amount an Estimation.\t\t\t\t\t\t\t\t\t\t   | Yes      |\r\n| Amount.Price\t\t\t\t\t\t| The price of the Amount.\t\t\t\t\t\t\t\t\t\t\t   | Yes      |\r\n| Amount.PriceExVat\t\t\t\t    | The Price not including the Vat.\t\t\t\t\t\t\t\t       | Yes      |\r\n| Amount.Rate\t\t\t\t\t\t| The Rate of the Amount.\t\t\t\t\t\t\t\t\t\t       | Yes      |\r\n| DoNotInvoice\t\t\t\t\t\t| If the charge can be invoiced or not.\t\t\t\t\t\t\t\t   | No       |\t\r\n| DoNotInvoiceReasonListItem\t    | The Guid and Description associated to the reason for DoNotInvoice.  | No\t      |\r\n| ActionListItem\t                | The Guid and Description associated to the Action.\t\t\t\t   | No       |\r\n| ActionGuidFilter\t                | Used to filter the action guid associated to the charge.\t\t\t   | No       |\r\n\r\n## Extra validations\r\n\r\n| Condition | Error message |\r\n| --------- | ------------- |\r\n| RelatedSiteOrderGuid is being edited | RelatedSiteOrderGuid is a read-only property. |\r\n| RelatedJobGuid is being edited | RelatedJobGuid is a read-only property. |\r\n| RelatedLiftEventGuid is being edited | RelatedLiftEventGuid is a read-only property. |\r\n| RelatedPriceGuid is being edited | RelatedPriceGuid is a read-only property. |\r\n| RelatedRouteVisitGuid is being edited | RelatedRouteVisitGuid is a read-only property. |\r\n| RelatedRouteVisitJobGuid is being edited | RelatedRouteVisitJobGuid is a read-only property. |\r\n| RelatedWeighingInGuid is being edited | RelatedWeighingInGuid is a read-only property. |\r\n| RelatedWeighingOutGuid is being edited | RelatedWeighingOutGuid is a read-only property. |\r\n| RelatedPriceModifierGuid is being edited | RelatedPriceModifierGuid is a read-only property. |\r\n| RelatedInvoiceGuid is being edited | RelatedInvoiceGuid is a read-only property. |\r\n| ActionListItem.Guid is being edited | ActionListItem.Guid is a read-only property. |\r\n| Amount.IsEstimate is being edited | Amount.IsEstimate is a read-only property. |\r\n| Amount.Price is being edited | Amount.Price is a read-only property. |\r\n| Amount.PriceExVat is being edited | Amount.PriceExVat is a read-only property. |\r\n| Amount.Rate is being edited | Amount.Rate is a read-only property. |\r\n| Amount was set null | Amount field is not editable and cannot be null |\r\n| DoNotInvoiceReasonListItem is not in one of the following reason categories: DoNotInvoice | DoNotInvoiceReasonListItem must be in one of the following reason categories: DoNotInvoice. |\r\n| DoNotInvoice was set to true and DoNotInvoiceReasonListItem was null | Charge with DoNotInvoiceReasonListItem cannot be null if DoNotInvoice is true. |\r\n| DoNotInvoiceReasonListItem value was provided and DoNotInvoice was set to false | Charge with DoNotInvoice cannot be set if DoNotInvoiceReasonListItem has a value. |\r\n| RelatedPONumberGuid supplied belongs to a deleted PONumber | Failed to save/update Charge because the supplied PONumber is not valid. The update has been rejected. Change the RelatedPONumberGuid to the Guid of a valid and undeleted PONumber |\r\n| PONumber supplied is longer than 120 characters | Charge has the property PONumber with value of {value} that is not supported. PONumber should not be longer than 120 characters |","operationId":"Charge_Update","consumes":["application/json"],"produces":["application/json"],"parameters":[{"name":"guid","in":"path","required":true,"type":"string","format":"uuid"},{"in":"body","required":true,"schema":{"$ref":"#/definitions/ApiResourceId"}}],"responses":{"200":{"description":"OK","schema":{"$ref":"#/definitions/ApiResourceId"}}}}},"/accounting/charges":{"get":{"tags":["Charge"],"summary":"Find with Filters","description":"| Property\t\t\t\t\t\t\t| Description\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t          |\r\n| --------------------------------- |-------------------------------------------------------------------------------- |\r\n| GUID\t\t\t\t\t\t\t\t| The Guid associated to the contact. Filterable\t      \t\t\t\t\t\t  |\r\n| RelatedSiteOrderGuid\t\t\t\t| The related site order Guid. Filterable\t\t\t\t\t\t\t\t\t\t  | \t \r\n| RelatedJobGuid\t\t\t\t\t| The related Job Guid. Filterable\t\t\t\t\t\t\t\t\t\t\t\t  | \r\n| RelatedLiftEventGuid\t\t\t\t| The related Lift event Guid. Filterable\t\t\t\t\t\t\t\t          | \r\n| RelatedPriceGuid\t\t\t\t\t| The related Price Guid. Filterable \t\t\t\t\t\t\t\t\t\t      |\r\n| RelatedRouteVisitGuid\t\t\t\t| The related Route visit Guid. Filterable\t\t\t\t\t\t\t\t\t\t  | \r\n| RelatedRouteVisitJobGuid\t\t\t| The related Route visit job Guid. Filterable\t\t\t\t\t\t\t\t\t  | \r\n| RelatedWeighingInGuid\t\t\t\t| The related Weighing In Guid. Filterable\t\t\t\t\t\t\t\t\t      |\r\n| RelatedWeighingOutGuid\t\t\t| The related Weighing Out Guid. Filterable\t\t\t\t\t\t\t\t\t\t  |\r\n| RelatedPONumberGuid\t\t\t\t| The related PO Number Guid. Filterable\t\t\t\t\t\t\t\t\t      | \r\n| RelatedPriceModifierGuid\t\t\t| The related Price modifier Guid.\tFilterable\t\t\t\t\t\t\t\t\t  |\r\n| RelatedInvoiceGuid\t\t\t\t| The related Invoice Guid.\tFilterable\t\t\t\t\t\t\t\t\t          |\r\n| PONumber\t\t\t\t\t\t\t| The related PO Number.\t\t\t\t\t\t\t\t\t\t\t\t\t\t  |\r\n| Amount.IsEstimate\t\t\t\t    | Is the Amount an Estimation. \t\t\t\t\t\t\t\t\t\t\t\t\t  |\r\n| Amount.Price\t\t\t\t\t\t| The price of the Amount.\t\t\t\t\t\t\t\t\t\t\t\t\t\t  |\r\n| Amount.PriceExVat\t\t\t\t    | The Price not including the Vat.\t\t\t\t\t\t\t\t\t\t\t\t  |\r\n| Amount.Rate\t\t\t\t\t\t| The Rate of the Amount.\t\t\t\t\t\t\t\t\t\t\t\t\t\t  |\r\n| DoNotInvoice\t\t\t\t\t\t| If the charge has not been invoiced or not.\t\t\t\t\t\t              |\t\r\n| DoNotInvoiceReasonListItem\t    | The Guid and Description associated to the Reason.\t\t\t\t              |\r\n| ActionListItem\t                | The Guid and Description associated to the Action.\t\t\t\t              |\r\n| ActionGuidFilter\t                | Used to filter the action guid associated to the charge.\t\t\t\t          |\r\n","operationId":"Charge_GetCollection","consumes":["application/json"],"produces":["application/json"],"parameters":[{"name":"filter","in":"query","required":false,"type":"string"},{"name":"search","in":"query","required":false,"type":"string"},{"name":"order","in":"query","required":false,"type":"string"},{"name":"max","in":"query","required":false,"type":"integer","format":"int32"},{"name":"page","in":"query","required":false,"type":"integer","format":"int32"},{"name":"includeCount","in":"query","required":false,"type":"boolean"},{"name":"includeDeleted","in":"query","required":false,"type":"boolean"},{"name":"links","in":"query","required":false,"type":"string"},{"name":"udf","in":"query","required":false,"type":"string"}],"responses":{"200":{"description":"OK","schema":{"$ref":"#/definitions/ApiResourceResultCollection[ApiIntegratorChargeResource]"}}}}},"/comms/communications/changes":{"get":{"tags":["Communication"],"summary":"Retrieve changes","description":"| Property\t\t\t\t\t\t\t\t\t| Description\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t|\r\n| ----------------------------------------- | --------------------------------------------------------------------------------------------- |\r\n| GUID\t\t\t\t\t\t\t\t\t\t| The GUID associated to the communication.\t\t\t\t\t\t\t\t\t\t\t\t\t\t|\r\n| ClosedDate\t\t\t\t\t\t\t\t| The closed date of the communication.\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t|\r\n| ExternalReference\t\t\t\t\t\t\t| The external reference of the communication.\t\t\t\t\t\t\t\t\t\t\t\t\t|\r\n| Notes\t\t\t\t\t\t\t\t\t\t| The notes of the communication.\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t|\r\n| OutcomeNotes\t\t\t\t\t\t\t\t| The outcome notes of the communication.\t\t\t\t\t\t\t\t\t\t\t\t\t\t|\r\n| RelatedUserOwnerGuid\t\t\t\t\t\t| The GUID associated to the user owner of the communication. Filterable.\t\t\t\t\t\t|\t\r\n| ReviewDate\t\t\t\t\t\t\t\t| The review date of communication.\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t|\r\n| CommunicationClassificationListItem\t\t| The GUID and description of the classification associated to the communication.\t\t\t\t|\t\t\r\n| CommunicationTypeListItem\t\t\t\t\t| The GUID and description of the type associated to the communication.\t\t\t\t\t\t\t|\t\r\n| CommunicationOutcomeListItem\t\t\t\t| The GUID and description of the outcome associated to the communication.\t\t\t\t\t\t|\r\n| Followups[0]                              | A list of objects containing communication followups.\t\t\t\t\t\t\t\t\t\t\t|\r\n| Followups[0].ClosedDate\t\t\t\t\t| The communication followup closed date.\t\t\t\t\t\t\t\t\t\t\t\t\t\t|\r\n| Followups[0].RelatedUserAssignedToGuid    | The GUID associated to the assigned user of communication followup.\t\t\t\t\t\t\t|\r\n| Followups[0].IsDeleted\t\t\t\t    | Whether the communication followup is deleted.\t\t\t\t\t\t\t\t\t\t\t\t|\r\n| Followups[0].GUID\t\t\t\t\t\t\t| The GUID of the communication followup.\t\t\t\t\t\t\t\t\t\t\t\t\t\t|\r\n| RouteVisits[0]                            | A list of objects containing communication routevisits.\t\t\t\t\t\t\t\t\t\t|\r\n| RouteVisits[0].RelatedRouteVisitGuid\t\t| The GUID of the related route visit associated to communication route visit.\t\t\t\t\t|\r\n| RouteVisits[0].IsDeleted\t\t\t\t    | Whether the communication route visit is deleted.\t\t\t\t\t\t\t\t\t\t\t\t|\r\n| RouteVisits[0].GUID\t\t\t\t\t\t| The GUID of the communication route visit.\t\t\t\t\t\t\t\t\t\t\t\t\t|\r\n| DocumentBlobs[0]\t\t\t\t\t\t\t| The list of document blobs associated to the communication.\t\t\t\t\t\t\t\t\t|\r\n| DocumentBlobs[0].GUID\t\t\t\t\t\t| The GUID associated to the document blob.\t\t\t\t\t\t\t\t\t\t\t\t\t\t|\r\n| DocumentBlobs[0].IsDeleted\t\t\t\t| Whether the document blob is deleted.\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t|\r\n| DocumentBlobs[0].DocumentReference\t\t| The document reference of the document blob.\t\t\t\t\t\t\t\t\t\t\t\t\t|\r\n| DocumentBlobs[0].DocumentName\t\t\t\t| The document name of the document blob.\t\t\t\t\t\t\t\t\t\t\t\t\t\t|\r\n| DocumentBlobs[0].Description\t\t\t\t| The description of the document blob.\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t|\r\n| Jobs[0]\t\t\t\t\t\t\t\t\t| A list of objects containing communication jobs.\t\t\t\t\t\t\t\t\t\t\t\t|\r\n| Jobs[0].RelatedJobGuid\t\t\t\t\t| The GUID of the related job associated to communication job.\t\t\t\t\t\t\t\t\t|\r\n| Jobs[0].IsDeleted\t\t\t\t\t\t\t| Whether the communication job is deleted.\t\t\t\t\t\t\t\t\t\t\t\t\t\t|\r\n| Jobs[0].GUID\t\t\t\t\t\t\t\t| The GUID of the communication job.\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t|\r\n| IsDeleted\t\t\t\t\t\t\t\t\t| Whether the communication is deleted.\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t|\r\n| RelatedUserAssignedToGuidFilter           | Used to filter the assigned to user guid associated to the communication followup.\t\t\t|\r\n| RelatedDocumentBlobGuidFilter\t\t\t\t| Used to filter the guid associated to the communication document blob.\t\t\t\t\t\t|\r\n| RelatedRouteVisitGuidFilter\t\t\t\t| Used to filter the guid of RouteVisit associated to the communication route visit.\t\t\t|\r\n| RelatedJobGuidFilter\t\t\t\t\t\t| Used to filter the guid of Job associated to the communication job.\t\t\t\t\t\t\t|\r\n| FollowupGuidFilter\t\t\t\t\t\t| Used to filter the guid associated to the communication followup.\t\t\t\t\t\t\t\t|\r\n| RouteVisitGuidFilter\t\t\t\t\t\t| Used to filter the guid associated to the communication route visit.\t\t\t\t\t\t\t|\r\n| JobGuidFilter\t\t\t\t\t\t\t\t| Used to filter the guid associated to the communication job.\t\t\t\t\t\t\t\t\t|","operationId":"Communication_GetChanges","consumes":["application/json"],"produces":["application/json"],"parameters":[{"name":"since","in":"query","required":false,"type":"string"},{"name":"cursor","in":"query","required":false,"type":"string"},{"name":"links","in":"query","required":false,"type":"string"}],"responses":{"200":{"description":"OK","schema":{"$ref":"#/definitions/ApiResourceChanges[ApiIntegratorCommunicationResource]"}}}}},"/comms/communications/{guid}":{"get":{"tags":["Communication"],"summary":"Find with GUID","description":"| Property\t\t\t\t\t\t\t\t\t| Description\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t|\r\n| ----------------------------------------- | --------------------------------------------------------------------------------------------- |\r\n| GUID\t\t\t\t\t\t\t\t\t\t| The GUID associated to the communication.\t\t\t\t\t\t\t\t\t\t\t\t\t\t|\r\n| ClosedDate\t\t\t\t\t\t\t\t| The closed date of the communication.\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t|\r\n| ExternalReference\t\t\t\t\t\t\t| The external reference of the communication.\t\t\t\t\t\t\t\t\t\t\t\t\t|\r\n| Notes\t\t\t\t\t\t\t\t\t\t| The notes of the communication.\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t|\r\n| OutcomeNotes\t\t\t\t\t\t\t\t| The outcome notes of the communication.\t\t\t\t\t\t\t\t\t\t\t\t\t\t|\r\n| RelatedUserOwnerGuid\t\t\t\t\t\t| The GUID associated to the user owner of the communication. Filterable.\t\t\t\t\t\t|\t\r\n| ReviewDate\t\t\t\t\t\t\t\t| The review date of communication.\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t|\r\n| CommunicationClassificationListItem\t\t| The GUID and description of the classification associated to the communication.\t\t\t\t|\t\t\r\n| CommunicationTypeListItem\t\t\t\t\t| The GUID and description of the type associated to the communication.\t\t\t\t\t\t\t|\t\r\n| CommunicationOutcomeListItem\t\t\t\t| The GUID and description of the outcome associated to the communication.\t\t\t\t\t\t|\r\n| Followups[0]                              | A list of objects containing communication followups.\t\t\t\t\t\t\t\t\t\t\t|\r\n| Followups[0].ClosedDate\t\t\t\t\t| The communication followup closed date.\t\t\t\t\t\t\t\t\t\t\t\t\t\t|\r\n| Followups[0].RelatedUserAssignedToGuid    | The GUID associated to the assigned user of communication followup.\t\t\t\t\t\t\t|\r\n| Followups[0].IsDeleted\t\t\t\t    | Whether the communication followup is deleted.\t\t\t\t\t\t\t\t\t\t\t\t|\r\n| Followups[0].GUID\t\t\t\t\t\t\t| The GUID of the communication followup.\t\t\t\t\t\t\t\t\t\t\t\t\t\t|\r\n| RouteVisits[0]                            | A list of objects containing communication routevisits.\t\t\t\t\t\t\t\t\t\t|\r\n| RouteVisits[0].RelatedRouteVisitGuid\t\t| The GUID of the related route visit associated to communication route visit.\t\t\t\t\t|\r\n| RouteVisits[0].IsDeleted\t\t\t\t    | Whether the communication route visit is deleted.\t\t\t\t\t\t\t\t\t\t\t\t|\r\n| RouteVisits[0].GUID\t\t\t\t\t\t| The GUID of the communication route visit.\t\t\t\t\t\t\t\t\t\t\t\t\t|\r\n| DocumentBlobs[0]\t\t\t\t\t\t\t| The list of document blobs associated to the communication.\t\t\t\t\t\t\t\t\t|\r\n| DocumentBlobs[0].GUID\t\t\t\t\t\t| The GUID associated to the document blob.\t\t\t\t\t\t\t\t\t\t\t\t\t\t|\r\n| DocumentBlobs[0].IsDeleted\t\t\t\t| Whether the document blob is deleted.\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t|\r\n| DocumentBlobs[0].DocumentReference\t\t| The document reference of the document blob.\t\t\t\t\t\t\t\t\t\t\t\t\t|\r\n| DocumentBlobs[0].DocumentName\t\t\t\t| The document name of the document blob.\t\t\t\t\t\t\t\t\t\t\t\t\t\t|\r\n| DocumentBlobs[0].Description\t\t\t\t| The description of the document blob.\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t|\r\n| Jobs[0]\t\t\t\t\t\t\t\t\t| A list of objects containing communication jobs.\t\t\t\t\t\t\t\t\t\t\t\t|\r\n| Jobs[0].RelatedJobGuid\t\t\t\t\t| The GUID of the related job associated to communication job.\t\t\t\t\t\t\t\t\t|\r\n| Jobs[0].IsDeleted\t\t\t\t\t\t\t| Whether the communication job is deleted.\t\t\t\t\t\t\t\t\t\t\t\t\t\t|\r\n| Jobs[0].GUID\t\t\t\t\t\t\t\t| The GUID of the communication job.\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t|\r\n| IsDeleted\t\t\t\t\t\t\t\t\t| Whether the communication is deleted.\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t|\r\n| RelatedUserAssignedToGuidFilter           | Used to filter the assigned to user guid associated to the communication followup.\t\t\t|\r\n| RelatedDocumentBlobGuidFilter\t\t\t\t| Used to filter the guid associated to the communication document blob.\t\t\t\t\t\t|\r\n| RelatedRouteVisitGuidFilter\t\t\t\t| Used to filter the guid of RouteVisit associated to the communication route visit.\t\t\t|\r\n| RelatedJobGuidFilter\t\t\t\t\t\t| Used to filter the guid of Job associated to the communication job.\t\t\t\t\t\t\t|\r\n| FollowupGuidFilter\t\t\t\t\t\t| Used to filter the guid associated to the communication followup.\t\t\t\t\t\t\t\t|\r\n| RouteVisitGuidFilter\t\t\t\t\t\t| Used to filter the guid associated to the communication route visit.\t\t\t\t\t\t\t|\r\n| JobGuidFilter\t\t\t\t\t\t\t\t| Used to filter the guid associated to the communication job.\t\t\t\t\t\t\t\t\t|","operationId":"Communication_Get","consumes":["application/json"],"produces":["application/json"],"parameters":[{"name":"guid","in":"path","required":true,"type":"string","format":"uuid"},{"name":"links","in":"query","required":false,"type":"string"},{"name":"include","in":"query","required":false,"type":"string"},{"name":"expand","in":"query","required":false,"type":"string"},{"name":"udf","in":"query","required":false,"type":"string"}],"responses":{"200":{"description":"OK","schema":{"$ref":"#/definitions/ApiResourceResultEntity[ApiIntegratorCommunicationResource]"}}}}},"/comms/communications":{"get":{"tags":["Communication"],"summary":"Find with Filters","description":"| Property\t\t\t\t\t\t\t\t\t| Description\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t|\r\n| ----------------------------------------- | --------------------------------------------------------------------------------------------- |\r\n| GUID\t\t\t\t\t\t\t\t\t\t| The GUID associated to the communication.\t\t\t\t\t\t\t\t\t\t\t\t\t\t|\r\n| ClosedDate\t\t\t\t\t\t\t\t| The closed date of the communication.\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t|\r\n| ExternalReference\t\t\t\t\t\t\t| The external reference of the communication.\t\t\t\t\t\t\t\t\t\t\t\t\t|\r\n| Notes\t\t\t\t\t\t\t\t\t\t| The notes of the communication.\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t|\r\n| OutcomeNotes\t\t\t\t\t\t\t\t| The outcome notes of the communication.\t\t\t\t\t\t\t\t\t\t\t\t\t\t|\r\n| RelatedUserOwnerGuid\t\t\t\t\t\t| The GUID associated to the user owner of the communication. Filterable.\t\t\t\t\t\t|\t\r\n| ReviewDate\t\t\t\t\t\t\t\t| The review date of communication.\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t|\r\n| CommunicationClassificationListItem\t\t| The GUID and description of the classification associated to the communication.\t\t\t\t|\t\t\r\n| CommunicationTypeListItem\t\t\t\t\t| The GUID and description of the type associated to the communication.\t\t\t\t\t\t\t|\t\r\n| CommunicationOutcomeListItem\t\t\t\t| The GUID and description of the outcome associated to the communication.\t\t\t\t\t\t|\r\n| Followups[0]                              | A list of objects containing communication followups.\t\t\t\t\t\t\t\t\t\t\t|\r\n| Followups[0].ClosedDate\t\t\t\t\t| The communication followup closed date.\t\t\t\t\t\t\t\t\t\t\t\t\t\t|\r\n| Followups[0].RelatedUserAssignedToGuid    | The GUID associated to the assigned user of communication followup.\t\t\t\t\t\t\t|\r\n| Followups[0].IsDeleted\t\t\t\t    | Whether the communication followup is deleted.\t\t\t\t\t\t\t\t\t\t\t\t|\r\n| Followups[0].GUID\t\t\t\t\t\t\t| The GUID of the communication followup.\t\t\t\t\t\t\t\t\t\t\t\t\t\t|\r\n| RouteVisits[0]                            | A list of objects containing communication routevisits.\t\t\t\t\t\t\t\t\t\t|\r\n| RouteVisits[0].RelatedRouteVisitGuid\t\t| The GUID of the related route visit associated to communication route visit.\t\t\t\t\t|\r\n| RouteVisits[0].IsDeleted\t\t\t\t    | Whether the communication route visit is deleted.\t\t\t\t\t\t\t\t\t\t\t\t|\r\n| RouteVisits[0].GUID\t\t\t\t\t\t| The GUID of the communication route visit.\t\t\t\t\t\t\t\t\t\t\t\t\t|\r\n| DocumentBlobs[0]\t\t\t\t\t\t\t| The list of document blobs associated to the communication.\t\t\t\t\t\t\t\t\t|\r\n| DocumentBlobs[0].GUID\t\t\t\t\t\t| The GUID associated to the document blob.\t\t\t\t\t\t\t\t\t\t\t\t\t\t|\r\n| DocumentBlobs[0].IsDeleted\t\t\t\t| Whether the document blob is deleted.\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t|\r\n| DocumentBlobs[0].DocumentReference\t\t| The document reference of the document blob.\t\t\t\t\t\t\t\t\t\t\t\t\t|\r\n| DocumentBlobs[0].DocumentName\t\t\t\t| The document name of the document blob.\t\t\t\t\t\t\t\t\t\t\t\t\t\t|\r\n| DocumentBlobs[0].Description\t\t\t\t| The description of the document blob.\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t|\r\n| Jobs[0]\t\t\t\t\t\t\t\t\t| A list of objects containing communication jobs.\t\t\t\t\t\t\t\t\t\t\t\t|\r\n| Jobs[0].RelatedJobGuid\t\t\t\t\t| The GUID of the related job associated to communication job.\t\t\t\t\t\t\t\t\t|\r\n| Jobs[0].IsDeleted\t\t\t\t\t\t\t| Whether the communication job is deleted.\t\t\t\t\t\t\t\t\t\t\t\t\t\t|\r\n| Jobs[0].GUID\t\t\t\t\t\t\t\t| The GUID of the communication job.\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t|\r\n| IsDeleted\t\t\t\t\t\t\t\t\t| Whether the communication is deleted.\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t|\r\n| RelatedUserAssignedToGuidFilter           | Used to filter the assigned to user guid associated to the communication followup.\t\t\t|\r\n| RelatedDocumentBlobGuidFilter\t\t\t\t| Used to filter the guid associated to the communication document blob.\t\t\t\t\t\t|\r\n| RelatedRouteVisitGuidFilter\t\t\t\t| Used to filter the guid of RouteVisit associated to the communication route visit.\t\t\t|\r\n| RelatedJobGuidFilter\t\t\t\t\t\t| Used to filter the guid of Job associated to the communication job.\t\t\t\t\t\t\t|\r\n| FollowupGuidFilter\t\t\t\t\t\t| Used to filter the guid associated to the communication followup.\t\t\t\t\t\t\t\t|\r\n| RouteVisitGuidFilter\t\t\t\t\t\t| Used to filter the guid associated to the communication route visit.\t\t\t\t\t\t\t|\r\n| JobGuidFilter\t\t\t\t\t\t\t\t| Used to filter the guid associated to the communication job.\t\t\t\t\t\t\t\t\t|","operationId":"Communication_GetCollection","consumes":["application/json"],"produces":["application/json"],"parameters":[{"name":"filter","in":"query","required":false,"type":"string"},{"name":"search","in":"query","required":false,"type":"string"},{"name":"order","in":"query","required":false,"type":"string"},{"name":"max","in":"query","required":false,"type":"integer","format":"int32"},{"name":"page","in":"query","required":false,"type":"integer","format":"int32"},{"name":"includeCount","in":"query","required":false,"type":"boolean"},{"name":"includeDeleted","in":"query","required":false,"type":"boolean"},{"name":"links","in":"query","required":false,"type":"string"},{"name":"udf","in":"query","required":false,"type":"string"}],"responses":{"200":{"description":"OK","schema":{"$ref":"#/definitions/ApiResourceResultCollection[ApiIntegratorCommunicationResource]"}}}}},"/lists/communicationClassifications/{guid}":{"get":{"tags":["CommunicationClassification"],"summary":"Find with GUID","description":"| Property                  | Description                                                              |\r\n| ------------------------- | ------------------------------------------------------------------------ |\r\n| GUID                      | The GUID associated to the communication classification\t\t\t\t   |\r\n| Description               | The description of the communication classification\t\t\t\t\t   |\r\n| IsDeleted                 | Whether the communication classification is deleted\t                   |\r\n\t\t\t\t   \r\n\r\n","operationId":"CommunicationClassification_Get","consumes":["application/json"],"produces":["application/json"],"parameters":[{"name":"guid","in":"path","required":true,"type":"string","format":"uuid"},{"name":"links","in":"query","required":false,"type":"string"},{"name":"include","in":"query","required":false,"type":"string"},{"name":"expand","in":"query","required":false,"type":"string"},{"name":"udf","in":"query","required":false,"type":"string"}],"responses":{"200":{"description":"OK","schema":{"$ref":"#/definitions/ApiResourceResultEntity[ApiIntegratorCommunicationClassificationResource]"}}}}},"/lists/communicationClassifications":{"get":{"tags":["CommunicationClassification"],"summary":"Find with Filters","description":"| Property                  | Description                                                              |\r\n| ------------------------- | ------------------------------------------------------------------------ |\r\n| GUID                      | The GUID associated to the communication classification\t\t\t\t   |\r\n| Description               | The description of the communication classification\t\t\t\t\t   |\r\n| IsDeleted                 | Whether the communication classification is deleted\t                   |\r\n\t\t\t\t   \r\n\r\n","operationId":"CommunicationClassification_GetCollection","consumes":["application/json"],"produces":["application/json"],"parameters":[{"name":"filter","in":"query","required":false,"type":"string"},{"name":"search","in":"query","required":false,"type":"string"},{"name":"order","in":"query","required":false,"type":"string"},{"name":"max","in":"query","required":false,"type":"integer","format":"int32"},{"name":"page","in":"query","required":false,"type":"integer","format":"int32"},{"name":"includeCount","in":"query","required":false,"type":"boolean"},{"name":"includeDeleted","in":"query","required":false,"type":"boolean"},{"name":"links","in":"query","required":false,"type":"string"},{"name":"udf","in":"query","required":false,"type":"string"}],"responses":{"200":{"description":"OK","schema":{"$ref":"#/definitions/ApiResourceResultCollection[ApiIntegratorCommunicationClassificationResource]"}}}}},"/lists/communicationOutcomes/{guid}":{"get":{"tags":["CommunicationOutcome"],"summary":"Find with GUID","description":"| Property                  | Description                                                              |\r\n| ------------------------- | ------------------------------------------------------------------------ |\r\n| GUID                      | The GUID associated to the communication outcome\t\t\t\t   |\r\n| Description               | The description of the communication outcome\t\t\t\t\t   |\r\n| IsDeleted                 | Whether the communication outcome is deleted\t                   |\r\n\t\t\t\t   ","operationId":"CommunicationOutcome_Get","consumes":["application/json"],"produces":["application/json"],"parameters":[{"name":"guid","in":"path","required":true,"type":"string","format":"uuid"},{"name":"links","in":"query","required":false,"type":"string"},{"name":"include","in":"query","required":false,"type":"string"},{"name":"expand","in":"query","required":false,"type":"string"},{"name":"udf","in":"query","required":false,"type":"string"}],"responses":{"200":{"description":"OK","schema":{"$ref":"#/definitions/ApiResourceResultEntity[ApiIntegratorCommunicationOutcomeResource]"}}}}},"/lists/communicationOutcomes":{"get":{"tags":["CommunicationOutcome"],"summary":"Find with Filters","description":"| Property                  | Description                                                              |\r\n| ------------------------- | ------------------------------------------------------------------------ |\r\n| GUID                      | The GUID associated to the communication outcome\t\t\t\t   |\r\n| Description               | The description of the communication outcome\t\t\t\t\t   |\r\n| IsDeleted                 | Whether the communication outcome is deleted\t                   |\r\n\t\t\t\t   ","operationId":"CommunicationOutcome_GetCollection","consumes":["application/json"],"produces":["application/json"],"parameters":[{"name":"filter","in":"query","required":false,"type":"string"},{"name":"search","in":"query","required":false,"type":"string"},{"name":"order","in":"query","required":false,"type":"string"},{"name":"max","in":"query","required":false,"type":"integer","format":"int32"},{"name":"page","in":"query","required":false,"type":"integer","format":"int32"},{"name":"includeCount","in":"query","required":false,"type":"boolean"},{"name":"includeDeleted","in":"query","required":false,"type":"boolean"},{"name":"links","in":"query","required":false,"type":"string"},{"name":"udf","in":"query","required":false,"type":"string"}],"responses":{"200":{"description":"OK","schema":{"$ref":"#/definitions/ApiResourceResultCollection[ApiIntegratorCommunicationOutcomeResource]"}}}}},"/lists/communicationTypes/{guid}":{"get":{"tags":["CommunicationType"],"summary":"Find with GUID","description":"| Property                  | Description                                                              |\r\n| ------------------------- | ------------------------------------------------------------------------ |\r\n| GUID                      | The GUID associated to the communication type\t\t\t\t   |\r\n| Description               | The description of the communication type\t\t\t\t\t   |\r\n| IsDeleted                 | Whether the communication type is deleted\t                   |\r\n\t\t\t\t   ","operationId":"CommunicationType_Get","consumes":["application/json"],"produces":["application/json"],"parameters":[{"name":"guid","in":"path","required":true,"type":"string","format":"uuid"},{"name":"links","in":"query","required":false,"type":"string"},{"name":"include","in":"query","required":false,"type":"string"},{"name":"expand","in":"query","required":false,"type":"string"},{"name":"udf","in":"query","required":false,"type":"string"}],"responses":{"200":{"description":"OK","schema":{"$ref":"#/definitions/ApiResourceResultEntity[ApiIntegratorCommunicationTypeResource]"}}}}},"/lists/communicationTypes":{"get":{"tags":["CommunicationType"],"summary":"Find with Filters","description":"| Property                  | Description                                                              |\r\n| ------------------------- | ------------------------------------------------------------------------ |\r\n| GUID                      | The GUID associated to the communication type\t\t\t\t   |\r\n| Description               | The description of the communication type\t\t\t\t\t   |\r\n| IsDeleted                 | Whether the communication type is deleted\t                   |\r\n\t\t\t\t   ","operationId":"CommunicationType_GetCollection","consumes":["application/json"],"produces":["application/json"],"parameters":[{"name":"filter","in":"query","required":false,"type":"string"},{"name":"search","in":"query","required":false,"type":"string"},{"name":"order","in":"query","required":false,"type":"string"},{"name":"max","in":"query","required":false,"type":"integer","format":"int32"},{"name":"page","in":"query","required":false,"type":"integer","format":"int32"},{"name":"includeCount","in":"query","required":false,"type":"boolean"},{"name":"includeDeleted","in":"query","required":false,"type":"boolean"},{"name":"links","in":"query","required":false,"type":"string"},{"name":"udf","in":"query","required":false,"type":"string"}],"responses":{"200":{"description":"OK","schema":{"$ref":"#/definitions/ApiResourceResultCollection[ApiIntegratorCommunicationTypeResource]"}}}}},"/lists/companies/changes":{"get":{"tags":["Company"],"summary":"Retrieve changes","description":"| Property                  | Description                                                              |\r\n| ------------------------- | ------------------------------------------------------------------------ |\r\n| GUID                      | The GUID associated to the company\t\t                               |\r\n| Description               | The description of the company\t\t\t\t\t                       |\r\n| AnalysisCode              | The analysis code of the company\t\t\t\t\t\t\t               |\r\n| CurrencyListItem          | The GUID and currency of the company (various values)                   |\r\n| IsDeleted                 | Whether the company is deleted\t            \t \t          \t       |\r\n","operationId":"Company_GetChanges","consumes":["application/json"],"produces":["application/json"],"parameters":[{"name":"since","in":"query","required":false,"type":"string"},{"name":"cursor","in":"query","required":false,"type":"string"},{"name":"links","in":"query","required":false,"type":"string"}],"responses":{"200":{"description":"OK","schema":{"$ref":"#/definitions/ApiResourceChanges[ApiIntegratorCompanyResource]"}}}}},"/lists/companies/{guid}":{"get":{"tags":["Company"],"summary":"Find with GUID","description":"| Property                  | Description                                                              |\r\n| ------------------------- | ------------------------------------------------------------------------ |\r\n| GUID                      | The GUID associated to the company\t\t                               |\r\n| Description               | The description of the company\t\t\t\t\t                       |\r\n| AnalysisCode              | The analysis code of the company\t\t\t\t\t\t\t               |\r\n| CurrencyListItem          | The GUID and currency of the company (various values)                   |\r\n| IsDeleted                 | Whether the company is deleted\t            \t \t          \t       |\r\n","operationId":"Company_Get","consumes":["application/json"],"produces":["application/json"],"parameters":[{"name":"guid","in":"path","required":true,"type":"string","format":"uuid"},{"name":"links","in":"query","required":false,"type":"string"},{"name":"include","in":"query","required":false,"type":"string"},{"name":"expand","in":"query","required":false,"type":"string"},{"name":"udf","in":"query","required":false,"type":"string"}],"responses":{"200":{"description":"OK","schema":{"$ref":"#/definitions/ApiResourceResultEntity[ApiIntegratorCompanyResource]"}}}}},"/lists/companies":{"get":{"tags":["Company"],"summary":"Find with Filters","description":"| Property                  | Description                                                              |\r\n| ------------------------- | ------------------------------------------------------------------------ |\r\n| GUID                      | The GUID associated to the company\t\t                               |\r\n| Description               | The description of the company\t\t\t\t\t                       |\r\n| AnalysisCode              | The analysis code of the company\t\t\t\t\t\t\t               |\r\n| CurrencyListItem          | The GUID and currency of the company (various values)                   |\r\n| IsDeleted                 | Whether the company is deleted\t            \t \t          \t       |\r\n","operationId":"Company_GetCollection","consumes":["application/json"],"produces":["application/json"],"parameters":[{"name":"filter","in":"query","required":false,"type":"string"},{"name":"search","in":"query","required":false,"type":"string"},{"name":"order","in":"query","required":false,"type":"string"},{"name":"max","in":"query","required":false,"type":"integer","format":"int32"},{"name":"page","in":"query","required":false,"type":"integer","format":"int32"},{"name":"includeCount","in":"query","required":false,"type":"boolean"},{"name":"includeDeleted","in":"query","required":false,"type":"boolean"},{"name":"links","in":"query","required":false,"type":"string"},{"name":"udf","in":"query","required":false,"type":"string"}],"responses":{"200":{"description":"OK","schema":{"$ref":"#/definitions/ApiResourceResultCollection[ApiIntegratorCompanyResource]"}}}}},"/lists/companyOutletAnalysisCodes/{guid}":{"get":{"tags":["CompanyOutletAnalysisCode"],"summary":"Find with GUID","description":"| Property                  | Description                                                  |\r\n| ------------------------- | ------------------------------------------------------------ |\r\n| GUID                      | The GUID associated to the company outlet analysis code\t   |\r\n| Description               | The description of the company outlet analysis code\t\t   |\r\n| IsDeleted                 | Whether the company outlet analysis code is deleted\t       |   ","operationId":"CompanyOutletAnalysisCode_Get","consumes":["application/json"],"produces":["application/json"],"parameters":[{"name":"guid","in":"path","required":true,"type":"string","format":"uuid"},{"name":"links","in":"query","required":false,"type":"string"},{"name":"include","in":"query","required":false,"type":"string"},{"name":"expand","in":"query","required":false,"type":"string"},{"name":"udf","in":"query","required":false,"type":"string"}],"responses":{"200":{"description":"OK","schema":{"$ref":"#/definitions/ApiResourceResultEntity[ApiIntegratorOutletAnalysisCodeResource]"}}}}},"/lists/companyOutletAnalysisCodes":{"get":{"tags":["CompanyOutletAnalysisCode"],"summary":"Find with Filters","description":"| Property                  | Description                                                  |\r\n| ------------------------- | ------------------------------------------------------------ |\r\n| GUID                      | The GUID associated to the company outlet analysis code\t   |\r\n| Description               | The description of the company outlet analysis code\t\t   |\r\n| IsDeleted                 | Whether the company outlet analysis code is deleted\t       |   ","operationId":"CompanyOutletAnalysisCode_GetCollection","consumes":["application/json"],"produces":["application/json"],"parameters":[{"name":"filter","in":"query","required":false,"type":"string"},{"name":"search","in":"query","required":false,"type":"string"},{"name":"order","in":"query","required":false,"type":"string"},{"name":"max","in":"query","required":false,"type":"integer","format":"int32"},{"name":"page","in":"query","required":false,"type":"integer","format":"int32"},{"name":"includeCount","in":"query","required":false,"type":"boolean"},{"name":"includeDeleted","in":"query","required":false,"type":"boolean"},{"name":"links","in":"query","required":false,"type":"string"},{"name":"udf","in":"query","required":false,"type":"string"}],"responses":{"200":{"description":"OK","schema":{"$ref":"#/definitions/ApiResourceResultCollection[ApiIntegratorOutletAnalysisCodeResource]"}}}}},"/directory/contacts/changes":{"get":{"tags":["Contact"],"summary":"Retrieve changes","description":"| Property\t\t\t\t\t\t\t| Description\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t   |\r\n| --------------------------------- |------------------------------------------------------------------------  |\r\n| GUID\t\t\t\t\t\t\t\t| The GUID associated to the contact.\t\t\t\t\t\t\t\t\t   |\r\n| Salutation                        | The contact's Salutation.                                                |\r\n| Forename\t\t\t\t\t\t\t| The contact's Forename.\t\t\t\t\t\t\t\t\t\t\t\t   |\r\n| Surname\t\t\t\t\t\t\t| The contact's Surname.\t\t\t\t\t\t\t\t\t\t\t\t   |\r\n| JobTitle\t\t\t\t\t\t\t| The contact's Job Title.\t\t\t\t\t\t\t\t\t\t\t\t   |\r\n| ActivationCode\t\t\t\t\t| The contact's Activation code.\t\t\t\t\t\t\t\t\t\t   |\r\n| ContactRegistrationStatusListItem | The Guid and Description associated to the contract registration status. |\r\n| AccessGroupListItem\t\t\t\t| The Guid and Description associated to the access group.                 |\r\n| PinCode\t\t\t\t\t\t\t| The Pin code of the contact.\t\t\t\t\t\t\t\t\t\t       |\r\n| ContactPassword\t\t\t\t\t| The password of the contact\t\t\t\t\t\t\t\t\t\t\t   |\r\n| ConfirmContactPassword\t\t\t| The password confirmation of the contact.\t\t\t\t\t\t\t\t   |\r\n| ContactMethods\t\t\t\t\t| The contact's contact methods.                                           |\r\n| ContactMethods.TelNo\t\t\t\t| The contact's telephone number.\t\t\t\t\t\t\t\t\t\t   |\r\n| ContactMethods.OtherTelNo\t\t\t| The contact's other telephone number.\t\t\t\t\t\t\t\t\t   |\r\n| ContactMethods Email\t\t\t\t| The contact's email address.\t\t\t\t\t\t\t\t\t\t\t   |\r\n| RelatedCustomerGuid\t\t\t\t| The GUID associated to the customer of the contact.\t\t\t\t\t   |\r\n| ContactTypeListItems\t\t\t\t| The list of contact types associated to the contact.\t\t\t\t\t   |\r\n| ContactTypeListItems[0].ContactTypeListItem | The GUID and description of contact types associated to the contact.|\r\n| RelatedLocationGuids\t\t\t\t\t\t\t\t| The list of related location guid associated to the contact.\t\t|\r\n| RelatedLocationGuids[0].RelatedLocationGuid\t\t| The GUID associated to the location of the contact.\t\t\t\t|\r\n| RelatedLocationGuids[0].IsPrimary\t\t\t\t\t| The IsPrimary associated to the location contact of the contact.\t|\r\n| RelatedLocationGuids[0].GUID\t\t\t\t\t\t| The GUID associated to the location contact of the contact.\t\t|\r\n| IsDeleted\t\t\t\t\t\t\t| Whether the contact is deleted.\t\t\t\t\t\t\t\t\t\t\t|\r\n| RelatedLocationGuidFilter                      | Used to filter the related location guid linked to the contact\t    |\r\n\r\n","operationId":"Contact_GetChanges","consumes":["application/json"],"produces":["application/json"],"parameters":[{"name":"since","in":"query","required":false,"type":"string"},{"name":"cursor","in":"query","required":false,"type":"string"},{"name":"links","in":"query","required":false,"type":"string"}],"responses":{"200":{"description":"OK","schema":{"$ref":"#/definitions/ApiResourceChanges[ApiIntegratorContactResource]"}}}}},"/directory/contacts/{guid}":{"get":{"tags":["Contact"],"summary":"Find with GUID","description":"| Property\t\t\t\t\t\t\t| Description\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t   |\r\n| --------------------------------- |------------------------------------------------------------------------  |\r\n| GUID\t\t\t\t\t\t\t\t| The GUID associated to the contact.\t\t\t\t\t\t\t\t\t   |\r\n| Salutation                        | The contact's Salutation.                                                |\r\n| Forename\t\t\t\t\t\t\t| The contact's Forename.\t\t\t\t\t\t\t\t\t\t\t\t   |\r\n| Surname\t\t\t\t\t\t\t| The contact's Surname.\t\t\t\t\t\t\t\t\t\t\t\t   |\r\n| JobTitle\t\t\t\t\t\t\t| The contact's Job Title.\t\t\t\t\t\t\t\t\t\t\t\t   |\r\n| ActivationCode\t\t\t\t\t| The contact's Activation code.\t\t\t\t\t\t\t\t\t\t   |\r\n| ContactRegistrationStatusListItem | The Guid and Description associated to the contract registration status. |\r\n| AccessGroupListItem\t\t\t\t| The Guid and Description associated to the access group.                 |\r\n| PinCode\t\t\t\t\t\t\t| The Pin code of the contact.\t\t\t\t\t\t\t\t\t\t       |\r\n| ContactPassword\t\t\t\t\t| The password of the contact\t\t\t\t\t\t\t\t\t\t\t   |\r\n| ConfirmContactPassword\t\t\t| The password confirmation of the contact.\t\t\t\t\t\t\t\t   |\r\n| ContactMethods\t\t\t\t\t| The contact's contact methods.                                           |\r\n| ContactMethods.TelNo\t\t\t\t| The contact's telephone number.\t\t\t\t\t\t\t\t\t\t   |\r\n| ContactMethods.OtherTelNo\t\t\t| The contact's other telephone number.\t\t\t\t\t\t\t\t\t   |\r\n| ContactMethods Email\t\t\t\t| The contact's email address.\t\t\t\t\t\t\t\t\t\t\t   |\r\n| RelatedCustomerGuid\t\t\t\t| The GUID associated to the customer of the contact.\t\t\t\t\t   |\r\n| ContactTypeListItems\t\t\t\t| The list of contact types associated to the contact.\t\t\t\t\t   |\r\n| ContactTypeListItems[0].ContactTypeListItem | The GUID and description of contact types associated to the contact.|\r\n| RelatedLocationGuids\t\t\t\t\t\t\t\t| The list of related location guid associated to the contact.\t\t|\r\n| RelatedLocationGuids[0].RelatedLocationGuid\t\t| The GUID associated to the location of the contact.\t\t\t\t|\r\n| RelatedLocationGuids[0].IsPrimary\t\t\t\t\t| The IsPrimary associated to the location contact of the contact.\t|\r\n| RelatedLocationGuids[0].GUID\t\t\t\t\t\t| The GUID associated to the location contact of the contact.\t\t|\r\n| IsDeleted\t\t\t\t\t\t\t| Whether the contact is deleted.\t\t\t\t\t\t\t\t\t\t\t|\r\n| RelatedLocationGuidFilter                      | Used to filter the related location guid linked to the contact\t    |\r\n\r\n","operationId":"Contact_Get","consumes":["application/json"],"produces":["application/json"],"parameters":[{"name":"guid","in":"path","required":true,"type":"string","format":"uuid"},{"name":"links","in":"query","required":false,"type":"string"},{"name":"include","in":"query","required":false,"type":"string"},{"name":"expand","in":"query","required":false,"type":"string"},{"name":"udf","in":"query","required":false,"type":"string"}],"responses":{"200":{"description":"OK","schema":{"$ref":"#/definitions/ApiResourceResultEntity[ApiIntegratorContactResource]"}}}},"put":{"tags":["Contact"],"summary":"Partial update","description":"| Property\t\t\t\t\t\t\t| Description\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t   | Required |\r\n| --------------------------------- |------------------------------------------------------------------------- | -------- |\r\n| GUID\t\t\t\t\t\t\t\t| The GUID associated to the contact.\t\t\t\t\t\t\t\t\t   | No\t\t  |\r\n| Salutation                        | The contact's Salutation.                                                | No       |\r\n| Forename\t\t\t\t\t\t\t| The contact's Forename.\t\t\t\t\t\t\t\t\t\t\t\t   | No       |\r\n| Surname\t\t\t\t\t\t\t| The contact's Surname.\t\t\t\t\t\t\t\t\t\t\t\t   | Yes      |\r\n| JobTitle\t\t\t\t\t\t\t| The contact's Job Title.\t\t\t\t\t\t\t\t\t\t\t\t   | No\t\t  |\r\n| ActivationCode\t\t\t\t\t| The contact's Activation code.\t\t\t\t\t\t\t\t\t\t   | No\t\t  |\r\n| ContactRegistrationStatusListItem | The Guid and Description associated to the contract registration status. | Yes\t  |\r\n| AccessGroupListItem\t\t\t\t| The Guid and Description associated to the access group.                 | Yes\t  |\r\n| PinCode\t\t\t\t\t\t\t| The contact's Pin code.\t\t\t\t\t\t\t\t\t\t\t       | Yes\t  |\r\n| ContactPassword\t\t\t\t\t| The contact's password.\t\t\t\t\t\t\t\t\t\t\t\t   | Yes\t  |\r\n| ConfirmContactPassword\t\t\t| The contact's password confirmation.\t\t\t\t\t\t\t\t\t   | Yes\t  |\r\n| ContactMethods\t\t\t\t\t| The contact's contact methods.                                           | No \t  |\r\n| ContactMethods.TelNo\t\t\t\t| The contact's telephone number.\t\t\t\t\t\t\t\t\t\t   | No \t  |\r\n| ContactMethods.OtherTelNo\t\t\t| The contact's other telephone number.\t\t\t\t\t\t\t\t\t   | No\t\t  |\r\n| ContactMethods.Email\t\t\t\t| The contact's email address.\t\t\t\t\t\t\t\t\t\t\t   | No       |\r\n| RelatedCustomerGuid\t\t\t\t| The GUID associated to the customer of the contact.\t\t\t\t\t   | Yes\t  |\r\n| ContactTypeListItems\t\t\t\t| The list of contact types associated to the contact.\t\t\t\t\t   | No\t\t  |\r\n| ContactTypeListItems[0].ContactTypeListItem | The GUID and description of contact types associated to the contact.| No  |\r\n| RelatedLocationGuids\t\t\t\t\t\t\t\t| The list of related location guid associated to the contact.\t\t| No |\r\n| RelatedLocationGuids[0].RelatedLocationGuid\t\t| The GUID associated to the location of the contact.\t\t\t\t| Yes |\r\n| RelatedLocationGuids[0].IsPrimary\t\t\t\t\t| The IsPrimary associated to the location contact of the contact.\t| No |\r\n| RelatedLocationGuids[0].GUID\t\t\t\t\t\t| The GUID associated to the location contact of the contact.\t\t| No |\r\n| IsDeleted\t\t\t\t\t\t\t| Whether the contact is deleted.\t\t\t\t\t\t\t\t\t\t\t| No      |\r\n| RelatedLocationGuidFilter         | Used to filter the related location guid linked to the contact\t        | No\t  |\r\n\r\n## Extra validations\r\n\r\n| Condition | Error message |\r\n| --------- | ------------- |\r\n| If invalid telephone number | Tel No: Must match a valid telephone number format. |\r\n| If activationCode is provided | ContactRegistrationStatusListItem, AccessGroupListItem, PinCode, ContactMethods.Email, ContactMethods.TelNo, ContactPassword & ConfirmContactPassword are required  |\r\n| If contact is a portal contact the Activation code cannot be set to null | \"Activation Code: Must have a value for portal contacts and be no more than 16 characters long\". |\r\n| If ContactTypeListItems[0].ContactTypeListItem.GUID is duplicated on another ContactTypeListItem | Failed to save. ContactTypeListItems already exists with Guid of xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx |\r\n| RelatedLocationGuids replace existing | All existing RelatedLocationGuids are deleted and replaced when the resource is updated. |\r\n| If same Location Guid is provided to a contact| LocationContact already exists with RelatedLocationGuids.RelatedLocationGuid of {value of RelatedLocationGuid}. |\r\n| If trying to update the deleted resource | Attempt to update a deleted Contact. Could not process the request. |\r\n| If activation code is Duplicated | Failed to save. Entity already exists with ActivationCode of {value of ActivationCode}. | ","operationId":"Contact_Update","consumes":["application/json"],"produces":["application/json"],"parameters":[{"name":"guid","in":"path","required":true,"type":"string","format":"uuid"},{"in":"body","required":true,"schema":{"$ref":"#/definitions/ApiResourceId"}}],"responses":{"200":{"description":"OK","schema":{"$ref":"#/definitions/ApiResourceId"}}}}},"/directory/contacts":{"get":{"tags":["Contact"],"summary":"Find with Filters","description":"| Property\t\t\t\t\t\t\t| Description\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t   |\r\n| --------------------------------- |------------------------------------------------------------------------  |\r\n| GUID\t\t\t\t\t\t\t\t| The GUID associated to the contact.\t\t\t\t\t\t\t\t\t   |\r\n| Salutation                        | The contact's Salutation.                                                |\r\n| Forename\t\t\t\t\t\t\t| The contact's Forename.\t\t\t\t\t\t\t\t\t\t\t\t   |\r\n| Surname\t\t\t\t\t\t\t| The contact's Surname.\t\t\t\t\t\t\t\t\t\t\t\t   |\r\n| JobTitle\t\t\t\t\t\t\t| The contact's Job Title.\t\t\t\t\t\t\t\t\t\t\t\t   |\r\n| ActivationCode\t\t\t\t\t| The contact's Activation code.\t\t\t\t\t\t\t\t\t\t   |\r\n| ContactRegistrationStatusListItem | The Guid and Description associated to the contract registration status. |\r\n| AccessGroupListItem\t\t\t\t| The Guid and Description associated to the access group.                 |\r\n| PinCode\t\t\t\t\t\t\t| The Pin code of the contact.\t\t\t\t\t\t\t\t\t\t       |\r\n| ContactPassword\t\t\t\t\t| The password of the contact\t\t\t\t\t\t\t\t\t\t\t   |\r\n| ConfirmContactPassword\t\t\t| The password confirmation of the contact.\t\t\t\t\t\t\t\t   |\r\n| ContactMethods\t\t\t\t\t| The contact's contact methods.                                           |\r\n| ContactMethods.TelNo\t\t\t\t| The contact's telephone number.\t\t\t\t\t\t\t\t\t\t   |\r\n| ContactMethods.OtherTelNo\t\t\t| The contact's other telephone number.\t\t\t\t\t\t\t\t\t   |\r\n| ContactMethods Email\t\t\t\t| The contact's email address.\t\t\t\t\t\t\t\t\t\t\t   |\r\n| RelatedCustomerGuid\t\t\t\t| The GUID associated to the customer of the contact.\t\t\t\t\t   |\r\n| ContactTypeListItems\t\t\t\t| The list of contact types associated to the contact.\t\t\t\t\t   |\r\n| ContactTypeListItems[0].ContactTypeListItem | The GUID and description of contact types associated to the contact.|\r\n| RelatedLocationGuids\t\t\t\t\t\t\t\t| The list of related location guid associated to the contact.\t\t|\r\n| RelatedLocationGuids[0].RelatedLocationGuid\t\t| The GUID associated to the location of the contact.\t\t\t\t|\r\n| RelatedLocationGuids[0].IsPrimary\t\t\t\t\t| The IsPrimary associated to the location contact of the contact.\t|\r\n| RelatedLocationGuids[0].GUID\t\t\t\t\t\t| The GUID associated to the location contact of the contact.\t\t|\r\n| IsDeleted\t\t\t\t\t\t\t| Whether the contact is deleted.\t\t\t\t\t\t\t\t\t\t\t|\r\n| RelatedLocationGuidFilter                      | Used to filter the related location guid linked to the contact\t    |\r\n\r\n","operationId":"Contact_GetCollection","consumes":["application/json"],"produces":["application/json"],"parameters":[{"name":"filter","in":"query","required":false,"type":"string"},{"name":"search","in":"query","required":false,"type":"string"},{"name":"order","in":"query","required":false,"type":"string"},{"name":"max","in":"query","required":false,"type":"integer","format":"int32"},{"name":"page","in":"query","required":false,"type":"integer","format":"int32"},{"name":"includeCount","in":"query","required":false,"type":"boolean"},{"name":"includeDeleted","in":"query","required":false,"type":"boolean"},{"name":"links","in":"query","required":false,"type":"string"},{"name":"udf","in":"query","required":false,"type":"string"}],"responses":{"200":{"description":"OK","schema":{"$ref":"#/definitions/ApiResourceResultCollection[ApiIntegratorContactResource]"}}}},"post":{"tags":["Contact"],"summary":"Create or update","description":"| Property\t\t\t\t\t\t\t| Description\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t   | Required |\r\n| --------------------------------- |------------------------------------------------------------------------- | -------- |\r\n| GUID\t\t\t\t\t\t\t\t| The GUID associated to the contact.\t\t\t\t\t\t\t\t\t   | No\t\t  |\r\n| Salutation                        | The contact's Salutation.                                                | No       |\r\n| Forename\t\t\t\t\t\t\t| The contact's Forename.\t\t\t\t\t\t\t\t\t\t\t\t   | No       |\r\n| Surname\t\t\t\t\t\t\t| The contact's Surname.\t\t\t\t\t\t\t\t\t\t\t\t   | Yes      |\r\n| JobTitle\t\t\t\t\t\t\t| The contact's Job Title.\t\t\t\t\t\t\t\t\t\t\t\t   | No\t\t  |\r\n| ActivationCode\t\t\t\t\t| The contact's Activation code.\t\t\t\t\t\t\t\t\t\t   | No\t\t  |\r\n| ContactRegistrationStatusListItem | The Guid and Description associated to the contract registration status. | Yes\t  |\r\n| AccessGroupListItem\t\t\t\t| The Guid and Description associated to the access group.                 | Yes\t  |\r\n| PinCode\t\t\t\t\t\t\t| The contact's Pin code.\t\t\t\t\t\t\t\t\t\t\t       | Yes\t  |\r\n| ContactPassword\t\t\t\t\t| The contact's password.\t\t\t\t\t\t\t\t\t\t\t\t   | Yes\t  |\r\n| ConfirmContactPassword\t\t\t| The contact's password confirmation.\t\t\t\t\t\t\t\t\t   | Yes\t  |\r\n| ContactMethods\t\t\t\t\t| The contact's contact methods.                                           | No \t  |\r\n| ContactMethods.TelNo\t\t\t\t| The contact's telephone number.\t\t\t\t\t\t\t\t\t\t   | No \t  |\r\n| ContactMethods.OtherTelNo\t\t\t| The contact's other telephone number.\t\t\t\t\t\t\t\t\t   | No\t\t  |\r\n| ContactMethods.Email\t\t\t\t| The contact's email address.\t\t\t\t\t\t\t\t\t\t\t   | No       |\r\n| RelatedCustomerGuid\t\t\t\t| The GUID associated to the customer of the contact.\t\t\t\t\t   | Yes\t  |\r\n| ContactTypeListItems\t\t\t\t| The list of contact types associated to the contact.\t\t\t\t\t   | No\t\t  |\r\n| ContactTypeListItems[0].ContactTypeListItem | The GUID and description of contact types associated to the contact.| No  |\r\n| RelatedLocationGuids\t\t\t\t\t\t\t\t| The list of related location guid associated to the contact.\t\t| No |\r\n| RelatedLocationGuids[0].RelatedLocationGuid\t\t| The GUID associated to the location of the contact.\t\t\t\t| Yes |\r\n| RelatedLocationGuids[0].IsPrimary\t\t\t\t\t| The IsPrimary associated to the location contact of the contact.\t| No |\r\n| RelatedLocationGuids[0].GUID\t\t\t\t\t\t| The GUID associated to the location contact of the contact.\t\t| No |\r\n| IsDeleted\t\t\t\t\t\t\t| Whether the contact is deleted.\t\t\t\t\t\t\t\t\t\t\t| No      |\r\n| RelatedLocationGuidFilter         | Used to filter the related location guid linked to the contact\t       | No\t      |\r\n\r\n## Extra validations\r\n\r\n| Condition | Error message |\r\n| --------- | ------------- |\r\n| If invalid telephone number | Tel No: Must match a valid telephone number format. |\r\n| If activationCode is provided | ContactRegistrationStatusListItem, AccessGroupListItem, PinCode, ContactMethods.Email, ContactMethods.TelNo, ContactPassword & ConfirmContactPassword are required  |\r\n| If contact is a portal contact the Activation code cannot be set to null | \"Activation Code: Must have a value for portal contacts and be no more than 16 characters long\". |\r\n| If ContactTypeListItems[0].ContactTypeListItem.GUID is duplicated on another ContactTypeListItem | Failed to save. ContactTypeListItems already exists with Guid of xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx |\r\n| RelatedLocationGuids replace existing | All existing RelatedLocationGuids are deleted and replaced when the resource is updated. |\r\n| If same Location Guid is provided to a contact| LocationContact already exists with RelatedLocationGuids.RelatedLocationGuid of {value of RelatedLocationGuid}. |\r\n| If isDeleted true | IsDeleted is TRUE. Could not process the request. Resources can not be deleted via the REST API. |\r\n| If activation code is Duplicated | Failed to save. Entity already exists with ActivationCode of {value of ActivationCode}. | ","operationId":"Contact_Create","consumes":["application/json"],"produces":["application/json"],"parameters":[{"in":"body","required":true,"schema":{"$ref":"#/definitions/ApiResourceId"}}],"responses":{"200":{"description":"OK","schema":{"$ref":"#/definitions/ApiResourceId"}}}}},"/lists/contactRegistrationStatuses/{guid}":{"get":{"tags":["ContactRegistrationStatus"],"summary":"Find with GUID","description":"| Property                  | Description                                                              |\r\n| ------------------------- | ------------------------------------------------------------------------ |\r\n| GUID                      | The GUID associated to the contact registration status                   |\r\n| Description               | The description of the contact registration status                       |","operationId":"ContactRegistrationStatus_Get","consumes":["application/json"],"produces":["application/json"],"parameters":[{"name":"guid","in":"path","required":true,"type":"string","format":"uuid"},{"name":"links","in":"query","required":false,"type":"string"},{"name":"include","in":"query","required":false,"type":"string"},{"name":"expand","in":"query","required":false,"type":"string"},{"name":"udf","in":"query","required":false,"type":"string"}],"responses":{"200":{"description":"OK","schema":{"$ref":"#/definitions/ApiResourceResultEntity[ApiIntegratorContactRegistrationStatusResource]"}}}}},"/lists/contactRegistrationStatuses":{"get":{"tags":["ContactRegistrationStatus"],"summary":"Find with Filters","description":"| Property                  | Description                                                              |\r\n| ------------------------- | ------------------------------------------------------------------------ |\r\n| GUID                      | The GUID associated to the contact registration status                   |\r\n| Description               | The description of the contact registration status                       |","operationId":"ContactRegistrationStatus_GetCollection","consumes":["application/json"],"produces":["application/json"],"parameters":[{"name":"filter","in":"query","required":false,"type":"string"},{"name":"search","in":"query","required":false,"type":"string"},{"name":"order","in":"query","required":false,"type":"string"},{"name":"max","in":"query","required":false,"type":"integer","format":"int32"},{"name":"page","in":"query","required":false,"type":"integer","format":"int32"},{"name":"includeCount","in":"query","required":false,"type":"boolean"},{"name":"includeDeleted","in":"query","required":false,"type":"boolean"},{"name":"links","in":"query","required":false,"type":"string"},{"name":"udf","in":"query","required":false,"type":"string"}],"responses":{"200":{"description":"OK","schema":{"$ref":"#/definitions/ApiResourceResultCollection[ApiIntegratorContactRegistrationStatusResource]"}}}}},"/lists/contactTypes/{guid}":{"get":{"tags":["ContactType"],"summary":"Find with GUID","description":"| Property\t\t\t\t\t\t\t| Description\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t   |\r\n| --------------------------------- |------------------------------------------------------------------------  |\r\n| GUID\t\t\t\t\t\t\t\t| The GUID associated to the contact type.\t\t\t\t\t\t\t\t   |\r\n| Description\t\t\t\t\t\t| The description associated to the contact type.\t\t\t\t\t\t\t\t\t\t   |\r\n","operationId":"ContactType_Get","consumes":["application/json"],"produces":["application/json"],"parameters":[{"name":"guid","in":"path","required":true,"type":"string","format":"uuid"},{"name":"links","in":"query","required":false,"type":"string"},{"name":"include","in":"query","required":false,"type":"string"},{"name":"expand","in":"query","required":false,"type":"string"},{"name":"udf","in":"query","required":false,"type":"string"}],"responses":{"200":{"description":"OK","schema":{"$ref":"#/definitions/ApiResourceResultEntity[ApiIntegratorContactTypeResource]"}}}}},"/lists/contactTypes":{"get":{"tags":["ContactType"],"summary":"Find with Filters","description":"| Property\t\t\t\t\t\t\t| Description\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t   |\r\n| --------------------------------- |------------------------------------------------------------------------  |\r\n| GUID\t\t\t\t\t\t\t\t| The GUID associated to the contact type.\t\t\t\t\t\t\t\t   |\r\n| Description\t\t\t\t\t\t| The description associated to the contact type.\t\t\t\t\t\t\t\t\t\t   |\r\n","operationId":"ContactType_GetCollection","consumes":["application/json"],"produces":["application/json"],"parameters":[{"name":"filter","in":"query","required":false,"type":"string"},{"name":"search","in":"query","required":false,"type":"string"},{"name":"order","in":"query","required":false,"type":"string"},{"name":"max","in":"query","required":false,"type":"integer","format":"int32"},{"name":"page","in":"query","required":false,"type":"integer","format":"int32"},{"name":"includeCount","in":"query","required":false,"type":"boolean"},{"name":"includeDeleted","in":"query","required":false,"type":"boolean"},{"name":"links","in":"query","required":false,"type":"string"},{"name":"udf","in":"query","required":false,"type":"string"}],"responses":{"200":{"description":"OK","schema":{"$ref":"#/definitions/ApiResourceResultCollection[ApiIntegratorContactTypeResource]"}}}}},"/directory/containers/changes":{"get":{"tags":["Container"],"summary":"Retrieve changes","description":"| Property                            | Description                                                      |\r\n| ----------------------------------- | ---------------------------------------------------------------- |\r\n| GUID                                | The GUID associated to the container.                            |\r\n| IsDeleted                           | Whether the container is deleted                                 |\r\n| IsCommercial                        | Is this container for commercial use?                            |\r\n| IsStoplisted                        | Is this container stop listed?                                   |\r\n| TipLocationListItem                 | The GUID and description of the tip location this container is associated to.     |\r\n| ContainerStatusListItem             | The GUID and description of the container status this container is associated to. |\r\n| ContainerTypeListItem               | The GUID and description of the container type this container is associated to. |\r\n| LastChangeReasonListItem            | The GUID and description of the reason this container was last changed.  |\r\n| CompanyOutletListItem               | The GUID and name of the company outlet this container is associated to. |\r\n| Manufacture                         | The container's manufacture information.                           |\r\n| Manufacture.DateOfDelivery          | The container's date of delivery in ISO format (YYYY-MM-DD).       |\r\n| Manufacture.DateOfManufacture       | The container's manufacture date in ISO format (YYYY-MM-DD).       |\r\n| Manufacture.WarrantyEndDate         | The container's warranty end date in ISO format (YYYY-MM-DD).      |\r\n| Manufacture.RelatedSupplierSiteGuid | The GUID of the supplier site related to the manufacturer of the container.|\r\n| Manufacture.RelatedAppliedCostGuid  | The GUID of the applied cost related to the purchase of the container.|\r\n| Geo                                 | The geographical associated to the container.                      |\r\n| Geo.Latitude                        | The geographical latitude associated to the container.             |\r\n| Geo.Longitude                       | The geographical longitude associated to the container.            |\r\n| Note                                | The container's note.                                              |\r\n| SerialNo                            | The container's serial number.                                     |\r\n| Tag                                 | The container's tag.                                               |","operationId":"Container_GetChanges","consumes":["application/json"],"produces":["application/json"],"parameters":[{"name":"since","in":"query","required":false,"type":"string"},{"name":"cursor","in":"query","required":false,"type":"string"},{"name":"links","in":"query","required":false,"type":"string"}],"responses":{"200":{"description":"OK","schema":{"$ref":"#/definitions/ApiResourceChanges[ApiIntegratorContainerResource]"}}}}},"/directory/containers/{guid}":{"get":{"tags":["Container"],"summary":"Find with GUID","description":"| Property                            | Description                                                      |\r\n| ----------------------------------- | ---------------------------------------------------------------- |\r\n| GUID                                | The GUID associated to the container.                            |\r\n| IsDeleted                           | Whether the container is deleted                                 |\r\n| IsCommercial                        | Is this container for commercial use?                            |\r\n| IsStoplisted                        | Is this container stop listed?                                   |\r\n| TipLocationListItem                 | The GUID and description of the tip location this container is associated to.     |\r\n| ContainerStatusListItem             | The GUID and description of the container status this container is associated to. |\r\n| ContainerTypeListItem               | The GUID and description of the container type this container is associated to. |\r\n| LastChangeReasonListItem            | The GUID and description of the reason this container was last changed.  |\r\n| CompanyOutletListItem               | The GUID and name of the company outlet this container is associated to. |\r\n| Manufacture                         | The container's manufacture information.                           |\r\n| Manufacture.DateOfDelivery          | The container's date of delivery in ISO format (YYYY-MM-DD).       |\r\n| Manufacture.DateOfManufacture       | The container's manufacture date in ISO format (YYYY-MM-DD).       |\r\n| Manufacture.WarrantyEndDate         | The container's warranty end date in ISO format (YYYY-MM-DD).      |\r\n| Manufacture.RelatedSupplierSiteGuid | The GUID of the supplier site related to the manufacturer of the container.|\r\n| Manufacture.RelatedAppliedCostGuid  | The GUID of the applied cost related to the purchase of the container.|\r\n| Geo                                 | The geographical associated to the container.                      |\r\n| Geo.Latitude                        | The geographical latitude associated to the container.             |\r\n| Geo.Longitude                       | The geographical longitude associated to the container.            |\r\n| Note                                | The container's note.                                              |\r\n| SerialNo                            | The container's serial number.                                     |\r\n| Tag                                 | The container's tag.                                               |","operationId":"Container_Get","consumes":["application/json"],"produces":["application/json"],"parameters":[{"name":"guid","in":"path","required":true,"type":"string","format":"uuid"},{"name":"links","in":"query","required":false,"type":"string"},{"name":"include","in":"query","required":false,"type":"string"},{"name":"expand","in":"query","required":false,"type":"string"},{"name":"udf","in":"query","required":false,"type":"string"}],"responses":{"200":{"description":"OK","schema":{"$ref":"#/definitions/ApiResourceResultEntity[ApiIntegratorContainerResource]"}}}},"put":{"tags":["Container"],"summary":"Partial update","description":"| Property                            | Description                                                      | Required |\r\n| ----------------------------------- | ---------------------------------------------------------------- | -------- |\r\n| GUID                                | The GUID associated to the container.                            | No |\r\n| IsDeleted                           | Whether the container is deleted                                 | Yes |\r\n| IsCommercial                        | Is this container for commercial use?                            | Yes |\r\n| IsStoplisted                        | Is this container stop listed?                                   | Yes |\r\n| TipLocationListItem                 | The GUID and description of the tip location this container is associated to.     | No |\r\n| ContainerStatusListItem             | The GUID and description of the container status this container is associated to. | No |\r\n| ContainerTypeListItem               | The GUID and description of the container type this container is associated to. | Yes |\r\n| LastChangeReasonListItem            | The GUID and description of the reason this container was last changed.  | No |\r\n| CompanyOutletListItem               | The GUID and name of the company outlet this container is associated to. | No |\r\n| Manufacture                         | The container's manufacture information.                           | No |\r\n| Manufacture.DateOfDelivery          | The container's date of delivery in ISO format (YYYY-MM-DD).       | No |\r\n| Manufacture.DateOfManufacture       | The container's manufacture date in ISO format (YYYY-MM-DD).       | No |\r\n| Manufacture.WarrantyEndDate         | The container's warranty end date in ISO format (YYYY-MM-DD).      | No |\r\n| Manufacture.RelatedSupplierSiteGuid | The GUID of the supplier site related to the manufacturer of the container.| No |\r\n| Manufacture.RelatedAppliedCostGuid  | The GUID of the applied cost related to the purchase of the container.| No |\r\n| Geo                                 | The geographical associated to the container.                      | No |\r\n| Geo.Latitude                        | The geographical latitude associated to the container.             | No |\r\n| Geo.Longitude                       | The geographical longitude associated to the container.            | No |\r\n| Note                                | The container's note.                                              | No |\r\n| SerialNo                            | The container's serial number.                                     | No |\r\n| Tag                                 | The container's tag.                                               | Yes |\r\n\r\n## Extra validations\r\n\r\n| Condition | Error message |\r\n| --------- | ------------- |\r\n| Tag is not unique | The container must be unique per tag. |\r\n| If IsDeleted is true |IsDeleted is TRUE. Could not process the request. Containers can not be deleted via the REST API. |\r\n| If IsDeleted is null or not provided |The mandatory property IsDeleted has a null value. The request could not be processed. Supply a value for the IsDeleted property of the submitted resource. |\r\n| If the TipLocationListItem.Guid belongs to a deleted TipLocation | The provided TipLocationListItem is deleted. Could not update the resource. Please check the relevant list end point for the available options. |","operationId":"Container_Update","consumes":["application/json"],"produces":["application/json"],"parameters":[{"name":"guid","in":"path","required":true,"type":"string","format":"uuid"},{"in":"body","required":true,"schema":{"$ref":"#/definitions/ApiResourceId"}}],"responses":{"200":{"description":"OK","schema":{"$ref":"#/definitions/ApiResourceId"}}}}},"/directory/containers":{"get":{"tags":["Container"],"summary":"Find with Filters","description":"| Property                            | Description                                                      |\r\n| ----------------------------------- | ---------------------------------------------------------------- |\r\n| GUID                                | The GUID associated to the container.                            |\r\n| IsDeleted                           | Whether the container is deleted                                 |\r\n| IsCommercial                        | Is this container for commercial use?                            |\r\n| IsStoplisted                        | Is this container stop listed?                                   |\r\n| TipLocationListItem                 | The GUID and description of the tip location this container is associated to.     |\r\n| ContainerStatusListItem             | The GUID and description of the container status this container is associated to. |\r\n| ContainerTypeListItem               | The GUID and description of the container type this container is associated to. |\r\n| LastChangeReasonListItem            | The GUID and description of the reason this container was last changed.  |\r\n| CompanyOutletListItem               | The GUID and name of the company outlet this container is associated to. |\r\n| Manufacture                         | The container's manufacture information.                           |\r\n| Manufacture.DateOfDelivery          | The container's date of delivery in ISO format (YYYY-MM-DD).       |\r\n| Manufacture.DateOfManufacture       | The container's manufacture date in ISO format (YYYY-MM-DD).       |\r\n| Manufacture.WarrantyEndDate         | The container's warranty end date in ISO format (YYYY-MM-DD).      |\r\n| Manufacture.RelatedSupplierSiteGuid | The GUID of the supplier site related to the manufacturer of the container.|\r\n| Manufacture.RelatedAppliedCostGuid  | The GUID of the applied cost related to the purchase of the container.|\r\n| Geo                                 | The geographical associated to the container.                      |\r\n| Geo.Latitude                        | The geographical latitude associated to the container.             |\r\n| Geo.Longitude                       | The geographical longitude associated to the container.            |\r\n| Note                                | The container's note.                                              |\r\n| SerialNo                            | The container's serial number.                                     |\r\n| Tag                                 | The container's tag.                                               |","operationId":"Container_GetCollection","consumes":["application/json"],"produces":["application/json"],"parameters":[{"name":"filter","in":"query","required":false,"type":"string"},{"name":"search","in":"query","required":false,"type":"string"},{"name":"order","in":"query","required":false,"type":"string"},{"name":"max","in":"query","required":false,"type":"integer","format":"int32"},{"name":"page","in":"query","required":false,"type":"integer","format":"int32"},{"name":"includeCount","in":"query","required":false,"type":"boolean"},{"name":"includeDeleted","in":"query","required":false,"type":"boolean"},{"name":"links","in":"query","required":false,"type":"string"},{"name":"udf","in":"query","required":false,"type":"string"}],"responses":{"200":{"description":"OK","schema":{"$ref":"#/definitions/ApiResourceResultCollection[ApiIntegratorContainerResource]"}}}},"post":{"tags":["Container"],"summary":"Create or update","description":"| Property                            | Description                                                      | Required |\r\n| ----------------------------------- | ---------------------------------------------------------------- | -------- |\r\n| GUID                                | The GUID associated to the container.                            | No |\r\n| IsDeleted                           | Whether the container is deleted                                 | Yes |\r\n| IsCommercial                        | Is this container for commercial use?                            | Yes |\r\n| IsStoplisted                        | Is this container stop listed?                                   | Yes |\r\n| TipLocationListItem                 | The GUID and description of the tip location this container is associated to.     | No |\r\n| ContainerStatusListItem             | The GUID and description of the container status this container is associated to. | No |\r\n| ContainerTypeListItem               | The GUID and description of the container type this container is associated to. | Yes |\r\n| LastChangeReasonListItem            | The GUID and description of the reason this container was last changed.  | No |\r\n| CompanyOutletListItem               | The GUID and name of the company outlet this container is associated to. | No |\r\n| Manufacture                         | The container's manufacture information.                           | No |\r\n| Manufacture.DateOfDelivery          | The container's date of delivery in ISO format (YYYY-MM-DD).       | No |\r\n| Manufacture.DateOfManufacture       | The container's manufacture date in ISO format (YYYY-MM-DD).       | No |\r\n| Manufacture.WarrantyEndDate         | The container's warranty end date in ISO format (YYYY-MM-DD).      | No |\r\n| Manufacture.RelatedSupplierSiteGuid | The GUID of the supplier site related to the manufacturer of the container.| No |\r\n| Manufacture.RelatedAppliedCostGuid  | The GUID of the applied cost related to the purchase of the container.| No |\r\n| Geo                                 | The geographical associated to the container.                      | No |\r\n| Geo.Latitude                        | The geographical latitude associated to the container.             | No |\r\n| Geo.Longitude                       | The geographical longitude associated to the container.            | No |\r\n| Note                                | The container's note.                                              | No |\r\n| SerialNo                            | The container's serial number.                                     | No |\r\n| Tag                                 | The container's tag.                                               | Yes |\r\n\r\n## Extra validations\r\n\r\n| Condition | Error message |\r\n| --------- | ------------- |\r\n| Tag is not unique | The container must be unique per tag. |\r\n| If IsDeleted is true |IsDeleted is TRUE. Could not process the request. Containers can not be deleted via the REST API. |\r\n| If IsDeleted is null or not provided |The mandatory property IsDeleted has a null value. The request could not be processed. Supply a value for the IsDeleted property of the submitted resource. |\r\n| If the TipLocationListItem.Guid belongs to a deleted TipLocation | The provided TipLocationListItem is deleted. Could not update the resource. Please check the relevant list end point for the available options. |","operationId":"Container_Create","consumes":["application/json"],"produces":["application/json"],"parameters":[{"in":"body","required":true,"schema":{"$ref":"#/definitions/ApiResourceId"}}],"responses":{"200":{"description":"OK","schema":{"$ref":"#/definitions/ApiResourceId"}}}}},"/lists/containerCategories/{guid}":{"get":{"tags":["ContainerCategory"],"summary":"Find with GUID","description":"| Property                  | Description                                                              |\r\n| ------------------------- | ------------------------------------------------------------------------ |\r\n| GUID                      | The GUID associated to the container category                            |\r\n| Description               | The description of the container category                                |\r\n| AnalysisCode              | The analysis code of the container category                              |\r\n| IsDeleted                 | Whether the container category is deleted\t            \t \t\t\t   |\r\n","operationId":"ContainerCategory_Get","consumes":["application/json"],"produces":["application/json"],"parameters":[{"name":"guid","in":"path","required":true,"type":"string","format":"uuid"},{"name":"links","in":"query","required":false,"type":"string"},{"name":"include","in":"query","required":false,"type":"string"},{"name":"expand","in":"query","required":false,"type":"string"},{"name":"udf","in":"query","required":false,"type":"string"}],"responses":{"200":{"description":"OK","schema":{"$ref":"#/definitions/ApiResourceResultEntity[ApiIntegratorContainerCategoryResource]"}}}}},"/lists/containerCategories":{"get":{"tags":["ContainerCategory"],"summary":"Find with Filters","description":"| Property                  | Description                                                              |\r\n| ------------------------- | ------------------------------------------------------------------------ |\r\n| GUID                      | The GUID associated to the container category                            |\r\n| Description               | The description of the container category                                |\r\n| AnalysisCode              | The analysis code of the container category                              |\r\n| IsDeleted                 | Whether the container category is deleted\t            \t \t\t\t   |\r\n","operationId":"ContainerCategory_GetCollection","consumes":["application/json"],"produces":["application/json"],"parameters":[{"name":"filter","in":"query","required":false,"type":"string"},{"name":"search","in":"query","required":false,"type":"string"},{"name":"order","in":"query","required":false,"type":"string"},{"name":"max","in":"query","required":false,"type":"integer","format":"int32"},{"name":"page","in":"query","required":false,"type":"integer","format":"int32"},{"name":"includeCount","in":"query","required":false,"type":"boolean"},{"name":"includeDeleted","in":"query","required":false,"type":"boolean"},{"name":"links","in":"query","required":false,"type":"string"},{"name":"udf","in":"query","required":false,"type":"string"}],"responses":{"200":{"description":"OK","schema":{"$ref":"#/definitions/ApiResourceResultCollection[ApiIntegratorContainerCategoryResource]"}}}}},"/lists/containerTypes/{guid}":{"get":{"tags":["ContainerType"],"summary":"Find with GUID","description":"| Property                  | Description                                                              |\r\n| ------------------------- | ------------------------------------------------------------------------ |\r\n| GUID                      | The GUID associated to the container type                                |\r\n| Description               | The description of the container type                                    |\r\n| ExternalDescription\t\t| The external description of the container type                           |\r\n| AnalysisCode\t\t\t\t| The analysis code of the container type                                  |\r\n| ShortName\t\t\t\t\t| The short name of the container type                                     |\r\n| ContainerCategoryListItem | The GUID and container category of the container type (various values)   |\r\n| TrackingUnitOfMeasureListItem | The GUID and Description of the tracking unit of measure  |\r\n| ItemCode\t\t\t\t\t| The item code of the container type                                      |\r\n| Size\t\t\t\t\t\t| The size of the container type                                           |\r\n| TareWeight\t\t\t\t| The tare weight of the container type                                    |\r\n| HandlingTime\t\t\t\t| The handling time (in seconds) of the container type\t\t\t\t\t   |\r\n| IsDeleted                 | Whether the container type  is deleted\t         \t \t          \t   |","operationId":"ContainerType_Get","consumes":["application/json"],"produces":["application/json"],"parameters":[{"name":"guid","in":"path","required":true,"type":"string","format":"uuid"},{"name":"links","in":"query","required":false,"type":"string"},{"name":"include","in":"query","required":false,"type":"string"},{"name":"expand","in":"query","required":false,"type":"string"},{"name":"udf","in":"query","required":false,"type":"string"}],"responses":{"200":{"description":"OK","schema":{"$ref":"#/definitions/ApiResourceResultEntity[ApiIntegratorContainerTypeResource]"}}}}},"/lists/containerTypes":{"get":{"tags":["ContainerType"],"summary":"Find with Filters","description":"| Property                  | Description                                                              |\r\n| ------------------------- | ------------------------------------------------------------------------ |\r\n| GUID                      | The GUID associated to the container type                                |\r\n| Description               | The description of the container type                                    |\r\n| ExternalDescription\t\t| The external description of the container type                           |\r\n| AnalysisCode\t\t\t\t| The analysis code of the container type                                  |\r\n| ShortName\t\t\t\t\t| The short name of the container type                                     |\r\n| ContainerCategoryListItem | The GUID and container category of the container type (various values)   |\r\n| TrackingUnitOfMeasureListItem | The GUID and Description of the tracking unit of measure  |\r\n| ItemCode\t\t\t\t\t| The item code of the container type                                      |\r\n| Size\t\t\t\t\t\t| The size of the container type                                           |\r\n| TareWeight\t\t\t\t| The tare weight of the container type                                    |\r\n| HandlingTime\t\t\t\t| The handling time (in seconds) of the container type\t\t\t\t\t   |\r\n| IsDeleted                 | Whether the container type  is deleted\t         \t \t          \t   |","operationId":"ContainerType_GetCollection","consumes":["application/json"],"produces":["application/json"],"parameters":[{"name":"filter","in":"query","required":false,"type":"string"},{"name":"search","in":"query","required":false,"type":"string"},{"name":"order","in":"query","required":false,"type":"string"},{"name":"max","in":"query","required":false,"type":"integer","format":"int32"},{"name":"page","in":"query","required":false,"type":"integer","format":"int32"},{"name":"includeCount","in":"query","required":false,"type":"boolean"},{"name":"includeDeleted","in":"query","required":false,"type":"boolean"},{"name":"links","in":"query","required":false,"type":"string"},{"name":"udf","in":"query","required":false,"type":"string"}],"responses":{"200":{"description":"OK","schema":{"$ref":"#/definitions/ApiResourceResultCollection[ApiIntegratorContainerTypeResource]"}}}}},"/accounting/contracts/{guid}":{"get":{"tags":["Contract"],"summary":"Find with GUID","description":"| Property                  | Description                                                  |\r\n| ------------------------- | ------------------------------------------------------------ |\r\n| GUID                      | The GUID associated to the contract.                         |\r\n| StartDate                 | The start date of the contract in ISO format (YYYY-MM-DD). |\r\n| CreditLimit               | The maximum credit limit stipulated on this contract.        |\r\n| BalanceMigrated           | The balance which has been migrated from another system - RM to confirm. |\r\n| InvoiceCycleListItem      | The GUID and description of the invoice cycle this contract will be invoiced under (there may be cycles done monthly, daily, weekly, etc.) |\r\n| VATExemptNumber           | If the contract is exempt from VAT, this is the associated confirmation number. |\r\n| VATExemptionExpiryDate    | If the contract is exempt from VAT this is date this status is no longer valid in ISO format (YYYY-MM-DD). |\r\n| VATRegistrationNumber     | If the contract is registered with VAT, this is the relevant number. |\r\n| DepartmentListItem            | The GUID and name of the department this contract is associated to. |\r\n| ContractStatusListItem        | The GUID and status of the contract (eg. Approved, Pending, Un-Approved). |\r\n| PaymentTermListItem           | The GUID and description of the payment terms invoices under the contract are to the paid to (eg. Immediately, 30 Days Net, etc.). |\r\n| PaymentTypeListItem           | The GUID and description of how payments for invoices under the contract will be paid (eg. Cash, Credit Card, etc.). |\r\n| InvoiceFrequencyTermListItem  | The GUID and description of the invoice frequency this contract will be invoiced under (frequency can be monthly, daily, weekly, etc.) |\r\n","operationId":"Contract_Get","consumes":["application/json"],"produces":["application/json"],"parameters":[{"name":"guid","in":"path","required":true,"type":"string","format":"uuid"},{"name":"links","in":"query","required":false,"type":"string"},{"name":"include","in":"query","required":false,"type":"string"},{"name":"expand","in":"query","required":false,"type":"string"},{"name":"udf","in":"query","required":false,"type":"string"}],"responses":{"200":{"description":"OK","schema":{"$ref":"#/definitions/ApiResourceResultEntity[ApiIntegratorContractResource]"}}}},"put":{"tags":["Contract"],"summary":"Partial update","description":"| Property                  | Description                                                  | Required |\r\n| ------------------------- | ------------------------------------------------------------ | -------- |\r\n| GUID                      | The GUID associated to the contract.                         | No |\r\n| StartDate                 | The start date of the contract in ISO format (YYYY-MM-DD). | No |\r\n| CreditLimit               | The maximum credit limit stipulated on this contract.        | Yes |\r\n| BalanceMigrated           | The balance which has been migrated from another system - RM to confirm. | No |\r\n| InvoiceCycleListItem      | The GUID and description of the invoice cycle this contract will be invoiced under (there may be cycles done monthly, daily, weekly, etc.) | Yes |\r\n| VATExemptNumber           | If the contract is exempt from VAT, this is the associated confirmation number. | No |\r\n| VATExemptionExpiryDate    | If the contract is exempt from VAT this is date this status is no longer valid in ISO format (YYYY-MM-DD). | No |\r\n| VATRegistrationNumber     | If the contract is registered with VAT, this is the relevant number. | No |\r\n| DepartmentListItem            | The GUID and name of the department this contract is associated to. | No |\r\n| ContractStatusListItem        | The GUID and status of the contract (eg. Approved, Pending, Un-Approved). | No |\r\n| PaymentTermListItem           | The GUID and description of the payment terms invoices under the contract are to the paid to (eg. Immediately, 30 Days Net, etc.). | Yes |\r\n| PaymentTypeListItem           | The GUID and description of how payments for invoices under the contract will be paid (eg. Cash, Credit Card, etc.). | Yes |\r\n| InvoiceFrequencyTermListItem  | The GUID and description of the invoice frequency this contract will be invoiced under (frequency can be monthly, daily, weekly, etc.) | Yes |\r\n\r\n## Extra validations\r\n\r\n| Condition | Error message |\r\n| --------- | ------------- |\r\n| None | |","operationId":"Contract_Update","consumes":["application/json"],"produces":["application/json"],"parameters":[{"name":"guid","in":"path","required":true,"type":"string","format":"uuid"},{"in":"body","required":true,"schema":{"$ref":"#/definitions/ApiResourceId"}}],"responses":{"200":{"description":"OK","schema":{"$ref":"#/definitions/ApiResourceId"}}}}},"/accounting/contracts":{"get":{"tags":["Contract"],"summary":"Find with Filters","description":"| Property                  | Description                                                  |\r\n| ------------------------- | ------------------------------------------------------------ |\r\n| GUID                      | The GUID associated to the contract.                         |\r\n| StartDate                 | The start date of the contract in ISO format (YYYY-MM-DD). |\r\n| CreditLimit               | The maximum credit limit stipulated on this contract.        |\r\n| BalanceMigrated           | The balance which has been migrated from another system - RM to confirm. |\r\n| InvoiceCycleListItem      | The GUID and description of the invoice cycle this contract will be invoiced under (there may be cycles done monthly, daily, weekly, etc.) |\r\n| VATExemptNumber           | If the contract is exempt from VAT, this is the associated confirmation number. |\r\n| VATExemptionExpiryDate    | If the contract is exempt from VAT this is date this status is no longer valid in ISO format (YYYY-MM-DD). |\r\n| VATRegistrationNumber     | If the contract is registered with VAT, this is the relevant number. |\r\n| DepartmentListItem            | The GUID and name of the department this contract is associated to. |\r\n| ContractStatusListItem        | The GUID and status of the contract (eg. Approved, Pending, Un-Approved). |\r\n| PaymentTermListItem           | The GUID and description of the payment terms invoices under the contract are to the paid to (eg. Immediately, 30 Days Net, etc.). |\r\n| PaymentTypeListItem           | The GUID and description of how payments for invoices under the contract will be paid (eg. Cash, Credit Card, etc.). |\r\n| InvoiceFrequencyTermListItem  | The GUID and description of the invoice frequency this contract will be invoiced under (frequency can be monthly, daily, weekly, etc.) |\r\n","operationId":"Contract_GetCollection","consumes":["application/json"],"produces":["application/json"],"parameters":[{"name":"filter","in":"query","required":false,"type":"string"},{"name":"search","in":"query","required":false,"type":"string"},{"name":"order","in":"query","required":false,"type":"string"},{"name":"max","in":"query","required":false,"type":"integer","format":"int32"},{"name":"page","in":"query","required":false,"type":"integer","format":"int32"},{"name":"includeCount","in":"query","required":false,"type":"boolean"},{"name":"includeDeleted","in":"query","required":false,"type":"boolean"},{"name":"links","in":"query","required":false,"type":"string"},{"name":"udf","in":"query","required":false,"type":"string"}],"responses":{"200":{"description":"OK","schema":{"$ref":"#/definitions/ApiResourceResultCollection[ApiIntegratorContractResource]"}}}},"post":{"tags":["Contract"],"summary":"Create or update","description":"| Property                  | Description                                                  | Required |\r\n| ------------------------- | ------------------------------------------------------------ | -------- |\r\n| GUID                      | The GUID associated to the contract.                         | No |\r\n| StartDate                 | The start date of the contract in ISO format (YYYY-MM-DD). | No |\r\n| CreditLimit               | The maximum credit limit stipulated on this contract.        | Yes |\r\n| BalanceMigrated           | The balance which has been migrated from another system - RM to confirm. | No |\r\n| InvoiceCycleListItem      | The GUID and description of the invoice cycle this contract will be invoiced under (there may be cycles done monthly, daily, weekly, etc.) | Yes |\r\n| VATExemptNumber           | If the contract is exempt from VAT, this is the associated confirmation number. | No |\r\n| VATExemptionExpiryDate    | If the contract is exempt from VAT this is date this status is no longer valid in ISO format (YYYY-MM-DD). | No |\r\n| VATRegistrationNumber     | If the contract is registered with VAT, this is the relevant number. | No |\r\n| DepartmentListItem            | The GUID and name of the department this contract is associated to. | No |\r\n| ContractStatusListItem        | The GUID and status of the contract (eg. Approved, Pending, Un-Approved). | No |\r\n| PaymentTermListItem           | The GUID and description of the payment terms invoices under the contract are to the paid to (eg. Immediately, 30 Days Net, etc.). | Yes |\r\n| PaymentTypeListItem           | The GUID and description of how payments for invoices under the contract will be paid (eg. Cash, Credit Card, etc.). | Yes |\r\n| InvoiceFrequencyTermListItem  | The GUID and description of the invoice frequency this contract will be invoiced under (frequency can be monthly, daily, weekly, etc.) | Yes |\r\n## Extra validations\r\n\r\n| Condition | Error message |\r\n| --------- | ------------- |\r\n| None | |","operationId":"Contract_Create","consumes":["application/json"],"produces":["application/json"],"parameters":[{"in":"body","required":true,"schema":{"$ref":"#/definitions/ApiResourceId"}}],"responses":{"200":{"description":"OK","schema":{"$ref":"#/definitions/ApiResourceId"}}}}},"/lists/contractStatuses/{guid}":{"get":{"tags":["ContractStatus"],"summary":"Find with GUID","description":"| Property                  | Description                                                              |\r\n| ------------------------- | ------------------------------------------------------------------------ |\r\n| GUID                      | The GUID associated to the contract status                              |\r\n| Description               | The description of the contract status                                  |\r\n| IsDeleted                 | Whether the contract status  is deleted\t         \t \t          \t   |","operationId":"ContractStatus_Get","consumes":["application/json"],"produces":["application/json"],"parameters":[{"name":"guid","in":"path","required":true,"type":"string","format":"uuid"},{"name":"links","in":"query","required":false,"type":"string"},{"name":"include","in":"query","required":false,"type":"string"},{"name":"expand","in":"query","required":false,"type":"string"},{"name":"udf","in":"query","required":false,"type":"string"}],"responses":{"200":{"description":"OK","schema":{"$ref":"#/definitions/ApiResourceResultEntity[ApiIntegratorContractStatusResource]"}}}}},"/lists/contractStatuses":{"get":{"tags":["ContractStatus"],"summary":"Find with Filters","description":"| Property                  | Description                                                              |\r\n| ------------------------- | ------------------------------------------------------------------------ |\r\n| GUID                      | The GUID associated to the contract status                              |\r\n| Description               | The description of the contract status                                  |\r\n| IsDeleted                 | Whether the contract status  is deleted\t         \t \t          \t   |","operationId":"ContractStatus_GetCollection","consumes":["application/json"],"produces":["application/json"],"parameters":[{"name":"filter","in":"query","required":false,"type":"string"},{"name":"search","in":"query","required":false,"type":"string"},{"name":"order","in":"query","required":false,"type":"string"},{"name":"max","in":"query","required":false,"type":"integer","format":"int32"},{"name":"page","in":"query","required":false,"type":"integer","format":"int32"},{"name":"includeCount","in":"query","required":false,"type":"boolean"},{"name":"includeDeleted","in":"query","required":false,"type":"boolean"},{"name":"links","in":"query","required":false,"type":"string"},{"name":"udf","in":"query","required":false,"type":"string"}],"responses":{"200":{"description":"OK","schema":{"$ref":"#/definitions/ApiResourceResultCollection[ApiIntegratorContractStatusResource]"}}}}},"/productCatalogue/costAgreements/changes":{"get":{"tags":["CostAgreement"],"summary":"Retrieve changes","description":"| Property\t\t\t\t\t\t\t\t\t\t\t\t\t| Description\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t|\t\t\r\n| ----------------------------------------------------------|-------------------------------------------------------------------------------------- |\r\n| GUID\t\t\t\t\t\t\t\t\t\t\t\t\t\t| The GUID associated to the cost agreement.\t\t\t\t\t\t\t\t\t\t\t|\r\n| Description\t\t\t\t\t\t\t\t\t\t\t\t| The description associated to the cost agreement.\t\t\t\t\t\t\t\t\t\t|        \r\n| IsDefault\t\t\t\t\t\t\t\t\t\t\t\t\t| Is default cost agreement.\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t|    \r\n| AgreementNumber\t\t\t\t\t\t\t\t\t\t\t| The agreement number associated to the cost agreement.\t\t\t\t\t\t\t\t|    \r\n| CostCentreListItem\t\t\t\t\t\t\t\t\t\t| The GUID and description of the cost centre associated to the cost agreement.\t\t\t|    \r\n| CompanyOutletListItems\t\t\t\t\t\t\t\t\t| The list of company outlets associated to the cost agreement.\t\t\t\t\t\t\t|    \r\n| CompanyOutletListItems[0].CompanyOutletListItem\t\t\t| The GUID and description of the company outlet associated to the cost agreement.\t\t|    \r\n| RelatedSupplierGuid\t\t\t\t\t\t\t\t\t\t| Used to filter on the related supplier GUID.\t\t\t\t\t\t\t\t\t\t\t|    \r\n| RelatedSupplierSiteGuid\t\t\t\t\t\t\t\t\t| Used to filter on the related supplier site GUID.\t\t\t\t\t\t\t\t\t\t|\r\n| RelatedSupplierSiteGuids\t\t\t\t\t\t\t\t\t| The list of supplier site GUIDs associated to the cost agreement.\t\t\t\t\t\t|    \r\n| RelatedLocationSourceGuid\t\t\t\t\t\t\t\t\t| Used to filter on the source location associated to the cost.\t\t\t\t\t\t\t|\t\t\t\t\t\t\t\t\r\n| RelatedLocationDestinationGuid\t\t\t\t\t\t\t| Used to filter on the destination location associated to the cost.\t\t\t\t\t|\r\n| RelatedCostGuidFilter\t\t\t\t\t\t\t\t\t\t| Used to filter on the related cost GUID.\t\t\t\t\t\t\t\t\t\t\t\t|\r\n| RelatedSupplierSiteGuids[0].RelatedSupplierSiteGuid\t\t| The GUID of the supplier site associated to the cost agreement.\t\t\t\t\t\t|\r\n| EndDate\t\t\t\t\t\t\t\t\t\t\t\t\t| The end date associated to the cost agreement in ISO format (YYYY-MM-DD).\t\t\t\t|    \r\n| EndReasonListItem\t\t\t\t\t\t\t\t\t\t\t| The GUID and description of the end reason associated to the cost agreement.\t\t\t|    \r\n| IsAutoRenewal\t\t\t\t\t\t\t\t\t\t\t\t| Is the cost agreement has auto renewal enabled.\t\t\t\t\t\t\t\t\t\t|    \r\n| IsForAllSites\t\t\t\t\t\t\t\t\t\t\t\t| Is the cost agreement for all sites.\t\t\t\t\t\t\t\t\t\t\t\t\t|    \r\n| PrimaryServiceListItem\t\t\t\t\t\t\t\t\t| The GUID and description of the end reason associated to the cost agreement.\t\t\t|    \r\n| ReviewDate\t\t\t\t\t\t\t\t\t\t\t\t| The review date associated to the cost agreement in ISO format (YYYY-MM-DD).\t\t\t|    \r\n| StartDate\t\t\t\t\t\t\t\t\t\t\t\t\t| The start date associated to the cost agreement in ISO format (YYYY-MM-DD).\t\t\t|    \r\n| Costs\t\t\t\t\t\t\t\t\t\t\t\t\t\t| The list of costs associated to the cost agreement.\t\t\t\t\t\t\t\t\t|\r\n| Costs[0].GUID\t\t\t\t\t\t\t\t\t\t\t\t| The GUID associated to the cost.\t\t\t\t\t\t\t\t\t\t\t\t\t\t|\r\n| Costs[0].IsDeleted\t\t\t\t\t\t\t\t\t\t| Whether the cost is deleted.\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t|\r\n| Costs[0].Description\t\t\t\t\t\t\t\t\t\t| The description associated to the cost.\t\t\t\t\t\t\t\t\t\t\t\t|\r\n| Costs[0].DefaultActionListItem\t\t\t\t\t\t\t| The GUID and description of the default action associated to the cost.\t\t\t\t|\r\n| Costs[0].ServiceFrequencyListItem\t\t\t\t\t\t\t| The GUID and description of the service frequency associated to the cost.\t\t\t\t|\r\n| Costs[0].ContainerTypeListItem\t\t\t\t\t\t\t| The GUID and description of the container type associated to the cost.\t\t\t\t|\r\n| Costs[0].RentTermListItem\t\t\t\t\t\t\t\t\t| The GUID and description of the rent term associated to the cost.\t\t\t\t\t\t|\r\n| Costs[0].MaterialListItem\t\t\t\t\t\t\t\t\t| The GUID and description of the material associated to the cost.\t\t\t\t\t\t|\r\n| Costs[0].RelatedLocationSourceGuid\t\t\t\t\t\t| The GUID related to the source location associated to the cost.\t\t\t\t\t\t|\r\n| Costs[0].RelatedLocationDestinationGuid\t\t\t\t\t| The GUID related to the destination location associated to the cost.\t\t\t\t\t|\r\n| Costs[0].EffectiveFrom\t\t\t\t\t\t\t\t\t| The date effective from date associated to the cost.\t\t\t\t\t\t\t\t\t|\r\n| Costs[0].Amount\t\t\t\t\t\t\t\t\t\t\t| The amount object associated to the cost.\t\t\t\t\t\t\t\t\t\t\t\t|\r\n| Costs[0].Amount.Cost\t\t\t\t\t\t\t\t\t\t| The cost value associated to the amount.\t\t\t\t\t\t\t\t\t\t\t\t|\r\n| Costs[0].Amount.MaximumCost\t\t\t\t\t\t\t\t| The maximum cost associated to the amount.\t\t\t\t\t\t\t\t\t\t\t|\r\n| Costs[0].Amount.MinimumCost\t\t\t\t\t\t\t\t| The minimum cost associated to the amount.\t\t\t\t\t\t\t\t\t\t\t|\r\n| Costs[0].Amount.Allowance\t\t\t\t\t\t\t\t\t| The allowance associated to the amount.\t\t\t\t\t\t\t\t\t\t\t\t|\r\n| Costs[0].Amount.VATListItem\t\t\t\t\t\t\t\t| The GUID and description of the VAT associated to the amount.\t\t\t\t\t\t\t|\r\n| Costs[0].Amount.TaxTemplateCollectionListItem\t\t\t\t| The GUID and description of the tax template collection associated to the amount.\t\t|\r\n| RelatedServiceAgreements\t\t\t\t\t\t\t\t\t| The list of service agreements related to the cost agreement.\t\t\t\t\t\t\t|\r\n| RelatedServiceAgreements[0].Guid\t\t\t\t\t\t\t| The Guid associated to the service agreement cost agreement.\t\t\t\t\t\t\t|\r\n| RelatedServiceAgreements[0].IsDeleted\t\t\t\t\t\t| Whether the service agreement cost agreement is deleted.\t\t\t\t\t\t\t\t|\r\n| RelatedServiceAgreements[0].RelatedServiceAgreementGuid\t| The Guid of the service agreement associated to the cost agreement.\t\t\t\t\t|\r\n| RelatedServiceAgreementGuidFilter\t\t\t\t\t\t    | Used to filter on the related service agreement GUID.\t\t\t\t\t\t\t\t\t|\t\t\r\n","operationId":"CostAgreement_GetChanges","consumes":["application/json"],"produces":["application/json"],"parameters":[{"name":"since","in":"query","required":false,"type":"string"},{"name":"cursor","in":"query","required":false,"type":"string"},{"name":"links","in":"query","required":false,"type":"string"}],"responses":{"200":{"description":"OK","schema":{"$ref":"#/definitions/ApiResourceChanges[ApiIntegratorCostAgreementResource]"}}}}},"/productCatalogue/costAgreements/{guid}":{"get":{"tags":["CostAgreement"],"summary":"Find with GUID","description":"| Property\t\t\t\t\t\t\t\t\t\t\t\t\t| Description\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t|\t\t\r\n| ----------------------------------------------------------|-------------------------------------------------------------------------------------- |\r\n| GUID\t\t\t\t\t\t\t\t\t\t\t\t\t\t| The GUID associated to the cost agreement.\t\t\t\t\t\t\t\t\t\t\t|\r\n| Description\t\t\t\t\t\t\t\t\t\t\t\t| The description associated to the cost agreement.\t\t\t\t\t\t\t\t\t\t|        \r\n| IsDefault\t\t\t\t\t\t\t\t\t\t\t\t\t| Is default cost agreement.\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t|    \r\n| AgreementNumber\t\t\t\t\t\t\t\t\t\t\t| The agreement number associated to the cost agreement.\t\t\t\t\t\t\t\t|    \r\n| CostCentreListItem\t\t\t\t\t\t\t\t\t\t| The GUID and description of the cost centre associated to the cost agreement.\t\t\t|    \r\n| CompanyOutletListItems\t\t\t\t\t\t\t\t\t| The list of company outlets associated to the cost agreement.\t\t\t\t\t\t\t|    \r\n| CompanyOutletListItems[0].CompanyOutletListItem\t\t\t| The GUID and description of the company outlet associated to the cost agreement.\t\t|    \r\n| RelatedSupplierGuid\t\t\t\t\t\t\t\t\t\t| Used to filter on the related supplier GUID.\t\t\t\t\t\t\t\t\t\t\t|    \r\n| RelatedSupplierSiteGuid\t\t\t\t\t\t\t\t\t| Used to filter on the related supplier site GUID.\t\t\t\t\t\t\t\t\t\t|\r\n| RelatedSupplierSiteGuids\t\t\t\t\t\t\t\t\t| The list of supplier site GUIDs associated to the cost agreement.\t\t\t\t\t\t|    \r\n| RelatedLocationSourceGuid\t\t\t\t\t\t\t\t\t| Used to filter on the source location associated to the cost.\t\t\t\t\t\t\t|\t\t\t\t\t\t\t\t\r\n| RelatedLocationDestinationGuid\t\t\t\t\t\t\t| Used to filter on the destination location associated to the cost.\t\t\t\t\t|\r\n| RelatedCostGuidFilter\t\t\t\t\t\t\t\t\t\t| Used to filter on the related cost GUID.\t\t\t\t\t\t\t\t\t\t\t\t|\r\n| RelatedSupplierSiteGuids[0].RelatedSupplierSiteGuid\t\t| The GUID of the supplier site associated to the cost agreement.\t\t\t\t\t\t|\r\n| EndDate\t\t\t\t\t\t\t\t\t\t\t\t\t| The end date associated to the cost agreement in ISO format (YYYY-MM-DD).\t\t\t\t|    \r\n| EndReasonListItem\t\t\t\t\t\t\t\t\t\t\t| The GUID and description of the end reason associated to the cost agreement.\t\t\t|    \r\n| IsAutoRenewal\t\t\t\t\t\t\t\t\t\t\t\t| Is the cost agreement has auto renewal enabled.\t\t\t\t\t\t\t\t\t\t|    \r\n| IsForAllSites\t\t\t\t\t\t\t\t\t\t\t\t| Is the cost agreement for all sites.\t\t\t\t\t\t\t\t\t\t\t\t\t|    \r\n| PrimaryServiceListItem\t\t\t\t\t\t\t\t\t| The GUID and description of the end reason associated to the cost agreement.\t\t\t|    \r\n| ReviewDate\t\t\t\t\t\t\t\t\t\t\t\t| The review date associated to the cost agreement in ISO format (YYYY-MM-DD).\t\t\t|    \r\n| StartDate\t\t\t\t\t\t\t\t\t\t\t\t\t| The start date associated to the cost agreement in ISO format (YYYY-MM-DD).\t\t\t|    \r\n| Costs\t\t\t\t\t\t\t\t\t\t\t\t\t\t| The list of costs associated to the cost agreement.\t\t\t\t\t\t\t\t\t|\r\n| Costs[0].GUID\t\t\t\t\t\t\t\t\t\t\t\t| The GUID associated to the cost.\t\t\t\t\t\t\t\t\t\t\t\t\t\t|\r\n| Costs[0].IsDeleted\t\t\t\t\t\t\t\t\t\t| Whether the cost is deleted.\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t|\r\n| Costs[0].Description\t\t\t\t\t\t\t\t\t\t| The description associated to the cost.\t\t\t\t\t\t\t\t\t\t\t\t|\r\n| Costs[0].DefaultActionListItem\t\t\t\t\t\t\t| The GUID and description of the default action associated to the cost.\t\t\t\t|\r\n| Costs[0].ServiceFrequencyListItem\t\t\t\t\t\t\t| The GUID and description of the service frequency associated to the cost.\t\t\t\t|\r\n| Costs[0].ContainerTypeListItem\t\t\t\t\t\t\t| The GUID and description of the container type associated to the cost.\t\t\t\t|\r\n| Costs[0].RentTermListItem\t\t\t\t\t\t\t\t\t| The GUID and description of the rent term associated to the cost.\t\t\t\t\t\t|\r\n| Costs[0].MaterialListItem\t\t\t\t\t\t\t\t\t| The GUID and description of the material associated to the cost.\t\t\t\t\t\t|\r\n| Costs[0].RelatedLocationSourceGuid\t\t\t\t\t\t| The GUID related to the source location associated to the cost.\t\t\t\t\t\t|\r\n| Costs[0].RelatedLocationDestinationGuid\t\t\t\t\t| The GUID related to the destination location associated to the cost.\t\t\t\t\t|\r\n| Costs[0].EffectiveFrom\t\t\t\t\t\t\t\t\t| The date effective from date associated to the cost.\t\t\t\t\t\t\t\t\t|\r\n| Costs[0].Amount\t\t\t\t\t\t\t\t\t\t\t| The amount object associated to the cost.\t\t\t\t\t\t\t\t\t\t\t\t|\r\n| Costs[0].Amount.Cost\t\t\t\t\t\t\t\t\t\t| The cost value associated to the amount.\t\t\t\t\t\t\t\t\t\t\t\t|\r\n| Costs[0].Amount.MaximumCost\t\t\t\t\t\t\t\t| The maximum cost associated to the amount.\t\t\t\t\t\t\t\t\t\t\t|\r\n| Costs[0].Amount.MinimumCost\t\t\t\t\t\t\t\t| The minimum cost associated to the amount.\t\t\t\t\t\t\t\t\t\t\t|\r\n| Costs[0].Amount.Allowance\t\t\t\t\t\t\t\t\t| The allowance associated to the amount.\t\t\t\t\t\t\t\t\t\t\t\t|\r\n| Costs[0].Amount.VATListItem\t\t\t\t\t\t\t\t| The GUID and description of the VAT associated to the amount.\t\t\t\t\t\t\t|\r\n| Costs[0].Amount.TaxTemplateCollectionListItem\t\t\t\t| The GUID and description of the tax template collection associated to the amount.\t\t|\r\n| RelatedServiceAgreements\t\t\t\t\t\t\t\t\t| The list of service agreements related to the cost agreement.\t\t\t\t\t\t\t|\r\n| RelatedServiceAgreements[0].Guid\t\t\t\t\t\t\t| The Guid associated to the service agreement cost agreement.\t\t\t\t\t\t\t|\r\n| RelatedServiceAgreements[0].IsDeleted\t\t\t\t\t\t| Whether the service agreement cost agreement is deleted.\t\t\t\t\t\t\t\t|\r\n| RelatedServiceAgreements[0].RelatedServiceAgreementGuid\t| The Guid of the service agreement associated to the cost agreement.\t\t\t\t\t|\r\n| RelatedServiceAgreementGuidFilter\t\t\t\t\t\t    | Used to filter on the related service agreement GUID.\t\t\t\t\t\t\t\t\t|\t\t\r\n","operationId":"CostAgreement_Get","consumes":["application/json"],"produces":["application/json"],"parameters":[{"name":"guid","in":"path","required":true,"type":"string","format":"uuid"},{"name":"links","in":"query","required":false,"type":"string"},{"name":"include","in":"query","required":false,"type":"string"},{"name":"expand","in":"query","required":false,"type":"string"},{"name":"udf","in":"query","required":false,"type":"string"}],"responses":{"200":{"description":"OK","schema":{"$ref":"#/definitions/ApiResourceResultEntity[ApiIntegratorCostAgreementResource]"}}}},"put":{"tags":["CostAgreement"],"summary":"Partial update","description":"| Property\t\t\t\t\t\t\t\t\t\t\t\t\t| Description\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t| Required |\t\t\r\n| ----------------------------------------------------------|-------------------------------------------------------------------------------------- |----------|\r\n| GUID\t\t\t\t\t\t\t\t\t\t\t\t\t\t| The GUID associated to the cost agreement.\t\t\t\t\t\t\t\t\t\t\t|   No     |\r\n| Description\t\t\t\t\t\t\t\t\t\t\t\t| The description associated to the cost agreement.\t\t\t\t\t\t\t\t\t\t|   Yes    |        \r\n| IsDefault\t\t\t\t\t\t\t\t\t\t\t\t\t| Is default cost agreement.\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t|   Yes    |    \r\n| AgreementNumber\t\t\t\t\t\t\t\t\t\t\t| The agreement number associated to the cost agreement.\t\t\t\t\t\t\t\t|   Yes    |    \r\n| CostCentreListItem\t\t\t\t\t\t\t\t\t\t| The GUID and description of the cost centre associated to the cost agreement.\t\t\t|   No     | \r\n| CompanyOutletListItems\t\t\t\t\t\t\t\t\t| The list of company outlets associated to the cost agreement.\t\t\t\t\t\t\t|   No     | \r\n| CompanyOutletListItems[0].CompanyOutletListItem\t\t\t| The GUID and description of the company outlet associated to the cost agreement.\t\t|   No     |\r\n| RelatedSupplierGuid\t\t\t\t\t\t\t\t\t\t| The GUID and description of the supplier GUID associated to the cost agreement.\t\t|   No     | \r\n| RelatedSupplierSiteGuids\t\t\t\t\t\t\t\t\t| The list of supplier site GUIDs associated to the cost agreement.\t\t\t\t\t\t|   Yes    |\r\n| RelatedLocationSourceGuid\t\t\t\t\t\t\t\t\t| Used to filter on the source location associated to the cost.\t\t\t\t\t\t\t|\tNo\t   |\t\t\t\t\t\t\t\r\n| RelatedLocationDestinationGuid\t\t\t\t\t\t\t| Used to filter on the destination location associated to the cost.\t\t\t\t\t|   No\t   |\r\n| RelatedCostGuidFilter\t\t\t\t\t\t\t\t\t\t| Used to filter on the related cost GUID.\t\t\t\t\t\t\t\t\t\t\t\t|   No\t   |\r\n| RelatedSupplierSiteGuids[0].RelatedSupplierSiteGuid\t\t| The GUID of the supplier site associated to the cost agreement.\t\t\t\t\t\t|   Yes    |\r\n| EndDate\t\t\t\t\t\t\t\t\t\t\t\t\t| The end date associated to the cost agreement in ISO format (YYYY-MM-DD).\t\t\t\t|   No     | \r\n| EndReasonListItem\t\t\t\t\t\t\t\t\t\t\t| The GUID and description of the end reason associated to the cost agreement.\t\t\t|   No     | \r\n| IsAutoRenewal\t\t\t\t\t\t\t\t\t\t\t\t| Is the cost agreement has auto renewal enabled.\t\t\t\t\t\t\t\t\t\t|   No     | \r\n| IsForAllSites\t\t\t\t\t\t\t\t\t\t\t\t| Is the cost agreement for all sites.\t\t\t\t\t\t\t\t\t\t\t\t\t|   No     | \r\n| PrimaryServiceListItem\t\t\t\t\t\t\t\t\t| The GUID and description of the end reason associated to the cost agreement.\t\t\t|   No     | \r\n| ReviewDate\t\t\t\t\t\t\t\t\t\t\t\t| The review date associated to the cost agreement in ISO format (YYYY-MM-DD).\t\t\t|   No     | \r\n| StartDate\t\t\t\t\t\t\t\t\t\t\t\t\t| The start date associated to the cost agreement in ISO format (YYYY-MM-DD).\t\t\t|   No     | \r\n| Costs\t\t\t\t\t\t\t\t\t\t\t\t\t\t| The list of costs associated to the cost agreement.\t\t\t\t\t\t\t\t\t|   No     |\r\n| Costs[0].GUID\t\t\t\t\t\t\t\t\t\t\t\t| The GUID associated to the cost.\t\t\t\t\t\t\t\t\t\t\t\t\t\t|   No     |\r\n| Costs[0].IsDeleted\t\t\t\t\t\t\t\t\t\t| Whether the cost is deleted.\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t|\tYes\t   |\r\n| Costs[0].Description\t\t\t\t\t\t\t\t\t\t| The description associated to the cost.\t\t\t\t\t\t\t\t\t\t\t\t|   No     |\r\n| Costs[0].DefaultActionListItem\t\t\t\t\t\t\t| The GUID and description of the default action associated to the cost.\t\t\t\t|   No     |\r\n| Costs[0].ServiceFrequencyListItem\t\t\t\t\t\t\t| The GUID and description of the service frequency associated to the cost.\t\t\t\t|   No     |\r\n| Costs[0].ContainerTypeListItem\t\t\t\t\t\t\t| The GUID and description of the container type associated to the cost.\t\t\t\t|   No     |\r\n| Costs[0].RentTermListItem\t\t\t\t\t\t\t\t\t| The GUID and description of the rent term associated to the cost.\t\t\t\t\t\t|\tNo     |\r\n| Costs[0].MaterialListItem\t\t\t\t\t\t\t\t\t| The GUID and description of the material associated to the cost.\t\t\t\t\t\t|\tNo     |\r\n| Costs[0].RelatedLocationSourceGuid\t\t\t\t\t\t| The GUID related to the source location associated to the cost.\t\t\t\t\t\t|\tNo     |\r\n| Costs[0].RelatedLocationDestinationGuid\t\t\t\t\t| The GUID related to the destination location associated to the cost.\t\t\t\t\t|\tNo     |\r\n| Costs[0].EffectiveFrom\t\t\t\t\t\t\t\t\t| The date effective from date associated to the cost.\t\t\t\t\t\t\t\t\t|\tNo     |\r\n| Costs[0].Amount\t\t\t\t\t\t\t\t\t\t\t| The amount object associated to the cost.\t\t\t\t\t\t\t\t\t\t\t\t|\tNo     |\r\n| Costs[0].Amount.Cost\t\t\t\t\t\t\t\t\t\t| The cost value associated to the amount.\t\t\t\t\t\t\t\t\t\t\t\t|   No     |\r\n| Costs[0].Amount.MaximumCost\t\t\t\t\t\t\t\t| The maximum cost associated to the amount.\t\t\t\t\t\t\t\t\t\t\t|\tNo     |\r\n| Costs[0].Amount.MinimumCost\t\t\t\t\t\t\t\t| The minimum cost associated to the amount.\t\t\t\t\t\t\t\t\t\t\t|\tNo     |\r\n| Costs[0].Amount.Allowance\t\t\t\t\t\t\t\t\t| The allowance associated to the amount.\t\t\t\t\t\t\t\t\t\t\t\t|\tNo     |\r\n| Costs[0].Amount.VATListItem\t\t\t\t\t\t\t\t| The GUID and description of the VAT associated to the amount.\t\t\t\t\t\t\t|\tNo     |\r\n| Costs[0].Amount.TaxTemplateCollectionListItem\t\t\t\t| The GUID and description of the tax template collection associated to the amount.\t\t|\tNo     |\r\n| RelatedServiceAgreements\t\t\t\t\t\t\t\t\t| The list of service agreements related to the cost agreement.\t\t\t\t\t\t\t|\tNo\t   |\r\n| RelatedServiceAgreements[0].Guid\t\t\t\t\t\t\t| The Guid associated to the service agreement cost agreement.\t\t\t\t\t\t\t|\tNo\t   |\r\n| RelatedServiceAgreements[0].IsDeleted\t\t\t\t\t\t| Whether the service agreement cost agreement is deleted.\t\t\t\t\t\t\t\t|\tYes\t   |\r\n| RelatedServiceAgreements[0].RelatedServiceAgreementGuid\t| The Guid of the service agreement associated to the cost agreement.\t\t\t\t\t|\tYes\t   |\r\n| RelatedServiceAgreementGuidFilter\t\t\t\t\t\t    | Used to filter on the related service agreement GUID.\t\t\t\t\t\t\t\t\t|\tNo     |\r\n\r\n## Extra validations\r\n\r\n| Condition | Error message |\r\n| --------- | ------------- |\r\n| If Costs[0].GUID is duplicated on another Cost | Failed to save. Entity already exists Guid of xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx |\r\n| If all existing Costs[] items are not supplied | Failed to save. Cost with GUID of xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx was not supplied |\r\n| If Costs[0].GUID is not associated with the current cost agreement| Failed to save. Cost with Guid of xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx  does not belong to CostAgreement |\r\n| If Costs[0] has a related field set that is not allowed given the cost agreement primary service and the costs action | Cost has the property RelatedSiteDestinationGuid with value of 355dbd83-abce-4797-a5b4-ac59632dc821 that is not supported. The given DefaultActionListItem: 4fd49204-7123-eb11-8d03-98e74393fee2 only allows the following fields: RelatedSupplierSiteDestinationGuid. | \r\n| If RelatedServiceAgreements.Guid is changed on update | RelatedServiceAgreements.Guid is a read-only property |\r\n| If RelatedServiceAgreements.RelatedServiceAgreementGuid is changed on update | RelatedServiceAgreements.RelatedServiceAgreementGuid is a read-only property |\r\n| If RelatedServiceAgreements.IsDeleted is changed on update | RelatedServiceAgreements.IsDeleted is a read-only property |\r\n| If we insert duplicate service agreement on cost agreement update | Failed to save. Serviceagreement already exists with Guid of xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx |\r\n| If Costs.IsDeleted is changed on update | Costs.IsDeleted is a read-only property |","operationId":"CostAgreement_Update","consumes":["application/json"],"produces":["application/json"],"parameters":[{"name":"guid","in":"path","required":true,"type":"string","format":"uuid"},{"in":"body","required":true,"schema":{"$ref":"#/definitions/ApiResourceId"}}],"responses":{"200":{"description":"OK","schema":{"$ref":"#/definitions/ApiResourceId"}}}}},"/productCatalogue/costAgreements":{"get":{"tags":["CostAgreement"],"summary":"Find with Filters","description":"| Property\t\t\t\t\t\t\t\t\t\t\t\t\t| Description\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t|\t\t\r\n| ----------------------------------------------------------|-------------------------------------------------------------------------------------- |\r\n| GUID\t\t\t\t\t\t\t\t\t\t\t\t\t\t| The GUID associated to the cost agreement.\t\t\t\t\t\t\t\t\t\t\t|\r\n| Description\t\t\t\t\t\t\t\t\t\t\t\t| The description associated to the cost agreement.\t\t\t\t\t\t\t\t\t\t|        \r\n| IsDefault\t\t\t\t\t\t\t\t\t\t\t\t\t| Is default cost agreement.\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t|    \r\n| AgreementNumber\t\t\t\t\t\t\t\t\t\t\t| The agreement number associated to the cost agreement.\t\t\t\t\t\t\t\t|    \r\n| CostCentreListItem\t\t\t\t\t\t\t\t\t\t| The GUID and description of the cost centre associated to the cost agreement.\t\t\t|    \r\n| CompanyOutletListItems\t\t\t\t\t\t\t\t\t| The list of company outlets associated to the cost agreement.\t\t\t\t\t\t\t|    \r\n| CompanyOutletListItems[0].CompanyOutletListItem\t\t\t| The GUID and description of the company outlet associated to the cost agreement.\t\t|    \r\n| RelatedSupplierGuid\t\t\t\t\t\t\t\t\t\t| Used to filter on the related supplier GUID.\t\t\t\t\t\t\t\t\t\t\t|    \r\n| RelatedSupplierSiteGuid\t\t\t\t\t\t\t\t\t| Used to filter on the related supplier site GUID.\t\t\t\t\t\t\t\t\t\t|\r\n| RelatedSupplierSiteGuids\t\t\t\t\t\t\t\t\t| The list of supplier site GUIDs associated to the cost agreement.\t\t\t\t\t\t|    \r\n| RelatedLocationSourceGuid\t\t\t\t\t\t\t\t\t| Used to filter on the source location associated to the cost.\t\t\t\t\t\t\t|\t\t\t\t\t\t\t\t\r\n| RelatedLocationDestinationGuid\t\t\t\t\t\t\t| Used to filter on the destination location associated to the cost.\t\t\t\t\t|\r\n| RelatedCostGuidFilter\t\t\t\t\t\t\t\t\t\t| Used to filter on the related cost GUID.\t\t\t\t\t\t\t\t\t\t\t\t|\r\n| RelatedSupplierSiteGuids[0].RelatedSupplierSiteGuid\t\t| The GUID of the supplier site associated to the cost agreement.\t\t\t\t\t\t|\r\n| EndDate\t\t\t\t\t\t\t\t\t\t\t\t\t| The end date associated to the cost agreement in ISO format (YYYY-MM-DD).\t\t\t\t|    \r\n| EndReasonListItem\t\t\t\t\t\t\t\t\t\t\t| The GUID and description of the end reason associated to the cost agreement.\t\t\t|    \r\n| IsAutoRenewal\t\t\t\t\t\t\t\t\t\t\t\t| Is the cost agreement has auto renewal enabled.\t\t\t\t\t\t\t\t\t\t|    \r\n| IsForAllSites\t\t\t\t\t\t\t\t\t\t\t\t| Is the cost agreement for all sites.\t\t\t\t\t\t\t\t\t\t\t\t\t|    \r\n| PrimaryServiceListItem\t\t\t\t\t\t\t\t\t| The GUID and description of the end reason associated to the cost agreement.\t\t\t|    \r\n| ReviewDate\t\t\t\t\t\t\t\t\t\t\t\t| The review date associated to the cost agreement in ISO format (YYYY-MM-DD).\t\t\t|    \r\n| StartDate\t\t\t\t\t\t\t\t\t\t\t\t\t| The start date associated to the cost agreement in ISO format (YYYY-MM-DD).\t\t\t|    \r\n| Costs\t\t\t\t\t\t\t\t\t\t\t\t\t\t| The list of costs associated to the cost agreement.\t\t\t\t\t\t\t\t\t|\r\n| Costs[0].GUID\t\t\t\t\t\t\t\t\t\t\t\t| The GUID associated to the cost.\t\t\t\t\t\t\t\t\t\t\t\t\t\t|\r\n| Costs[0].IsDeleted\t\t\t\t\t\t\t\t\t\t| Whether the cost is deleted.\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t|\r\n| Costs[0].Description\t\t\t\t\t\t\t\t\t\t| The description associated to the cost.\t\t\t\t\t\t\t\t\t\t\t\t|\r\n| Costs[0].DefaultActionListItem\t\t\t\t\t\t\t| The GUID and description of the default action associated to the cost.\t\t\t\t|\r\n| Costs[0].ServiceFrequencyListItem\t\t\t\t\t\t\t| The GUID and description of the service frequency associated to the cost.\t\t\t\t|\r\n| Costs[0].ContainerTypeListItem\t\t\t\t\t\t\t| The GUID and description of the container type associated to the cost.\t\t\t\t|\r\n| Costs[0].RentTermListItem\t\t\t\t\t\t\t\t\t| The GUID and description of the rent term associated to the cost.\t\t\t\t\t\t|\r\n| Costs[0].MaterialListItem\t\t\t\t\t\t\t\t\t| The GUID and description of the material associated to the cost.\t\t\t\t\t\t|\r\n| Costs[0].RelatedLocationSourceGuid\t\t\t\t\t\t| The GUID related to the source location associated to the cost.\t\t\t\t\t\t|\r\n| Costs[0].RelatedLocationDestinationGuid\t\t\t\t\t| The GUID related to the destination location associated to the cost.\t\t\t\t\t|\r\n| Costs[0].EffectiveFrom\t\t\t\t\t\t\t\t\t| The date effective from date associated to the cost.\t\t\t\t\t\t\t\t\t|\r\n| Costs[0].Amount\t\t\t\t\t\t\t\t\t\t\t| The amount object associated to the cost.\t\t\t\t\t\t\t\t\t\t\t\t|\r\n| Costs[0].Amount.Cost\t\t\t\t\t\t\t\t\t\t| The cost value associated to the amount.\t\t\t\t\t\t\t\t\t\t\t\t|\r\n| Costs[0].Amount.MaximumCost\t\t\t\t\t\t\t\t| The maximum cost associated to the amount.\t\t\t\t\t\t\t\t\t\t\t|\r\n| Costs[0].Amount.MinimumCost\t\t\t\t\t\t\t\t| The minimum cost associated to the amount.\t\t\t\t\t\t\t\t\t\t\t|\r\n| Costs[0].Amount.Allowance\t\t\t\t\t\t\t\t\t| The allowance associated to the amount.\t\t\t\t\t\t\t\t\t\t\t\t|\r\n| Costs[0].Amount.VATListItem\t\t\t\t\t\t\t\t| The GUID and description of the VAT associated to the amount.\t\t\t\t\t\t\t|\r\n| Costs[0].Amount.TaxTemplateCollectionListItem\t\t\t\t| The GUID and description of the tax template collection associated to the amount.\t\t|\r\n| RelatedServiceAgreements\t\t\t\t\t\t\t\t\t| The list of service agreements related to the cost agreement.\t\t\t\t\t\t\t|\r\n| RelatedServiceAgreements[0].Guid\t\t\t\t\t\t\t| The Guid associated to the service agreement cost agreement.\t\t\t\t\t\t\t|\r\n| RelatedServiceAgreements[0].IsDeleted\t\t\t\t\t\t| Whether the service agreement cost agreement is deleted.\t\t\t\t\t\t\t\t|\r\n| RelatedServiceAgreements[0].RelatedServiceAgreementGuid\t| The Guid of the service agreement associated to the cost agreement.\t\t\t\t\t|\r\n| RelatedServiceAgreementGuidFilter\t\t\t\t\t\t    | Used to filter on the related service agreement GUID.\t\t\t\t\t\t\t\t\t|\t\t\r\n","operationId":"CostAgreement_GetCollection","consumes":["application/json"],"produces":["application/json"],"parameters":[{"name":"filter","in":"query","required":false,"type":"string"},{"name":"search","in":"query","required":false,"type":"string"},{"name":"order","in":"query","required":false,"type":"string"},{"name":"max","in":"query","required":false,"type":"integer","format":"int32"},{"name":"page","in":"query","required":false,"type":"integer","format":"int32"},{"name":"includeCount","in":"query","required":false,"type":"boolean"},{"name":"includeDeleted","in":"query","required":false,"type":"boolean"},{"name":"links","in":"query","required":false,"type":"string"},{"name":"udf","in":"query","required":false,"type":"string"}],"responses":{"200":{"description":"OK","schema":{"$ref":"#/definitions/ApiResourceResultCollection[ApiIntegratorCostAgreementResource]"}}}},"post":{"tags":["CostAgreement"],"summary":"Create or update","description":"| Property\t\t\t\t\t\t\t\t\t\t\t\t\t| Description\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t| Required |\t\t\r\n| ----------------------------------------------------------|-------------------------------------------------------------------------------------- |----------|\r\n| GUID\t\t\t\t\t\t\t\t\t\t\t\t\t\t| The GUID associated to the cost agreement.\t\t\t\t\t\t\t\t\t\t\t|   No     |\r\n| Description\t\t\t\t\t\t\t\t\t\t\t\t| The description associated to the cost agreement.\t\t\t\t\t\t\t\t\t\t|   Yes    |        \r\n| IsDefault\t\t\t\t\t\t\t\t\t\t\t\t\t| Is default cost agreement.\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t|   Yes    |    \r\n| AgreementNumber\t\t\t\t\t\t\t\t\t\t\t| The agreement number associated to the cost agreement.\t\t\t\t\t\t\t\t|   Yes    |    \r\n| CostCentreListItem\t\t\t\t\t\t\t\t\t\t| The GUID and description of the cost centre associated to the cost agreement.\t\t\t|   No     | \r\n| CompanyOutletListItems\t\t\t\t\t\t\t\t\t| The list of company outlets associated to the cost agreement.\t\t\t\t\t\t\t|   No     | \r\n| CompanyOutletListItems[0].CompanyOutletListItem\t\t\t| The GUID and description of the company outlet associated to the cost agreement.\t\t|   No     |\r\n| RelatedSupplierGuid\t\t\t\t\t\t\t\t\t\t| The GUID and description of the supplier GUID associated to the cost agreement.\t\t|   No     | \r\n| RelatedSupplierSiteGuids\t\t\t\t\t\t\t\t\t| The list of supplier site GUIDs associated to the cost agreement.\t\t\t\t\t\t|   Yes    |\r\n| RelatedLocationSourceGuid\t\t\t\t\t\t\t\t\t| Used to filter on the source location associated to the cost.\t\t\t\t\t\t\t|\tNo\t   |\t\t\t\t\t\t\t\r\n| RelatedLocationDestinationGuid\t\t\t\t\t\t\t| Used to filter on the destination location associated to the cost.\t\t\t\t\t|   No\t   |\r\n| RelatedCostGuidFilter\t\t\t\t\t\t\t\t\t\t| Used to filter on the related cost GUID.\t\t\t\t\t\t\t\t\t\t\t\t|   No\t   |\r\n| RelatedSupplierSiteGuids[0].RelatedSupplierSiteGuid\t\t| The GUID of the supplier site associated to the cost agreement.\t\t\t\t\t\t|   Yes    |\r\n| EndDate\t\t\t\t\t\t\t\t\t\t\t\t\t| The end date associated to the cost agreement in ISO format (YYYY-MM-DD).\t\t\t\t|   No     | \r\n| EndReasonListItem\t\t\t\t\t\t\t\t\t\t\t| The GUID and description of the end reason associated to the cost agreement.\t\t\t|   No     | \r\n| IsAutoRenewal\t\t\t\t\t\t\t\t\t\t\t\t| Is the cost agreement has auto renewal enabled.\t\t\t\t\t\t\t\t\t\t|   No     | \r\n| IsForAllSites\t\t\t\t\t\t\t\t\t\t\t\t| Is the cost agreement for all sites.\t\t\t\t\t\t\t\t\t\t\t\t\t|   No     | \r\n| PrimaryServiceListItem\t\t\t\t\t\t\t\t\t| The GUID and description of the end reason associated to the cost agreement.\t\t\t|   No     | \r\n| ReviewDate\t\t\t\t\t\t\t\t\t\t\t\t| The review date associated to the cost agreement in ISO format (YYYY-MM-DD).\t\t\t|   No     | \r\n| StartDate\t\t\t\t\t\t\t\t\t\t\t\t\t| The start date associated to the cost agreement in ISO format (YYYY-MM-DD).\t\t\t|   No     | \r\n| Costs\t\t\t\t\t\t\t\t\t\t\t\t\t\t| The list of costs associated to the cost agreement.\t\t\t\t\t\t\t\t\t|   No     |\r\n| Costs[0].GUID\t\t\t\t\t\t\t\t\t\t\t\t| The GUID associated to the cost.\t\t\t\t\t\t\t\t\t\t\t\t\t\t|   No     |\r\n| Costs[0].IsDeleted\t\t\t\t\t\t\t\t\t\t| Whether the cost is deleted.\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t|\tYes\t   |\r\n| Costs[0].Description\t\t\t\t\t\t\t\t\t\t| The description associated to the cost.\t\t\t\t\t\t\t\t\t\t\t\t|   No     |\r\n| Costs[0].DefaultActionListItem\t\t\t\t\t\t\t| The GUID and description of the default action associated to the cost.\t\t\t\t|   No     |\r\n| Costs[0].ServiceFrequencyListItem\t\t\t\t\t\t\t| The GUID and description of the service frequency associated to the cost.\t\t\t\t|   No     |\r\n| Costs[0].ContainerTypeListItem\t\t\t\t\t\t\t| The GUID and description of the container type associated to the cost.\t\t\t\t|   No     |\r\n| Costs[0].RentTermListItem\t\t\t\t\t\t\t\t\t| The GUID and description of the rent term associated to the cost.\t\t\t\t\t\t|\tNo     |\r\n| Costs[0].MaterialListItem\t\t\t\t\t\t\t\t\t| The GUID and description of the material associated to the cost.\t\t\t\t\t\t|\tNo     |\r\n| Costs[0].RelatedLocationSourceGuid\t\t\t\t\t\t| The GUID related to the source location associated to the cost.\t\t\t\t\t\t|\tNo     |\r\n| Costs[0].RelatedLocationDestinationGuid\t\t\t\t\t| The GUID related to the destination location associated to the cost.\t\t\t\t\t|\tNo     |\r\n| Costs[0].EffectiveFrom\t\t\t\t\t\t\t\t\t| The date effective from date associated to the cost.\t\t\t\t\t\t\t\t\t|\tNo     |\r\n| Costs[0].Amount\t\t\t\t\t\t\t\t\t\t\t| The amount object associated to the cost.\t\t\t\t\t\t\t\t\t\t\t\t|\tNo     |\r\n| Costs[0].Amount.Cost\t\t\t\t\t\t\t\t\t\t| The cost value associated to the amount.\t\t\t\t\t\t\t\t\t\t\t\t|   No     |\r\n| Costs[0].Amount.MaximumCost\t\t\t\t\t\t\t\t| The maximum cost associated to the amount.\t\t\t\t\t\t\t\t\t\t\t|\tNo     |\r\n| Costs[0].Amount.MinimumCost\t\t\t\t\t\t\t\t| The minimum cost associated to the amount.\t\t\t\t\t\t\t\t\t\t\t|\tNo     |\r\n| Costs[0].Amount.Allowance\t\t\t\t\t\t\t\t\t| The allowance associated to the amount.\t\t\t\t\t\t\t\t\t\t\t\t|\tNo     |\r\n| Costs[0].Amount.VATListItem\t\t\t\t\t\t\t\t| The GUID and description of the VAT associated to the amount.\t\t\t\t\t\t\t|\tNo     |\r\n| Costs[0].Amount.TaxTemplateCollectionListItem\t\t\t\t| The GUID and description of the tax template collection associated to the amount.\t\t|\tNo     |\r\n| RelatedServiceAgreements\t\t\t\t\t\t\t\t\t| The list of service agreements related to the cost agreement.\t\t\t\t\t\t\t|\tNo\t   |\r\n| RelatedServiceAgreements[0].Guid\t\t\t\t\t\t\t| The Guid associated to the service agreement cost agreement.\t\t\t\t\t\t\t|\tNo\t   |\r\n| RelatedServiceAgreements[0].IsDeleted\t\t\t\t\t\t| Whether the service agreement cost agreement is deleted.\t\t\t\t\t\t\t\t|\tYes\t   |\r\n| RelatedServiceAgreements[0].RelatedServiceAgreementGuid\t| The Guid of the service agreement associated to the cost agreement.\t\t\t\t\t|\tYes\t   |\r\n| RelatedServiceAgreementGuidFilter\t\t\t\t\t\t    | Used to filter on the related service agreement GUID.\t\t\t\t\t\t\t\t\t|\tNo     |   \r\n\r\n## Extra validations\r\n\r\n| Condition | Error message |\r\n| --------- | ------------- |\r\n| If Costs[0].GUID is duplicated on another Cost | Failed to save. Entity already exists Guid of xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx |\r\n| If all existing Costs[] items are not supplied | Failed to save. Cost with GUID of xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx was not supplied |\r\n| If Costs[0].GUID is not associated with the current cost agreement| Failed to save. Cost with Guid of xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx  does not belong to CostAgreement |\r\n| If Costs[0] has a related field set that is not allowed given the cost agreement primary service and the costs action | Cost has the property RelatedSiteDestinationGuid with value of 355dbd83-abce-4797-a5b4-ac59632dc821 that is not supported. The given DefaultActionListItem: 4fd49204-7123-eb11-8d03-98e74393fee2 only allows the following fields: RelatedSupplierSiteDestinationGuid. | \r\n| If RelatedServiceAgreements.Guid is not null on insert | Attempting to update service agreement when creating the cost agreement . Could not process the request. Provide service agreement without a Guid property to create new cost agreement rather than attempting an update |\r\n| If RelatedServiceAgreements.IsDeleted is TRUE | Could not process the request. RelatedServiceAgreements can not be deleted via the REST API |\r\n| If RelatedServiceAgreements.Guid is changed on update | RelatedServiceAgreements.Guid is a read-only property |\r\n| If RelatedServiceAgreements.RelatedServiceAgreementGuid is changed on update | RelatedServiceAgreements.RelatedServiceAgreementGuid is a read-only property |\r\n| If RelatedServiceAgreements.IsDeleted is changed on update | RelatedServiceAgreements.IsDeleted is a read-only property |\r\n| If we insert duplicate service agreement on cost agreement update | Failed to save. Serviceagreement already exists with Guid of xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx |\r\n| If Costs.IsDeleted is changed on update | Costs.IsDeleted is a read-only property |\r\n| If Costs.IsDeleted is TRUE on insert | IsDeleted is TRUE. Could not process the request. Costs can not be deleted via the REST API |","operationId":"CostAgreement_Create","consumes":["application/json"],"produces":["application/json"],"parameters":[{"in":"body","required":true,"schema":{"$ref":"#/definitions/ApiResourceId"}}],"responses":{"200":{"description":"OK","schema":{"$ref":"#/definitions/ApiResourceId"}}}}},"/lists/costCentres/{guid}":{"get":{"tags":["CostCentre"],"summary":"Find with GUID","description":"| Property                  | Description                                                              |\r\n| ------------------------- | ------------------------------------------------------------------------ |\r\n| GUID                      | The GUID associated to the cost centre.                                  |\r\n| Description\t\t\t\t| The description of the cost centre.\t\t\t\t\t\t\t\t\t   |\r\n| AnalysisCode\t\t\t\t| The analysis code of the cost centre.\t\t\t\t\t\t\t\t\t   |\r\n","operationId":"CostCentre_Get","consumes":["application/json"],"produces":["application/json"],"parameters":[{"name":"guid","in":"path","required":true,"type":"string","format":"uuid"},{"name":"links","in":"query","required":false,"type":"string"},{"name":"include","in":"query","required":false,"type":"string"},{"name":"expand","in":"query","required":false,"type":"string"},{"name":"udf","in":"query","required":false,"type":"string"}],"responses":{"200":{"description":"OK","schema":{"$ref":"#/definitions/ApiResourceResultEntity[ApiIntegratorCostCentreResource]"}}}}},"/lists/costCentres":{"get":{"tags":["CostCentre"],"summary":"Find with Filters","description":"| Property                  | Description                                                              |\r\n| ------------------------- | ------------------------------------------------------------------------ |\r\n| GUID                      | The GUID associated to the cost centre.                                  |\r\n| Description\t\t\t\t| The description of the cost centre.\t\t\t\t\t\t\t\t\t   |\r\n| AnalysisCode\t\t\t\t| The analysis code of the cost centre.\t\t\t\t\t\t\t\t\t   |\r\n","operationId":"CostCentre_GetCollection","consumes":["application/json"],"produces":["application/json"],"parameters":[{"name":"filter","in":"query","required":false,"type":"string"},{"name":"search","in":"query","required":false,"type":"string"},{"name":"order","in":"query","required":false,"type":"string"},{"name":"max","in":"query","required":false,"type":"integer","format":"int32"},{"name":"page","in":"query","required":false,"type":"integer","format":"int32"},{"name":"includeCount","in":"query","required":false,"type":"boolean"},{"name":"includeDeleted","in":"query","required":false,"type":"boolean"},{"name":"links","in":"query","required":false,"type":"string"},{"name":"udf","in":"query","required":false,"type":"string"}],"responses":{"200":{"description":"OK","schema":{"$ref":"#/definitions/ApiResourceResultCollection[ApiIntegratorCostCentreResource]"}}}}},"/lists/countries/{guid}":{"get":{"tags":["Country"],"summary":"Find with GUID","description":"| Property                  | Description                                                           |\r\n| ------------------------- | --------------------------------------------------------------------- |\r\n| GUID                      | The GUID associated to the country \t\t\t\t\t\t\t\t\t|\r\n| Description\t            | The description of the country \t\t\t\t\t\t\t\t\t\t|\r\n| Abbreviation\t            | The abbreviation of the country \t\t\t\t\t\t\t\t\t\t|\r\n| ISO3166Numeric\t        | The 3166 numeric iso of the country \t\t\t\t\t\t\t\t\t|\r\n| ISOThreeChar\t            | The three character iso of the country \t                            |\r\n| ISOTwoChar\t            | The two character iso of the country \t\t\t\t\t\t\t\t\t|\r\n| IsDefault\t\t\t\t\t| Whether the country is default \t\t\t\t\t\t\t\t\t\t|\r\n| IsDeleted\t\t\t\t\t| Whether the country is deleted\t\t\t\t\t\t\t\t\t\t|","operationId":"Country_Get","consumes":["application/json"],"produces":["application/json"],"parameters":[{"name":"guid","in":"path","required":true,"type":"string","format":"uuid"},{"name":"links","in":"query","required":false,"type":"string"},{"name":"include","in":"query","required":false,"type":"string"},{"name":"expand","in":"query","required":false,"type":"string"},{"name":"udf","in":"query","required":false,"type":"string"}],"responses":{"200":{"description":"OK","schema":{"$ref":"#/definitions/ApiResourceResultEntity[ApiIntegratorCountryResource]"}}}}},"/lists/countries":{"get":{"tags":["Country"],"summary":"Find with Filters","description":"| Property                  | Description                                                           |\r\n| ------------------------- | --------------------------------------------------------------------- |\r\n| GUID                      | The GUID associated to the country \t\t\t\t\t\t\t\t\t|\r\n| Description\t            | The description of the country \t\t\t\t\t\t\t\t\t\t|\r\n| Abbreviation\t            | The abbreviation of the country \t\t\t\t\t\t\t\t\t\t|\r\n| ISO3166Numeric\t        | The 3166 numeric iso of the country \t\t\t\t\t\t\t\t\t|\r\n| ISOThreeChar\t            | The three character iso of the country \t                            |\r\n| ISOTwoChar\t            | The two character iso of the country \t\t\t\t\t\t\t\t\t|\r\n| IsDefault\t\t\t\t\t| Whether the country is default \t\t\t\t\t\t\t\t\t\t|\r\n| IsDeleted\t\t\t\t\t| Whether the country is deleted\t\t\t\t\t\t\t\t\t\t|","operationId":"Country_GetCollection","consumes":["application/json"],"produces":["application/json"],"parameters":[{"name":"filter","in":"query","required":false,"type":"string"},{"name":"search","in":"query","required":false,"type":"string"},{"name":"order","in":"query","required":false,"type":"string"},{"name":"max","in":"query","required":false,"type":"integer","format":"int32"},{"name":"page","in":"query","required":false,"type":"integer","format":"int32"},{"name":"includeCount","in":"query","required":false,"type":"boolean"},{"name":"includeDeleted","in":"query","required":false,"type":"boolean"},{"name":"links","in":"query","required":false,"type":"string"},{"name":"udf","in":"query","required":false,"type":"string"}],"responses":{"200":{"description":"OK","schema":{"$ref":"#/definitions/ApiResourceResultCollection[ApiIntegratorCountryResource]"}}}}},"/accounting/creditNotes/changes":{"get":{"tags":["CreditNote"],"summary":"Retrieve changes","description":"| Property             | Description                                                           |\r\n| -------------------- | --------------------------------------------------------------------- |\r\n| GUID                 | The GUID associated to the credit note.                               |\r\n| RelatedCustomerGuid  | The GUID associated to the customer of this credit note.              |\r\n| CreditNoteNumber     | The credit note number.                                               |\r\n| Reference            | An alternative name used for the credit note.                         |\r\n| ExternalReference    | The external reference associated to the credit note.\t\t\t\t   |\r\n| IsCreditJournal      | If true this credit note is a credit journal.                         |\r\n| IsTaxAdjustment      | If true this credit note is a tax adjustment.                         |\r\n| IsApproved           | If true this credit note is approved.                                 |\r\n| Notes\t\t\t\t   | The notes associated to the credit note.                              |\r\n| IsForClosingCustomer | If true this credit note is for closing a customer.                   |\r\n| WriteOffReasonListItem   | The GUID and writeoff reason of the credit note.                      |\r\n| AccountingPeriodListItem | The GUID and accounting period of the credit note.                    |\r\n| ReasonListItem           | The GUID and reason of the credit note.                               |\r\n| DepartmentListItem       | The GUID and department of the credit note.                           |\r\n| OutletListItem           | The GUID and outlet of the credit note.                               |\r\n| ReceivedDate\t\t   | The received date of the credit note.\t                               |\r\n| InputDate\t\t\t   | The input date of the credit note.\t\t\t\t\t\t\t\t\t   |\r\n| ExportedDate\t\t   | The exported date of the credit note.\t                               |\r\n| Amount               | The object where the amount is specified.                             |\r\n| Amount.ExchangeRate  | The object where the exchange rate of the amount is specified.        |\r\n| Amount.ExchangeRate.Rate                 | The exchange rate of the amount.                  |\r\n| Amount.ExchangeRate.ExchangeDate         | The exchange date in ISO format of the exchange rate. |\r\n| Amount.ExchangeRate.BaseCurrencyListItem     | The GUID and base currency of the exchange rate.      |\r\n| Amount.ExchangeRate.ExchangeCurrencyListItem | The GUID and exchange currency of the exchange rate.  |\r\n| Amount.Amount        | The amount of the credit note.                                        |\r\n| Amount.BaseAmount    | The base amount of the credit note.                                   |\r\n| RelatedLocationInvoiceGuid\t | Used to filter the related invoice location guid associated to the invoice of the credit note. |\r\n| PrintAddress                   | The object where the print address is specified.            |\r\n| PrintAddress.HouseNumber       | The house number of the print address.                      |\r\n| PrintAddress.Address1 till 5   | The 5 address lines of the print address.                   |\r\n| PrintAddress.Postcode          | The postcode of the print address.                          |\r\n| Details[0]                               | A list of objects containing credit note details.                         |\r\n| Details[0].SiteName                      | The site name of the credit note detail.                                  |\r\n| Details[0].SiteAddress                   | The object where the site address of the credit note detail is specified. |                   \r\n| Details[0].SiteAddress.HouseNumber       | The house number of the site address of the credit note detail.           |\r\n| Details[0].SiteAddress.Address1 till 5   | The 5 address lines of the site address of the credit note detail.        |\r\n| Details[0].SiteAddress.Postcode          | The postcode of the site address of the credit note detail.               |\r\n| Details[0].Reference                     | An alternative name used for the credit note detail.                      |\r\n| Details[0].ServiceListItem                   | The GUID and service of the credit note detail.                           |\r\n| Details[0].ActionListItem                    | The GUID and action of the credit note detail.                            |\r\n| Details[0].ContainerTypeListItem             | The GUID and container type of the credit note detail.                    |\r\n| Details[0].MaterialTypeListItem              | The GUID and material type of the credit note detail.                     |\r\n| Details[0].OutletListItem                    | The GUID and outlet of the credit note detail.                            |\r\n| Details[0].DepartmentListItem                | The GUID and department of the credit note detail.                        |\r\n| Details[0].StartDate                     | The start date of the credit note detail in ISO format (YYYY-MM-DD).      |\r\n| Details[0].EndDate                       | The end date of the credit note detail in ISO format (YYYY-MM-DD).        |\r\n| Details[0].Quantity                      | The quantity of the credit note detail.                                   |\r\n| Details[0].Volume                        | The volume of the credit note detail.                                     |\r\n| Details[0].NetWeight                     | The net weight of the credit note detail.                                 |\r\n| Details[0].Amount                        | The amount of the credit note detail.                                     |\r\n| Details[0].AmountIncVAT                  | The amount including VAT of the credit note detail.                       |\r\n| Details[0].RelatedInvoiceDetailGuid      | The GUID associated to the invoice detail of the credit note detail.      |\r\n| Details[0].Notes\t\t\t\t\t\t   | The notes associated to the credit note detail.\t\t\t\t\t\t   |\r\n| Details[0].IsDeleted\t\t\t\t       | Whether the credit note detail is deleted.\t\t\t\t\t\t\t\t   |\r\n| Details[0].GUID\t\t\t\t\t       | The GUID of the credit note detail.\t\t\t\t\t\t\t\t\t   |\r\n| Allocations[0].Amount\t\t\t\t\t\t\t| The amount of the invoice credit note.\t\t\t\t\t\t\t|\r\n| Allocations[0].DateInput\t\t\t\t\t\t| The date input of the invoice credit note.                        |\r\n| Allocations[0].RelatedInvoiceGuid             | The GUID associated to the invoice of the credit note.            |\r\n| Allocations[0].AccountingPeriodListItem       | The GUID and accounting period of the invoice credit note.        |\r\n| Allocations[0].IsDeleted\t\t\t\t\t\t| Whether the invoice credit note is deleted.                       |\r\n| Allocations[0].GUID\t\t\t\t\t\t\t| The GUID of the invoice credit note.\t\t\t\t\t\t\t\t|\r\n| Deallocations[0].Amount\t\t\t\t\t\t\t| The amount of the deallocated invoice.\t\t\t\t\t\t\t\t\t\t\t\t\t|\r\n| Deallocations[0].DateDeallocated\t\t\t\t\t\t\t| The date of invoice credit note deallocation.\t\t\t\t\t\t\t\t\t\t|\r\n| Deallocations[0].DateInput\t\t\t\t\t\t\t| The date input of the invoice credit note.\t\t\t\t\t\t\t\t\t\t\t|\r\n| Deallocations[0].IsDeleted\t\t\t\t\t\t\t| Whether the invoice credit note is deleted.\t\t\t\t\t\t\t\t\t\t\t|\r\n| Deallocations[0].RelatedUserDeallocatedByGuid\t\t\t\t\t\t\t| The GUID associated to the user who deallocated the invoice.\t\t\t|\r\n| Deallocations[0].RelatedCreditNoteAllocationGuid\t\t\t\t\t\t\t| The GUID associated to the invoice credit note.\t\t\t\t\t|\r\n| Deallocations[0].RelatedInvoiceGuid\t\t\t\t\t\t\t\t\t\t| The GUID associated to the invoice.\t\t\t\t\t\t\t\t|\r\n| Deallocations[0].AllocationAccountingPeriodListItem\t\t\t\t\t\t\t| The GUID and description of allocation accounting period.\t\t|\r\n| Deallocations[0].DeallocationAccountingPeriodListItem\t\t\t\t\t\t\t| The GUID and description of deallocation accounting period.\t|\r\n| Deallocations[0].GUID\t\t\t\t\t\t\t| The GUID of the invoice credit note deallocation.\t\t\t\t\t\t\t\t\t\t\t\t|\r\n| RelatedInvoiceGuidFilter                      | Used to filter the related invoice guid associated to the invoice of the credit note.\t\t\t\t\t\t\t|\r\n| RelatedInvoiceDetailGuidFilter\t\t\t\t| Used to filter the related invoice detail guid associated to the invoice detail of the credit note detail.\t|\r\n| RelatedUserDeallocatedByGuidFilter\t\t\t| Used to filter the related user guid associated to the invoice credit note deallocation.\t\t\t\t\t\t|\r\n| RelatedCreditNoteAllocationGuidFilter\t\t\t| Used to filter the related invoice credit note guid associated to the invoice credit note deallocation.\t\t|\r\n| RelatedBlobHashes\t\t\t\t\t\t| The array of related blob hashes and descriptions associated to the credit note.\t\t|\r\n| RelatedBlobHashes[0].Hash\t\t\t\t| The hash of the blob to be used against the /blob endpoint. Files are provided as an octet stream which will need to be converted. |\r\n| VATListItem | The GUID and description of the VAT associated to the Credit Note.                 |\r\n","operationId":"CreditNote_GetChanges","consumes":["application/json"],"produces":["application/json"],"parameters":[{"name":"since","in":"query","required":false,"type":"string"},{"name":"cursor","in":"query","required":false,"type":"string"},{"name":"links","in":"query","required":false,"type":"string"}],"responses":{"200":{"description":"OK","schema":{"$ref":"#/definitions/ApiResourceChanges[ApiIntegratorCreditNoteResource]"}}}}},"/accounting/creditNotes/{guid}":{"get":{"tags":["CreditNote"],"summary":"Find with GUID","description":"| Property             | Description                                                           |\r\n| -------------------- | --------------------------------------------------------------------- |\r\n| GUID                 | The GUID associated to the credit note.                               |\r\n| RelatedCustomerGuid  | The GUID associated to the customer of this credit note.              |\r\n| CreditNoteNumber     | The credit note number.                                               |\r\n| Reference            | An alternative name used for the credit note.                         |\r\n| ExternalReference    | The external reference associated to the credit note.\t\t\t\t   |\r\n| IsCreditJournal      | If true this credit note is a credit journal.                         |\r\n| IsTaxAdjustment      | If true this credit note is a tax adjustment.                         |\r\n| IsApproved           | If true this credit note is approved.                                 |\r\n| Notes\t\t\t\t   | The notes associated to the credit note.                              |\r\n| IsForClosingCustomer | If true this credit note is for closing a customer.                   |\r\n| WriteOffReasonListItem   | The GUID and writeoff reason of the credit note.                      |\r\n| AccountingPeriodListItem | The GUID and accounting period of the credit note.                    |\r\n| ReasonListItem           | The GUID and reason of the credit note.                               |\r\n| DepartmentListItem       | The GUID and department of the credit note.                           |\r\n| OutletListItem           | The GUID and outlet of the credit note.                               |\r\n| ReceivedDate\t\t   | The received date of the credit note.\t                               |\r\n| InputDate\t\t\t   | The input date of the credit note.\t\t\t\t\t\t\t\t\t   |\r\n| ExportedDate\t\t   | The exported date of the credit note.\t                               |\r\n| Amount               | The object where the amount is specified.                             |\r\n| Amount.ExchangeRate  | The object where the exchange rate of the amount is specified.        |\r\n| Amount.ExchangeRate.Rate                 | The exchange rate of the amount.                  |\r\n| Amount.ExchangeRate.ExchangeDate         | The exchange date in ISO format of the exchange rate. |\r\n| Amount.ExchangeRate.BaseCurrencyListItem     | The GUID and base currency of the exchange rate.      |\r\n| Amount.ExchangeRate.ExchangeCurrencyListItem | The GUID and exchange currency of the exchange rate.  |\r\n| Amount.Amount        | The amount of the credit note.                                        |\r\n| Amount.BaseAmount    | The base amount of the credit note.                                   |\r\n| RelatedLocationInvoiceGuid\t | Used to filter the related invoice location guid associated to the invoice of the credit note. |\r\n| PrintAddress                   | The object where the print address is specified.            |\r\n| PrintAddress.HouseNumber       | The house number of the print address.                      |\r\n| PrintAddress.Address1 till 5   | The 5 address lines of the print address.                   |\r\n| PrintAddress.Postcode          | The postcode of the print address.                          |\r\n| Details[0]                               | A list of objects containing credit note details.                         |\r\n| Details[0].SiteName                      | The site name of the credit note detail.                                  |\r\n| Details[0].SiteAddress                   | The object where the site address of the credit note detail is specified. |                   \r\n| Details[0].SiteAddress.HouseNumber       | The house number of the site address of the credit note detail.           |\r\n| Details[0].SiteAddress.Address1 till 5   | The 5 address lines of the site address of the credit note detail.        |\r\n| Details[0].SiteAddress.Postcode          | The postcode of the site address of the credit note detail.               |\r\n| Details[0].Reference                     | An alternative name used for the credit note detail.                      |\r\n| Details[0].ServiceListItem                   | The GUID and service of the credit note detail.                           |\r\n| Details[0].ActionListItem                    | The GUID and action of the credit note detail.                            |\r\n| Details[0].ContainerTypeListItem             | The GUID and container type of the credit note detail.                    |\r\n| Details[0].MaterialTypeListItem              | The GUID and material type of the credit note detail.                     |\r\n| Details[0].OutletListItem                    | The GUID and outlet of the credit note detail.                            |\r\n| Details[0].DepartmentListItem                | The GUID and department of the credit note detail.                        |\r\n| Details[0].StartDate                     | The start date of the credit note detail in ISO format (YYYY-MM-DD).      |\r\n| Details[0].EndDate                       | The end date of the credit note detail in ISO format (YYYY-MM-DD).        |\r\n| Details[0].Quantity                      | The quantity of the credit note detail.                                   |\r\n| Details[0].Volume                        | The volume of the credit note detail.                                     |\r\n| Details[0].NetWeight                     | The net weight of the credit note detail.                                 |\r\n| Details[0].Amount                        | The amount of the credit note detail.                                     |\r\n| Details[0].AmountIncVAT                  | The amount including VAT of the credit note detail.                       |\r\n| Details[0].RelatedInvoiceDetailGuid      | The GUID associated to the invoice detail of the credit note detail.      |\r\n| Details[0].Notes\t\t\t\t\t\t   | The notes associated to the credit note detail.\t\t\t\t\t\t   |\r\n| Details[0].IsDeleted\t\t\t\t       | Whether the credit note detail is deleted.\t\t\t\t\t\t\t\t   |\r\n| Details[0].GUID\t\t\t\t\t       | The GUID of the credit note detail.\t\t\t\t\t\t\t\t\t   |\r\n| Allocations[0].Amount\t\t\t\t\t\t\t| The amount of the invoice credit note.\t\t\t\t\t\t\t|\r\n| Allocations[0].DateInput\t\t\t\t\t\t| The date input of the invoice credit note.                        |\r\n| Allocations[0].RelatedInvoiceGuid             | The GUID associated to the invoice of the credit note.            |\r\n| Allocations[0].AccountingPeriodListItem       | The GUID and accounting period of the invoice credit note.        |\r\n| Allocations[0].IsDeleted\t\t\t\t\t\t| Whether the invoice credit note is deleted.                       |\r\n| Allocations[0].GUID\t\t\t\t\t\t\t| The GUID of the invoice credit note.\t\t\t\t\t\t\t\t|\r\n| Deallocations[0].Amount\t\t\t\t\t\t\t| The amount of the deallocated invoice.\t\t\t\t\t\t\t\t\t\t\t\t\t|\r\n| Deallocations[0].DateDeallocated\t\t\t\t\t\t\t| The date of invoice credit note deallocation.\t\t\t\t\t\t\t\t\t\t|\r\n| Deallocations[0].DateInput\t\t\t\t\t\t\t| The date input of the invoice credit note.\t\t\t\t\t\t\t\t\t\t\t|\r\n| Deallocations[0].IsDeleted\t\t\t\t\t\t\t| Whether the invoice credit note is deleted.\t\t\t\t\t\t\t\t\t\t\t|\r\n| Deallocations[0].RelatedUserDeallocatedByGuid\t\t\t\t\t\t\t| The GUID associated to the user who deallocated the invoice.\t\t\t|\r\n| Deallocations[0].RelatedCreditNoteAllocationGuid\t\t\t\t\t\t\t| The GUID associated to the invoice credit note.\t\t\t\t\t|\r\n| Deallocations[0].RelatedInvoiceGuid\t\t\t\t\t\t\t\t\t\t| The GUID associated to the invoice.\t\t\t\t\t\t\t\t|\r\n| Deallocations[0].AllocationAccountingPeriodListItem\t\t\t\t\t\t\t| The GUID and description of allocation accounting period.\t\t|\r\n| Deallocations[0].DeallocationAccountingPeriodListItem\t\t\t\t\t\t\t| The GUID and description of deallocation accounting period.\t|\r\n| Deallocations[0].GUID\t\t\t\t\t\t\t| The GUID of the invoice credit note deallocation.\t\t\t\t\t\t\t\t\t\t\t\t|\r\n| RelatedInvoiceGuidFilter                      | Used to filter the related invoice guid associated to the invoice of the credit note.\t\t\t\t\t\t\t|\r\n| RelatedInvoiceDetailGuidFilter\t\t\t\t| Used to filter the related invoice detail guid associated to the invoice detail of the credit note detail.\t|\r\n| RelatedUserDeallocatedByGuidFilter\t\t\t| Used to filter the related user guid associated to the invoice credit note deallocation.\t\t\t\t\t\t|\r\n| RelatedCreditNoteAllocationGuidFilter\t\t\t| Used to filter the related invoice credit note guid associated to the invoice credit note deallocation.\t\t|\r\n| RelatedBlobHashes\t\t\t\t\t\t| The array of related blob hashes and descriptions associated to the credit note.\t\t|\r\n| RelatedBlobHashes[0].Hash\t\t\t\t| The hash of the blob to be used against the /blob endpoint. Files are provided as an octet stream which will need to be converted. |\r\n| VATListItem | The GUID and description of the VAT associated to the Credit Note.                 |\r\n","operationId":"CreditNote_Get","consumes":["application/json"],"produces":["application/json"],"parameters":[{"name":"guid","in":"path","required":true,"type":"string","format":"uuid"},{"name":"links","in":"query","required":false,"type":"string"},{"name":"include","in":"query","required":false,"type":"string"},{"name":"expand","in":"query","required":false,"type":"string"},{"name":"udf","in":"query","required":false,"type":"string"}],"responses":{"200":{"description":"OK","schema":{"$ref":"#/definitions/ApiResourceResultEntity[ApiIntegratorCreditNoteResource]"}}}}},"/accounting/creditNotes":{"get":{"tags":["CreditNote"],"summary":"Find with Filters","description":"| Property             | Description                                                           |\r\n| -------------------- | --------------------------------------------------------------------- |\r\n| GUID                 | The GUID associated to the credit note.                               |\r\n| RelatedCustomerGuid  | The GUID associated to the customer of this credit note.              |\r\n| CreditNoteNumber     | The credit note number.                                               |\r\n| Reference            | An alternative name used for the credit note.                         |\r\n| ExternalReference    | The external reference associated to the credit note.\t\t\t\t   |\r\n| IsCreditJournal      | If true this credit note is a credit journal.                         |\r\n| IsTaxAdjustment      | If true this credit note is a tax adjustment.                         |\r\n| IsApproved           | If true this credit note is approved.                                 |\r\n| Notes\t\t\t\t   | The notes associated to the credit note.                              |\r\n| IsForClosingCustomer | If true this credit note is for closing a customer.                   |\r\n| WriteOffReasonListItem   | The GUID and writeoff reason of the credit note.                      |\r\n| AccountingPeriodListItem | The GUID and accounting period of the credit note.                    |\r\n| ReasonListItem           | The GUID and reason of the credit note.                               |\r\n| DepartmentListItem       | The GUID and department of the credit note.                           |\r\n| OutletListItem           | The GUID and outlet of the credit note.                               |\r\n| ReceivedDate\t\t   | The received date of the credit note.\t                               |\r\n| InputDate\t\t\t   | The input date of the credit note.\t\t\t\t\t\t\t\t\t   |\r\n| ExportedDate\t\t   | The exported date of the credit note.\t                               |\r\n| Amount               | The object where the amount is specified.                             |\r\n| Amount.ExchangeRate  | The object where the exchange rate of the amount is specified.        |\r\n| Amount.ExchangeRate.Rate                 | The exchange rate of the amount.                  |\r\n| Amount.ExchangeRate.ExchangeDate         | The exchange date in ISO format of the exchange rate. |\r\n| Amount.ExchangeRate.BaseCurrencyListItem     | The GUID and base currency of the exchange rate.      |\r\n| Amount.ExchangeRate.ExchangeCurrencyListItem | The GUID and exchange currency of the exchange rate.  |\r\n| Amount.Amount        | The amount of the credit note.                                        |\r\n| Amount.BaseAmount    | The base amount of the credit note.                                   |\r\n| RelatedLocationInvoiceGuid\t | Used to filter the related invoice location guid associated to the invoice of the credit note. |\r\n| PrintAddress                   | The object where the print address is specified.            |\r\n| PrintAddress.HouseNumber       | The house number of the print address.                      |\r\n| PrintAddress.Address1 till 5   | The 5 address lines of the print address.                   |\r\n| PrintAddress.Postcode          | The postcode of the print address.                          |\r\n| Details[0]                               | A list of objects containing credit note details.                         |\r\n| Details[0].SiteName                      | The site name of the credit note detail.                                  |\r\n| Details[0].SiteAddress                   | The object where the site address of the credit note detail is specified. |                   \r\n| Details[0].SiteAddress.HouseNumber       | The house number of the site address of the credit note detail.           |\r\n| Details[0].SiteAddress.Address1 till 5   | The 5 address lines of the site address of the credit note detail.        |\r\n| Details[0].SiteAddress.Postcode          | The postcode of the site address of the credit note detail.               |\r\n| Details[0].Reference                     | An alternative name used for the credit note detail.                      |\r\n| Details[0].ServiceListItem                   | The GUID and service of the credit note detail.                           |\r\n| Details[0].ActionListItem                    | The GUID and action of the credit note detail.                            |\r\n| Details[0].ContainerTypeListItem             | The GUID and container type of the credit note detail.                    |\r\n| Details[0].MaterialTypeListItem              | The GUID and material type of the credit note detail.                     |\r\n| Details[0].OutletListItem                    | The GUID and outlet of the credit note detail.                            |\r\n| Details[0].DepartmentListItem                | The GUID and department of the credit note detail.                        |\r\n| Details[0].StartDate                     | The start date of the credit note detail in ISO format (YYYY-MM-DD).      |\r\n| Details[0].EndDate                       | The end date of the credit note detail in ISO format (YYYY-MM-DD).        |\r\n| Details[0].Quantity                      | The quantity of the credit note detail.                                   |\r\n| Details[0].Volume                        | The volume of the credit note detail.                                     |\r\n| Details[0].NetWeight                     | The net weight of the credit note detail.                                 |\r\n| Details[0].Amount                        | The amount of the credit note detail.                                     |\r\n| Details[0].AmountIncVAT                  | The amount including VAT of the credit note detail.                       |\r\n| Details[0].RelatedInvoiceDetailGuid      | The GUID associated to the invoice detail of the credit note detail.      |\r\n| Details[0].Notes\t\t\t\t\t\t   | The notes associated to the credit note detail.\t\t\t\t\t\t   |\r\n| Details[0].IsDeleted\t\t\t\t       | Whether the credit note detail is deleted.\t\t\t\t\t\t\t\t   |\r\n| Details[0].GUID\t\t\t\t\t       | The GUID of the credit note detail.\t\t\t\t\t\t\t\t\t   |\r\n| Allocations[0].Amount\t\t\t\t\t\t\t| The amount of the invoice credit note.\t\t\t\t\t\t\t|\r\n| Allocations[0].DateInput\t\t\t\t\t\t| The date input of the invoice credit note.                        |\r\n| Allocations[0].RelatedInvoiceGuid             | The GUID associated to the invoice of the credit note.            |\r\n| Allocations[0].AccountingPeriodListItem       | The GUID and accounting period of the invoice credit note.        |\r\n| Allocations[0].IsDeleted\t\t\t\t\t\t| Whether the invoice credit note is deleted.                       |\r\n| Allocations[0].GUID\t\t\t\t\t\t\t| The GUID of the invoice credit note.\t\t\t\t\t\t\t\t|\r\n| Deallocations[0].Amount\t\t\t\t\t\t\t| The amount of the deallocated invoice.\t\t\t\t\t\t\t\t\t\t\t\t\t|\r\n| Deallocations[0].DateDeallocated\t\t\t\t\t\t\t| The date of invoice credit note deallocation.\t\t\t\t\t\t\t\t\t\t|\r\n| Deallocations[0].DateInput\t\t\t\t\t\t\t| The date input of the invoice credit note.\t\t\t\t\t\t\t\t\t\t\t|\r\n| Deallocations[0].IsDeleted\t\t\t\t\t\t\t| Whether the invoice credit note is deleted.\t\t\t\t\t\t\t\t\t\t\t|\r\n| Deallocations[0].RelatedUserDeallocatedByGuid\t\t\t\t\t\t\t| The GUID associated to the user who deallocated the invoice.\t\t\t|\r\n| Deallocations[0].RelatedCreditNoteAllocationGuid\t\t\t\t\t\t\t| The GUID associated to the invoice credit note.\t\t\t\t\t|\r\n| Deallocations[0].RelatedInvoiceGuid\t\t\t\t\t\t\t\t\t\t| The GUID associated to the invoice.\t\t\t\t\t\t\t\t|\r\n| Deallocations[0].AllocationAccountingPeriodListItem\t\t\t\t\t\t\t| The GUID and description of allocation accounting period.\t\t|\r\n| Deallocations[0].DeallocationAccountingPeriodListItem\t\t\t\t\t\t\t| The GUID and description of deallocation accounting period.\t|\r\n| Deallocations[0].GUID\t\t\t\t\t\t\t| The GUID of the invoice credit note deallocation.\t\t\t\t\t\t\t\t\t\t\t\t|\r\n| RelatedInvoiceGuidFilter                      | Used to filter the related invoice guid associated to the invoice of the credit note.\t\t\t\t\t\t\t|\r\n| RelatedInvoiceDetailGuidFilter\t\t\t\t| Used to filter the related invoice detail guid associated to the invoice detail of the credit note detail.\t|\r\n| RelatedUserDeallocatedByGuidFilter\t\t\t| Used to filter the related user guid associated to the invoice credit note deallocation.\t\t\t\t\t\t|\r\n| RelatedCreditNoteAllocationGuidFilter\t\t\t| Used to filter the related invoice credit note guid associated to the invoice credit note deallocation.\t\t|\r\n| RelatedBlobHashes\t\t\t\t\t\t| The array of related blob hashes and descriptions associated to the credit note.\t\t|\r\n| RelatedBlobHashes[0].Hash\t\t\t\t| The hash of the blob to be used against the /blob endpoint. Files are provided as an octet stream which will need to be converted. |\r\n| VATListItem | The GUID and description of the VAT associated to the Credit Note.                 |\r\n","operationId":"CreditNote_GetCollection","consumes":["application/json"],"produces":["application/json"],"parameters":[{"name":"filter","in":"query","required":false,"type":"string"},{"name":"search","in":"query","required":false,"type":"string"},{"name":"order","in":"query","required":false,"type":"string"},{"name":"max","in":"query","required":false,"type":"integer","format":"int32"},{"name":"page","in":"query","required":false,"type":"integer","format":"int32"},{"name":"includeCount","in":"query","required":false,"type":"boolean"},{"name":"includeDeleted","in":"query","required":false,"type":"boolean"},{"name":"links","in":"query","required":false,"type":"string"},{"name":"udf","in":"query","required":false,"type":"string"}],"responses":{"200":{"description":"OK","schema":{"$ref":"#/definitions/ApiResourceResultCollection[ApiIntegratorCreditNoteResource]"}}}}},"/lists/currencies/changes":{"get":{"tags":["Currency"],"summary":"Retrieve changes","description":"| Property\t\t\t\t\t\t\t| Description                                                              |\r\n| --------------------------------- | ------------------------------------------------------------------------ |\r\n| GUID\t\t\t\t\t\t\t\t| The GUID associated to the currency\t\t\t\t\t\t\t\t\t   |\r\n| Description\t\t\t\t\t\t| The description of the currency\t\t\t\t\t\t\t\t\t\t   |\r\n| Symbol\t\t\t\t\t\t\t| The symbol of the currency\t\t\t\t\t\t\t\t\t\t\t   |\r\n| IntegrationCode\t\t\t\t\t| The integration code of the currency\t\t                               |\r\n| IsDeleted\t\t\t\t\t\t\t| Whether the currency is deleted\t         \t \t\t\t\t\t   \t   |\r\n| CurrencyRoundingTypeListItem\t    | The GUID and description of the CurrencyRoundingType\t\t\t\t\t   |\r\n","operationId":"Currency_GetChanges","consumes":["application/json"],"produces":["application/json"],"parameters":[{"name":"since","in":"query","required":false,"type":"string"},{"name":"cursor","in":"query","required":false,"type":"string"},{"name":"links","in":"query","required":false,"type":"string"}],"responses":{"200":{"description":"OK","schema":{"$ref":"#/definitions/ApiResourceChanges[ApiIntegratorCurrencyResource]"}}}}},"/lists/currencies/{guid}":{"get":{"tags":["Currency"],"summary":"Find with GUID","description":"| Property\t\t\t\t\t\t\t| Description                                                              |\r\n| --------------------------------- | ------------------------------------------------------------------------ |\r\n| GUID\t\t\t\t\t\t\t\t| The GUID associated to the currency\t\t\t\t\t\t\t\t\t   |\r\n| Description\t\t\t\t\t\t| The description of the currency\t\t\t\t\t\t\t\t\t\t   |\r\n| Symbol\t\t\t\t\t\t\t| The symbol of the currency\t\t\t\t\t\t\t\t\t\t\t   |\r\n| IntegrationCode\t\t\t\t\t| The integration code of the currency\t\t                               |\r\n| IsDeleted\t\t\t\t\t\t\t| Whether the currency is deleted\t         \t \t\t\t\t\t   \t   |\r\n| CurrencyRoundingTypeListItem\t    | The GUID and description of the CurrencyRoundingType\t\t\t\t\t   |\r\n","operationId":"Currency_Get","consumes":["application/json"],"produces":["application/json"],"parameters":[{"name":"guid","in":"path","required":true,"type":"string","format":"uuid"},{"name":"links","in":"query","required":false,"type":"string"},{"name":"include","in":"query","required":false,"type":"string"},{"name":"expand","in":"query","required":false,"type":"string"},{"name":"udf","in":"query","required":false,"type":"string"}],"responses":{"200":{"description":"OK","schema":{"$ref":"#/definitions/ApiResourceResultEntity[ApiIntegratorCurrencyResource]"}}}}},"/lists/currencies":{"get":{"tags":["Currency"],"summary":"Find with Filters","description":"| Property\t\t\t\t\t\t\t| Description                                                              |\r\n| --------------------------------- | ------------------------------------------------------------------------ |\r\n| GUID\t\t\t\t\t\t\t\t| The GUID associated to the currency\t\t\t\t\t\t\t\t\t   |\r\n| Description\t\t\t\t\t\t| The description of the currency\t\t\t\t\t\t\t\t\t\t   |\r\n| Symbol\t\t\t\t\t\t\t| The symbol of the currency\t\t\t\t\t\t\t\t\t\t\t   |\r\n| IntegrationCode\t\t\t\t\t| The integration code of the currency\t\t                               |\r\n| IsDeleted\t\t\t\t\t\t\t| Whether the currency is deleted\t         \t \t\t\t\t\t   \t   |\r\n| CurrencyRoundingTypeListItem\t    | The GUID and description of the CurrencyRoundingType\t\t\t\t\t   |\r\n","operationId":"Currency_GetCollection","consumes":["application/json"],"produces":["application/json"],"parameters":[{"name":"filter","in":"query","required":false,"type":"string"},{"name":"search","in":"query","required":false,"type":"string"},{"name":"order","in":"query","required":false,"type":"string"},{"name":"max","in":"query","required":false,"type":"integer","format":"int32"},{"name":"page","in":"query","required":false,"type":"integer","format":"int32"},{"name":"includeCount","in":"query","required":false,"type":"boolean"},{"name":"includeDeleted","in":"query","required":false,"type":"boolean"},{"name":"links","in":"query","required":false,"type":"string"},{"name":"udf","in":"query","required":false,"type":"string"}],"responses":{"200":{"description":"OK","schema":{"$ref":"#/definitions/ApiResourceResultCollection[ApiIntegratorCurrencyResource]"}}}}},"/lists/currencyRates/changes":{"get":{"tags":["CurrencyRate"],"summary":"Retrieve changes","description":"| Property                  | Description\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t|\r\n| ------------------------- | --------------------------------------------------------------------------------\t|\r\n| GUID                      | The GUID associated to the currency rate\t\t\t\t\t\t\t\t\t\t\t|\r\n| FromCurrencyListItem      | The GUID and description of the FromCurrency associated to the currency rate\t\t|\r\n| ToCurrencylistitem\t\t| The GUID and description of the ToCurrency associated to the currency rate\t\t|\r\n| EffectiveFrom             | The effective from date of currency rate\t\t \t\t\t\t\t\t\t\t\t|\r\n| ExchangeRateDivider       | The exchange rate divider of currency rate\t\t \t\t\t\t\t\t\t\t|\r\n| ExchangeRateMultiplier    | The exchange rate multiplier of currency rate\t\t \t\t\t\t\t\t\t\t|\r\n| ExchangeRate              | The exchange rate of currency rate\t\t \t\t\t\t\t\t\t\t\t\t|\r\n| ExchangeRateInverse       | The exchange rate inverse of currency rate\t\t \t\t\t\t\t\t\t\t|\r\n| ExchangeRateDisplay       | The exchange rate display of currency rate\t\t \t\t\t\t\t\t\t\t|\r\n| IsDeleted                 | Whether the currency rate\tis deleted\t \t\t\t\t\t\t\t\t\t\t\t|","operationId":"CurrencyRate_GetChanges","consumes":["application/json"],"produces":["application/json"],"parameters":[{"name":"since","in":"query","required":false,"type":"string"},{"name":"cursor","in":"query","required":false,"type":"string"},{"name":"links","in":"query","required":false,"type":"string"}],"responses":{"200":{"description":"OK","schema":{"$ref":"#/definitions/ApiResourceChanges[ApiIntegratorCurrencyRateResource]"}}}}},"/lists/currencyRates/{guid}":{"get":{"tags":["CurrencyRate"],"summary":"Find with GUID","description":"| Property                  | Description\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t|\r\n| ------------------------- | --------------------------------------------------------------------------------\t|\r\n| GUID                      | The GUID associated to the currency rate\t\t\t\t\t\t\t\t\t\t\t|\r\n| FromCurrencyListItem      | The GUID and description of the FromCurrency associated to the currency rate\t\t|\r\n| ToCurrencylistitem\t\t| The GUID and description of the ToCurrency associated to the currency rate\t\t|\r\n| EffectiveFrom             | The effective from date of currency rate\t\t \t\t\t\t\t\t\t\t\t|\r\n| ExchangeRateDivider       | The exchange rate divider of currency rate\t\t \t\t\t\t\t\t\t\t|\r\n| ExchangeRateMultiplier    | The exchange rate multiplier of currency rate\t\t \t\t\t\t\t\t\t\t|\r\n| ExchangeRate              | The exchange rate of currency rate\t\t \t\t\t\t\t\t\t\t\t\t|\r\n| ExchangeRateInverse       | The exchange rate inverse of currency rate\t\t \t\t\t\t\t\t\t\t|\r\n| ExchangeRateDisplay       | The exchange rate display of currency rate\t\t \t\t\t\t\t\t\t\t|\r\n| IsDeleted                 | Whether the currency rate\tis deleted\t \t\t\t\t\t\t\t\t\t\t\t|","operationId":"CurrencyRate_Get","consumes":["application/json"],"produces":["application/json"],"parameters":[{"name":"guid","in":"path","required":true,"type":"string","format":"uuid"},{"name":"links","in":"query","required":false,"type":"string"},{"name":"include","in":"query","required":false,"type":"string"},{"name":"expand","in":"query","required":false,"type":"string"},{"name":"udf","in":"query","required":false,"type":"string"}],"responses":{"200":{"description":"OK","schema":{"$ref":"#/definitions/ApiResourceResultEntity[ApiIntegratorCurrencyRateResource]"}}}}},"/lists/currencyRates":{"get":{"tags":["CurrencyRate"],"summary":"Find with Filters","description":"| Property                  | Description\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t|\r\n| ------------------------- | --------------------------------------------------------------------------------\t|\r\n| GUID                      | The GUID associated to the currency rate\t\t\t\t\t\t\t\t\t\t\t|\r\n| FromCurrencyListItem      | The GUID and description of the FromCurrency associated to the currency rate\t\t|\r\n| ToCurrencylistitem\t\t| The GUID and description of the ToCurrency associated to the currency rate\t\t|\r\n| EffectiveFrom             | The effective from date of currency rate\t\t \t\t\t\t\t\t\t\t\t|\r\n| ExchangeRateDivider       | The exchange rate divider of currency rate\t\t \t\t\t\t\t\t\t\t|\r\n| ExchangeRateMultiplier    | The exchange rate multiplier of currency rate\t\t \t\t\t\t\t\t\t\t|\r\n| ExchangeRate              | The exchange rate of currency rate\t\t \t\t\t\t\t\t\t\t\t\t|\r\n| ExchangeRateInverse       | The exchange rate inverse of currency rate\t\t \t\t\t\t\t\t\t\t|\r\n| ExchangeRateDisplay       | The exchange rate display of currency rate\t\t \t\t\t\t\t\t\t\t|\r\n| IsDeleted                 | Whether the currency rate\tis deleted\t \t\t\t\t\t\t\t\t\t\t\t|","operationId":"CurrencyRate_GetCollection","consumes":["application/json"],"produces":["application/json"],"parameters":[{"name":"filter","in":"query","required":false,"type":"string"},{"name":"search","in":"query","required":false,"type":"string"},{"name":"order","in":"query","required":false,"type":"string"},{"name":"max","in":"query","required":false,"type":"integer","format":"int32"},{"name":"page","in":"query","required":false,"type":"integer","format":"int32"},{"name":"includeCount","in":"query","required":false,"type":"boolean"},{"name":"includeDeleted","in":"query","required":false,"type":"boolean"},{"name":"links","in":"query","required":false,"type":"string"},{"name":"udf","in":"query","required":false,"type":"string"}],"responses":{"200":{"description":"OK","schema":{"$ref":"#/definitions/ApiResourceResultCollection[ApiIntegratorCurrencyRateResource]"}}}}},"/lists/currencyRoundingTypes/{guid}":{"get":{"tags":["CurrencyRoundingType"],"summary":"Find with GUID","description":"| Property                  | Description                                                              |\r\n| ------------------------- | ------------------------------------------------------------------------ |\r\n| GUID                      | The GUID associated to the currency rounding type\t\t\t\t\t\t   |\r\n| Description               | The description of the currency rounding type\t\t\t\t\t\t\t   |\r\n| IsDeleted                 | Whether the currency rounding type is deleted\t     \t\t\t\t   \t   |\r\n","operationId":"CurrencyRoundingType_Get","consumes":["application/json"],"produces":["application/json"],"parameters":[{"name":"guid","in":"path","required":true,"type":"string","format":"uuid"},{"name":"links","in":"query","required":false,"type":"string"},{"name":"include","in":"query","required":false,"type":"string"},{"name":"expand","in":"query","required":false,"type":"string"},{"name":"udf","in":"query","required":false,"type":"string"}],"responses":{"200":{"description":"OK","schema":{"$ref":"#/definitions/ApiResourceResultEntity[ApiIntegratorCurrencyRoundingTypeResource]"}}}}},"/lists/currencyRoundingTypes":{"get":{"tags":["CurrencyRoundingType"],"summary":"Find with Filters","description":"| Property                  | Description                                                              |\r\n| ------------------------- | ------------------------------------------------------------------------ |\r\n| GUID                      | The GUID associated to the currency rounding type\t\t\t\t\t\t   |\r\n| Description               | The description of the currency rounding type\t\t\t\t\t\t\t   |\r\n| IsDeleted                 | Whether the currency rounding type is deleted\t     \t\t\t\t   \t   |\r\n","operationId":"CurrencyRoundingType_GetCollection","consumes":["application/json"],"produces":["application/json"],"parameters":[{"name":"filter","in":"query","required":false,"type":"string"},{"name":"search","in":"query","required":false,"type":"string"},{"name":"order","in":"query","required":false,"type":"string"},{"name":"max","in":"query","required":false,"type":"integer","format":"int32"},{"name":"page","in":"query","required":false,"type":"integer","format":"int32"},{"name":"includeCount","in":"query","required":false,"type":"boolean"},{"name":"includeDeleted","in":"query","required":false,"type":"boolean"},{"name":"links","in":"query","required":false,"type":"string"},{"name":"udf","in":"query","required":false,"type":"string"}],"responses":{"200":{"description":"OK","schema":{"$ref":"#/definitions/ApiResourceResultCollection[ApiIntegratorCurrencyRoundingTypeResource]"}}}}},"/directory/customers/changes":{"get":{"tags":["Customer"],"summary":"Retrieve changes","description":"| Property             | Description                                                           |\r\n| -------------------- | --------------------------------------------------------------------- |\r\n| GUID                 | The GUID associated to the customer.                                  |\r\n| Name                 | The customer's name.                                                  |\r\n| Reference            | An alternative name used for the customer.                            |\r\n| ARAccountCode        | The account code used for Accounts Receivable.                        |\r\n| FederalId            | The customer's local authority / government /tax reference.           |\r\n| IsInternal           | Whether the customer is an internal customer.                       |\r\n| IsResidential\t\t   | Whether the customer is a residential customer (as opposed to a commercial). |\r\n| ReceiveServiceUpdatesByEmail   | Customer receives service updates by email.     |\r\n| ReceiveServiceUpdatesByText    | Customer receives service updates by text.      |\r\n| ReceiveMarketingUpdatesByEmail | Customer receives marketing updates by email.   |\r\n| ReceiveMarketingUpdatesByText  | Customer receives marketing updates by text.    |\r\n| CompanyListItem          | The GUID and name of the company this customer is associated to.        |\r\n| CustomerStateListItem    | The GUID and status of the customer (eg. Active, Suspended, etc.)       |\r\n| CustomerTypeListItem     | The GUID and type of customer (eg. Residential, Commerical, Municipal). |\r\n| CustomerCategoryListItem | The GUID and category of the customer (various values).                 |\r\n| CustomerGroupListItem    | The GUID and group of the customer (various values).                    |\r\n| CurrencyListItem         | The GUID and currency of the customer (various values).                 |\r\n| RelatedBlobHashes\t\t\t| The array of related external documents to the customer. |\r\n| RelatedBlobHashes[0].Hash\t| The hash of the external document blob to be used against the /blob endpoint. Files are provided as an octet stream which will need to be converted. |\r\n| RelatedReportBlobs\t\t\t\t\t\t\t\t\t\t\t| The array of related report documents to the account customer. |\r\n| RelatedReportBlobs[0].Guid\t\t\t\t\t\t\t\t\t| The Guid associated to the customer report.\t\t\t\t\t\t\t\t\t|\r\n| RelatedReportBlobs[0].Hash\t\t\t\t\t\t\t\t\t| The hash of the report document blob to be used against the /blob endpoint. Files are provided as an octet stream which will need to be converted. |\r\n| RelatedReportBlobs[0].DocumentDescription\t\t\t\t\t\t| The description associated to the customer report.\t\t\t\t\t\t\t|\r\n| RelatedReportBlobs[0].DocumentName\t\t\t\t\t\t\t| The document name associated to the customer report.\t\t\t\t\t\t\t|\r\n| RelatedReportBlobs[0].IsForAllSites\t\t\t\t\t\t\t| Whether the customer report is for all sites of related customer.\t\t\t\t|\r\n| RelatedReportBlobs[0].RelatedSites\t\t\t\t\t\t\t| The list of related customer report sites.\t\t\t\t\t\t\t\t\t|\r\n| RelatedReportBlobs[0].RelatedSites[0].Guid\t\t\t\t\t| The guid associated to the customer report site.\t\t\t\t\t\t\t\t|\r\n| RelatedReportBlobs[0].RelatedSites[0].RelatedSiteGuid\t\t\t| The related customer site\tguid associated to the customer report site.\t\t|\r\n| RelatedReportBlobs[0].RelatedExcludedSites\t\t\t\t\t| The list of excluded related customer report sites.\t\t\t\t\t\t\t|\r\n| RelatedReportBlobs[0].RelatedExcludedSites[0].Guid\t\t\t| The guid associated to the customer report site.\t\t\t\t\t\t\t\t|\r\n| RelatedReportBlobs[0].RelatedExcludedSites[0].RelatedSiteGuid\t| The related customer site\tguid associated to the customer report site.\t\t|","operationId":"Customer_GetChanges","consumes":["application/json"],"produces":["application/json"],"parameters":[{"name":"since","in":"query","required":false,"type":"string"},{"name":"cursor","in":"query","required":false,"type":"string"},{"name":"links","in":"query","required":false,"type":"string"}],"responses":{"200":{"description":"OK","schema":{"$ref":"#/definitions/ApiResourceChanges[ApiIntegratorCustomerResource]"}}}}},"/directory/customers/{guid}":{"get":{"tags":["Customer"],"summary":"Find with GUID","description":"| Property             | Description                                                           |\r\n| -------------------- | --------------------------------------------------------------------- |\r\n| GUID                 | The GUID associated to the customer.                                  |\r\n| Name                 | The customer's name.                                                  |\r\n| Reference            | An alternative name used for the customer.                            |\r\n| ARAccountCode        | The account code used for Accounts Receivable.                        |\r\n| FederalId            | The customer's local authority / government /tax reference.           |\r\n| IsInternal           | Whether the customer is an internal customer.                       |\r\n| IsResidential\t\t   | Whether the customer is a residential customer (as opposed to a commercial). |\r\n| ReceiveServiceUpdatesByEmail   | Customer receives service updates by email.     |\r\n| ReceiveServiceUpdatesByText    | Customer receives service updates by text.      |\r\n| ReceiveMarketingUpdatesByEmail | Customer receives marketing updates by email.   |\r\n| ReceiveMarketingUpdatesByText  | Customer receives marketing updates by text.    |\r\n| CompanyListItem          | The GUID and name of the company this customer is associated to.        |\r\n| CustomerStateListItem    | The GUID and status of the customer (eg. Active, Suspended, etc.)       |\r\n| CustomerTypeListItem     | The GUID and type of customer (eg. Residential, Commerical, Municipal). |\r\n| CustomerCategoryListItem | The GUID and category of the customer (various values).                 |\r\n| CustomerGroupListItem    | The GUID and group of the customer (various values).                    |\r\n| CurrencyListItem         | The GUID and currency of the customer (various values).                 |\r\n| RelatedBlobHashes\t\t\t| The array of related external documents to the customer. |\r\n| RelatedBlobHashes[0].Hash\t| The hash of the external document blob to be used against the /blob endpoint. Files are provided as an octet stream which will need to be converted. |\r\n| RelatedReportBlobs\t\t\t\t\t\t\t\t\t\t\t| The array of related report documents to the account customer. |\r\n| RelatedReportBlobs[0].Guid\t\t\t\t\t\t\t\t\t| The Guid associated to the customer report.\t\t\t\t\t\t\t\t\t|\r\n| RelatedReportBlobs[0].Hash\t\t\t\t\t\t\t\t\t| The hash of the report document blob to be used against the /blob endpoint. Files are provided as an octet stream which will need to be converted. |\r\n| RelatedReportBlobs[0].DocumentDescription\t\t\t\t\t\t| The description associated to the customer report.\t\t\t\t\t\t\t|\r\n| RelatedReportBlobs[0].DocumentName\t\t\t\t\t\t\t| The document name associated to the customer report.\t\t\t\t\t\t\t|\r\n| RelatedReportBlobs[0].IsForAllSites\t\t\t\t\t\t\t| Whether the customer report is for all sites of related customer.\t\t\t\t|\r\n| RelatedReportBlobs[0].RelatedSites\t\t\t\t\t\t\t| The list of related customer report sites.\t\t\t\t\t\t\t\t\t|\r\n| RelatedReportBlobs[0].RelatedSites[0].Guid\t\t\t\t\t| The guid associated to the customer report site.\t\t\t\t\t\t\t\t|\r\n| RelatedReportBlobs[0].RelatedSites[0].RelatedSiteGuid\t\t\t| The related customer site\tguid associated to the customer report site.\t\t|\r\n| RelatedReportBlobs[0].RelatedExcludedSites\t\t\t\t\t| The list of excluded related customer report sites.\t\t\t\t\t\t\t|\r\n| RelatedReportBlobs[0].RelatedExcludedSites[0].Guid\t\t\t| The guid associated to the customer report site.\t\t\t\t\t\t\t\t|\r\n| RelatedReportBlobs[0].RelatedExcludedSites[0].RelatedSiteGuid\t| The related customer site\tguid associated to the customer report site.\t\t|","operationId":"Customer_Get","consumes":["application/json"],"produces":["application/json"],"parameters":[{"name":"guid","in":"path","required":true,"type":"string","format":"uuid"},{"name":"links","in":"query","required":false,"type":"string"},{"name":"include","in":"query","required":false,"type":"string"},{"name":"expand","in":"query","required":false,"type":"string"},{"name":"udf","in":"query","required":false,"type":"string"}],"responses":{"200":{"description":"OK","schema":{"$ref":"#/definitions/ApiResourceResultEntity[ApiIntegratorCustomerResource]"}}}},"put":{"tags":["Customer"],"summary":"Partial update","description":"| Property             | Description                                                           | Required |\r\n| -------------------- | --------------------------------------------------------------------- | -------- |\r\n| GUID                 | The GUID associated to the customer.                                  | No |\r\n| Name                 | The customer's name.                                                  | Yes |\r\n| Reference            | An alternative name used for the customer.                            | No |\r\n| ARAccountCode        | The account code used for Accounts Receivable. This field must be null. Error \"ARAccountCode should be null\" is returned when not null. | No |\r\n| FederalId            | The customer's local authority / government /tax reference.           | No |\r\n| IsInternal           | Whether the customer is an internal customer.                         | Yes |\r\n| IsResidential\t\t   | Whether the customer is a residential customer (as opposed to a commercial). | No |\r\n| ReceiveServiceUpdatesByEmail   | Customer receives service updates by email.                 | Yes |\r\n| ReceiveServiceUpdatesByText    | Customer receives service updates by text.                  | Yes |\r\n| ReceiveMarketingUpdatesByEmail | Customer receives marketing updates by email.               | Yes |\r\n| ReceiveMarketingUpdatesByText  | Customer receives marketing updates by text.                | Yes |\r\n| CompanyListItem          | The GUID and name of the company this customer is associated to.        | Yes |\r\n| CustomerStateListItem    | The GUID and status of the customer (eg. Active, Suspended, etc.)       | Yes |\r\n| CustomerTypeListItem     | The GUID and type of customer (eg. Residential, Commerical, Municipal). | No |\r\n| CustomerCategoryListItem | The GUID and category of the customer (various values).                 | No |\r\n| CustomerGroupListItem    | The GUID and group of the customer (various values).                    | No |\r\n| CurrencyListItem         | The GUID and currency of the customer (various values).                 | Yes |\r\n| RelatedBlobHashes\t\t\t| The array of related external documents to the customer. | No |\r\n| RelatedBlobHashes[0].Hash\t| The hash of the external document blob to be used against the /blob endpoint. Files are provided as an octet stream which will need to be converted. | No |\r\n| RelatedReportBlobs\t\t\t\t\t\t\t\t\t\t\t| The array of related report documents to the customer.\t\t\t\t\t\t| No |\r\n| RelatedReportBlobs[0].Guid\t\t\t\t\t\t\t\t\t| The Guid associated to the customer report.\t\t\t\t\t\t\t\t\t| Yes |\r\n| RelatedReportBlobs[0].Hash\t\t\t\t\t\t\t\t\t| The hash of the report document blob to be used against the /blob endpoint. Files are provided as an octet stream which will need to be converted. | No |\r\n| RelatedReportBlobs[0].DocumentDescription\t\t\t\t\t\t| The description associated to the customer report.\t\t\t\t\t\t\t| No |\r\n| RelatedReportBlobs[0].DocumentName\t\t\t\t\t\t\t| The document name associated to the customer report.\t\t\t\t\t\t\t| No |\r\n| RelatedReportBlobs[0].IsForAllSites\t\t\t\t\t\t\t| Whether the customer report is for all sites of related customer.\t\t\t\t| No |\r\n| RelatedReportBlobs[0].RelatedSites\t\t\t\t\t\t\t| The list of related customer report sites.\t\t\t\t\t\t\t\t\t| No |\r\n| RelatedReportBlobs[0].RelatedSites[0].Guid\t\t\t\t\t| The guid associated to the customer report site.\t\t\t\t\t\t\t\t| No |\r\n| RelatedReportBlobs[0].RelatedSites[0].RelatedSiteGuid\t\t\t| The related customer site\tguid associated to the customer report site.\t\t| No |\r\n| RelatedReportBlobs[0].RelatedExcludedSites\t\t\t\t\t| The list of excluded related customer report sites.\t\t\t\t\t\t\t| No |\r\n| RelatedReportBlobs[0].RelatedExcludedSites[0].Guid\t\t\t| The guid associated to the customer report site.\t\t\t\t\t\t\t\t| No |\r\n| RelatedReportBlobs[0].RelatedExcludedSites[0].RelatedSiteGuid\t| The related customer site\tguid associated to the customer report site.\t\t| No |\r\n\r\n## Extra validations\r\n\r\n| Condition | Error message |\r\n| --------- | ------------- |\r\n| ARAccountCode is not null | ARAccountCode should be null |\r\n| RelatedBlobHashes[0].Hash is not null for Update and the Customer did not have RelatedBlobHashes initially | Failed to save/update Customer because RelatedBlobHashes do not exist for the Customer. |\r\n| RelatedBlobHashes[0].Hash is not null for Update and Invalid Hash | Failed to retrieve CustomerExternalDocument with MediaContentHash of {value of Hash} |\r\n| RelatedReportBlobs is not empty for Update and the Customer did not have RelatedReportBlobs initially | Failed to save/update Customer because RelatedReportBlobs do not exist for the Customer. |\r\n| RelatedReportBlobs[0].Guid is invalid | Failed to retrieve PortalReport with RelatedReportBlobs.Guid of {RelatedReportBlobs.Guid} |\r\n| RelatedReportBlobs[0].Guid is changed | Failed to save. Customer with RelatedReportBlobs.Guid cannot be set if CustomerReport is not linked to Customer |\r\n| RelatedReportBlobs[0].Hash is changed | RelatedReportBlobs.Hash is a read-only property |\r\n| RelatedReportBlobs[0].DocumentDescription is changed | RelatedReportBlobs.DocumentDescription is a read-only property |\r\n| RelatedReportBlobs[0].IsForAllSites is changed | RelatedReportBlobs.IsForAllSites is a read-only property |\r\n| RelatedReportBlobs[0].RelatedSites is changed | RelatedReportBlobs.RelatedSites is a read-only property |\r\n| RelatedReportBlobs[0].RelatedSites.Guid is changed | RelatedReportBlobs.RelatedSites.Guid is a read-only property |\r\n| RelatedReportBlobs[0].RelatedSites.RelatedSiteGuid is changed | RelatedReportBlobs.RelatedSites.RelatedSiteGuid is a read-only property |\r\n| RelatedReportBlobs[0].RelatedExcludedSites is changed | RelatedReportBlobs.RelatedExcludedSites is a read-only property |\r\n| RelatedReportBlobs[0].RelatedExcludedSites.Guid is changed | RelatedReportBlobs.RelatedExcludedSites.Guid is a read-only property |\r\n| RelatedReportBlobs[0].RelatedExcludedSites.RelatedSiteGuid is changed | RelatedReportBlobs.RelatedExcludedSites.RelatedSiteGuid is a read-only property |","operationId":"Customer_Update","consumes":["application/json"],"produces":["application/json"],"parameters":[{"name":"guid","in":"path","required":true,"type":"string","format":"uuid"},{"in":"body","required":true,"schema":{"$ref":"#/definitions/ApiResourceId"}}],"responses":{"200":{"description":"OK","schema":{"$ref":"#/definitions/ApiResourceId"}}}}},"/directory/customers":{"get":{"tags":["Customer"],"summary":"Find with Filters","description":"| Property             | Description                                                           |\r\n| -------------------- | --------------------------------------------------------------------- |\r\n| GUID                 | The GUID associated to the customer.                                  |\r\n| Name                 | The customer's name.                                                  |\r\n| Reference            | An alternative name used for the customer.                            |\r\n| ARAccountCode        | The account code used for Accounts Receivable.                        |\r\n| FederalId            | The customer's local authority / government /tax reference.           |\r\n| IsInternal           | Whether the customer is an internal customer.                       |\r\n| IsResidential\t\t   | Whether the customer is a residential customer (as opposed to a commercial). |\r\n| ReceiveServiceUpdatesByEmail   | Customer receives service updates by email.     |\r\n| ReceiveServiceUpdatesByText    | Customer receives service updates by text.      |\r\n| ReceiveMarketingUpdatesByEmail | Customer receives marketing updates by email.   |\r\n| ReceiveMarketingUpdatesByText  | Customer receives marketing updates by text.    |\r\n| CompanyListItem          | The GUID and name of the company this customer is associated to.        |\r\n| CustomerStateListItem    | The GUID and status of the customer (eg. Active, Suspended, etc.)       |\r\n| CustomerTypeListItem     | The GUID and type of customer (eg. Residential, Commerical, Municipal). |\r\n| CustomerCategoryListItem | The GUID and category of the customer (various values).                 |\r\n| CustomerGroupListItem    | The GUID and group of the customer (various values).                    |\r\n| CurrencyListItem         | The GUID and currency of the customer (various values).                 |\r\n| RelatedBlobHashes\t\t\t| The array of related external documents to the customer. |\r\n| RelatedBlobHashes[0].Hash\t| The hash of the external document blob to be used against the /blob endpoint. Files are provided as an octet stream which will need to be converted. |\r\n| RelatedReportBlobs\t\t\t\t\t\t\t\t\t\t\t| The array of related report documents to the account customer. |\r\n| RelatedReportBlobs[0].Guid\t\t\t\t\t\t\t\t\t| The Guid associated to the customer report.\t\t\t\t\t\t\t\t\t|\r\n| RelatedReportBlobs[0].Hash\t\t\t\t\t\t\t\t\t| The hash of the report document blob to be used against the /blob endpoint. Files are provided as an octet stream which will need to be converted. |\r\n| RelatedReportBlobs[0].DocumentDescription\t\t\t\t\t\t| The description associated to the customer report.\t\t\t\t\t\t\t|\r\n| RelatedReportBlobs[0].DocumentName\t\t\t\t\t\t\t| The document name associated to the customer report.\t\t\t\t\t\t\t|\r\n| RelatedReportBlobs[0].IsForAllSites\t\t\t\t\t\t\t| Whether the customer report is for all sites of related customer.\t\t\t\t|\r\n| RelatedReportBlobs[0].RelatedSites\t\t\t\t\t\t\t| The list of related customer report sites.\t\t\t\t\t\t\t\t\t|\r\n| RelatedReportBlobs[0].RelatedSites[0].Guid\t\t\t\t\t| The guid associated to the customer report site.\t\t\t\t\t\t\t\t|\r\n| RelatedReportBlobs[0].RelatedSites[0].RelatedSiteGuid\t\t\t| The related customer site\tguid associated to the customer report site.\t\t|\r\n| RelatedReportBlobs[0].RelatedExcludedSites\t\t\t\t\t| The list of excluded related customer report sites.\t\t\t\t\t\t\t|\r\n| RelatedReportBlobs[0].RelatedExcludedSites[0].Guid\t\t\t| The guid associated to the customer report site.\t\t\t\t\t\t\t\t|\r\n| RelatedReportBlobs[0].RelatedExcludedSites[0].RelatedSiteGuid\t| The related customer site\tguid associated to the customer report site.\t\t|","operationId":"Customer_GetCollection","consumes":["application/json"],"produces":["application/json"],"parameters":[{"name":"filter","in":"query","required":false,"type":"string"},{"name":"search","in":"query","required":false,"type":"string"},{"name":"order","in":"query","required":false,"type":"string"},{"name":"max","in":"query","required":false,"type":"integer","format":"int32"},{"name":"page","in":"query","required":false,"type":"integer","format":"int32"},{"name":"includeCount","in":"query","required":false,"type":"boolean"},{"name":"includeDeleted","in":"query","required":false,"type":"boolean"},{"name":"links","in":"query","required":false,"type":"string"},{"name":"udf","in":"query","required":false,"type":"string"}],"responses":{"200":{"description":"OK","schema":{"$ref":"#/definitions/ApiResourceResultCollection[ApiIntegratorCustomerResource]"}}}},"post":{"tags":["Customer"],"summary":"Create or update","description":"| Property             | Description                                                           | Required |\r\n| -------------------- | --------------------------------------------------------------------- | -------- |\r\n| GUID                 | The GUID associated to the customer.                                  | No |\r\n| Name                 | The customer's name.                                                  | Yes |\r\n| Reference            | An alternative name used for the customer.                            | No |\r\n| ARAccountCode        | The account code used for Accounts Receivable. This field must be null. Error \"ARAccountCode should be null\" is returned when not null. | No |\r\n| FederalId            | The customer's local authority / government /tax reference.           | No |\r\n| IsInternal           | Whether the customer is an internal customer.                         | Yes |\r\n| IsResidential\t\t   | Whether the customer is a residential customer (as opposed to a commercial). | No |\r\n| ReceiveServiceUpdatesByEmail   | Customer receives service updates by email.                 | Yes |\r\n| ReceiveServiceUpdatesByText    | Customer receives service updates by text.                  | Yes |\r\n| ReceiveMarketingUpdatesByEmail | Customer receives marketing updates by email.               | Yes |\r\n| ReceiveMarketingUpdatesByText  | Customer receives marketing updates by text.                | Yes |\r\n| CompanyListItem          | The GUID and name of the company this customer is associated to.        | Yes |\r\n| CustomerStateListItem    | The GUID and status of the customer (eg. Active, Suspended, etc.)       | Yes |\r\n| CustomerTypeListItem     | The GUID and type of customer (eg. Residential, Commerical, Municipal). | No |\r\n| CustomerCategoryListItem | The GUID and category of the customer (various values).                 | No |\r\n| CustomerGroupListItem    | The GUID and group of the customer (various values).                    | No |\r\n| CurrencyListItem         | The GUID and currency of the customer (various values).                 | Yes |\r\n| RelatedBlobHashes\t\t\t| The array of related external documents to the customer. | No |\r\n| RelatedBlobHashes[0].Hash\t| The hash of the external document blob to be used against the /blob endpoint. Files are provided as an octet stream which will need to be converted. | No |\r\n| RelatedReportBlobs\t\t\t\t\t\t\t\t\t\t\t| The array of related report documents to the customer.\t\t\t\t\t\t| No |\r\n| RelatedReportBlobs[0].Guid\t\t\t\t\t\t\t\t\t| The Guid associated to the customer report.\t\t\t\t\t\t\t\t\t| Yes |\r\n| RelatedReportBlobs[0].Hash\t\t\t\t\t\t\t\t\t| The hash of the report document blob to be used against the /blob endpoint. Files are provided as an octet stream which will need to be converted. | No |\r\n| RelatedReportBlobs[0].DocumentDescription\t\t\t\t\t\t| The description associated to the customer report.\t\t\t\t\t\t\t| No |\r\n| RelatedReportBlobs[0].DocumentName\t\t\t\t\t\t\t| The document name associated to the customer report.\t\t\t\t\t\t\t| No |\r\n| RelatedReportBlobs[0].IsForAllSites\t\t\t\t\t\t\t| Whether the customer report is for all sites of related customer.\t\t\t\t| No |\r\n| RelatedReportBlobs[0].RelatedSites\t\t\t\t\t\t\t| The list of related customer report sites.\t\t\t\t\t\t\t\t\t| No |\r\n| RelatedReportBlobs[0].RelatedSites[0].Guid\t\t\t\t\t| The guid associated to the customer report site.\t\t\t\t\t\t\t\t| No |\r\n| RelatedReportBlobs[0].RelatedSites[0].RelatedSiteGuid\t\t\t| The related customer site\tguid associated to the customer report site.\t\t| No |\r\n| RelatedReportBlobs[0].RelatedExcludedSites\t\t\t\t\t| The list of excluded related customer report sites.\t\t\t\t\t\t\t| No |\r\n| RelatedReportBlobs[0].RelatedExcludedSites[0].Guid\t\t\t| The guid associated to the customer report site.\t\t\t\t\t\t\t\t| No |\r\n| RelatedReportBlobs[0].RelatedExcludedSites[0].RelatedSiteGuid\t| The related customer site\tguid associated to the customer report site.\t\t| No |\r\n\r\n## Extra validations\r\n\r\n| Condition | Error message |\r\n| --------- | ------------- |\r\n| ARAccountCode is not null | ARAccountCode should be null |\r\n| RelatedBlobHashes[0].Hash is not null for Insert | Failed to save/update Customer because RelatedBlobHashes creation is not permitted |\r\n| RelatedBlobHashes[0].Hash is not null for Update and the Customer did not have RelatedBlobHashes initially | Failed to save/update Customer because RelatedBlobHashes do not exist for the Customer. |\r\n| RelatedBlobHashes[0].Hash is not null for Update and Invalid Hash | Failed to retrieve CustomerExternalDocument with MediaContentHash of {value of Hash} |\r\n| RelatedReportBlobs[0].Hash is not null for Insert | Failed to save/update Customer because RelatedReportBlobs creation is not permitted |\r\n| RelatedReportBlobs is not empty for Insert | Failed to save/update Customer because RelatedReportBlobs creation is not permitted |\r\n| RelatedReportBlobs is not empty for Update and the Customer did not have RelatedReportBlobs initially | Failed to save/update Customer because RelatedReportBlobs do not exist for the Customer. |\r\n| RelatedReportBlobs[0].Guid is invalid | Failed to retrieve PortalReport with RelatedReportBlobs.Guid of {RelatedReportBlobs.Guid} |\r\n| RelatedReportBlobs[0].Guid is changed | Failed to save. Customer with RelatedReportBlobs.Guid cannot be set if CustomerReport is not linked to Customer |\r\n| RelatedReportBlobs[0].Hash is changed | RelatedReportBlobs.Hash is a read-only property |\r\n| RelatedReportBlobs[0].DocumentDescription is changed | RelatedReportBlobs.DocumentDescription is a read-only property |\r\n| RelatedReportBlobs[0].IsForAllSites is changed | RelatedReportBlobs.IsForAllSites is a read-only property |\r\n| RelatedReportBlobs[0].RelatedSites is changed | RelatedReportBlobs.RelatedSites is a read-only property |\r\n| RelatedReportBlobs[0].RelatedSites.Guid is changed | RelatedReportBlobs.RelatedSites.Guid is a read-only property |\r\n| RelatedReportBlobs[0].RelatedSites.RelatedSiteGuid is changed | RelatedReportBlobs.RelatedSites.RelatedSiteGuid is a read-only property |\r\n| RelatedReportBlobs[0].RelatedExcludedSites is changed | RelatedReportBlobs.RelatedExcludedSites is a read-only property |\r\n| RelatedReportBlobs[0].RelatedExcludedSites.Guid is changed | RelatedReportBlobs.RelatedExcludedSites.Guid is a read-only property |\r\n| RelatedReportBlobs[0].RelatedExcludedSites.RelatedSiteGuid is changed | RelatedReportBlobs.RelatedExcludedSites.RelatedSiteGuid is a read-only property |","operationId":"Customer_Create","consumes":["application/json"],"produces":["application/json"],"parameters":[{"in":"body","required":true,"schema":{"$ref":"#/definitions/ApiResourceId"}}],"responses":{"200":{"description":"OK","schema":{"$ref":"#/definitions/ApiResourceId"}}}}},"/blobs/customerBlobs":{"post":{"tags":["CustomerBlob"],"summary":"Create or update","description":"| Property                              | Description                                                                   | Required |\r\n| ------------------------------------- | ----------------------------------------------------------------------------- | -------- |\r\n| MediaContentBase64\t\t\t\t\t   | The Image/PDF converted to base 64\t\t\t\t\t\t\t\t\t\t\t| Yes |\r\n| DocumentName\t\t\t\t\t\t\t   | The Document Name\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t| Yes |\r\n| DocumentReference\t\t\t\t\t\t   | The Document Reference                                                     | Yes |\r\n| RelatedInvoiceGuid\t\t\t\t\t   | The Related Invoice Guid\t\t\t\t\t\t\t\t\t\t\t\t\t| No |\r\n| RelatedCustomerGuid\t\t\t\t\t   | The Related Customer Guid\t\t\t\t\t\t\t\t\t\t\t\t\t| Yes |\r\n| CustomerExternalDocumentCategoryListItem | The GUID and description of the document category related to the external document | Yes |\r\n\r\n## Extra validations\r\n\r\n| Condition | Error message |\r\n| --------- | ------------- |\r\n| DocumentName is Null or not provided | The mandatory property DocumentName has a null value. The request could not be processed. Supply a value for the DocumentName property of the submitted resource. |\r\n| DocumentName has less than 5 characters  or more than 510 characters | CustomerExternalDocument has the property DocumentName with value of {DocumentName} that is not supported. DocumentName should be at least 1 character and at most 506 characters, excluding the extension |\r\n| DocumentName does not have any of pdf/png/jpg/gif extension  | CustomerExternalDocument has the property DocumentName with value of {DocumentName} that is not supported. DocumentName should have any of pdf/png/jpg/gif extension |\r\n| DocumentReference is Null or not provided | The mandatory property DocumentReference has a null value. The request could not be processed. Supply a value for the DocumentReference property of the submitted resource. |\r\n| RelatedCustomerGuid is Null or not provided | The mandatory property RelatedCustomerGuid has a null value. The request could not be processed. Supply a value for the RelatedCustomerGuid property of the submitted resource. |\r\n| Invalid RelatedCustomerGuid | Failed to retrieve Customer with RelatedCustomerGuid of {Guid} |\r\n| CustomerExternalDocumentCategoryListItem.Guid is Null or not provided | The mandatory property CustomerExternalDocumentCategoryListItem.Guid has a null value. The request could not be processed. Supply a value for the CustomerExternalDocumentCategoryListItem.Guid property of the submitted resource. |\r\n| Invalid CustomerExternalDocumentCategoryListItem.Guid | Failed to retrieve CustomerExternalDocumentCategory with CustomerExternalDocumentCategory.Guid of {Guid} |\r\n| MediaContentBase64 is Null or not provided | The mandatory property MediaContentBase64 has a null value. The request could not be processed. Supply a value for the MediaContentBase64 property of the submitted resource. |\r\n| MediaContentBase64 is not a valid base64 string | Failed to save/update CustomerExternalDocument because MediaContentBase64 has Invalid length for a Base-64 char array or string |\r\n\r\n##  Information\r\n| Information |\r\n| ----------- |\r\n| Currently we are only validating for a valid base64 string, we are not validating the string against the file extension |","operationId":"CustomerBlob_Create","consumes":["application/json"],"produces":["application/json"],"parameters":[{"in":"body","required":true,"schema":{"$ref":"#/definitions/ApiResourceId"}}],"responses":{"200":{"description":"OK","schema":{"$ref":"#/definitions/ApiResourceId"}}}}},"/lists/customerCategories/{guid}":{"get":{"tags":["CustomerCategory"],"summary":"Find with GUID","description":"| Property                  | Description                                                  |\r\n| ------------------------- | ------------------------------------------------------------ |\r\n| GUID                      | The GUID associated to the customer category\t\t\t\t   |\r\n| Description               | The description of the customer category\t\t\t\t\t   |\r\n| ShortCode\t\t\t\t\t| The short code of the customer category\t\t\t\t\t   |\r\n| IsDeleted                 | Whether the customer category is deleted\t                   |\r\n\t\t\t\t   ","operationId":"CustomerCategory_Get","consumes":["application/json"],"produces":["application/json"],"parameters":[{"name":"guid","in":"path","required":true,"type":"string","format":"uuid"},{"name":"links","in":"query","required":false,"type":"string"},{"name":"include","in":"query","required":false,"type":"string"},{"name":"expand","in":"query","required":false,"type":"string"},{"name":"udf","in":"query","required":false,"type":"string"}],"responses":{"200":{"description":"OK","schema":{"$ref":"#/definitions/ApiResourceResultEntity[ApiIntegratorCustomerCategoryResource]"}}}}},"/lists/customerCategories":{"get":{"tags":["CustomerCategory"],"summary":"Find with Filters","description":"| Property                  | Description                                                  |\r\n| ------------------------- | ------------------------------------------------------------ |\r\n| GUID                      | The GUID associated to the customer category\t\t\t\t   |\r\n| Description               | The description of the customer category\t\t\t\t\t   |\r\n| ShortCode\t\t\t\t\t| The short code of the customer category\t\t\t\t\t   |\r\n| IsDeleted                 | Whether the customer category is deleted\t                   |\r\n\t\t\t\t   ","operationId":"CustomerCategory_GetCollection","consumes":["application/json"],"produces":["application/json"],"parameters":[{"name":"filter","in":"query","required":false,"type":"string"},{"name":"search","in":"query","required":false,"type":"string"},{"name":"order","in":"query","required":false,"type":"string"},{"name":"max","in":"query","required":false,"type":"integer","format":"int32"},{"name":"page","in":"query","required":false,"type":"integer","format":"int32"},{"name":"includeCount","in":"query","required":false,"type":"boolean"},{"name":"includeDeleted","in":"query","required":false,"type":"boolean"},{"name":"links","in":"query","required":false,"type":"string"},{"name":"udf","in":"query","required":false,"type":"string"}],"responses":{"200":{"description":"OK","schema":{"$ref":"#/definitions/ApiResourceResultCollection[ApiIntegratorCustomerCategoryResource]"}}}}},"/lists/customerGroups/{guid}":{"get":{"tags":["CustomerGroup"],"summary":"Find with GUID","description":"| Property                  | Description                                                              |\r\n| ------------------------- | ------------------------------------------------------------------------ |\r\n| GUID                      | The GUID associated to the customer group                                |\r\n| Description               | The description of the customer group                                    |\r\n| IsDeleted                 | Whether the customer group is deleted\t        \t \t\t\t\t\t   |","operationId":"CustomerGroup_Get","consumes":["application/json"],"produces":["application/json"],"parameters":[{"name":"guid","in":"path","required":true,"type":"string","format":"uuid"},{"name":"links","in":"query","required":false,"type":"string"},{"name":"include","in":"query","required":false,"type":"string"},{"name":"expand","in":"query","required":false,"type":"string"},{"name":"udf","in":"query","required":false,"type":"string"}],"responses":{"200":{"description":"OK","schema":{"$ref":"#/definitions/ApiResourceResultEntity[ApiIntegratorCustomerGroupResource]"}}}}},"/lists/customerGroups":{"get":{"tags":["CustomerGroup"],"summary":"Find with Filters","description":"| Property                  | Description                                                              |\r\n| ------------------------- | ------------------------------------------------------------------------ |\r\n| GUID                      | The GUID associated to the customer group                                |\r\n| Description               | The description of the customer group                                    |\r\n| IsDeleted                 | Whether the customer group is deleted\t        \t \t\t\t\t\t   |","operationId":"CustomerGroup_GetCollection","consumes":["application/json"],"produces":["application/json"],"parameters":[{"name":"filter","in":"query","required":false,"type":"string"},{"name":"search","in":"query","required":false,"type":"string"},{"name":"order","in":"query","required":false,"type":"string"},{"name":"max","in":"query","required":false,"type":"integer","format":"int32"},{"name":"page","in":"query","required":false,"type":"integer","format":"int32"},{"name":"includeCount","in":"query","required":false,"type":"boolean"},{"name":"includeDeleted","in":"query","required":false,"type":"boolean"},{"name":"links","in":"query","required":false,"type":"string"},{"name":"udf","in":"query","required":false,"type":"string"}],"responses":{"200":{"description":"OK","schema":{"$ref":"#/definitions/ApiResourceResultCollection[ApiIntegratorCustomerGroupResource]"}}}}},"/blobs/customerReportBlobs":{"post":{"tags":["CustomerReportBlob"],"summary":"Create or update","description":"| Property\t\t\t\t\t\t\t| Description                                                                   | Required |\r\n| --------------------------------- | ----------------------------------------------------------------------------- | -------- |\r\n| DocumentDescription\t\t\t\t| The description associated to the customer report.\t\t\t\t\t\t\t| Yes |\r\n| DocumentName\t\t\t\t\t\t| The document name associated to the customer report.\t\t\t\t\t\t\t| Yes |\r\n| IsForAllSites\t\t\t\t\t\t| Whether the customer report is for all sites of related customer.\t\t\t\t| No |\r\n| MediaContentBase64\t\t\t\t| The file converted to base 64.\t\t\t\t\t\t\t\t\t\t\t\t| Yes |\r\n| RelatedCustomerGuid\t\t\t\t| The related customer guid associated to the customer report.\t\t\t\t\t| Yes |\r\n| RelatedSites\t\t\t\t\t\t| The list of related customer site.\t\t\t\t\t\t\t\t\t\t\t| No |\r\n| RelatedSites[0].Guid\t\t\t\t| The guid associated to the customer report site.\t\t\t\t\t\t\t\t| No |\r\n| RelatedSites[0].RelatedSiteGuid\t| The related customer site\tguid associated to the customer report site.\t\t| No |\r\n\r\n## Extra validations\r\n\r\n| Condition | Error message |\r\n| --------- | ------------- |\r\n| DocumentDescription is Null or not provided | The mandatory property DocumentDescription has a null value. The request could not be processed. Supply a value for the DocumentDescription property of the submitted resource. |\r\n| DocumentName is Null or not provided | The mandatory property DocumentName has a null value. The request could not be processed. Supply a value for the DocumentName property of the submitted resource.  |\r\n| DocumentName has less than 5 characters  or more than 510 characters | CustomerReport has the property DocumentName with value of {DocumentName} that is not supported. DocumentName should be at least 1 character and at most 506 characters, excluding the extension |\r\n| DocumentName does not have any of pdf/png/jpg/gif extension  | CustomerReport has the property DocumentName with value of {DocumentName} that is not supported. DocumentName should have any of pdf/png/jpg/gif extension |\r\n| MediaContentBase64 is Null or not provided | The mandatory property MediaContentBase64 has a null value. The request could not be processed. Supply a value for the MediaContentBase64 property of the submitted resource.  |\r\n| MediaContentBase64 is not a valid base64 string | Failed to save/update CustomerReport because MediaContentBase64 has Invalid length for a Base-64 char array or string |\r\n| RelatedCustomerGuid is Null or not provided | The mandatory property RelatedCustomerGuid has a null value. The request could not be processed. Supply a value for the RelatedCustomerGuid property of the submitted resource.  |\r\n| RelatedSites is empty and IsForAllSites is false | Failed to save/update CustomerReport because if IsForAllSites = false, at least one site must be present in RelatedSites array. |\r\n| RelatedSites has all sites and IsForAllSites is true | Failed to save/update CustomerReport because if IsForAllSites = true, at least one site must not be present in RelatedSites array. |\r\n| RelatedSites has duplicate RelatedSiteGuid | Failed to save/update CustomerReport because duplicate RelatedSiteGuid listed in the RelatedSites array. |\r\n| RelatedSiteGuid is not related RelatedCustomerGuid | Failed to save. CustomerSite with RelatedSiteGuid of {RelatedSiteGuid} does not belong to Customer |\r\n| RelatedSites.Guid is not null | Failed to save/update CustomerReport because Guid is not permitted on creation. |\r\n\r\n##  Information\r\n| Information |\r\n| ----------- |\r\n| Currently we are only validating for a valid base64 string, we are not validating the string against the file extension |","operationId":"CustomerReportBlob_Create","consumes":["application/json"],"produces":["application/json"],"parameters":[{"in":"body","required":true,"schema":{"$ref":"#/definitions/ApiResourceId"}}],"responses":{"200":{"description":"OK","schema":{"$ref":"#/definitions/ApiResourceId"}}}}},"/blobs/customerSiteHealthAndSafetyBlobs":{"post":{"tags":["CustomerSiteHealthAndSafetyBlob"],"summary":"Create or update","description":"| Property\t\t\t\t\t\t\t\t\t| Description                                                               | Required |\r\n| -------------------------------------\t\t| -------------------------------------------------------------------\t\t| -------- |\r\n| Guid\t\t\t\t\t\t\t\t\t| The GUID associated to the Customer Site Health and Safety blob\t\t\t\t| No  |\r\n| MediaContentBase64\t\t\t\t\t| The Image/PDF converted to base 64\t\t\t\t\t\t\t\t\t\t\t| Yes |\r\n| DocumentName\t\t\t\t\t\t\t| The Document Name\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t| Yes |\r\n| DocumentReference\t\t\t\t\t\t| The Document Reference\t\t\t\t\t\t\t\t\t\t\t\t\t| Yes |\r\n| DocumentDescription\t\t\t\t\t| The Document Description\t\t\t\t\t\t\t\t\t\t\t\t\t| No |\r\n| RelatedCustomerSiteGuid\t\t\t\t| The Related Customer Site Guid\t\t\t\t\t\t\t\t\t\t\t\t| Yes |\r\n| HealthAndSafetyDocumentTypeListItem | The GUID and description of the health and safety document type\t\t\t\t\t| Yes |\r\n| ValidFrom\t\t\t\t| The valid from date\t\t\t\t\t\t\t\t| Yes |\r\n| ValidUntil\t\t\t| The valid until date\t\t\t\t\t\t\t\t| No |\r\n| IsHighRisk\t\t\t| Whether the document contains high risk items\t\t| No |\r\n| IsSentToVehicle\t\t| Whether the document is sent to vehicle\t\t\t| No |\r\n\r\n\r\n## Extra validations\r\n\r\n| Condition | Error message |\r\n| --------- | ------------- |\r\n| DocumentName is Null or not provided | The mandatory property DocumentName has a null value. The request could not be processed. Supply a value for the DocumentName property of the submitted resource.  |\r\n| DocumentName has less than 5 characters  or more than 100 characters | CustomerSiteHealthAndSafetyForm has the property DocumentName with value of {DocumentName} that is not supported. DocumentName should be at least 1 character and at most 100 characters, excluding the extension |\r\n| DocumentName does not have any of pdf/png/jpg/gif extension | CustomerSiteHealthAndSafetyForm has the property DocumentName with value of {DocumentName} that is not supported. DocumentName should have any of pdf/png/jpg/gif extension |\r\n| DocumentReference is Null or not provided | The mandatory property DocumentReference has a null value. The request could not be processed. Supply a value for the DocumentReference property of the submitted resource.  |\r\n| RelatedCustomerSiteGuid is Null or not provided | The mandatory property RelatedCustomerSiteGuid has a null value. The request could not be processed. Supply a value for the RelatedCustomerSiteGuid property of the submitted resource.  |\r\n| Invalid RelatedCustomerSiteGuid | Failed to retrieve Customer Site with RelatedCustomerSiteGuid of {Guid} |\r\n| HealthAndSafetyDocumentTypeListItem.Guid is Null or not provided | The mandatory property HealthAndSafetyDocumentTypeListItem.Guid has a null value. The request could not be processed. Supply a value for the HealthAndSafetyDocumentTypeListItem.Guid property of the submitted resource. \r\n| Invalid HealthAndSafetyDocumentTypeListItem.Guid | Failed to retrieve HealthAndSafetyDocumentType with HealthAndSafetyDocumentTypeListItem.Guid of {Guid} |\r\n| MediaContentBase64 is Null or not provided | The mandatory property MediaContentBase64 has a null value. The request could not be processed. Supply a value for the MediaContentBase64 property of the submitted resource.  |\r\n| MediaContentBase64 is not a valid base64 string | Failed to save/update CustomerSiteHealthAndSafetyForm because ImageContentHash has Invalid length for a Base-64 char array or string |\r\n\r\n##  Information\r\n| Information |\r\n| ----------- |\r\n| Currently we are only validating for a valid base64 string, we are not validating the string against the file extension |","operationId":"CustomerSiteHealthAndSafetyBlob_Create","consumes":["application/json"],"produces":["application/json"],"parameters":[{"in":"body","required":true,"schema":{"$ref":"#/definitions/ApiResourceId"}}],"responses":{"200":{"description":"OK","schema":{"$ref":"#/definitions/ApiResourceId"}}}}},"/lists/customerSiteStates/{guid}":{"get":{"tags":["CustomerSiteState"],"summary":"Find with GUID","description":"| Property                  | Description                                                              |\r\n| ------------------------- | ------------------------------------------------------------------------ |\r\n| GUID                      | The GUID associated to the customer site state                              |\r\n| Description               | The description of the customer site state                                  |\r\n| IsDeleted                 | Whether the customer site state is deleted\t      \t \t\t\t\t\t  |","operationId":"CustomerSiteState_Get","consumes":["application/json"],"produces":["application/json"],"parameters":[{"name":"guid","in":"path","required":true,"type":"string","format":"uuid"},{"name":"links","in":"query","required":false,"type":"string"},{"name":"include","in":"query","required":false,"type":"string"},{"name":"expand","in":"query","required":false,"type":"string"},{"name":"udf","in":"query","required":false,"type":"string"}],"responses":{"200":{"description":"OK","schema":{"$ref":"#/definitions/ApiResourceResultEntity[ApiIntegratorCustomerSiteStateResource]"}}}}},"/lists/customerSiteStates":{"get":{"tags":["CustomerSiteState"],"summary":"Find with Filters","description":"| Property                  | Description                                                              |\r\n| ------------------------- | ------------------------------------------------------------------------ |\r\n| GUID                      | The GUID associated to the customer site state                              |\r\n| Description               | The description of the customer site state                                  |\r\n| IsDeleted                 | Whether the customer site state is deleted\t      \t \t\t\t\t\t  |","operationId":"CustomerSiteState_GetCollection","consumes":["application/json"],"produces":["application/json"],"parameters":[{"name":"filter","in":"query","required":false,"type":"string"},{"name":"search","in":"query","required":false,"type":"string"},{"name":"order","in":"query","required":false,"type":"string"},{"name":"max","in":"query","required":false,"type":"integer","format":"int32"},{"name":"page","in":"query","required":false,"type":"integer","format":"int32"},{"name":"includeCount","in":"query","required":false,"type":"boolean"},{"name":"includeDeleted","in":"query","required":false,"type":"boolean"},{"name":"links","in":"query","required":false,"type":"string"},{"name":"udf","in":"query","required":false,"type":"string"}],"responses":{"200":{"description":"OK","schema":{"$ref":"#/definitions/ApiResourceResultCollection[ApiIntegratorCustomerSiteStateResource]"}}}}},"/lists/customerStates/{guid}":{"get":{"tags":["CustomerState"],"summary":"Find with GUID","description":"| Property                  | Description                                                              |\r\n| ------------------------- | ------------------------------------------------------------------------ |\r\n| GUID                      | The GUID associated to the customer state                              |\r\n| Description               | The description of the customer state                                  |\r\n| IsDeleted                 | Whether the customer state is deleted\t      \t \t\t\t\t\t\t |","operationId":"CustomerState_Get","consumes":["application/json"],"produces":["application/json"],"parameters":[{"name":"guid","in":"path","required":true,"type":"string","format":"uuid"},{"name":"links","in":"query","required":false,"type":"string"},{"name":"include","in":"query","required":false,"type":"string"},{"name":"expand","in":"query","required":false,"type":"string"},{"name":"udf","in":"query","required":false,"type":"string"}],"responses":{"200":{"description":"OK","schema":{"$ref":"#/definitions/ApiResourceResultEntity[ApiIntegratorCustomerStateResource]"}}}}},"/lists/customerStates":{"get":{"tags":["CustomerState"],"summary":"Find with Filters","description":"| Property                  | Description                                                              |\r\n| ------------------------- | ------------------------------------------------------------------------ |\r\n| GUID                      | The GUID associated to the customer state                              |\r\n| Description               | The description of the customer state                                  |\r\n| IsDeleted                 | Whether the customer state is deleted\t      \t \t\t\t\t\t\t |","operationId":"CustomerState_GetCollection","consumes":["application/json"],"produces":["application/json"],"parameters":[{"name":"filter","in":"query","required":false,"type":"string"},{"name":"search","in":"query","required":false,"type":"string"},{"name":"order","in":"query","required":false,"type":"string"},{"name":"max","in":"query","required":false,"type":"integer","format":"int32"},{"name":"page","in":"query","required":false,"type":"integer","format":"int32"},{"name":"includeCount","in":"query","required":false,"type":"boolean"},{"name":"includeDeleted","in":"query","required":false,"type":"boolean"},{"name":"links","in":"query","required":false,"type":"string"},{"name":"udf","in":"query","required":false,"type":"string"}],"responses":{"200":{"description":"OK","schema":{"$ref":"#/definitions/ApiResourceResultCollection[ApiIntegratorCustomerStateResource]"}}}}},"/lists/customerTemplates/{guid}":{"get":{"tags":["CustomerTemplate"],"summary":"Find with GUID","description":"| Property                  | Description\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t|\r\n| ------------------------- | -------------------------------------------------------------------------\t|\r\n| GUID                      | The GUID associated to the customer template\t\t\t\t\t\t\t\t|\r\n| Description               | The description of the customer template\t\t\t\t\t\t\t\t\t|\r\n| IsDeleted                 | Whether the customer template is deleted\t      \t \t\t\t\t\t\t|\r\n| BusinessTypeListItem      | The GUID and Description of the business type\t      \t \t\t\t\t\t|\r\n| OutletListItem            | The GUID and Description of the company outlet \t      \t \t\t\t\t|","operationId":"CustomerTemplate_Get","consumes":["application/json"],"produces":["application/json"],"parameters":[{"name":"guid","in":"path","required":true,"type":"string","format":"uuid"},{"name":"links","in":"query","required":false,"type":"string"},{"name":"include","in":"query","required":false,"type":"string"},{"name":"expand","in":"query","required":false,"type":"string"},{"name":"udf","in":"query","required":false,"type":"string"}],"responses":{"200":{"description":"OK","schema":{"$ref":"#/definitions/ApiResourceResultEntity[ApiIntegratorCustomerTemplateResource]"}}}}},"/lists/customerTemplates":{"get":{"tags":["CustomerTemplate"],"summary":"Find with Filters","description":"| Property                  | Description\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t|\r\n| ------------------------- | -------------------------------------------------------------------------\t|\r\n| GUID                      | The GUID associated to the customer template\t\t\t\t\t\t\t\t|\r\n| Description               | The description of the customer template\t\t\t\t\t\t\t\t\t|\r\n| IsDeleted                 | Whether the customer template is deleted\t      \t \t\t\t\t\t\t|\r\n| BusinessTypeListItem      | The GUID and Description of the business type\t      \t \t\t\t\t\t|\r\n| OutletListItem            | The GUID and Description of the company outlet \t      \t \t\t\t\t|","operationId":"CustomerTemplate_GetCollection","consumes":["application/json"],"produces":["application/json"],"parameters":[{"name":"filter","in":"query","required":false,"type":"string"},{"name":"search","in":"query","required":false,"type":"string"},{"name":"order","in":"query","required":false,"type":"string"},{"name":"max","in":"query","required":false,"type":"integer","format":"int32"},{"name":"page","in":"query","required":false,"type":"integer","format":"int32"},{"name":"includeCount","in":"query","required":false,"type":"boolean"},{"name":"includeDeleted","in":"query","required":false,"type":"boolean"},{"name":"links","in":"query","required":false,"type":"string"},{"name":"udf","in":"query","required":false,"type":"string"}],"responses":{"200":{"description":"OK","schema":{"$ref":"#/definitions/ApiResourceResultCollection[ApiIntegratorCustomerTemplateResource]"}}}}},"/lists/customerTypes/{guid}":{"get":{"tags":["CustomerType"],"summary":"Find with GUID","description":"| Property                  | Description                                                              |\r\n| ------------------------- | ------------------------------------------------------------------------ |\r\n| GUID                      | The GUID associated to the customer type                              |\r\n| Description               | The description of the customer type                                  |\r\n| IsDeleted                 | Whether the customer type is deleted\t      \t \t\t\t\t\t\t |","operationId":"CustomerType_Get","consumes":["application/json"],"produces":["application/json"],"parameters":[{"name":"guid","in":"path","required":true,"type":"string","format":"uuid"},{"name":"links","in":"query","required":false,"type":"string"},{"name":"include","in":"query","required":false,"type":"string"},{"name":"expand","in":"query","required":false,"type":"string"},{"name":"udf","in":"query","required":false,"type":"string"}],"responses":{"200":{"description":"OK","schema":{"$ref":"#/definitions/ApiResourceResultEntity[ApiIntegratorCustomerTypeResource]"}}}}},"/lists/customerTypes":{"get":{"tags":["CustomerType"],"summary":"Find with Filters","description":"| Property                  | Description                                                              |\r\n| ------------------------- | ------------------------------------------------------------------------ |\r\n| GUID                      | The GUID associated to the customer type                              |\r\n| Description               | The description of the customer type                                  |\r\n| IsDeleted                 | Whether the customer type is deleted\t      \t \t\t\t\t\t\t |","operationId":"CustomerType_GetCollection","consumes":["application/json"],"produces":["application/json"],"parameters":[{"name":"filter","in":"query","required":false,"type":"string"},{"name":"search","in":"query","required":false,"type":"string"},{"name":"order","in":"query","required":false,"type":"string"},{"name":"max","in":"query","required":false,"type":"integer","format":"int32"},{"name":"page","in":"query","required":false,"type":"integer","format":"int32"},{"name":"includeCount","in":"query","required":false,"type":"boolean"},{"name":"includeDeleted","in":"query","required":false,"type":"boolean"},{"name":"links","in":"query","required":false,"type":"string"},{"name":"udf","in":"query","required":false,"type":"string"}],"responses":{"200":{"description":"OK","schema":{"$ref":"#/definitions/ApiResourceResultCollection[ApiIntegratorCustomerTypeResource]"}}}}},"/lists/dayOfOccurrenceInMonths/{guid}":{"get":{"tags":["DayOfOccurrenceInMonth"],"summary":"Find with GUID","description":"| Property                  | Description                                                              |\r\n| ------------------------- | ------------------------------------------------------------------------ |\r\n| GUID                      | The GUID associated to the day of occurrence in month     \t\t\t\t   |\r\n| Description               | The description of the day of occurrence in month    \t\t\t\t\t   |","operationId":"DayOfOccurrenceInMonth_Get","consumes":["application/json"],"produces":["application/json"],"parameters":[{"name":"guid","in":"path","required":true,"type":"string","format":"uuid"},{"name":"links","in":"query","required":false,"type":"string"},{"name":"include","in":"query","required":false,"type":"string"},{"name":"expand","in":"query","required":false,"type":"string"},{"name":"udf","in":"query","required":false,"type":"string"}],"responses":{"200":{"description":"OK","schema":{"$ref":"#/definitions/ApiResourceResultEntity[ApiIntegratorDayOfOccurrenceInMonthResource]"}}}}},"/lists/dayOfOccurrenceInMonths":{"get":{"tags":["DayOfOccurrenceInMonth"],"summary":"Find with Filters","description":"| Property                  | Description                                                              |\r\n| ------------------------- | ------------------------------------------------------------------------ |\r\n| GUID                      | The GUID associated to the day of occurrence in month     \t\t\t\t   |\r\n| Description               | The description of the day of occurrence in month    \t\t\t\t\t   |","operationId":"DayOfOccurrenceInMonth_GetCollection","consumes":["application/json"],"produces":["application/json"],"parameters":[{"name":"filter","in":"query","required":false,"type":"string"},{"name":"search","in":"query","required":false,"type":"string"},{"name":"order","in":"query","required":false,"type":"string"},{"name":"max","in":"query","required":false,"type":"integer","format":"int32"},{"name":"page","in":"query","required":false,"type":"integer","format":"int32"},{"name":"includeCount","in":"query","required":false,"type":"boolean"},{"name":"includeDeleted","in":"query","required":false,"type":"boolean"},{"name":"links","in":"query","required":false,"type":"string"},{"name":"udf","in":"query","required":false,"type":"string"}],"responses":{"200":{"description":"OK","schema":{"$ref":"#/definitions/ApiResourceResultCollection[ApiIntegratorDayOfOccurrenceInMonthResource]"}}}}},"/lists/dayOfWeeks/{guid}":{"get":{"tags":["DayOfWeek"],"summary":"Find with GUID","description":"| Property                  | Description                                                              |\r\n| ------------------------- | ------------------------------------------------------------------------ |\r\n| GUID                      | The GUID associated to the day of week     \t\t\t\t\t\t\t   |\r\n| DayOfWeek\t                | The name of the day of week\t\t\t\t\t \t\t\t\t\t\t   |","operationId":"DayOfWeek_Get","consumes":["application/json"],"produces":["application/json"],"parameters":[{"name":"guid","in":"path","required":true,"type":"string","format":"uuid"},{"name":"links","in":"query","required":false,"type":"string"},{"name":"include","in":"query","required":false,"type":"string"},{"name":"expand","in":"query","required":false,"type":"string"},{"name":"udf","in":"query","required":false,"type":"string"}],"responses":{"200":{"description":"OK","schema":{"$ref":"#/definitions/ApiResourceResultEntity[ApiIntegratorDayOfWeekResource]"}}}}},"/lists/dayOfWeeks":{"get":{"tags":["DayOfWeek"],"summary":"Find with Filters","description":"| Property                  | Description                                                              |\r\n| ------------------------- | ------------------------------------------------------------------------ |\r\n| GUID                      | The GUID associated to the day of week     \t\t\t\t\t\t\t   |\r\n| DayOfWeek\t                | The name of the day of week\t\t\t\t\t \t\t\t\t\t\t   |","operationId":"DayOfWeek_GetCollection","consumes":["application/json"],"produces":["application/json"],"parameters":[{"name":"filter","in":"query","required":false,"type":"string"},{"name":"search","in":"query","required":false,"type":"string"},{"name":"order","in":"query","required":false,"type":"string"},{"name":"max","in":"query","required":false,"type":"integer","format":"int32"},{"name":"page","in":"query","required":false,"type":"integer","format":"int32"},{"name":"includeCount","in":"query","required":false,"type":"boolean"},{"name":"includeDeleted","in":"query","required":false,"type":"boolean"},{"name":"links","in":"query","required":false,"type":"string"},{"name":"udf","in":"query","required":false,"type":"string"}],"responses":{"200":{"description":"OK","schema":{"$ref":"#/definitions/ApiResourceResultCollection[ApiIntegratorDayOfWeekResource]"}}}}},"/lists/defaultActions/{guid}":{"get":{"tags":["DefaultAction"],"summary":"Find with GUID","description":"| Property                  | Description                                                              |\r\n| ------------------------- | ------------------------------------------------------------------------ |\r\n| GUID                      | The GUID associated with the default action.\t\t\t\t\t\t\t\t\t\t\t\t\t|\r\n| ActionListItem\t\t\t| The GUID and description of the action associated with the default action.\t\t\t\t\t|\r\n| ServiceListItem\t\t\t| The GUID and description of the service associated with the default action.\t\t\t\t\t|\r\n| PricingBasisListItem\t\t| The GUID and description of the pricing basis associated with the default action.\t\t\t\t|\r\n| VATListItem\t\t\t\t| The GUID and description of the VAT associated with the default action.\t\t\t\t\t\t|\r\n| MaterialClassListItem\t\t| The GUID and description of the material class associated with the default action.\t\t\t|\r\n| TaxTemplateCollectionListItem | The GUID and description of the tax template collection associated with the default action.|\r\n| UnitOfMeasureListItem\t\t| The GUID and description of the unit of measure associated with the default action.\t\t\t|\r\n| AnalysisCode\t\t\t\t| The analysis code associated with the default action associated with the default action.      |\r\n| SalesCode\t\t\t\t\t| The sales code associated with the default action.\t\t\t\t\t\t\t\t\t\t\t|\r\n| CostCode\t\t\t\t\t| The cost code associated with the default action.\t\t\t\t\t\t\t\t\t\t\t\t|\r\n| PurchaseCode\t\t\t\t| The purchase code associated with the default action.\t\t\t\t\t\t\t\t\t\t\t|\r\n| HandlingTime\t\t\t\t| The handling time (in seconds) associated with the default action.                            |\r\n| IsDeleted                 | Whether the default action is deleted \t\t\t\t            \t \t\t          \t    |\r\n","operationId":"DefaultAction_Get","consumes":["application/json"],"produces":["application/json"],"parameters":[{"name":"guid","in":"path","required":true,"type":"string","format":"uuid"},{"name":"links","in":"query","required":false,"type":"string"},{"name":"include","in":"query","required":false,"type":"string"},{"name":"expand","in":"query","required":false,"type":"string"},{"name":"udf","in":"query","required":false,"type":"string"}],"responses":{"200":{"description":"OK","schema":{"$ref":"#/definitions/ApiResourceResultEntity[ApiIntegratorDefaultActionResource]"}}}}},"/lists/defaultActions":{"get":{"tags":["DefaultAction"],"summary":"Find with Filters","description":"| Property                  | Description                                                              |\r\n| ------------------------- | ------------------------------------------------------------------------ |\r\n| GUID                      | The GUID associated with the default action.\t\t\t\t\t\t\t\t\t\t\t\t\t|\r\n| ActionListItem\t\t\t| The GUID and description of the action associated with the default action.\t\t\t\t\t|\r\n| ServiceListItem\t\t\t| The GUID and description of the service associated with the default action.\t\t\t\t\t|\r\n| PricingBasisListItem\t\t| The GUID and description of the pricing basis associated with the default action.\t\t\t\t|\r\n| VATListItem\t\t\t\t| The GUID and description of the VAT associated with the default action.\t\t\t\t\t\t|\r\n| MaterialClassListItem\t\t| The GUID and description of the material class associated with the default action.\t\t\t|\r\n| TaxTemplateCollectionListItem | The GUID and description of the tax template collection associated with the default action.|\r\n| UnitOfMeasureListItem\t\t| The GUID and description of the unit of measure associated with the default action.\t\t\t|\r\n| AnalysisCode\t\t\t\t| The analysis code associated with the default action associated with the default action.      |\r\n| SalesCode\t\t\t\t\t| The sales code associated with the default action.\t\t\t\t\t\t\t\t\t\t\t|\r\n| CostCode\t\t\t\t\t| The cost code associated with the default action.\t\t\t\t\t\t\t\t\t\t\t\t|\r\n| PurchaseCode\t\t\t\t| The purchase code associated with the default action.\t\t\t\t\t\t\t\t\t\t\t|\r\n| HandlingTime\t\t\t\t| The handling time (in seconds) associated with the default action.                            |\r\n| IsDeleted                 | Whether the default action is deleted \t\t\t\t            \t \t\t          \t    |\r\n","operationId":"DefaultAction_GetCollection","consumes":["application/json"],"produces":["application/json"],"parameters":[{"name":"filter","in":"query","required":false,"type":"string"},{"name":"search","in":"query","required":false,"type":"string"},{"name":"order","in":"query","required":false,"type":"string"},{"name":"max","in":"query","required":false,"type":"integer","format":"int32"},{"name":"page","in":"query","required":false,"type":"integer","format":"int32"},{"name":"includeCount","in":"query","required":false,"type":"boolean"},{"name":"includeDeleted","in":"query","required":false,"type":"boolean"},{"name":"links","in":"query","required":false,"type":"string"},{"name":"udf","in":"query","required":false,"type":"string"}],"responses":{"200":{"description":"OK","schema":{"$ref":"#/definitions/ApiResourceResultCollection[ApiIntegratorDefaultActionResource]"}}}}},"/lists/departments/{guid}":{"get":{"tags":["Department"],"summary":"Find with GUID","description":"| Property                  | Description                                                              |\r\n| ------------------------- | ------------------------------------------------------------------------ |\r\n| GUID                      | The GUID associated to the department                              |\r\n| Description               | The description of the department                                  |\r\n| IsDeleted                 | Whether the department is deleted\t      \t \t\t\t\t\t\t |","operationId":"Department_Get","consumes":["application/json"],"produces":["application/json"],"parameters":[{"name":"guid","in":"path","required":true,"type":"string","format":"uuid"},{"name":"links","in":"query","required":false,"type":"string"},{"name":"include","in":"query","required":false,"type":"string"},{"name":"expand","in":"query","required":false,"type":"string"},{"name":"udf","in":"query","required":false,"type":"string"}],"responses":{"200":{"description":"OK","schema":{"$ref":"#/definitions/ApiResourceResultEntity[ApiIntegratorDepartmentResource]"}}}}},"/lists/departments":{"get":{"tags":["Department"],"summary":"Find with Filters","description":"| Property                  | Description                                                              |\r\n| ------------------------- | ------------------------------------------------------------------------ |\r\n| GUID                      | The GUID associated to the department                              |\r\n| Description               | The description of the department                                  |\r\n| IsDeleted                 | Whether the department is deleted\t      \t \t\t\t\t\t\t |","operationId":"Department_GetCollection","consumes":["application/json"],"produces":["application/json"],"parameters":[{"name":"filter","in":"query","required":false,"type":"string"},{"name":"search","in":"query","required":false,"type":"string"},{"name":"order","in":"query","required":false,"type":"string"},{"name":"max","in":"query","required":false,"type":"integer","format":"int32"},{"name":"page","in":"query","required":false,"type":"integer","format":"int32"},{"name":"includeCount","in":"query","required":false,"type":"boolean"},{"name":"includeDeleted","in":"query","required":false,"type":"boolean"},{"name":"links","in":"query","required":false,"type":"string"},{"name":"udf","in":"query","required":false,"type":"string"}],"responses":{"200":{"description":"OK","schema":{"$ref":"#/definitions/ApiResourceResultCollection[ApiIntegratorDepartmentResource]"}}}}},"/lists/directDebitAccountTypes/{guid}":{"get":{"tags":["DirectDebitAccountType"],"summary":"Find with GUID","description":"| Property                  | Description                                                              |\r\n| ------------------------- | ------------------------------------------------------------------------ |\r\n| GUID                      | The GUID associated to the direct debit account type\t\t\t\t\t   |\r\n| Description\t            | The Description of the direct debit account type\t\t\t\t\t\t   |","operationId":"DirectDebitAccountType_Get","consumes":["application/json"],"produces":["application/json"],"parameters":[{"name":"guid","in":"path","required":true,"type":"string","format":"uuid"},{"name":"links","in":"query","required":false,"type":"string"},{"name":"include","in":"query","required":false,"type":"string"},{"name":"expand","in":"query","required":false,"type":"string"},{"name":"udf","in":"query","required":false,"type":"string"}],"responses":{"200":{"description":"OK","schema":{"$ref":"#/definitions/ApiResourceResultEntity[ApiIntegratorDirectDebitAccountTypeResource]"}}}}},"/lists/directDebitAccountTypes":{"get":{"tags":["DirectDebitAccountType"],"summary":"Find with Filters","description":"| Property                  | Description                                                              |\r\n| ------------------------- | ------------------------------------------------------------------------ |\r\n| GUID                      | The GUID associated to the direct debit account type\t\t\t\t\t   |\r\n| Description\t            | The Description of the direct debit account type\t\t\t\t\t\t   |","operationId":"DirectDebitAccountType_GetCollection","consumes":["application/json"],"produces":["application/json"],"parameters":[{"name":"filter","in":"query","required":false,"type":"string"},{"name":"search","in":"query","required":false,"type":"string"},{"name":"order","in":"query","required":false,"type":"string"},{"name":"max","in":"query","required":false,"type":"integer","format":"int32"},{"name":"page","in":"query","required":false,"type":"integer","format":"int32"},{"name":"includeCount","in":"query","required":false,"type":"boolean"},{"name":"includeDeleted","in":"query","required":false,"type":"boolean"},{"name":"links","in":"query","required":false,"type":"string"},{"name":"udf","in":"query","required":false,"type":"string"}],"responses":{"200":{"description":"OK","schema":{"$ref":"#/definitions/ApiResourceResultCollection[ApiIntegratorDirectDebitAccountTypeResource]"}}}}},"/lists/directDebitRunConfigurations/{guid}":{"get":{"tags":["DirectDebitRunConfiguration"],"summary":"Find with GUID","description":"| Property                  | Description                                                              |\r\n| ------------------------- | ------------------------------------------------------------------------ |\r\n| GUID                      | The GUID associated to the direct debit run configuration\t\t\t\t   |\r\n| ApplyFailedFee\t        | The Apply Failed Fee of the direct debit account type\t\t\t\t\t   |\r\n| Description\t            | The Description of the direct debit account type\t\t\t\t\t\t   |\r\n| FileNo\t\t\t\t\t| The FileNo of the direct debit account type\t\t\t\t\t\t\t   |\r\n| IsCollectionDatesRequired\t| Is Collection Dates Required for the direct debit account type\t\t   |\r\n| SerialNo\t\t\t\t\t| The SerialNo of the direct debit account type\t\t\t\t\t\t       |\r\n| AccountName\t            | The AccountName of the direct debit account type\t\t\t\t\t\t   |\r\n| AccountNo\t\t\t\t\t| The AccountNo of the direct debit account type\t\t\t\t\t\t   |\r\n| BankReference\t            | The BankReference of the direct debit account type\t\t\t\t\t   |\r\n| BankUsername\t            | The BankUsername of the direct debit account type\t\t\t\t\t\t   |\r\n| BIC\t\t\t\t\t\t| The BIC of the direct debit account type\t\t\t\t\t\t\t\t   |\r\n| ChequeReport\t            | The ChequeReport of the direct debit account type\t\t\t\t\t\t   |\r\n| DefaultActionListItem\t    | The DefaultActionListItem of the direct debit account type\t\t\t   |\r\n| FeeAmount\t\t\t\t\t| The FeeAmount of the direct debit account type\t\t\t\t\t\t   |\r\n| FileDescription\t        | The FileDescription of the direct debit account type\t\t\t\t\t   |\r\n| IBAN\t\t\t\t\t\t| The IBAN of the direct debit account type\t\t\t\t\t\t\t\t   |\r\n| RelatedPriceGuid\t\t\t| The RelatedPriceGuid of the direct debit account type\t\t\t\t\t   |\r\n| SortCode\t\t\t\t\t| The SortCode of the direct debit account type\t\t\t\t\t\t       |\r\n| IsDeleted\t\t\t\t\t| The IsDeleted of the direct debit account type\t\t\t\t\t\t   |\r\n| CreditorIdentifier\t\t| The Id of the creditor associated to the direct debit account type\t   |","operationId":"DirectDebitRunConfiguration_Get","consumes":["application/json"],"produces":["application/json"],"parameters":[{"name":"guid","in":"path","required":true,"type":"string","format":"uuid"},{"name":"links","in":"query","required":false,"type":"string"},{"name":"include","in":"query","required":false,"type":"string"},{"name":"expand","in":"query","required":false,"type":"string"},{"name":"udf","in":"query","required":false,"type":"string"}],"responses":{"200":{"description":"OK","schema":{"$ref":"#/definitions/ApiResourceResultEntity[ApiIntegratorDirectDebitRunConfigurationResource]"}}}}},"/lists/directDebitRunConfigurations":{"get":{"tags":["DirectDebitRunConfiguration"],"summary":"Find with Filters","description":"| Property                  | Description                                                              |\r\n| ------------------------- | ------------------------------------------------------------------------ |\r\n| GUID                      | The GUID associated to the direct debit run configuration\t\t\t\t   |\r\n| ApplyFailedFee\t        | The Apply Failed Fee of the direct debit account type\t\t\t\t\t   |\r\n| Description\t            | The Description of the direct debit account type\t\t\t\t\t\t   |\r\n| FileNo\t\t\t\t\t| The FileNo of the direct debit account type\t\t\t\t\t\t\t   |\r\n| IsCollectionDatesRequired\t| Is Collection Dates Required for the direct debit account type\t\t   |\r\n| SerialNo\t\t\t\t\t| The SerialNo of the direct debit account type\t\t\t\t\t\t       |\r\n| AccountName\t            | The AccountName of the direct debit account type\t\t\t\t\t\t   |\r\n| AccountNo\t\t\t\t\t| The AccountNo of the direct debit account type\t\t\t\t\t\t   |\r\n| BankReference\t            | The BankReference of the direct debit account type\t\t\t\t\t   |\r\n| BankUsername\t            | The BankUsername of the direct debit account type\t\t\t\t\t\t   |\r\n| BIC\t\t\t\t\t\t| The BIC of the direct debit account type\t\t\t\t\t\t\t\t   |\r\n| ChequeReport\t            | The ChequeReport of the direct debit account type\t\t\t\t\t\t   |\r\n| DefaultActionListItem\t    | The DefaultActionListItem of the direct debit account type\t\t\t   |\r\n| FeeAmount\t\t\t\t\t| The FeeAmount of the direct debit account type\t\t\t\t\t\t   |\r\n| FileDescription\t        | The FileDescription of the direct debit account type\t\t\t\t\t   |\r\n| IBAN\t\t\t\t\t\t| The IBAN of the direct debit account type\t\t\t\t\t\t\t\t   |\r\n| RelatedPriceGuid\t\t\t| The RelatedPriceGuid of the direct debit account type\t\t\t\t\t   |\r\n| SortCode\t\t\t\t\t| The SortCode of the direct debit account type\t\t\t\t\t\t       |\r\n| IsDeleted\t\t\t\t\t| The IsDeleted of the direct debit account type\t\t\t\t\t\t   |\r\n| CreditorIdentifier\t\t| The Id of the creditor associated to the direct debit account type\t   |","operationId":"DirectDebitRunConfiguration_GetCollection","consumes":["application/json"],"produces":["application/json"],"parameters":[{"name":"filter","in":"query","required":false,"type":"string"},{"name":"search","in":"query","required":false,"type":"string"},{"name":"order","in":"query","required":false,"type":"string"},{"name":"max","in":"query","required":false,"type":"integer","format":"int32"},{"name":"page","in":"query","required":false,"type":"integer","format":"int32"},{"name":"includeCount","in":"query","required":false,"type":"boolean"},{"name":"includeDeleted","in":"query","required":false,"type":"boolean"},{"name":"links","in":"query","required":false,"type":"string"},{"name":"udf","in":"query","required":false,"type":"string"}],"responses":{"200":{"description":"OK","schema":{"$ref":"#/definitions/ApiResourceResultCollection[ApiIntegratorDirectDebitRunConfigurationResource]"}}}}},"/lists/documentDeliveryTypes/{guid}":{"get":{"tags":["DocumentDeliveryType"],"summary":"Find with GUID","description":"| Property                  | Description                                                              |\r\n| ------------------------- | ------------------------------------------------------------------------ |\r\n| GUID                      | The GUID associated to the documentdeliverytype                          |\r\n| Description               | The description of the documentdeliverytype                              |\r\n| IsActive                  | Whether the documentdeliverytype is active\t      \t \t\t\t\t   |","operationId":"DocumentDeliveryType_Get","consumes":["application/json"],"produces":["application/json"],"parameters":[{"name":"guid","in":"path","required":true,"type":"string","format":"uuid"},{"name":"links","in":"query","required":false,"type":"string"},{"name":"include","in":"query","required":false,"type":"string"},{"name":"expand","in":"query","required":false,"type":"string"},{"name":"udf","in":"query","required":false,"type":"string"}],"responses":{"200":{"description":"OK","schema":{"$ref":"#/definitions/ApiResourceResultEntity[ApiIntegratorDocumentDeliveryTypeResource]"}}}}},"/lists/documentDeliveryTypes":{"get":{"tags":["DocumentDeliveryType"],"summary":"Find with Filters","description":"| Property                  | Description                                                              |\r\n| ------------------------- | ------------------------------------------------------------------------ |\r\n| GUID                      | The GUID associated to the documentdeliverytype                          |\r\n| Description               | The description of the documentdeliverytype                              |\r\n| IsActive                  | Whether the documentdeliverytype is active\t      \t \t\t\t\t   |","operationId":"DocumentDeliveryType_GetCollection","consumes":["application/json"],"produces":["application/json"],"parameters":[{"name":"filter","in":"query","required":false,"type":"string"},{"name":"search","in":"query","required":false,"type":"string"},{"name":"order","in":"query","required":false,"type":"string"},{"name":"max","in":"query","required":false,"type":"integer","format":"int32"},{"name":"page","in":"query","required":false,"type":"integer","format":"int32"},{"name":"includeCount","in":"query","required":false,"type":"boolean"},{"name":"includeDeleted","in":"query","required":false,"type":"boolean"},{"name":"links","in":"query","required":false,"type":"string"},{"name":"udf","in":"query","required":false,"type":"string"}],"responses":{"200":{"description":"OK","schema":{"$ref":"#/definitions/ApiResourceResultCollection[ApiIntegratorDocumentDeliveryTypeResource]"}}}}},"/lists/ewcCodes/{guid}":{"get":{"tags":["EwcCode"],"summary":"Find with GUID","description":"| Property                  | Description                                                              |\r\n| ------------------------- | ------------------------------------------------------------------------ |\r\n| GUID\t\t\t\t\t\t| The GUID associated to the EWC Code\t\t\t\t\t\t\t\t\t   |\r\n| Code\t\t\t\t\t\t| The Code of the EWC Code\t\t\t\t\t\t\t\t\t\t\t\t\t|\r\n| Description\t\t\t\t| The Description of the EWC Code\t\t\t\t\t\t\t\t\t\t\t|\r\n| BriefDescription\t\t\t| The Brief Description of the EWC Code\t\t\t\t\t\t\t\t\t\t|\r\n| IsHazardous\t\t\t\t| Whether the EWC Code is Hazardous\t\t\t\t\t\t\t\t\t\t\t|\r\n","operationId":"EwcCode_Get","consumes":["application/json"],"produces":["application/json"],"parameters":[{"name":"guid","in":"path","required":true,"type":"string","format":"uuid"},{"name":"links","in":"query","required":false,"type":"string"},{"name":"include","in":"query","required":false,"type":"string"},{"name":"expand","in":"query","required":false,"type":"string"},{"name":"udf","in":"query","required":false,"type":"string"}],"responses":{"200":{"description":"OK","schema":{"$ref":"#/definitions/ApiResourceResultEntity[ApiIntegratorEwcCodeResource]"}}}}},"/lists/ewcCodes":{"get":{"tags":["EwcCode"],"summary":"Find with Filters","description":"| Property                  | Description                                                              |\r\n| ------------------------- | ------------------------------------------------------------------------ |\r\n| GUID\t\t\t\t\t\t| The GUID associated to the EWC Code\t\t\t\t\t\t\t\t\t   |\r\n| Code\t\t\t\t\t\t| The Code of the EWC Code\t\t\t\t\t\t\t\t\t\t\t\t\t|\r\n| Description\t\t\t\t| The Description of the EWC Code\t\t\t\t\t\t\t\t\t\t\t|\r\n| BriefDescription\t\t\t| The Brief Description of the EWC Code\t\t\t\t\t\t\t\t\t\t|\r\n| IsHazardous\t\t\t\t| Whether the EWC Code is Hazardous\t\t\t\t\t\t\t\t\t\t\t|\r\n","operationId":"EwcCode_GetCollection","consumes":["application/json"],"produces":["application/json"],"parameters":[{"name":"filter","in":"query","required":false,"type":"string"},{"name":"search","in":"query","required":false,"type":"string"},{"name":"order","in":"query","required":false,"type":"string"},{"name":"max","in":"query","required":false,"type":"integer","format":"int32"},{"name":"page","in":"query","required":false,"type":"integer","format":"int32"},{"name":"includeCount","in":"query","required":false,"type":"boolean"},{"name":"includeDeleted","in":"query","required":false,"type":"boolean"},{"name":"links","in":"query","required":false,"type":"string"},{"name":"udf","in":"query","required":false,"type":"string"}],"responses":{"200":{"description":"OK","schema":{"$ref":"#/definitions/ApiResourceResultCollection[ApiIntegratorEwcCodeResource]"}}}}},"/lists/exclusionTypes/{guid}":{"get":{"tags":["ExclusionType"],"summary":"Find with GUID","description":"| Property                  | Description                                                              |\r\n| ------------------------- | ------------------------------------------------------------------------ |\r\n| GUID                      | The GUID associated to the exclusion type.\t\t\t\t\t\t\t\t   |\r\n| Description               | The description of the exclusion type.                                     |\r\n","operationId":"ExclusionType_Get","consumes":["application/json"],"produces":["application/json"],"parameters":[{"name":"guid","in":"path","required":true,"type":"string","format":"uuid"},{"name":"links","in":"query","required":false,"type":"string"},{"name":"include","in":"query","required":false,"type":"string"},{"name":"expand","in":"query","required":false,"type":"string"},{"name":"udf","in":"query","required":false,"type":"string"}],"responses":{"200":{"description":"OK","schema":{"$ref":"#/definitions/ApiResourceResultEntity[ApiIntegratorExclusionTypeResource]"}}}}},"/lists/exclusionTypes":{"get":{"tags":["ExclusionType"],"summary":"Find with Filters","description":"| Property                  | Description                                                              |\r\n| ------------------------- | ------------------------------------------------------------------------ |\r\n| GUID                      | The GUID associated to the exclusion type.\t\t\t\t\t\t\t\t   |\r\n| Description               | The description of the exclusion type.                                     |\r\n","operationId":"ExclusionType_GetCollection","consumes":["application/json"],"produces":["application/json"],"parameters":[{"name":"filter","in":"query","required":false,"type":"string"},{"name":"search","in":"query","required":false,"type":"string"},{"name":"order","in":"query","required":false,"type":"string"},{"name":"max","in":"query","required":false,"type":"integer","format":"int32"},{"name":"page","in":"query","required":false,"type":"integer","format":"int32"},{"name":"includeCount","in":"query","required":false,"type":"boolean"},{"name":"includeDeleted","in":"query","required":false,"type":"boolean"},{"name":"links","in":"query","required":false,"type":"string"},{"name":"udf","in":"query","required":false,"type":"string"}],"responses":{"200":{"description":"OK","schema":{"$ref":"#/definitions/ApiResourceResultCollection[ApiIntegratorExclusionTypeResource]"}}}}},"/fleet/externalVehicles/{guid}":{"get":{"tags":["ExternalVehicle"],"summary":"Find with GUID","description":"| Property\t\t\t\t\t\t\t\t\t\t\t| Description                                                                   |\r\n| -------------------------------------------------\t| ----------------------------------------------------------------------------- |\r\n| GUID\t\t\t\t\t\t\t\t\t\t\t\t| The GUID associated to the external vehicle.\t\t\t\t\t\t\t\t    |\r\n| Registration\t\t\t\t\t\t\t\t\t\t| The registration associated to the external vehicle. Filterable.\t\t\t\t|\r\n| Description\t\t\t\t\t\t\t\t\t\t| The description associated to the external vehicle.\t\t\t\t\t\t\t|\r\n| VolumeCapacity \t\t\t\t\t\t\t\t\t| The volume capacity associated to the external vehicle.\t\t\t\t\t\t|\r\n| MaxGrossWeight \t\t\t\t\t\t\t\t\t| The max gross weight associated to the external vehicle.\t\t\t\t\t\t|\r\n| RFID\t\t\t \t\t\t\t\t\t\t\t\t| The RFID associated to the external vehicle. Filterable.\t\t\t\t\t\t|\r\n| RelatedTransportSupplierSiteGuid\t\t\t\t\t| The related transport supplier site GUID associated to the external vehicle. Filterable.\t|\r\n| VehicleTypeListItem\t\t\t\t\t\t\t\t| The GUID and description associated to the vehicle type.\t\t\t\t\t\t|\r\n| CompanyOutletListItem\t\t\t\t\t\t\t\t| The GUID and description associated to the company outlet.\t\t\t\t\t|\r\n| UnitOfMeasurementListItem\t\t\t\t\t\t\t| The GUID and description associated to the unit of measurement.\t\t\t\t|\r\n| IsSystemUse\t\t\t\t\t\t\t\t\t\t| Whether the external vehicle is for system use.\t\t\t\t\t\t\t\t|\r\n| IsWeighOutRequired\t\t\t\t\t\t\t\t| Whether the weigh out is required for the external vehicle.\t\t\t\t\t|","operationId":"ExternalVehicle_Get","consumes":["application/json"],"produces":["application/json"],"parameters":[{"name":"guid","in":"path","required":true,"type":"string","format":"uuid"},{"name":"links","in":"query","required":false,"type":"string"},{"name":"include","in":"query","required":false,"type":"string"},{"name":"expand","in":"query","required":false,"type":"string"},{"name":"udf","in":"query","required":false,"type":"string"}],"responses":{"200":{"description":"OK","schema":{"$ref":"#/definitions/ApiResourceResultEntity[ApiIntegratorExternalVehicleResource]"}}}},"put":{"tags":["ExternalVehicle"],"summary":"Partial update","description":"| Property\t\t\t\t\t\t\t\t\t\t\t| Description                                                                   | Required |\r\n| -------------------------------------------------\t| ----------------------------------------------------------------------------- |--------- |\r\n| GUID\t\t\t\t\t\t\t\t\t\t\t\t| The GUID associated to the external vehicle.\t\t\t\t\t\t\t\t    | No       |\r\n| Registration\t\t\t\t\t\t\t\t\t\t| The registration associated to the external vehicle.\t\t\t\t\t\t\t| Yes      |\r\n| Description\t\t\t\t\t\t\t\t\t\t| The description associated to the external vehicle.\t\t\t\t\t\t\t| No       |\r\n| VolumeCapacity \t\t\t\t\t\t\t\t\t| The volume capacity associated to the external vehicle.\t\t\t\t\t\t| No       |\r\n| MaxGrossWeight \t\t\t\t\t\t\t\t\t| The max gross weight associated to the external vehicle.\t\t\t\t\t\t| No       |\r\n| RFID\t\t\t \t\t\t\t\t\t\t\t\t| The RFID associated to the external vehicle.\t\t\t\t\t\t\t\t\t| No       |\r\n| RelatedTransportSupplierSiteGuid\t\t\t\t\t| The related transport supplier site GUID associated to the external vehicle.  | Yes      |\r\n| VehicleTypeListItem\t\t\t\t\t\t\t\t| The GUID and description associated to the vehicle type.\t\t\t\t\t\t| No       |\r\n| CompanyOutletListItem\t\t\t\t\t\t\t\t| The GUID and description associated to the company outlet.\t\t\t\t\t| Yes      |\r\n| UnitOfMeasurementListItem\t\t\t\t\t\t\t| The GUID and description associated to the unit of measurement.\t\t\t\t| No       |\r\n| IsSystemUse\t\t\t\t\t\t\t\t\t\t| Whether the external vehicle is for system use.\t\t\t\t\t\t\t\t| No       |\r\n| IsWeighOutRequired\t\t\t\t\t\t\t\t| Whether the weigh out is required for the external vehicle.\t\t\t\t\t| No       |","operationId":"ExternalVehicle_Update","consumes":["application/json"],"produces":["application/json"],"parameters":[{"name":"guid","in":"path","required":true,"type":"string","format":"uuid"},{"in":"body","required":true,"schema":{"$ref":"#/definitions/ApiIntegratorExternalVehicleResource"}}],"responses":{"200":{"description":"OK","schema":{"$ref":"#/definitions/ApiResourceId"}}}}},"/fleet/externalVehicles":{"get":{"tags":["ExternalVehicle"],"summary":"Find with Filters","description":"| Property\t\t\t\t\t\t\t\t\t\t\t| Description                                                                   |\r\n| -------------------------------------------------\t| ----------------------------------------------------------------------------- |\r\n| GUID\t\t\t\t\t\t\t\t\t\t\t\t| The GUID associated to the external vehicle.\t\t\t\t\t\t\t\t    |\r\n| Registration\t\t\t\t\t\t\t\t\t\t| The registration associated to the external vehicle. Filterable.\t\t\t\t|\r\n| Description\t\t\t\t\t\t\t\t\t\t| The description associated to the external vehicle.\t\t\t\t\t\t\t|\r\n| VolumeCapacity \t\t\t\t\t\t\t\t\t| The volume capacity associated to the external vehicle.\t\t\t\t\t\t|\r\n| MaxGrossWeight \t\t\t\t\t\t\t\t\t| The max gross weight associated to the external vehicle.\t\t\t\t\t\t|\r\n| RFID\t\t\t \t\t\t\t\t\t\t\t\t| The RFID associated to the external vehicle. Filterable.\t\t\t\t\t\t|\r\n| RelatedTransportSupplierSiteGuid\t\t\t\t\t| The related transport supplier site GUID associated to the external vehicle. Filterable.\t|\r\n| VehicleTypeListItem\t\t\t\t\t\t\t\t| The GUID and description associated to the vehicle type.\t\t\t\t\t\t|\r\n| CompanyOutletListItem\t\t\t\t\t\t\t\t| The GUID and description associated to the company outlet.\t\t\t\t\t|\r\n| UnitOfMeasurementListItem\t\t\t\t\t\t\t| The GUID and description associated to the unit of measurement.\t\t\t\t|\r\n| IsSystemUse\t\t\t\t\t\t\t\t\t\t| Whether the external vehicle is for system use.\t\t\t\t\t\t\t\t|\r\n| IsWeighOutRequired\t\t\t\t\t\t\t\t| Whether the weigh out is required for the external vehicle.\t\t\t\t\t|","operationId":"ExternalVehicle_GetCollection","consumes":["application/json"],"produces":["application/json"],"parameters":[{"name":"filter","in":"query","required":false,"type":"string"},{"name":"search","in":"query","required":false,"type":"string"},{"name":"order","in":"query","required":false,"type":"string"},{"name":"max","in":"query","required":false,"type":"integer","format":"int32"},{"name":"page","in":"query","required":false,"type":"integer","format":"int32"},{"name":"includeCount","in":"query","required":false,"type":"boolean"},{"name":"includeDeleted","in":"query","required":false,"type":"boolean"},{"name":"links","in":"query","required":false,"type":"string"},{"name":"udf","in":"query","required":false,"type":"string"}],"responses":{"200":{"description":"OK","schema":{"$ref":"#/definitions/ApiResourceResultCollection[ApiIntegratorExternalVehicleResource]"}}}},"post":{"tags":["ExternalVehicle"],"summary":"Create or update","description":"| Property\t\t\t\t\t\t\t\t\t\t\t| Description                                                                   | Required |\r\n| -------------------------------------------------\t| ----------------------------------------------------------------------------- |--------- |\r\n| GUID\t\t\t\t\t\t\t\t\t\t\t\t| The GUID associated to the external vehicle.\t\t\t\t\t\t\t\t    | No       |\r\n| Registration\t\t\t\t\t\t\t\t\t\t| The registration associated to the external vehicle.\t\t\t\t\t\t\t| Yes      |\r\n| Description\t\t\t\t\t\t\t\t\t\t| The description associated to the external vehicle.\t\t\t\t\t\t\t| No       |\r\n| VolumeCapacity \t\t\t\t\t\t\t\t\t| The volume capacity associated to the external vehicle.\t\t\t\t\t\t| No       |\r\n| MaxGrossWeight \t\t\t\t\t\t\t\t\t| The max gross weight associated to the external vehicle.\t\t\t\t\t\t| No       |\r\n| RFID\t\t\t \t\t\t\t\t\t\t\t\t| The RFID associated to the external vehicle.\t\t\t\t\t\t\t\t\t| No       |\r\n| RelatedTransportSupplierSiteGuid\t\t\t\t\t| The related transport supplier site GUID associated to the external vehicle.  | Yes      |\r\n| VehicleTypeListItem\t\t\t\t\t\t\t\t| The GUID and description associated to the vehicle type.\t\t\t\t\t\t| No       |\r\n| CompanyOutletListItem\t\t\t\t\t\t\t\t| The GUID and description associated to the company outlet.\t\t\t\t\t| Yes      |\r\n| UnitOfMeasurementListItem\t\t\t\t\t\t\t| The GUID and description associated to the unit of measurement.\t\t\t\t| No       |\r\n| IsSystemUse\t\t\t\t\t\t\t\t\t\t| Whether the external vehicle is for system use.\t\t\t\t\t\t\t\t| No       |\r\n| IsWeighOutRequired\t\t\t\t\t\t\t\t| Whether the weigh out is required for the external vehicle.\t\t\t\t\t| No       |","operationId":"ExternalVehicle_Create","consumes":["application/json"],"produces":["application/json"],"parameters":[{"in":"body","required":true,"schema":{"$ref":"#/definitions/ApiResourceId"}}],"responses":{"200":{"description":"OK","schema":{"$ref":"#/definitions/ApiResourceId"}}}}},"/lists/facilityTypes/{guid}":{"get":{"tags":["FacilityType"],"summary":"Find with GUID","description":"| Property                  | Description                                                              |\r\n| ------------------------- | ------------------------------------------------------------------------ |\r\n| GUID                      | The GUID associated to the facility type                                |\r\n| Description               | The description of the facility type                                    |","operationId":"FacilityType_Get","consumes":["application/json"],"produces":["application/json"],"parameters":[{"name":"guid","in":"path","required":true,"type":"string","format":"uuid"},{"name":"links","in":"query","required":false,"type":"string"},{"name":"include","in":"query","required":false,"type":"string"},{"name":"expand","in":"query","required":false,"type":"string"},{"name":"udf","in":"query","required":false,"type":"string"}],"responses":{"200":{"description":"OK","schema":{"$ref":"#/definitions/ApiResourceResultEntity[ApiIntegratorFacilityTypeResource]"}}}}},"/lists/facilityTypes":{"get":{"tags":["FacilityType"],"summary":"Find with Filters","description":"| Property                  | Description                                                              |\r\n| ------------------------- | ------------------------------------------------------------------------ |\r\n| GUID                      | The GUID associated to the facility type                                |\r\n| Description               | The description of the facility type                                    |","operationId":"FacilityType_GetCollection","consumes":["application/json"],"produces":["application/json"],"parameters":[{"name":"filter","in":"query","required":false,"type":"string"},{"name":"search","in":"query","required":false,"type":"string"},{"name":"order","in":"query","required":false,"type":"string"},{"name":"max","in":"query","required":false,"type":"integer","format":"int32"},{"name":"page","in":"query","required":false,"type":"integer","format":"int32"},{"name":"includeCount","in":"query","required":false,"type":"boolean"},{"name":"includeDeleted","in":"query","required":false,"type":"boolean"},{"name":"links","in":"query","required":false,"type":"string"},{"name":"udf","in":"query","required":false,"type":"string"}],"responses":{"200":{"description":"OK","schema":{"$ref":"#/definitions/ApiResourceResultCollection[ApiIntegratorFacilityTypeResource]"}}}}},"/accounting/glBatches/changes":{"get":{"tags":["GLBatch"],"summary":"Retrieve changes","description":"| Property\t\t\t\t\t\t\t\t| Description\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t          |\r\n| ------------------------------------- | ------------------------------------------------------------------------------- |\r\n| GUID\t\t\t\t\t\t\t\t\t| The guid associated to the glbatch.\t\t\t\t      \t\t\t\t\t\t  |\r\n| BatchType\t\t\t\t\t\t\t\t| The batch type of the glbatch.\t\t\t\t\t\t\t\t\t\t\t\t  | \t \r\n| BatchName\t\t\t\t\t\t\t\t| The batch name of the glbatch. Filterable\t\t\t\t\t\t\t\t\t\t  | \r\n| BatchStatus\t\t\t\t\t\t\t| The batch status of the glbatch. Filterable\t\t\t\t\t\t\t\t\t  | \r\n| BatchApprovalStatus\t\t\t\t\t| The batch approval status of the glbatch. Filterable \t\t\t\t\t\t\t  |\r\n| PostedDate\t\t\t\t\t\t\t| The posted date of the glbatch.\t\t\t\t\t\t\t\t\t\t\t\t  | \r\n| AccountingPeriodListItem\t\t\t\t| The guid and description associated to the accounting period\t\t\t\t\t  |\r\n| CompanyListItem\t\t\t\t\t\t| The guid and description associated to the company.\t\t\t\t\t\t\t  |\r\n| TransactionCount\t\t\t\t\t\t| The transaction count of the glbatch.\t\t\t\t\t\t\t\t\t\t\t  |\r\n| LineCount\t\t\t\t\t\t\t\t| The line count of the glbatch.\t\t\t\t\t\t\t\t\t\t\t\t  |\r\n| IsDeleted\t\t\t\t\t\t\t\t| Whether the glbatch is deleted.\t\t\t\t\t\t\t\t\t\t\t\t  |\r\n| RelatedUserCreatedByGuid\t\t\t\t| The GUID of the user who created the glbatch. Filterable\t\t\t\t\t\t  |\r\n| RelatedUserUpdatedByGuid\t\t\t\t| The GUID of the user who updated the glbatch. Filterable\t\t\t\t\t\t  |\r\n| CreationDateTime\t\t\t\t\t\t| The date of the glbatch creation.\t\t\t\t\t\t\t\t\t\t\t\t  |\r\n| UpdatedDateTime\t\t\t\t\t\t| The date of the glbatch last update.\t\t\t\t\t\t\t\t\t\t\t  |\r\n| FilterAccountingPeriodListItemGuid    | Filter by the accounting period guid.\t\t\t\t\t\t\t\t\t\t\t  |","operationId":"GLBatch_GetChanges","consumes":["application/json"],"produces":["application/json"],"parameters":[{"name":"since","in":"query","required":false,"type":"string"},{"name":"cursor","in":"query","required":false,"type":"string"},{"name":"links","in":"query","required":false,"type":"string"}],"responses":{"200":{"description":"OK","schema":{"$ref":"#/definitions/ApiResourceChanges[ApiIntegratorGLBatchResource]"}}}}},"/accounting/glBatches/{guid}":{"get":{"tags":["GLBatch"],"summary":"Find with GUID","description":"| Property\t\t\t\t\t\t\t\t| Description\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t          |\r\n| ------------------------------------- | ------------------------------------------------------------------------------- |\r\n| GUID\t\t\t\t\t\t\t\t\t| The guid associated to the glbatch.\t\t\t\t      \t\t\t\t\t\t  |\r\n| BatchType\t\t\t\t\t\t\t\t| The batch type of the glbatch.\t\t\t\t\t\t\t\t\t\t\t\t  | \t \r\n| BatchName\t\t\t\t\t\t\t\t| The batch name of the glbatch. Filterable\t\t\t\t\t\t\t\t\t\t  | \r\n| BatchStatus\t\t\t\t\t\t\t| The batch status of the glbatch. Filterable\t\t\t\t\t\t\t\t\t  | \r\n| BatchApprovalStatus\t\t\t\t\t| The batch approval status of the glbatch. Filterable \t\t\t\t\t\t\t  |\r\n| PostedDate\t\t\t\t\t\t\t| The posted date of the glbatch.\t\t\t\t\t\t\t\t\t\t\t\t  | \r\n| AccountingPeriodListItem\t\t\t\t| The guid and description associated to the accounting period\t\t\t\t\t  |\r\n| CompanyListItem\t\t\t\t\t\t| The guid and description associated to the company.\t\t\t\t\t\t\t  |\r\n| TransactionCount\t\t\t\t\t\t| The transaction count of the glbatch.\t\t\t\t\t\t\t\t\t\t\t  |\r\n| LineCount\t\t\t\t\t\t\t\t| The line count of the glbatch.\t\t\t\t\t\t\t\t\t\t\t\t  |\r\n| IsDeleted\t\t\t\t\t\t\t\t| Whether the glbatch is deleted.\t\t\t\t\t\t\t\t\t\t\t\t  |\r\n| RelatedUserCreatedByGuid\t\t\t\t| The GUID of the user who created the glbatch. Filterable\t\t\t\t\t\t  |\r\n| RelatedUserUpdatedByGuid\t\t\t\t| The GUID of the user who updated the glbatch. Filterable\t\t\t\t\t\t  |\r\n| CreationDateTime\t\t\t\t\t\t| The date of the glbatch creation.\t\t\t\t\t\t\t\t\t\t\t\t  |\r\n| UpdatedDateTime\t\t\t\t\t\t| The date of the glbatch last update.\t\t\t\t\t\t\t\t\t\t\t  |\r\n| FilterAccountingPeriodListItemGuid    | Filter by the accounting period guid.\t\t\t\t\t\t\t\t\t\t\t  |","operationId":"GLBatch_Get","consumes":["application/json"],"produces":["application/json"],"parameters":[{"name":"guid","in":"path","required":true,"type":"string","format":"uuid"},{"name":"links","in":"query","required":false,"type":"string"},{"name":"include","in":"query","required":false,"type":"string"},{"name":"expand","in":"query","required":false,"type":"string"},{"name":"udf","in":"query","required":false,"type":"string"}],"responses":{"200":{"description":"OK","schema":{"$ref":"#/definitions/ApiResourceResultEntity[ApiIntegratorGLBatchResource]"}}}},"put":{"tags":["GLBatch"],"summary":"Partial update","description":"| Property\t\t\t\t\t\t\t\t| Description\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t          | Required |\r\n| -------------------------------------\t| ------------------------------------------------------------------------------- | -------- |\r\n| GUID\t\t\t\t\t\t\t\t\t| The guid associated to the glbatch.\t\t\t\t      \t\t\t\t\t\t  | Yes      |\r\n| BatchType\t\t\t\t\t\t\t\t| The batch type of the glbatch.\t\t\t\t\t\t\t\t\t\t\t\t  | Yes      | \t \r\n| BatchName\t\t\t\t\t\t\t\t| The batch name of the glbatch.\t\t\t\t\t\t\t\t\t\t\t\t  | Yes      | \r\n| BatchStatus\t\t\t\t\t\t\t| The batch status of the glbatch.\t\t\t\t\t\t\t\t\t\t\t\t  | Yes      | \r\n| BatchApprovalStatus\t\t\t\t\t| The batch approval status of the glbatch. \t\t\t\t\t\t\t\t\t  | Yes      |\r\n| PostedDate\t\t\t\t\t\t\t| The posted date of the glbatch.\t\t\t\t\t\t\t\t\t\t\t\t  | No       | \r\n| AccountingPeriodListItem\t\t\t\t| The guid and description associated to the accounting period.\t\t\t\t\t  | Yes      |\r\n| CompanyListItem\t\t\t\t\t\t| The guid and description associated to the company.\t\t\t\t\t\t\t  | Yes      |\r\n| TransactionCount\t\t\t\t\t\t| The transaction count of the glbatch.\t\t\t\t\t\t\t\t\t\t\t  | Yes      |\r\n| LineCount\t\t\t\t\t\t\t\t| The line count of the glbatch.\t\t\t\t\t\t\t\t\t\t\t\t  | Yes      |\r\n| IsDeleted\t\t\t\t\t\t\t\t| Whether the glbatch is deleted.\t\t\t\t\t\t\t\t\t\t\t\t  | Yes      |\r\n| RelatedUserCreatedByGuid\t\t\t\t| The GUID of the user who created the glbatch.\t\t\t\t\t\t\t\t\t  | Yes      |\r\n| RelatedUserUpdatedByGuid\t\t\t\t| The GUID of the user who updated the glbatch.\t\t\t\t\t\t\t\t\t  | Yes      |\r\n| CreationDateTime\t\t\t\t\t\t| The date of the glbatch creation.\t\t\t\t\t\t\t\t\t\t\t\t  | Yes      |\r\n| UpdatedDateTime\t\t\t\t\t\t| The date of the glbatch last update.\t\t\t\t\t\t\t\t\t\t\t  | Yes\t\t |\r\n| FilterAccountingPeriodListItemGuid    | Filter by the accounting period guid\t\t\t\t\t\t\t\t\t\t\t  | No       |\r\n\r\n## Extra validations\r\n\r\n| Condition | Error message |\r\n| --------- | ------------- |\r\n| BatchType is being edited | BatchType is a read-only property. |\r\n| BatchName is being edited | BatchName is a read-only property. |\r\n| TransactionCount is being edited | TransactionCount is a read-only property. |\r\n| LineCount is being edited | LineCount is a read-only property. |\r\n| AccountingPeriodListItem.Guid is being edited | AccountingPeriodListItem.Guid is a read-only property. |\r\n| CompanyListItem.Guid is being edited | CompanyListItem.Guid is a read-only property. |\r\n| If we attempt to delete a GLBatch | IsDeleted is TRUE. Could not process the request. Resources can not be deleted via the REST API. |\r\n| RelatedUserCreatedByGuid is being edited | RelatedUserCreatedByGuid is a read-only property. |\r\n| RelatedUserUpdatedByGuid is being edited | RelatedUserUpdatedByGuid is a read-only property. |\r\n| CreationDateTime is being edited | CreationDateTime is a read-only property. |\r\n| UpdatedDateTime is being edited | UpdatedDateTime is a read-only property. |","operationId":"GLBatch_Update","consumes":["application/json"],"produces":["application/json"],"parameters":[{"name":"guid","in":"path","required":true,"type":"string","format":"uuid"},{"in":"body","required":true,"schema":{"$ref":"#/definitions/ApiResourceId"}}],"responses":{"200":{"description":"OK","schema":{"$ref":"#/definitions/ApiResourceId"}}}}},"/accounting/glBatches":{"get":{"tags":["GLBatch"],"summary":"Find with Filters","description":"| Property\t\t\t\t\t\t\t\t| Description\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t          |\r\n| ------------------------------------- | ------------------------------------------------------------------------------- |\r\n| GUID\t\t\t\t\t\t\t\t\t| The guid associated to the glbatch.\t\t\t\t      \t\t\t\t\t\t  |\r\n| BatchType\t\t\t\t\t\t\t\t| The batch type of the glbatch.\t\t\t\t\t\t\t\t\t\t\t\t  | \t \r\n| BatchName\t\t\t\t\t\t\t\t| The batch name of the glbatch. Filterable\t\t\t\t\t\t\t\t\t\t  | \r\n| BatchStatus\t\t\t\t\t\t\t| The batch status of the glbatch. Filterable\t\t\t\t\t\t\t\t\t  | \r\n| BatchApprovalStatus\t\t\t\t\t| The batch approval status of the glbatch. Filterable \t\t\t\t\t\t\t  |\r\n| PostedDate\t\t\t\t\t\t\t| The posted date of the glbatch.\t\t\t\t\t\t\t\t\t\t\t\t  | \r\n| AccountingPeriodListItem\t\t\t\t| The guid and description associated to the accounting period\t\t\t\t\t  |\r\n| CompanyListItem\t\t\t\t\t\t| The guid and description associated to the company.\t\t\t\t\t\t\t  |\r\n| TransactionCount\t\t\t\t\t\t| The transaction count of the glbatch.\t\t\t\t\t\t\t\t\t\t\t  |\r\n| LineCount\t\t\t\t\t\t\t\t| The line count of the glbatch.\t\t\t\t\t\t\t\t\t\t\t\t  |\r\n| IsDeleted\t\t\t\t\t\t\t\t| Whether the glbatch is deleted.\t\t\t\t\t\t\t\t\t\t\t\t  |\r\n| RelatedUserCreatedByGuid\t\t\t\t| The GUID of the user who created the glbatch. Filterable\t\t\t\t\t\t  |\r\n| RelatedUserUpdatedByGuid\t\t\t\t| The GUID of the user who updated the glbatch. Filterable\t\t\t\t\t\t  |\r\n| CreationDateTime\t\t\t\t\t\t| The date of the glbatch creation.\t\t\t\t\t\t\t\t\t\t\t\t  |\r\n| UpdatedDateTime\t\t\t\t\t\t| The date of the glbatch last update.\t\t\t\t\t\t\t\t\t\t\t  |\r\n| FilterAccountingPeriodListItemGuid    | Filter by the accounting period guid.\t\t\t\t\t\t\t\t\t\t\t  |","operationId":"GLBatch_GetCollection","consumes":["application/json"],"produces":["application/json"],"parameters":[{"name":"filter","in":"query","required":false,"type":"string"},{"name":"search","in":"query","required":false,"type":"string"},{"name":"order","in":"query","required":false,"type":"string"},{"name":"max","in":"query","required":false,"type":"integer","format":"int32"},{"name":"page","in":"query","required":false,"type":"integer","format":"int32"},{"name":"includeCount","in":"query","required":false,"type":"boolean"},{"name":"includeDeleted","in":"query","required":false,"type":"boolean"},{"name":"links","in":"query","required":false,"type":"string"},{"name":"udf","in":"query","required":false,"type":"string"}],"responses":{"200":{"description":"OK","schema":{"$ref":"#/definitions/ApiResourceResultCollection[ApiIntegratorGLBatchResource]"}}}}},"/accounting/glExports":{"post":{"tags":["GLExport"],"summary":"Create or update","description":"| Property                        | Description                                                  | Required |\r\n| ------------------------------  | ------------------------------------------------------------ | -------- |\r\n| IsDeleted\t\t\t              | Is the GLExport Deleted.\t\t\t\t\t\t\t\t\t | Yes      |\r\n| GeneralLedgerExportTypeBitmask  | The GeneralLedgerExportTypeBitmask of the GLExport.          | Yes      |\r\n\r\n## Extra validations\r\n\r\n| Condition | Error message |\r\n| --------- | ------------- |\r\n| GeneralLedgerExportTypeBitmask was set null | The mandatory property GeneralLedgerExportTypeBitmask has a null value. The request could not be processed. Supply a value for the GeneralLedgerExportTypeBitmask property of the submitted resource. |\r\n| IsDeleted was set null | The mandatory property IsDeleted has a null value. The request could not be processed. Supply a value for the IsDeleted property of the submitted resource. |\r\n| GLExport with Guid | GLExport has the property Guid with value of {0} that is not supported. The GLExport cannot be created with Guid. |\r\n| GLExport with IsDeleted true | IsDeleted is TRUE. Could not process the request. GLExports can not be deleted via the REST API. |\r\n| GeneralLedgerExportTypeBitmask with invalid bit mask | GLExport with GeneralLedgerExportTypeBitmask of {0} is not a valid general ledger export type bit mask. More than one transaction type is not allowed. |","operationId":"GLExport_Create","consumes":["application/json"],"produces":["application/json"],"parameters":[{"in":"body","required":true,"schema":{"$ref":"#/definitions/ApiResourceId"}}],"responses":{"200":{"description":"OK","schema":{"$ref":"#/definitions/ApiResourceId"}}}}},"/accounting/glJournals/changes":{"get":{"tags":["GLJournal"],"summary":"Retrieve changes","description":"| Property                                    | Description                                                           |\r\n| ------------------------------------------- | --------------------------------------------------------------------- |\r\n| GUID                                        | The GUID associated to the GLJournalBatch.                          |\r\n| BatchType                                   | The type of this GLJournalBatch. |\r\n| BatchName                                   | The name of this GLJournalBatch. |\r\n| BatchStatus                                 | The status of this GLJournalBatch. |\r\n| BatchApprovalStatus                         | The approval status of this GLJournalBatch. |\r\n| PostingDate                                 | The posting date of this GLJournalBatch in ISO format (YYYY-MM-DD). |\r\n| PostedDate                                  | The posted date of this GLJournalBatch in ISO format (YYYY-MM-DD). |\r\n| AccountingPeriodCode\t\t\t\t\t\t  | The accounting period code of this GLJournalBatch. |\r\n| AccountingPeriodListItem\t\t\t\t\t  | The GUID and description of the accounting period. |\r\n| RelatedGLExportGuid\t\t\t\t\t\t  | The GUID of GLExport associated to the GLJournalBacth. Filterable. |\r\n| RelatedUserCreatedByGuid\t\t\t\t\t  | The GUID of the user who created the GLJournalBatch. Filterable |\r\n| RelatedUserUpdatedByGuid\t\t\t\t\t  | The GUID of the user who updated the GLJournalBatch. Filterable |\r\n| CreationDateTime\t\t\t\t\t\t      | The date of the GLJournalBatch creation. |\r\n| UpdatedDateTime\t\t\t\t\t\t      | The date of the GLJournalBatch last update. |\r\n| RelatedTransactionGuidFilter\t\t\t\t  | Used to filter the related transaction guid associated to the GLJournalHeader. |\r\n| JournalHeaders.JournalHeaderGuid            | The GUID associated to the GLJournalHeaders. |\r\n| JournalHeaders.HeaderName                   | The GLJournalHeaders headername.  |\r\n| JournalHeaders.CompanyListItem              | The GUID and name of the company this GLJournalHeaders is associated to. |\r\n| JournalHeaders.Source                       | The source of this GLJournalHeaders.  |\r\n| JournalHeaders.BaseCurrencyIntegrationCode  | The integration code of the base currency of this GLJournalHeaders. |\r\n| JournalHeaders.CurrencyIntegrationCode      | The integration code of the currency of this GLJournalHeaders. |\r\n| JournalHeaders.TransactionDate              | The transaction date in ISO format of this GLJournalHeaders. |\r\n| JournalHeaders.GLDate                       | The Gl date of this GLJournalHeaders in ISO format (YYYY-MM-DD). |\r\n| JournalHeaders.JournalType                  | The type of this GLJournalHeaders. |\r\n| JournalHeaders.JournalStatus                | The status of this GLJournalHeaders. |\r\n| JournalHeaders.TotalDr                      | The total debit amount of this GLJournalHeaders. |\r\n| JournalHeaders.TotalCr                      | The total credit amount of this GLJournalHeaders. |\r\n| JournalHeaders.RelatedTransactionGuid\t\t  | The Source GUID associated to the transaction of the GLJournalHeader. |\r\n| JournalHeaders.CreationDateTime\t\t\t  | The date of the GLJournalHeaders creation. |\r\n| JournalHeaders.UpdatedDateTime\t\t\t  | The date of the GLJournalHeaders last update. |\r\n| JournalLines.RelatedJournalHeaderGuid       | The GUID of the journal header related to this GLJournalLines. |\r\n| JournalLines.JournalLineNo                  | The journal line number of this GLJournalLines. |\r\n| JournalLines.TransactionFromDate            | The transaction from date in ISO format of this GLJournalLines. |\r\n| JournalLines.TransactionToDate              | The transaction to date in ISO format of this GLJournalLines. |\r\n| JournalLines.LineType                       | The type of this GLJournalLines. |\r\n| JournalLines.LineDescription                | The description of this GLJournalLines. |\r\n| JournalLines.JnlDr                          | The debit amount of this GLJournalLines. |\r\n| JournalLines.JnlCr                          | The credit amount of this GLJournalLines. |\r\n| JournalLines.BaseDr                         | The base debit amount of this GLJournalLines. |\r\n| JournalLines.BaseCr                         | The base credit amount of this GLJournalLines. |\r\n| JournalLines.Category\t\t\t\t\t\t  | The category of this GLJournalLines. |\r\n| JournalLines.CreationDateTime\t\t\t      | The date of the GLJournalLines creation. |\r\n| JournalLines.UpdatedDateTime\t\t\t      | The date of the GLJournalLines last update. |\r\n| JournalLines.ExchangeRate.RelatedExchangeRateGuid    | The Related Exchange Rate Guid of this GLJournalLines.                                    |\r\n| JournalLines.ExchangeRate.Rate              | The exchange rate of this GLJournalLines. |\r\n| JournalLines.ExchangeRate.ExchangeDate      | The exchange rate date in ISO format of this GLJournalLines. |\r\n| JournalLines.ExchangeRate.BaseCurrencyListItem | The base exchange rate currency id and description assouciated this GLJournalLines. |\r\n| JournalLines.ExchangeRate.CurrencyListItem  | The exchange rate currency id and description assouciated this GLJournalLines. |\r\n| JournalLines.Tax.Code                       | The tax code of this GLJournalLines. |\r\n| JournalLines.Tax.Rate                       | The tax rate of this GLJournalLines. |\r\n| JournalLines.AnalysisCodes.Element1 | The 1 element lines of this GLJournalLines. |\r\n| JournalLines.AnalysisCodes.Element2 | The 2 element lines of this GLJournalLines. |\r\n| JournalLines.AnalysisCodes.Element3 | The 3 element lines of this GLJournalLines. |\r\n| JournalLines.AnalysisCodes.Element4 | The 4 element lines of this GLJournalLines. |\r\n| JournalLines.AnalysisCodes.Element5 | The 5 element lines of this GLJournalLines. |\r\n| JournalLines.AnalysisCodes.Element6 | The 6 element lines of this GLJournalLines. |\r\n| JournalLines.AnalysisCodes.Element7 | The 7 element lines of this GLJournalLines. |\r\n| JournalLines.AnalysisCodes.Element8 | The 8 element lines of this GLJournalLines. |\r\n| JournalLines.AnalysisCodes.Element9 | The 9 element lines of this GLJournalLines. |\r\n| JournalLines.AnalysisCodes.Element10 | The 10 element lines of this GLJournalLines. |\r\n| JournalLines.AnalysisCodes.Site\t  | The analysis code of customersite of this GLJournalLines. |\r\n| JournalLines.Reference.Reference1   | The 1 reference lines of this GLJournalLines. |\r\n| JournalLines.Reference.Reference2   | The 2 reference lines of this GLJournalLines. |\r\n| JournalLines.Reference.Reference3   | The 3 reference lines of this GLJournalLines. |\r\n| JournalLines.Reference.Reference4   | The 4 reference lines of this GLJournalLines. |\r\n| JournalLines.Reference.Reference5   | The 5 reference lines of this GLJournalLines. |\r\n| JournalLines.Reference.Reference6   | The 6 reference lines of this GLJournalLines. |\r\n| JournalLines.Reference.Reference7   | The 7 reference lines of this GLJournalLines. |\r\n| JournalLines.Reference.Reference8   | The 8 reference lines of this GLJournalLines. |\r\n| JournalLines.Reference.Reference9   | The 9 reference lines of this GLJournalLines. |\r\n| JournalLines.Reference.Reference10  | The 10 reference lines of this GLJournalLines. |\r\n| JournalLines.Reference.Reference11  | The 11 reference lines of this GLJournalLines. |\r\n| JournalLines.Reference.Reference12  | The 12 reference lines of this GLJournalLines. |\r\n| JournalLines.Reference.Reference13  | The 13 reference lines of this GLJournalLines. |\r\n| JournalLines.Reference.Reference14  | The 14 reference lines of this GLJournalLines. |\r\n| JournalLines.Reference.Reference15  | The 15 reference lines of this GLJournalLines. |\r\n| JournalLines.Reference.Reference16  | The 16 reference lines of this GLJournalLines. |\r\n| JournalLines.Reference.Reference17  | The 17 reference lines of this GLJournalLines. |\r\n| JournalLines.Reference.Reference18  | The 18 reference lines of this GLJournalLines. |\r\n| JournalLines.Reference.Reference19  | The 19 reference lines of this GLJournalLines. |\r\n| JournalLines.Reference.Reference20  | The 20 reference lines of this GLJournalLines. |\r\n| JournalLines.Reference.Reference21  | The 21 reference lines of this GLJournalLines. |\r\n| JournalLines.Reference.Reference22  | The 22 reference lines of this GLJournalLines. |\r\n| JournalLines.Reference.Reference23  | The 23 reference lines of this GLJournalLines. |\r\n| JournalLines.Reference.OrderNo\t  | The reference order number of this GLJournalLines. |\r\n| JournalLines.SummaryAccountCode\t  | The summary account code of this GLJournalLines. |","operationId":"GLJournal_GetChanges","consumes":["application/json"],"produces":["application/json"],"parameters":[{"name":"since","in":"query","required":false,"type":"string"},{"name":"cursor","in":"query","required":false,"type":"string"},{"name":"links","in":"query","required":false,"type":"string"}],"responses":{"200":{"description":"OK","schema":{"$ref":"#/definitions/ApiResourceChanges[ApiIntegratorGLJournalResource]"}}}}},"/accounting/glJournals/{guid}":{"get":{"tags":["GLJournal"],"summary":"Find with GUID","description":"| Property                                    | Description                                                           |\r\n| ------------------------------------------- | --------------------------------------------------------------------- |\r\n| GUID                                        | The GUID associated to the GLJournalBatch.                          |\r\n| BatchType                                   | The type of this GLJournalBatch. |\r\n| BatchName                                   | The name of this GLJournalBatch. |\r\n| BatchStatus                                 | The status of this GLJournalBatch. |\r\n| BatchApprovalStatus                         | The approval status of this GLJournalBatch. |\r\n| PostingDate                                 | The posting date of this GLJournalBatch in ISO format (YYYY-MM-DD). |\r\n| PostedDate                                  | The posted date of this GLJournalBatch in ISO format (YYYY-MM-DD). |\r\n| AccountingPeriodCode\t\t\t\t\t\t  | The accounting period code of this GLJournalBatch. |\r\n| AccountingPeriodListItem\t\t\t\t\t  | The GUID and description of the accounting period. |\r\n| RelatedGLExportGuid\t\t\t\t\t\t  | The GUID of GLExport associated to the GLJournalBacth. Filterable. |\r\n| RelatedUserCreatedByGuid\t\t\t\t\t  | The GUID of the user who created the GLJournalBatch. Filterable |\r\n| RelatedUserUpdatedByGuid\t\t\t\t\t  | The GUID of the user who updated the GLJournalBatch. Filterable |\r\n| CreationDateTime\t\t\t\t\t\t      | The date of the GLJournalBatch creation. |\r\n| UpdatedDateTime\t\t\t\t\t\t      | The date of the GLJournalBatch last update. |\r\n| RelatedTransactionGuidFilter\t\t\t\t  | Used to filter the related transaction guid associated to the GLJournalHeader. |\r\n| JournalHeaders.JournalHeaderGuid            | The GUID associated to the GLJournalHeaders. |\r\n| JournalHeaders.HeaderName                   | The GLJournalHeaders headername.  |\r\n| JournalHeaders.CompanyListItem              | The GUID and name of the company this GLJournalHeaders is associated to. |\r\n| JournalHeaders.Source                       | The source of this GLJournalHeaders.  |\r\n| JournalHeaders.BaseCurrencyIntegrationCode  | The integration code of the base currency of this GLJournalHeaders. |\r\n| JournalHeaders.CurrencyIntegrationCode      | The integration code of the currency of this GLJournalHeaders. |\r\n| JournalHeaders.TransactionDate              | The transaction date in ISO format of this GLJournalHeaders. |\r\n| JournalHeaders.GLDate                       | The Gl date of this GLJournalHeaders in ISO format (YYYY-MM-DD). |\r\n| JournalHeaders.JournalType                  | The type of this GLJournalHeaders. |\r\n| JournalHeaders.JournalStatus                | The status of this GLJournalHeaders. |\r\n| JournalHeaders.TotalDr                      | The total debit amount of this GLJournalHeaders. |\r\n| JournalHeaders.TotalCr                      | The total credit amount of this GLJournalHeaders. |\r\n| JournalHeaders.RelatedTransactionGuid\t\t  | The Source GUID associated to the transaction of the GLJournalHeader. |\r\n| JournalHeaders.CreationDateTime\t\t\t  | The date of the GLJournalHeaders creation. |\r\n| JournalHeaders.UpdatedDateTime\t\t\t  | The date of the GLJournalHeaders last update. |\r\n| JournalLines.RelatedJournalHeaderGuid       | The GUID of the journal header related to this GLJournalLines. |\r\n| JournalLines.JournalLineNo                  | The journal line number of this GLJournalLines. |\r\n| JournalLines.TransactionFromDate            | The transaction from date in ISO format of this GLJournalLines. |\r\n| JournalLines.TransactionToDate              | The transaction to date in ISO format of this GLJournalLines. |\r\n| JournalLines.LineType                       | The type of this GLJournalLines. |\r\n| JournalLines.LineDescription                | The description of this GLJournalLines. |\r\n| JournalLines.JnlDr                          | The debit amount of this GLJournalLines. |\r\n| JournalLines.JnlCr                          | The credit amount of this GLJournalLines. |\r\n| JournalLines.BaseDr                         | The base debit amount of this GLJournalLines. |\r\n| JournalLines.BaseCr                         | The base credit amount of this GLJournalLines. |\r\n| JournalLines.Category\t\t\t\t\t\t  | The category of this GLJournalLines. |\r\n| JournalLines.CreationDateTime\t\t\t      | The date of the GLJournalLines creation. |\r\n| JournalLines.UpdatedDateTime\t\t\t      | The date of the GLJournalLines last update. |\r\n| JournalLines.ExchangeRate.RelatedExchangeRateGuid    | The Related Exchange Rate Guid of this GLJournalLines.                                    |\r\n| JournalLines.ExchangeRate.Rate              | The exchange rate of this GLJournalLines. |\r\n| JournalLines.ExchangeRate.ExchangeDate      | The exchange rate date in ISO format of this GLJournalLines. |\r\n| JournalLines.ExchangeRate.BaseCurrencyListItem | The base exchange rate currency id and description assouciated this GLJournalLines. |\r\n| JournalLines.ExchangeRate.CurrencyListItem  | The exchange rate currency id and description assouciated this GLJournalLines. |\r\n| JournalLines.Tax.Code                       | The tax code of this GLJournalLines. |\r\n| JournalLines.Tax.Rate                       | The tax rate of this GLJournalLines. |\r\n| JournalLines.AnalysisCodes.Element1 | The 1 element lines of this GLJournalLines. |\r\n| JournalLines.AnalysisCodes.Element2 | The 2 element lines of this GLJournalLines. |\r\n| JournalLines.AnalysisCodes.Element3 | The 3 element lines of this GLJournalLines. |\r\n| JournalLines.AnalysisCodes.Element4 | The 4 element lines of this GLJournalLines. |\r\n| JournalLines.AnalysisCodes.Element5 | The 5 element lines of this GLJournalLines. |\r\n| JournalLines.AnalysisCodes.Element6 | The 6 element lines of this GLJournalLines. |\r\n| JournalLines.AnalysisCodes.Element7 | The 7 element lines of this GLJournalLines. |\r\n| JournalLines.AnalysisCodes.Element8 | The 8 element lines of this GLJournalLines. |\r\n| JournalLines.AnalysisCodes.Element9 | The 9 element lines of this GLJournalLines. |\r\n| JournalLines.AnalysisCodes.Element10 | The 10 element lines of this GLJournalLines. |\r\n| JournalLines.AnalysisCodes.Site\t  | The analysis code of customersite of this GLJournalLines. |\r\n| JournalLines.Reference.Reference1   | The 1 reference lines of this GLJournalLines. |\r\n| JournalLines.Reference.Reference2   | The 2 reference lines of this GLJournalLines. |\r\n| JournalLines.Reference.Reference3   | The 3 reference lines of this GLJournalLines. |\r\n| JournalLines.Reference.Reference4   | The 4 reference lines of this GLJournalLines. |\r\n| JournalLines.Reference.Reference5   | The 5 reference lines of this GLJournalLines. |\r\n| JournalLines.Reference.Reference6   | The 6 reference lines of this GLJournalLines. |\r\n| JournalLines.Reference.Reference7   | The 7 reference lines of this GLJournalLines. |\r\n| JournalLines.Reference.Reference8   | The 8 reference lines of this GLJournalLines. |\r\n| JournalLines.Reference.Reference9   | The 9 reference lines of this GLJournalLines. |\r\n| JournalLines.Reference.Reference10  | The 10 reference lines of this GLJournalLines. |\r\n| JournalLines.Reference.Reference11  | The 11 reference lines of this GLJournalLines. |\r\n| JournalLines.Reference.Reference12  | The 12 reference lines of this GLJournalLines. |\r\n| JournalLines.Reference.Reference13  | The 13 reference lines of this GLJournalLines. |\r\n| JournalLines.Reference.Reference14  | The 14 reference lines of this GLJournalLines. |\r\n| JournalLines.Reference.Reference15  | The 15 reference lines of this GLJournalLines. |\r\n| JournalLines.Reference.Reference16  | The 16 reference lines of this GLJournalLines. |\r\n| JournalLines.Reference.Reference17  | The 17 reference lines of this GLJournalLines. |\r\n| JournalLines.Reference.Reference18  | The 18 reference lines of this GLJournalLines. |\r\n| JournalLines.Reference.Reference19  | The 19 reference lines of this GLJournalLines. |\r\n| JournalLines.Reference.Reference20  | The 20 reference lines of this GLJournalLines. |\r\n| JournalLines.Reference.Reference21  | The 21 reference lines of this GLJournalLines. |\r\n| JournalLines.Reference.Reference22  | The 22 reference lines of this GLJournalLines. |\r\n| JournalLines.Reference.Reference23  | The 23 reference lines of this GLJournalLines. |\r\n| JournalLines.Reference.OrderNo\t  | The reference order number of this GLJournalLines. |\r\n| JournalLines.SummaryAccountCode\t  | The summary account code of this GLJournalLines. |","operationId":"GLJournal_Get","consumes":["application/json"],"produces":["application/json"],"parameters":[{"name":"guid","in":"path","required":true,"type":"string","format":"uuid"},{"name":"links","in":"query","required":false,"type":"string"},{"name":"include","in":"query","required":false,"type":"string"},{"name":"expand","in":"query","required":false,"type":"string"},{"name":"udf","in":"query","required":false,"type":"string"}],"responses":{"200":{"description":"OK","schema":{"$ref":"#/definitions/ApiResourceResultEntity[ApiIntegratorGLJournalResource]"}}}}},"/accounting/glJournals":{"get":{"tags":["GLJournal"],"summary":"Find with Filters","description":"| Property                                    | Description                                                           |\r\n| ------------------------------------------- | --------------------------------------------------------------------- |\r\n| GUID                                        | The GUID associated to the GLJournalBatch.                          |\r\n| BatchType                                   | The type of this GLJournalBatch. |\r\n| BatchName                                   | The name of this GLJournalBatch. |\r\n| BatchStatus                                 | The status of this GLJournalBatch. |\r\n| BatchApprovalStatus                         | The approval status of this GLJournalBatch. |\r\n| PostingDate                                 | The posting date of this GLJournalBatch in ISO format (YYYY-MM-DD). |\r\n| PostedDate                                  | The posted date of this GLJournalBatch in ISO format (YYYY-MM-DD). |\r\n| AccountingPeriodCode\t\t\t\t\t\t  | The accounting period code of this GLJournalBatch. |\r\n| AccountingPeriodListItem\t\t\t\t\t  | The GUID and description of the accounting period. |\r\n| RelatedGLExportGuid\t\t\t\t\t\t  | The GUID of GLExport associated to the GLJournalBacth. Filterable. |\r\n| RelatedUserCreatedByGuid\t\t\t\t\t  | The GUID of the user who created the GLJournalBatch. Filterable |\r\n| RelatedUserUpdatedByGuid\t\t\t\t\t  | The GUID of the user who updated the GLJournalBatch. Filterable |\r\n| CreationDateTime\t\t\t\t\t\t      | The date of the GLJournalBatch creation. |\r\n| UpdatedDateTime\t\t\t\t\t\t      | The date of the GLJournalBatch last update. |\r\n| RelatedTransactionGuidFilter\t\t\t\t  | Used to filter the related transaction guid associated to the GLJournalHeader. |\r\n| JournalHeaders.JournalHeaderGuid            | The GUID associated to the GLJournalHeaders. |\r\n| JournalHeaders.HeaderName                   | The GLJournalHeaders headername.  |\r\n| JournalHeaders.CompanyListItem              | The GUID and name of the company this GLJournalHeaders is associated to. |\r\n| JournalHeaders.Source                       | The source of this GLJournalHeaders.  |\r\n| JournalHeaders.BaseCurrencyIntegrationCode  | The integration code of the base currency of this GLJournalHeaders. |\r\n| JournalHeaders.CurrencyIntegrationCode      | The integration code of the currency of this GLJournalHeaders. |\r\n| JournalHeaders.TransactionDate              | The transaction date in ISO format of this GLJournalHeaders. |\r\n| JournalHeaders.GLDate                       | The Gl date of this GLJournalHeaders in ISO format (YYYY-MM-DD). |\r\n| JournalHeaders.JournalType                  | The type of this GLJournalHeaders. |\r\n| JournalHeaders.JournalStatus                | The status of this GLJournalHeaders. |\r\n| JournalHeaders.TotalDr                      | The total debit amount of this GLJournalHeaders. |\r\n| JournalHeaders.TotalCr                      | The total credit amount of this GLJournalHeaders. |\r\n| JournalHeaders.RelatedTransactionGuid\t\t  | The Source GUID associated to the transaction of the GLJournalHeader. |\r\n| JournalHeaders.CreationDateTime\t\t\t  | The date of the GLJournalHeaders creation. |\r\n| JournalHeaders.UpdatedDateTime\t\t\t  | The date of the GLJournalHeaders last update. |\r\n| JournalLines.RelatedJournalHeaderGuid       | The GUID of the journal header related to this GLJournalLines. |\r\n| JournalLines.JournalLineNo                  | The journal line number of this GLJournalLines. |\r\n| JournalLines.TransactionFromDate            | The transaction from date in ISO format of this GLJournalLines. |\r\n| JournalLines.TransactionToDate              | The transaction to date in ISO format of this GLJournalLines. |\r\n| JournalLines.LineType                       | The type of this GLJournalLines. |\r\n| JournalLines.LineDescription                | The description of this GLJournalLines. |\r\n| JournalLines.JnlDr                          | The debit amount of this GLJournalLines. |\r\n| JournalLines.JnlCr                          | The credit amount of this GLJournalLines. |\r\n| JournalLines.BaseDr                         | The base debit amount of this GLJournalLines. |\r\n| JournalLines.BaseCr                         | The base credit amount of this GLJournalLines. |\r\n| JournalLines.Category\t\t\t\t\t\t  | The category of this GLJournalLines. |\r\n| JournalLines.CreationDateTime\t\t\t      | The date of the GLJournalLines creation. |\r\n| JournalLines.UpdatedDateTime\t\t\t      | The date of the GLJournalLines last update. |\r\n| JournalLines.ExchangeRate.RelatedExchangeRateGuid    | The Related Exchange Rate Guid of this GLJournalLines.                                    |\r\n| JournalLines.ExchangeRate.Rate              | The exchange rate of this GLJournalLines. |\r\n| JournalLines.ExchangeRate.ExchangeDate      | The exchange rate date in ISO format of this GLJournalLines. |\r\n| JournalLines.ExchangeRate.BaseCurrencyListItem | The base exchange rate currency id and description assouciated this GLJournalLines. |\r\n| JournalLines.ExchangeRate.CurrencyListItem  | The exchange rate currency id and description assouciated this GLJournalLines. |\r\n| JournalLines.Tax.Code                       | The tax code of this GLJournalLines. |\r\n| JournalLines.Tax.Rate                       | The tax rate of this GLJournalLines. |\r\n| JournalLines.AnalysisCodes.Element1 | The 1 element lines of this GLJournalLines. |\r\n| JournalLines.AnalysisCodes.Element2 | The 2 element lines of this GLJournalLines. |\r\n| JournalLines.AnalysisCodes.Element3 | The 3 element lines of this GLJournalLines. |\r\n| JournalLines.AnalysisCodes.Element4 | The 4 element lines of this GLJournalLines. |\r\n| JournalLines.AnalysisCodes.Element5 | The 5 element lines of this GLJournalLines. |\r\n| JournalLines.AnalysisCodes.Element6 | The 6 element lines of this GLJournalLines. |\r\n| JournalLines.AnalysisCodes.Element7 | The 7 element lines of this GLJournalLines. |\r\n| JournalLines.AnalysisCodes.Element8 | The 8 element lines of this GLJournalLines. |\r\n| JournalLines.AnalysisCodes.Element9 | The 9 element lines of this GLJournalLines. |\r\n| JournalLines.AnalysisCodes.Element10 | The 10 element lines of this GLJournalLines. |\r\n| JournalLines.AnalysisCodes.Site\t  | The analysis code of customersite of this GLJournalLines. |\r\n| JournalLines.Reference.Reference1   | The 1 reference lines of this GLJournalLines. |\r\n| JournalLines.Reference.Reference2   | The 2 reference lines of this GLJournalLines. |\r\n| JournalLines.Reference.Reference3   | The 3 reference lines of this GLJournalLines. |\r\n| JournalLines.Reference.Reference4   | The 4 reference lines of this GLJournalLines. |\r\n| JournalLines.Reference.Reference5   | The 5 reference lines of this GLJournalLines. |\r\n| JournalLines.Reference.Reference6   | The 6 reference lines of this GLJournalLines. |\r\n| JournalLines.Reference.Reference7   | The 7 reference lines of this GLJournalLines. |\r\n| JournalLines.Reference.Reference8   | The 8 reference lines of this GLJournalLines. |\r\n| JournalLines.Reference.Reference9   | The 9 reference lines of this GLJournalLines. |\r\n| JournalLines.Reference.Reference10  | The 10 reference lines of this GLJournalLines. |\r\n| JournalLines.Reference.Reference11  | The 11 reference lines of this GLJournalLines. |\r\n| JournalLines.Reference.Reference12  | The 12 reference lines of this GLJournalLines. |\r\n| JournalLines.Reference.Reference13  | The 13 reference lines of this GLJournalLines. |\r\n| JournalLines.Reference.Reference14  | The 14 reference lines of this GLJournalLines. |\r\n| JournalLines.Reference.Reference15  | The 15 reference lines of this GLJournalLines. |\r\n| JournalLines.Reference.Reference16  | The 16 reference lines of this GLJournalLines. |\r\n| JournalLines.Reference.Reference17  | The 17 reference lines of this GLJournalLines. |\r\n| JournalLines.Reference.Reference18  | The 18 reference lines of this GLJournalLines. |\r\n| JournalLines.Reference.Reference19  | The 19 reference lines of this GLJournalLines. |\r\n| JournalLines.Reference.Reference20  | The 20 reference lines of this GLJournalLines. |\r\n| JournalLines.Reference.Reference21  | The 21 reference lines of this GLJournalLines. |\r\n| JournalLines.Reference.Reference22  | The 22 reference lines of this GLJournalLines. |\r\n| JournalLines.Reference.Reference23  | The 23 reference lines of this GLJournalLines. |\r\n| JournalLines.Reference.OrderNo\t  | The reference order number of this GLJournalLines. |\r\n| JournalLines.SummaryAccountCode\t  | The summary account code of this GLJournalLines. |","operationId":"GLJournal_GetCollection","consumes":["application/json"],"produces":["application/json"],"parameters":[{"name":"filter","in":"query","required":false,"type":"string"},{"name":"search","in":"query","required":false,"type":"string"},{"name":"order","in":"query","required":false,"type":"string"},{"name":"max","in":"query","required":false,"type":"integer","format":"int32"},{"name":"page","in":"query","required":false,"type":"integer","format":"int32"},{"name":"includeCount","in":"query","required":false,"type":"boolean"},{"name":"includeDeleted","in":"query","required":false,"type":"boolean"},{"name":"links","in":"query","required":false,"type":"string"},{"name":"udf","in":"query","required":false,"type":"string"}],"responses":{"200":{"description":"OK","schema":{"$ref":"#/definitions/ApiResourceResultCollection[ApiIntegratorGLJournalResource]"}}}},"post":{"tags":["GLJournal"],"summary":"Create or update","description":"| Property                                                  | Description                                                            \t\t\t\t\t| \t\tRequired\t|\r\n| --------------------------------------------------------- | ----------------------------------------------------------------------------------------- | ----------------- |\r\n| GUID                                                      | The GUID associated to the GLJournalBatch.                                                |        No         |\r\n| BatchType                                                 | The type of this GLJournalBatch.                                                          |        No         |\r\n| BatchName                                                 | The name of this GLJournalBatch.                                                          |        Yes        |\r\n| BatchStatus                                               | The status of this GLJournalBatch.                                                        |        Yes        |\r\n| BatchApprovalStatus                                       | The approval status of this GLJournalBatch.                                               |        Yes        |\r\n| PostingDate                                               | The posting date of this GLJournalBatch.\t\t\t\t\t\t\t                        |        No         |\r\n| PostedDate                                                | The posted date of this GLJournalBatch.\t\t\t\t\t\t\t\t\t\t\t\t    |        No         |\r\n| AccountingPeriodCode\t\t\t\t\t\t                | The accounting period code of this GLJournalBatch.                                        |        No         |\r\n| AccountingPeriodListItem.Guid\t\t\t\t                | The GUID of the accounting period of this GLJournalBatch.                                 |        Yes        |\r\n| RelatedGLExportGuid\t\t\t\t\t\t                | The GUID of GLExport associated to the GLJournalBacth. Filterable.                        |        No         |\r\n| RelatedUserCreatedByGuid\t\t\t\t\t                | The GUID of the user who created the GLJournalBatch. Filterable                           |        No         |\r\n| RelatedUserUpdatedByGuid\t\t\t\t\t                | The GUID of the user who updated the GLJournalBatch. Filterable                           |        No         |\r\n| CreationDateTime\t\t\t\t\t\t                    | The date of the GLJournalBatch creation.                                                  |        No         |\r\n| UpdatedDateTime\t\t\t\t\t\t                    | The date of the GLJournalBatch last update.                                               |        No         |\r\n| RelatedTransactionGuidFilter\t\t\t\t                | Used to filter the related transaction guid associated to the GLJournalHeader.            |        No         |\r\n| JournalHeaders.JournalHeaderGuid                          | The GUID associated to the GLJournalHeaders.                                              |        Yes        |\r\n| JournalHeaders.HeaderName                                 | The GLJournalHeaders headername.                                                          |        Yes        |\r\n| JournalHeaders.CompanyListItem.Guid                       | The GUID of the company this GLJournalHeaders is associated to.\t\t\t                |        Yes        |\r\n| JournalHeaders.Source                                     | The source of this GLJournalHeaders.                                                      |        No         |\r\n| JournalHeaders.BaseCurrencyIntegrationCode                | The integration code of the base currency of this GLJournalHeaders.                       |        No         |\r\n| JournalHeaders.CurrencyIntegrationCode                    | The integration code of the currency of this GLJournalHeaders.                            |        Yes        |\r\n| JournalHeaders.TransactionDate                            | The transaction date of this GLJournalHeaders.                                            |        No         |\r\n| JournalHeaders.GLDate                                     | The Gl date of this GLJournalHeaders.\t\t\t\t\t\t\t\t\t\t\t            |        No         |\r\n| JournalHeaders.JournalType                                | The type of this GLJournalHeaders.                                                        |        No         |\r\n| JournalHeaders.JournalStatus                              | The status of this GLJournalHeaders.                                                      |        Yes        |\r\n| JournalHeaders.TotalDr                                    | The total debit amount of this GLJournalHeaders.                                          |        Yes        |\r\n| JournalHeaders.TotalCr                                    | The total credit amount of this GLJournalHeaders.                                         |        Yes        |\r\n| JournalHeaders.RelatedTransactionGuid\t\t                | The Source GUID associated to the transaction of the GLJournalHeader.                     |        No         |\r\n| JournalHeaders.CreationDateTime\t\t\t                | The date of the GLJournalHeaders creation.                                                |        No         |\r\n| JournalHeaders.UpdatedDateTime\t\t\t                | The date of the GLJournalHeaders last update.                                             |        No         |\r\n| JournalLines.RelatedJournalHeaderGuid                     | The GUID of the journal header related to this GLJournalLines.                            |        Yes        |\r\n| JournalLines.JournalLineNo                                | The journal line number of this GLJournalLines.                                           |        No         |\r\n| JournalLines.TransactionFromDate                          | The transaction from date of this GLJournalLines.                                         |        No         |\r\n| JournalLines.TransactionToDate                            | The transaction to date of this GLJournalLines.                                           |        No         |\r\n| JournalLines.LineType                                     | The type of this GLJournalLines.                                                          |        No         |\r\n| JournalLines.LineDescription                              | The description of this GLJournalLines.                                                   |        Yes        |\r\n| JournalLines.JnlDr                                        | The debit amount of this GLJournalLines.                                                  |        Yes        |\r\n| JournalLines.JnlCr                                        | The credit amount of this GLJournalLines.                                                 |        Yes        |\r\n| JournalLines.BaseDr                                       | The base debit amount of this GLJournalLines.                                             |        Yes        |\r\n| JournalLines.BaseCr                                       | The base credit amount of this GLJournalLines.                                            |        Yes        |\r\n| JournalLines.Category\t\t\t\t\t\t                | The category of this GLJournalLines.                                                      |        No         |\r\n| JournalLines.CreationDateTime\t\t\t                    | The date of the GLJournalLines creation.                                                  |        No         |\r\n| JournalLines.UpdatedDateTime\t\t\t                    | The date of the GLJournalLines last update.                                               |        No         |\r\n| JournalLines.ExchangeRate.RelatedExchangeRateGuid         | The Related Exchange Rate Guid of this GLJournalLines.                                    |        No         |\r\n| JournalLines.ExchangeRate.ExchangeDate                    | The exchange rate date of this GLJournalLines.                                            |        No         |\r\n| JournalLines.ExchangeRate.Rate\t\t\t\t\t\t\t| The exchange rate of this GLJournalLines.                                                 |        No         |\r\n| JournalLines.ExchangeRate.BaseCurrencyListItem   \t\t\t| The base exchange rate currency id and description assouciated this GLJournalLines.       |        No         |\r\n| JournalLines.ExchangeRate.CurrencyListItem                | The exchange rate currency id and description assouciated this GLJournalLines.            |        No         |\r\n| JournalLines.Tax.Code                                     | The tax code of this GLJournalLines.                                                      |        No         |\r\n| JournalLines.Tax.Rate                                     | The tax rate of this GLJournalLines.                                                      |        No         |\r\n| JournalLines.AnalysisCodes.Element1   \t\t\t\t\t| The 1 element lines of this GLJournalLines.                                               |        No         |\r\n| JournalLines.AnalysisCodes.Element2   \t\t\t\t\t| The 2 element lines of this GLJournalLines.                                               |        No         |\r\n| JournalLines.AnalysisCodes.Element3   \t\t\t\t\t| The 3 element lines of this GLJournalLines.                                               |        No         |\r\n| JournalLines.AnalysisCodes.Element4   \t\t\t\t\t| The 4 element lines of this GLJournalLines.                                               |        No         |\r\n| JournalLines.AnalysisCodes.Element5   \t\t\t\t\t| The 5 element lines of this GLJournalLines.                                               |        No         |\r\n| JournalLines.AnalysisCodes.Element6   \t\t\t\t\t| The 6 element lines of this GLJournalLines.                                               |        No         |\r\n| JournalLines.AnalysisCodes.Element7   \t\t\t\t\t| The 7 element lines of this GLJournalLines.                                               |        No         |\r\n| JournalLines.AnalysisCodes.Element8   \t\t\t\t\t| The 8 element lines of this GLJournalLines.                                               |        No         |\r\n| JournalLines.AnalysisCodes.Element9   \t\t\t\t\t| The 9 element lines of this GLJournalLines.                                               |        No         |\r\n| JournalLines.AnalysisCodes.Element10   \t\t\t\t\t| The 10 element lines of this GLJournalLines.                                              |        No         |\r\n| JournalLines.AnalysisCodes.Site\t    \t\t\t\t\t| The analysis code of customersite of this GLJournalLines.                                 |        No         |\r\n| JournalLines.Reference.Reference1     \t\t\t\t\t| The 1 reference lines of this GLJournalLines.                                             |        No         |\r\n| JournalLines.Reference.Reference2     \t\t\t\t\t| The 2 reference lines of this GLJournalLines.                                             |        No         |\r\n| JournalLines.Reference.Reference3     \t\t\t\t\t| The 3 reference lines of this GLJournalLines.                                             |        No         |\r\n| JournalLines.Reference.Reference4     \t\t\t\t\t| The 4 reference lines of this GLJournalLines.                                             |        No         |\r\n| JournalLines.Reference.Reference5     \t\t\t\t\t| The 5 reference lines of this GLJournalLines.                                             |        No         |\r\n| JournalLines.Reference.Reference6     \t\t\t\t\t| The 6 reference lines of this GLJournalLines.                                             |        No         |\r\n| JournalLines.Reference.Reference7     \t\t\t\t\t| The 7 reference lines of this GLJournalLines.                                             |        No         |\r\n| JournalLines.Reference.Reference8     \t\t\t\t\t| The 8 reference lines of this GLJournalLines.                                             |        No         |\r\n| JournalLines.Reference.Reference9     \t\t\t\t\t| The 9 reference lines of this GLJournalLines.                                             |        No         |\r\n| JournalLines.Reference.Reference10    \t\t\t\t\t| The 10 reference lines of this GLJournalLines.                                            |        No         |\r\n| JournalLines.Reference.Reference11    \t\t\t\t\t| The 11 reference lines of this GLJournalLines.                                            |        No         |\r\n| JournalLines.Reference.Reference12    \t\t\t\t\t| The 12 reference lines of this GLJournalLines.                                            |        No         |\r\n| JournalLines.Reference.Reference13    \t\t\t\t\t| The 13 reference lines of this GLJournalLines.                                            |        No         |\r\n| JournalLines.Reference.Reference14    \t\t\t\t\t| The 14 reference lines of this GLJournalLines.                                            |        No         |\r\n| JournalLines.Reference.Reference15    \t\t\t\t\t| The 15 reference lines of this GLJournalLines.                                            |        No         |\r\n| JournalLines.Reference.Reference16    \t\t\t\t\t| The 16 reference lines of this GLJournalLines.                                            |        No         |\r\n| JournalLines.Reference.Reference17    \t\t\t\t\t| The 17 reference lines of this GLJournalLines.                                            |        No         |\r\n| JournalLines.Reference.Reference18    \t\t\t\t\t| The 18 reference lines of this GLJournalLines.                                            |        No         |\r\n| JournalLines.Reference.Reference19    \t\t\t\t\t| The 19 reference lines of this GLJournalLines.                                            |        No         |\r\n| JournalLines.Reference.Reference20    \t\t\t\t\t| The 20 reference lines of this GLJournalLines.                                            |        No         |\r\n| JournalLines.Reference.Reference21    \t\t\t\t\t| The 21 reference lines of this GLJournalLines.                                            |        No         |\r\n| JournalLines.Reference.Reference22    \t\t\t\t\t| The 22 reference lines of this GLJournalLines.                                            |        No         |\r\n| JournalLines.Reference.Reference23    \t\t\t\t\t| The 23 reference lines of this GLJournalLines.                                            |        No         |\r\n| JournalLines.Reference.OrderNo\t    \t\t\t\t\t| The reference order number of this GLJournalLines.                                        |        No         |\r\n| JournalLines.SummaryAccountCode\t    \t\t\t\t\t| The summary account code of this GLJournalLines.                                          |        No         |\r\n\r\n## Extra validations\r\n\r\n| Condition | Error message |\r\n| --------- | ------------- |\r\n| Guid must be null | The method or operation is not implemented. |\r\n| PostedDate must be null | PostedDate: is not supported |\r\n| PostingDate must be null | PostingDate: is not supported |\r\n| CreationDateTime must be null | CreationDateTime: is not supported |\r\n| UpdateDateTime must be null | UpdateDateTime: is not supported |\r\n| When RelatedGLexportguid is not null | The method or operation is not implemented. |\r\n| BatchStatus and BatchApprovalStatus must be 'NEW' | The status of the batch is not NEW. Could not create the batch. Set the BatchState and BatchApprovalState as 'NEW' |\r\n| JournalHeaders and JournalLines must have values | Only batches with headers and lines can be created. |\r\n| JournalHeader without JournalLine | JournalHeader with JournalHeaderGuid of <Guid> without a JournalLine is not allowed. |\r\n| JournalLine without JournalHeader | JournalLine with RelatedJournalHeaderGuid of <Guid> without a JournalHeader is not allowed. |\r\n| JournalLines.ExchangeRate.BaseCurrencyListItem must be null | BaseCurrencyListItem: is not supported |\r\n| JournalLines.ExchangeRate.CurrencyListItem must be null | CurrencyListItem: is not supported |","operationId":"GLJournal_Create","consumes":["application/json"],"produces":["application/json"],"parameters":[{"in":"body","required":true,"schema":{"$ref":"#/definitions/ApiResourceId"}}],"responses":{"200":{"description":"OK","schema":{"$ref":"#/definitions/ApiResourceId"}}}}},"/lists/gpsMatchingSources/{guid}":{"get":{"tags":["GpsMatchingSource"],"summary":"Find with GUID","description":"| Property                  | Description                                                              |\r\n| ------------------------- | ------------------------------------------------------------------------ |\r\n| GUID                      | The GUID associated to the gpsmatchingsource                             |\r\n| Description               | The description of the gpsmatchingsource                                 |\r\n| IsDeleted                 | Whether the gpsmatchingsource is deleted\t      \t \t\t\t\t\t   |","operationId":"GpsMatchingSource_Get","consumes":["application/json"],"produces":["application/json"],"parameters":[{"name":"guid","in":"path","required":true,"type":"string","format":"uuid"},{"name":"links","in":"query","required":false,"type":"string"},{"name":"include","in":"query","required":false,"type":"string"},{"name":"expand","in":"query","required":false,"type":"string"},{"name":"udf","in":"query","required":false,"type":"string"}],"responses":{"200":{"description":"OK","schema":{"$ref":"#/definitions/ApiResourceResultEntity[ApiIntegratorGpsMatchingSourceResource]"}}}}},"/lists/gpsMatchingSources":{"get":{"tags":["GpsMatchingSource"],"summary":"Find with Filters","description":"| Property                  | Description                                                              |\r\n| ------------------------- | ------------------------------------------------------------------------ |\r\n| GUID                      | The GUID associated to the gpsmatchingsource                             |\r\n| Description               | The description of the gpsmatchingsource                                 |\r\n| IsDeleted                 | Whether the gpsmatchingsource is deleted\t      \t \t\t\t\t\t   |","operationId":"GpsMatchingSource_GetCollection","consumes":["application/json"],"produces":["application/json"],"parameters":[{"name":"filter","in":"query","required":false,"type":"string"},{"name":"search","in":"query","required":false,"type":"string"},{"name":"order","in":"query","required":false,"type":"string"},{"name":"max","in":"query","required":false,"type":"integer","format":"int32"},{"name":"page","in":"query","required":false,"type":"integer","format":"int32"},{"name":"includeCount","in":"query","required":false,"type":"boolean"},{"name":"includeDeleted","in":"query","required":false,"type":"boolean"},{"name":"links","in":"query","required":false,"type":"string"},{"name":"udf","in":"query","required":false,"type":"string"}],"responses":{"200":{"description":"OK","schema":{"$ref":"#/definitions/ApiResourceResultCollection[ApiIntegratorGpsMatchingSourceResource]"}}}}},"/lists/healthAndSafetyDocumentTypes/{guid}":{"get":{"tags":["HealthAndSafetyDocumentType"],"summary":"Find with GUID","description":"| Property                  | Description\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t|\r\n| ------------------------- | ----------------------------------------------------------------------------\t|\r\n| GUID                      | The GUID associated to the health and safety document type.\t\t            |\r\n| Description               | The description of the health and safety document type.\t\t\t\t\t    |","operationId":"HealthAndSafetyDocumentType_Get","consumes":["application/json"],"produces":["application/json"],"parameters":[{"name":"guid","in":"path","required":true,"type":"string","format":"uuid"},{"name":"links","in":"query","required":false,"type":"string"},{"name":"include","in":"query","required":false,"type":"string"},{"name":"expand","in":"query","required":false,"type":"string"},{"name":"udf","in":"query","required":false,"type":"string"}],"responses":{"200":{"description":"OK","schema":{"$ref":"#/definitions/ApiResourceResultEntity[ApiIntegratorHealthAndSafetyDocumentTypeResource]"}}}}},"/lists/healthAndSafetyDocumentTypes":{"get":{"tags":["HealthAndSafetyDocumentType"],"summary":"Find with Filters","description":"| Property                  | Description\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t|\r\n| ------------------------- | ----------------------------------------------------------------------------\t|\r\n| GUID                      | The GUID associated to the health and safety document type.\t\t            |\r\n| Description               | The description of the health and safety document type.\t\t\t\t\t    |","operationId":"HealthAndSafetyDocumentType_GetCollection","consumes":["application/json"],"produces":["application/json"],"parameters":[{"name":"filter","in":"query","required":false,"type":"string"},{"name":"search","in":"query","required":false,"type":"string"},{"name":"order","in":"query","required":false,"type":"string"},{"name":"max","in":"query","required":false,"type":"integer","format":"int32"},{"name":"page","in":"query","required":false,"type":"integer","format":"int32"},{"name":"includeCount","in":"query","required":false,"type":"boolean"},{"name":"includeDeleted","in":"query","required":false,"type":"boolean"},{"name":"links","in":"query","required":false,"type":"string"},{"name":"udf","in":"query","required":false,"type":"string"}],"responses":{"200":{"description":"OK","schema":{"$ref":"#/definitions/ApiResourceResultCollection[ApiIntegratorHealthAndSafetyDocumentTypeResource]"}}}}},"/lists/inspectionTypes/{guid}":{"get":{"tags":["InspectionType"],"summary":"Find with GUID","description":"| Property                  | Description\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t|\r\n| ------------------------- | --------------------------------------------------------------------------------\t|\r\n| GUID                      | The GUID associated to the inspection type\t\t\t\t\t\t\t\t\t\t|\r\n| Description               | The description of the inspection type\t\t\t\t\t\t\t\t\t\t\t|\r\n| IsDeleted                 | Whether the inspection type is deleted\t\t \t\t\t\t\t\t\t\t\t|","operationId":"InspectionType_Get","consumes":["application/json"],"produces":["application/json"],"parameters":[{"name":"guid","in":"path","required":true,"type":"string","format":"uuid"},{"name":"links","in":"query","required":false,"type":"string"},{"name":"include","in":"query","required":false,"type":"string"},{"name":"expand","in":"query","required":false,"type":"string"},{"name":"udf","in":"query","required":false,"type":"string"}],"responses":{"200":{"description":"OK","schema":{"$ref":"#/definitions/ApiResourceResultEntity[ApiIntegratorInspectionTypeResource]"}}}}},"/lists/inspectionTypes":{"get":{"tags":["InspectionType"],"summary":"Find with Filters","description":"| Property                  | Description\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t|\r\n| ------------------------- | --------------------------------------------------------------------------------\t|\r\n| GUID                      | The GUID associated to the inspection type\t\t\t\t\t\t\t\t\t\t|\r\n| Description               | The description of the inspection type\t\t\t\t\t\t\t\t\t\t\t|\r\n| IsDeleted                 | Whether the inspection type is deleted\t\t \t\t\t\t\t\t\t\t\t|","operationId":"InspectionType_GetCollection","consumes":["application/json"],"produces":["application/json"],"parameters":[{"name":"filter","in":"query","required":false,"type":"string"},{"name":"search","in":"query","required":false,"type":"string"},{"name":"order","in":"query","required":false,"type":"string"},{"name":"max","in":"query","required":false,"type":"integer","format":"int32"},{"name":"page","in":"query","required":false,"type":"integer","format":"int32"},{"name":"includeCount","in":"query","required":false,"type":"boolean"},{"name":"includeDeleted","in":"query","required":false,"type":"boolean"},{"name":"links","in":"query","required":false,"type":"string"},{"name":"udf","in":"query","required":false,"type":"string"}],"responses":{"200":{"description":"OK","schema":{"$ref":"#/definitions/ApiResourceResultCollection[ApiIntegratorInspectionTypeResource]"}}}}},"/accounting/invoices/changes":{"get":{"tags":["Invoice"],"summary":"Retrieve changes","description":"| Property       | Description                                                  |\r\n| -------------- | ------------------------------------------------------------ |\r\n| GUID                                  | The GUID associated to the invoice.                          |\r\n| RelatedCustomerGuid                   | The GUID associated to the customer of to the invoice. | \r\n| InvoiceNumber                         | The invoice number associated to the invoice. Filterable. |\r\n| CustomerInvoiceNumber                 | The customer invoice number associated to the invoice. | \r\n| AccountingPeriodListItem              | The GUID and name of the accounting period associated to the invoice. | \r\n| InvoiceCycleListItem                  | The GUID and name of the invoice cycle associated to the invoice. | \r\n| RebateInvoiceCycleListItem            | The GUID and name of the rebate invoice cycle associated to the invoice. | \r\n| VATExemptNumber                       | The VAT exempt number associated to the invoice. | \r\n| OutletListItem                        | The GUID and name of the company outlet associated to the invoice. | \r\n| DepartmentListItem                    | The GUID and name of the department associated to the invoice. | \r\n| IsCash                                | The isCash boolean associated to the invoice. | \r\n| IsAccepted                            | The isAccepted boolean associated to the invoice. | \r\n| IsDebit                               | The isDebit boolean associated to the invoice. | \r\n| IsRebilled                            | The isRebilled boolean associated to the invoice. | \r\n| IsTaxAdjustment                       | The isTaxAdjustment boolean associated to the invoice. | \r\n| IsRequestForPayment                   | The isRequestForPayment boolean associated to the invoice. | \r\n| InputDate                             | The inputDate associated to the invoice in ISO format (YYYY-MM-DD). | \r\n| InvoiceDate                           | The invoiceDate associated to the invoice in ISO format (YYYY-MM-DD). | \r\n| DueDate                               | The dueDate associated to the invoice in ISO format (YYYY-MM-DD). | \r\n| WriteOffReasonListItem                | The GUID and name of the writeoffReason associated to the invoice. | \r\n| ExchangeRate                          | The exchange rate associated to the invoice. | \r\n| Rate                                  | The rate associated to the invoice. | \r\n| ExchangeDate                          | The exchange date associated to the invoice in ISO format (YYYY-MM-DD). | \r\n| BaseCurrencyListItem                  | The GUID and name of the base currency associated to the invoice. | \r\n| ExchangeCurrencyListItem              | The GUID and name of the exchange currency associated to the invoice. | \r\n| RelatedOrderGuid\t\t\t\t\t\t| Used to filter the related site guid associated to the details. |\r\n| RelatedWeighingGuid\t\t\t\t\t| Used to filter the related weighing guid associated to the details. | \r\n| RelatedWeighingInGuid\t\t\t\t\t| Used to filter the related weighing in guid associated to the details. | \r\n| RelatedWeighingOutGuid\t\t\t\t| Used to filter the related weighing out guid associated to the details. | \r\n| RelatedJobGuid\t\t\t\t\t\t| Used to filter the related job guid associated to the details. | \r\n| RelatedSiteGuid\t\t\t\t\t\t| Used to filter the related site guid associated to the details. |\r\n| RelatedRouteVisitGuid\t\t\t\t\t| Used to filter the related route visit guid associated to the details. |\r\n| RelatedPONumberGuidFilter\t\t\t\t| Used to filter the related PO Number guid associated to the details. |\r\n| RelatedRouteVisitJobGuid\t\t\t\t| Used to filter the related route visit job guid associated to the details. |\r\n| ReferenceFilter\t\t\t\t\t\t| Used to filter the reference associated to the details. |\r\n| RelatedBatchGuid\t\t\t\t\t\t| Used to filter the related batch associated to the invoice. |\r\n| RelatedUserGeneratedGuid\t\t\t\t| Used to filter the related user generated guid associated to the batch. |\r\n| RelatedUserAcceptedByGuid\t\t\t\t| Used to filter the related user acceptedby guid associated to the batch. |\r\n| RelatedInvoiceAllocatedToGuidFilter\t| Used to filter the related invoice guid associated to the invoice bill dealloaction. |\r\n| RelatedUserDeallocatedByGuidFilter\t| Used to filter the related user guid associated to the invoice bill deallocation.\t|\r\n| Amount                                | The amount associated to the invoice. | \r\n| BaseAmount                            | The base amount associated to the invoice. | \r\n| RelatedLocationGuid\t\t\t\t\t| Used to filter the related location guid associated to the invoice. |\r\n| PrintAddress                          | The print address object associated to the invoice. | \r\n| PrintAddress.HouseNumber              | The house number associated to the print address. | \r\n| PrintAddress.Address1                 | The address1 associated to the print address. | \r\n| PrintAddress.Address2                 | The address2 associated to the print address. | \r\n| PrintAddress.Address3                 | The address3 associated to the print address. | \r\n| PrintAddress.Address4                 | The address4 associated to the print address. | \r\n| PrintAddress.Address5                 | The address5 associated to the print address. | \r\n| PrintAddress.Postcode                 | The postcode associated to the print address. | \r\n| RemitAddress                          | The remit address object associated to the invoice. | \r\n| RemitAddress.HouseNumber              | The house number associated to the remit address. | \r\n| RemitAddress.Address1                 | The address1 associated to the remit address. | \r\n| RemitAddress.Address2                 | The address2 associated to the remit address. | \r\n| RemitAddress.Address3                 | The address3 associated to the remit address. | \r\n| RemitAddress.Address4                 | The address4 associated to the remit address. | \r\n| RemitAddress.Address5                 | The address5 associated to the remit address. | \r\n| RemitAddress.Postcode                 | The postcode associated to the remit address. |\r\n| Notes                                 | The notes associated to the invoice. | \r\n| Details[0]                            | List of details associated to the invoice. | \r\n| Details[0].ItemDate                   | The item date associated to the details in ISO format (YYYY-MM-DD). | \r\n| Details[0].OrderNo                    | The order number associated to the details. | \r\n| Details[0].CustomerOrderNo            | The customer order number associated to the details. | \r\n| Details[0].CustomerLoadReference      | The customer load reference associated to the details. | \r\n| Details[0].PoNumber                   | The po number associated to the details. | \r\n| Details[0].ReleaseNumber              | The release number associated to the details. | \r\n| Details[0].DepartmentListItem         | The GUID and name of the department associated to the details. | \r\n| Details[0].ServiceDescriptionOverride | The service description override associated to the details. | \r\n| Details[0].ActionDescriptionOverride  | The action description override associated to the details. | \r\n| Details[0].UnitOfMeasurementListItem  | The GUID and name of the unit of measurement associated to the details. | \r\n| Details[0].SiteAddress                | The site address object associated to the details. | \r\n| Details[0].SiteAddress.HouseNumber    | The house number associated to the site address. | \r\n| Details[0].SiteAddress.Address1       | The address1 associated to the site address. | \r\n| Details[0].SiteAddress.Address2       | The address2 associated to the site address. | \r\n| Details[0].SiteAddress.Address3       | The address3 associated to the site address. | \r\n| Details[0].SiteAddress.Address4       | The address4 associated to the site address. | \r\n| Details[0].SiteAddress.Address5       | The address5 associated to the site address. | \r\n| Details[0].SiteAddress.Postcode       | The postcode associated to the site address. | \r\n| Details[0].SiteAddress.ContactMethods | The contact methods associated to the site address. | \r\n| Details[0].SiteAddress.ContactMethods.TelNo | The telephone number associated to the site address contact methods. | \r\n| Details[0].SiteAddress.ContactMethods.FaxNo | The fax number associated to the site address contact methods. | \r\n| Details[0].Reason                     | The reason associated to the details. | \r\n| Details[0].ServiceListItem            | The GUID and name of the service associated to the details. | \r\n| Details[0].ActionListItem             | The GUID and name of the action associated to the details. | \r\n| Details[0].ContainerTypeListItem      | The GUID and name of the container type associated to the details. | \r\n| Details[0].MaterialListItem           | The GUID and name of the material associated to the details. | \r\n| Details[0].ServiceFrequencyListItem   | The GUID and name of the service frequency associated to the details. | \r\n| Details[0].DefaultActionListItem      | The GUID and name of the default action associated to the details. | \r\n| Details[0].Rent                       | The rent object associated to the details. | \r\n| Details[0].Rent.RentTermListItem      | The GUID and name of the associated to the details. | \r\n| Details[0].Rent.From                  | The from date of the associated to the details.Rent in ISO format (YYYY-MM-DD). | \r\n| Details[0].Rent.To                    | The to date of the associated to the details.Rent in ISO format (YYYY-MM-DD). | \r\n| Details[0].Amount                     | The amount object associated to the details. | \r\n| Details[0].Amount.Rate                | The rate associated to the amount. | \r\n| Details[0].Amount.IsRebilled          | Is this amount rebilled? | \r\n| Details[0].Amount.Quantity            | The quantity associated to the amount. | \r\n| Details[0].Amount.Volume              | The volume associated to the amount. | \r\n| Details[0].Amount.Weight              | The weight associated to the amount. | \r\n| Details[0].Amount.Price               | The price associated to the amount. | \r\n| Details[0].Amount.PriceIncVAT         | The price including VAT associated to the amount. | \r\n| Details[0].Amount.ChargeableHours     | The chargable hours associated to the amount. | \r\n| Details[0].Amount.MinimumCharge       | The minimum charge associated to the amount. | \r\n| Details[0].Amount.MaximumCharge       | The maximum charge associated to the amount. | \r\n| Details[0].Amount.Allowance           | The allowance associated to the amount. | \r\n| Details[0].Amount.RebillQuantity      | The rebill quantity associated to the amount. | \r\n| Details[0].Amount.RebillVolume        | The rebill volume associated to the amount. | \r\n| Details[0].Amount.RebillWeight        | The rebill weight associated to the amount. | \r\n| Details[0].Amount.RebilledPrice       | The rebilled price associated to the amount. | \r\n| Details[0].Amount.RebilledPriceIncVAT | The rebilled price including VAT associated to the amount. | \r\n| Details[0].Amount.RebilledChargeableHours | The rebilled chargeable hours associated to the amount. | \r\n| Details[0].Amount.RebilledMinimumCharge | The rebilled minimum charge associated to the amount. | \r\n| Details[0].Amount.RebilledMaximumCharge | The rebilled maximum charge associated to the amount. | \r\n| Details[0].Amount.RebilledAllowance   | The rebilled allowance associated to the amount. | \r\n| Details[0].NotDueAmount               | The not due amount associated to the details. | \r\n| Details[0].RelatedWeighingGuid        | The related weighing guid associated to the details. | \r\n| Details[0].RelatedWeighingInGuid      | The related weighing in guid associated to the details. | \r\n| Details[0].RelatedWeighingOutGuid     | The related weighing out guid associated to the details. | \r\n| Details[0].RelatedJobGuid             | The related job guid associated to the details. | \r\n| Details[0].RelatedSiteGuid            | The related site guid associated to the details. | \r\n| Details[0].RelatedRouteVisitGuid      | The related route visit guid associated to the details. |\r\n| Details[0].RelatedPONumberGuid\t\t| The related PO Number guid associated to the details. |\r\n| Details[0].RelatedOrderGuid           | The related order guid associated to the details. | \r\n| Details[0].RelatedRouteVisitJobGuid   | The related route visit job guid associated to the details. | \r\n| Details[0].VATListItem\t\t\t\t| The GUID and name of the VAT associated to the details. | \r\n| Details[0].Notes                      | The notes associated to the details. |\r\n| Details[0].Reference                  | The reference associated to the details. |\r\n| RelatedBlobHashes\t\t\t\t\t\t| The array of related blob hashes and descriptions associated to the invoice.\t\t|\r\n| RelatedBlobHashes[0].Hash\t\t\t\t| The hash of the blob to be used against the /blob endpoint. Files are provided as an octet stream which will need to be converted. |\r\n| Batch.GeneratedTimestamp\t\t\t\t| The generated timestamp associated to the batch. |\r\n| Batch.AcceptedTimestamp\t\t\t\t| The accepted timestamp associated to the batch. |\r\n| Batch.InvoiceDate\t\t\t\t\t\t| The invoice date associated to the batch. |\r\n| Batch.InvoiceUntil\t\t\t\t\t| The invoice until associated to the batch. |\r\n| Batch.IsAcceptanceInProgress\t\t\t| The isAcceptanceInProgress boolean associated to the batch. |\r\n| Batch.IsGenerationInProgress\t\t\t| The isGenerationInProgress boolean associated to the batch. |\r\n| Batch.IsExported\t\t\t\t\t\t| The isExported boolean associated to the batch. |\r\n| Batch.RelatedUserGeneratedGuid\t\t| The related user generated guid associated to the batch. |\r\n| Batch.RelatedUserAcceptedByGuid\t\t| The related user acceptedby guid associated to the batch. |\r\n| Batch.AnalysisCode\t\t\t\t\t| The analysis code associated to the batch. |\r\n| Batch.Notes\t\t\t\t\t\t\t| The notes associated to the batch. |\r\n| Batch.InvoiceBatchStatusListItem\t\t| The Guid and name of invoice batch status associated to the batch. |\r\n| Batch.IsDeleted\t\t\t\t\t\t| The isDeleted boolean associated to the batch. |\r\n| Batch.BatchGuid\t\t\t\t\t\t| The guid associated to the batch. |\r\n| Deallocations[0]\t\t\t\t\t\t\t\t\t\t\t| List of invoice bill deallocations. | \r\n| Deallocations[0].Amount\t\t\t\t\t\t\t\t\t| The amount of the deallocated invoice bill. | \r\n| Deallocations[0].RelatedInvoiceAllocatedToGuid\t\t\t| The GUID associated to the invoice allocated to. |\r\n| Deallocations[0].DateDeallocated\t\t\t\t\t\t\t| The date of invoice bill deallocation. | \r\n| Deallocations[0].DateInput\t\t\t\t\t\t\t\t| The date input of the invoice bill deallocation. | \r\n| Deallocations[0].RelatedUserDeallocatedByGuid\t\t\t\t| The GUID associated to the user who deallocated the invoice bill. | \r\n| Deallocations[0].IsExported\t\t\t\t\t\t\t\t| Whether deallocation is exported. | \r\n| Deallocations[0].IsInvoiceBillDeallocationExported\t\t| Whether the invoice bill deallocation is exported. | \r\n| Deallocations[0].IsInvoiceBillExported\t\t\t\t\t| Whether the invoice bill is exported. |\r\n| Deallocations[0].IsDeleted\t\t\t\t\t\t\t\t| Whether the invoice bill is deleted. |\r\n| Deallocations[0].AllocationAccountingPeriodListItem\t\t| The GUID and description of allocation accounting period.\t|\r\n| Deallocations[0].DateExported\t\t\t\t\t\t\t\t| The deallocation exported date. | \r\n| Deallocations[0].DateInvoiceBillDeallocationExported\t\t| The invoice bill deallocation exported date. | \r\n| Deallocations[0].DateInvoiceBillExported\t\t\t\t\t| The invoice bill exported date. | \r\n| Deallocations[0].DeallocationAccountingPeriodListItem\t\t| The GUID and description of deallocation accounting period. |\r\n| Deallocations[0].Guid\t\t\t\t\t\t\t\t\t\t| The GUID associated to the invoice deallocation. |\r\n| Allocations[0]\t\t\t\t\t\t\t\t\t\t\t| List of invoice bill allocations. | \r\n| Allocations[0].Amount\t\t\t\t\t\t\t\t\t\t| The amount of the allocated invoice bill. | \r\n| Allocations[0].RelatedInvoiceAllocatedToGuid\t\t\t\t| The GUID associated to the invoice allocated to. |\r\n| Allocations[0].DateInput\t\t\t\t\t\t\t\t\t| The date input of the invoice bill allocation. | \r\n| Allocations[0].IsExported\t\t\t\t\t\t\t\t\t| Whether allocation is exported. | \r\n| Allocations[0].IsDeleted\t\t\t\t\t\t\t\t\t| Whether the invoice bill is deleted. |\r\n| Allocations[0].AccountingPeriodListItem\t\t\t\t\t| The GUID and description of accounting period. |\r\n| Allocations[0].DateExported\t\t\t\t\t\t\t\t| The invoice bill allocation exported date. |\r\n| Allocations[0].Guid\t\t\t\t\t\t\t\t\t\t| The GUID associated to the invoice allocation. |","operationId":"Invoice_GetChanges","consumes":["application/json"],"produces":["application/json"],"parameters":[{"name":"since","in":"query","required":false,"type":"string"},{"name":"cursor","in":"query","required":false,"type":"string"},{"name":"links","in":"query","required":false,"type":"string"}],"responses":{"200":{"description":"OK","schema":{"$ref":"#/definitions/ApiResourceChanges[ApiIntegratorInvoiceResource]"}}}}},"/accounting/invoices/{guid}":{"get":{"tags":["Invoice"],"summary":"Find with GUID","description":"| Property       | Description                                                  |\r\n| -------------- | ------------------------------------------------------------ |\r\n| GUID                                  | The GUID associated to the invoice.                          |\r\n| RelatedCustomerGuid                   | The GUID associated to the customer of to the invoice. | \r\n| InvoiceNumber                         | The invoice number associated to the invoice. Filterable. |\r\n| CustomerInvoiceNumber                 | The customer invoice number associated to the invoice. | \r\n| AccountingPeriodListItem              | The GUID and name of the accounting period associated to the invoice. | \r\n| InvoiceCycleListItem                  | The GUID and name of the invoice cycle associated to the invoice. | \r\n| RebateInvoiceCycleListItem            | The GUID and name of the rebate invoice cycle associated to the invoice. | \r\n| VATExemptNumber                       | The VAT exempt number associated to the invoice. | \r\n| OutletListItem                        | The GUID and name of the company outlet associated to the invoice. | \r\n| DepartmentListItem                    | The GUID and name of the department associated to the invoice. | \r\n| IsCash                                | The isCash boolean associated to the invoice. | \r\n| IsAccepted                            | The isAccepted boolean associated to the invoice. | \r\n| IsDebit                               | The isDebit boolean associated to the invoice. | \r\n| IsRebilled                            | The isRebilled boolean associated to the invoice. | \r\n| IsTaxAdjustment                       | The isTaxAdjustment boolean associated to the invoice. | \r\n| IsRequestForPayment                   | The isRequestForPayment boolean associated to the invoice. | \r\n| InputDate                             | The inputDate associated to the invoice in ISO format (YYYY-MM-DD). | \r\n| InvoiceDate                           | The invoiceDate associated to the invoice in ISO format (YYYY-MM-DD). | \r\n| DueDate                               | The dueDate associated to the invoice in ISO format (YYYY-MM-DD). | \r\n| WriteOffReasonListItem                | The GUID and name of the writeoffReason associated to the invoice. | \r\n| ExchangeRate                          | The exchange rate associated to the invoice. | \r\n| Rate                                  | The rate associated to the invoice. | \r\n| ExchangeDate                          | The exchange date associated to the invoice in ISO format (YYYY-MM-DD). | \r\n| BaseCurrencyListItem                  | The GUID and name of the base currency associated to the invoice. | \r\n| ExchangeCurrencyListItem              | The GUID and name of the exchange currency associated to the invoice. | \r\n| RelatedOrderGuid\t\t\t\t\t\t| Used to filter the related site guid associated to the details. |\r\n| RelatedWeighingGuid\t\t\t\t\t| Used to filter the related weighing guid associated to the details. | \r\n| RelatedWeighingInGuid\t\t\t\t\t| Used to filter the related weighing in guid associated to the details. | \r\n| RelatedWeighingOutGuid\t\t\t\t| Used to filter the related weighing out guid associated to the details. | \r\n| RelatedJobGuid\t\t\t\t\t\t| Used to filter the related job guid associated to the details. | \r\n| RelatedSiteGuid\t\t\t\t\t\t| Used to filter the related site guid associated to the details. |\r\n| RelatedRouteVisitGuid\t\t\t\t\t| Used to filter the related route visit guid associated to the details. |\r\n| RelatedPONumberGuidFilter\t\t\t\t| Used to filter the related PO Number guid associated to the details. |\r\n| RelatedRouteVisitJobGuid\t\t\t\t| Used to filter the related route visit job guid associated to the details. |\r\n| ReferenceFilter\t\t\t\t\t\t| Used to filter the reference associated to the details. |\r\n| RelatedBatchGuid\t\t\t\t\t\t| Used to filter the related batch associated to the invoice. |\r\n| RelatedUserGeneratedGuid\t\t\t\t| Used to filter the related user generated guid associated to the batch. |\r\n| RelatedUserAcceptedByGuid\t\t\t\t| Used to filter the related user acceptedby guid associated to the batch. |\r\n| RelatedInvoiceAllocatedToGuidFilter\t| Used to filter the related invoice guid associated to the invoice bill dealloaction. |\r\n| RelatedUserDeallocatedByGuidFilter\t| Used to filter the related user guid associated to the invoice bill deallocation.\t|\r\n| Amount                                | The amount associated to the invoice. | \r\n| BaseAmount                            | The base amount associated to the invoice. | \r\n| RelatedLocationGuid\t\t\t\t\t| Used to filter the related location guid associated to the invoice. |\r\n| PrintAddress                          | The print address object associated to the invoice. | \r\n| PrintAddress.HouseNumber              | The house number associated to the print address. | \r\n| PrintAddress.Address1                 | The address1 associated to the print address. | \r\n| PrintAddress.Address2                 | The address2 associated to the print address. | \r\n| PrintAddress.Address3                 | The address3 associated to the print address. | \r\n| PrintAddress.Address4                 | The address4 associated to the print address. | \r\n| PrintAddress.Address5                 | The address5 associated to the print address. | \r\n| PrintAddress.Postcode                 | The postcode associated to the print address. | \r\n| RemitAddress                          | The remit address object associated to the invoice. | \r\n| RemitAddress.HouseNumber              | The house number associated to the remit address. | \r\n| RemitAddress.Address1                 | The address1 associated to the remit address. | \r\n| RemitAddress.Address2                 | The address2 associated to the remit address. | \r\n| RemitAddress.Address3                 | The address3 associated to the remit address. | \r\n| RemitAddress.Address4                 | The address4 associated to the remit address. | \r\n| RemitAddress.Address5                 | The address5 associated to the remit address. | \r\n| RemitAddress.Postcode                 | The postcode associated to the remit address. |\r\n| Notes                                 | The notes associated to the invoice. | \r\n| Details[0]                            | List of details associated to the invoice. | \r\n| Details[0].ItemDate                   | The item date associated to the details in ISO format (YYYY-MM-DD). | \r\n| Details[0].OrderNo                    | The order number associated to the details. | \r\n| Details[0].CustomerOrderNo            | The customer order number associated to the details. | \r\n| Details[0].CustomerLoadReference      | The customer load reference associated to the details. | \r\n| Details[0].PoNumber                   | The po number associated to the details. | \r\n| Details[0].ReleaseNumber              | The release number associated to the details. | \r\n| Details[0].DepartmentListItem         | The GUID and name of the department associated to the details. | \r\n| Details[0].ServiceDescriptionOverride | The service description override associated to the details. | \r\n| Details[0].ActionDescriptionOverride  | The action description override associated to the details. | \r\n| Details[0].UnitOfMeasurementListItem  | The GUID and name of the unit of measurement associated to the details. | \r\n| Details[0].SiteAddress                | The site address object associated to the details. | \r\n| Details[0].SiteAddress.HouseNumber    | The house number associated to the site address. | \r\n| Details[0].SiteAddress.Address1       | The address1 associated to the site address. | \r\n| Details[0].SiteAddress.Address2       | The address2 associated to the site address. | \r\n| Details[0].SiteAddress.Address3       | The address3 associated to the site address. | \r\n| Details[0].SiteAddress.Address4       | The address4 associated to the site address. | \r\n| Details[0].SiteAddress.Address5       | The address5 associated to the site address. | \r\n| Details[0].SiteAddress.Postcode       | The postcode associated to the site address. | \r\n| Details[0].SiteAddress.ContactMethods | The contact methods associated to the site address. | \r\n| Details[0].SiteAddress.ContactMethods.TelNo | The telephone number associated to the site address contact methods. | \r\n| Details[0].SiteAddress.ContactMethods.FaxNo | The fax number associated to the site address contact methods. | \r\n| Details[0].Reason                     | The reason associated to the details. | \r\n| Details[0].ServiceListItem            | The GUID and name of the service associated to the details. | \r\n| Details[0].ActionListItem             | The GUID and name of the action associated to the details. | \r\n| Details[0].ContainerTypeListItem      | The GUID and name of the container type associated to the details. | \r\n| Details[0].MaterialListItem           | The GUID and name of the material associated to the details. | \r\n| Details[0].ServiceFrequencyListItem   | The GUID and name of the service frequency associated to the details. | \r\n| Details[0].DefaultActionListItem      | The GUID and name of the default action associated to the details. | \r\n| Details[0].Rent                       | The rent object associated to the details. | \r\n| Details[0].Rent.RentTermListItem      | The GUID and name of the associated to the details. | \r\n| Details[0].Rent.From                  | The from date of the associated to the details.Rent in ISO format (YYYY-MM-DD). | \r\n| Details[0].Rent.To                    | The to date of the associated to the details.Rent in ISO format (YYYY-MM-DD). | \r\n| Details[0].Amount                     | The amount object associated to the details. | \r\n| Details[0].Amount.Rate                | The rate associated to the amount. | \r\n| Details[0].Amount.IsRebilled          | Is this amount rebilled? | \r\n| Details[0].Amount.Quantity            | The quantity associated to the amount. | \r\n| Details[0].Amount.Volume              | The volume associated to the amount. | \r\n| Details[0].Amount.Weight              | The weight associated to the amount. | \r\n| Details[0].Amount.Price               | The price associated to the amount. | \r\n| Details[0].Amount.PriceIncVAT         | The price including VAT associated to the amount. | \r\n| Details[0].Amount.ChargeableHours     | The chargable hours associated to the amount. | \r\n| Details[0].Amount.MinimumCharge       | The minimum charge associated to the amount. | \r\n| Details[0].Amount.MaximumCharge       | The maximum charge associated to the amount. | \r\n| Details[0].Amount.Allowance           | The allowance associated to the amount. | \r\n| Details[0].Amount.RebillQuantity      | The rebill quantity associated to the amount. | \r\n| Details[0].Amount.RebillVolume        | The rebill volume associated to the amount. | \r\n| Details[0].Amount.RebillWeight        | The rebill weight associated to the amount. | \r\n| Details[0].Amount.RebilledPrice       | The rebilled price associated to the amount. | \r\n| Details[0].Amount.RebilledPriceIncVAT | The rebilled price including VAT associated to the amount. | \r\n| Details[0].Amount.RebilledChargeableHours | The rebilled chargeable hours associated to the amount. | \r\n| Details[0].Amount.RebilledMinimumCharge | The rebilled minimum charge associated to the amount. | \r\n| Details[0].Amount.RebilledMaximumCharge | The rebilled maximum charge associated to the amount. | \r\n| Details[0].Amount.RebilledAllowance   | The rebilled allowance associated to the amount. | \r\n| Details[0].NotDueAmount               | The not due amount associated to the details. | \r\n| Details[0].RelatedWeighingGuid        | The related weighing guid associated to the details. | \r\n| Details[0].RelatedWeighingInGuid      | The related weighing in guid associated to the details. | \r\n| Details[0].RelatedWeighingOutGuid     | The related weighing out guid associated to the details. | \r\n| Details[0].RelatedJobGuid             | The related job guid associated to the details. | \r\n| Details[0].RelatedSiteGuid            | The related site guid associated to the details. | \r\n| Details[0].RelatedRouteVisitGuid      | The related route visit guid associated to the details. |\r\n| Details[0].RelatedPONumberGuid\t\t| The related PO Number guid associated to the details. |\r\n| Details[0].RelatedOrderGuid           | The related order guid associated to the details. | \r\n| Details[0].RelatedRouteVisitJobGuid   | The related route visit job guid associated to the details. | \r\n| Details[0].VATListItem\t\t\t\t| The GUID and name of the VAT associated to the details. | \r\n| Details[0].Notes                      | The notes associated to the details. |\r\n| Details[0].Reference                  | The reference associated to the details. |\r\n| RelatedBlobHashes\t\t\t\t\t\t| The array of related blob hashes and descriptions associated to the invoice.\t\t|\r\n| RelatedBlobHashes[0].Hash\t\t\t\t| The hash of the blob to be used against the /blob endpoint. Files are provided as an octet stream which will need to be converted. |\r\n| Batch.GeneratedTimestamp\t\t\t\t| The generated timestamp associated to the batch. |\r\n| Batch.AcceptedTimestamp\t\t\t\t| The accepted timestamp associated to the batch. |\r\n| Batch.InvoiceDate\t\t\t\t\t\t| The invoice date associated to the batch. |\r\n| Batch.InvoiceUntil\t\t\t\t\t| The invoice until associated to the batch. |\r\n| Batch.IsAcceptanceInProgress\t\t\t| The isAcceptanceInProgress boolean associated to the batch. |\r\n| Batch.IsGenerationInProgress\t\t\t| The isGenerationInProgress boolean associated to the batch. |\r\n| Batch.IsExported\t\t\t\t\t\t| The isExported boolean associated to the batch. |\r\n| Batch.RelatedUserGeneratedGuid\t\t| The related user generated guid associated to the batch. |\r\n| Batch.RelatedUserAcceptedByGuid\t\t| The related user acceptedby guid associated to the batch. |\r\n| Batch.AnalysisCode\t\t\t\t\t| The analysis code associated to the batch. |\r\n| Batch.Notes\t\t\t\t\t\t\t| The notes associated to the batch. |\r\n| Batch.InvoiceBatchStatusListItem\t\t| The Guid and name of invoice batch status associated to the batch. |\r\n| Batch.IsDeleted\t\t\t\t\t\t| The isDeleted boolean associated to the batch. |\r\n| Batch.BatchGuid\t\t\t\t\t\t| The guid associated to the batch. |\r\n| Deallocations[0]\t\t\t\t\t\t\t\t\t\t\t| List of invoice bill deallocations. | \r\n| Deallocations[0].Amount\t\t\t\t\t\t\t\t\t| The amount of the deallocated invoice bill. | \r\n| Deallocations[0].RelatedInvoiceAllocatedToGuid\t\t\t| The GUID associated to the invoice allocated to. |\r\n| Deallocations[0].DateDeallocated\t\t\t\t\t\t\t| The date of invoice bill deallocation. | \r\n| Deallocations[0].DateInput\t\t\t\t\t\t\t\t| The date input of the invoice bill deallocation. | \r\n| Deallocations[0].RelatedUserDeallocatedByGuid\t\t\t\t| The GUID associated to the user who deallocated the invoice bill. | \r\n| Deallocations[0].IsExported\t\t\t\t\t\t\t\t| Whether deallocation is exported. | \r\n| Deallocations[0].IsInvoiceBillDeallocationExported\t\t| Whether the invoice bill deallocation is exported. | \r\n| Deallocations[0].IsInvoiceBillExported\t\t\t\t\t| Whether the invoice bill is exported. |\r\n| Deallocations[0].IsDeleted\t\t\t\t\t\t\t\t| Whether the invoice bill is deleted. |\r\n| Deallocations[0].AllocationAccountingPeriodListItem\t\t| The GUID and description of allocation accounting period.\t|\r\n| Deallocations[0].DateExported\t\t\t\t\t\t\t\t| The deallocation exported date. | \r\n| Deallocations[0].DateInvoiceBillDeallocationExported\t\t| The invoice bill deallocation exported date. | \r\n| Deallocations[0].DateInvoiceBillExported\t\t\t\t\t| The invoice bill exported date. | \r\n| Deallocations[0].DeallocationAccountingPeriodListItem\t\t| The GUID and description of deallocation accounting period. |\r\n| Deallocations[0].Guid\t\t\t\t\t\t\t\t\t\t| The GUID associated to the invoice deallocation. |\r\n| Allocations[0]\t\t\t\t\t\t\t\t\t\t\t| List of invoice bill allocations. | \r\n| Allocations[0].Amount\t\t\t\t\t\t\t\t\t\t| The amount of the allocated invoice bill. | \r\n| Allocations[0].RelatedInvoiceAllocatedToGuid\t\t\t\t| The GUID associated to the invoice allocated to. |\r\n| Allocations[0].DateInput\t\t\t\t\t\t\t\t\t| The date input of the invoice bill allocation. | \r\n| Allocations[0].IsExported\t\t\t\t\t\t\t\t\t| Whether allocation is exported. | \r\n| Allocations[0].IsDeleted\t\t\t\t\t\t\t\t\t| Whether the invoice bill is deleted. |\r\n| Allocations[0].AccountingPeriodListItem\t\t\t\t\t| The GUID and description of accounting period. |\r\n| Allocations[0].DateExported\t\t\t\t\t\t\t\t| The invoice bill allocation exported date. |\r\n| Allocations[0].Guid\t\t\t\t\t\t\t\t\t\t| The GUID associated to the invoice allocation. |","operationId":"Invoice_Get","consumes":["application/json"],"produces":["application/json"],"parameters":[{"name":"guid","in":"path","required":true,"type":"string","format":"uuid"},{"name":"links","in":"query","required":false,"type":"string"},{"name":"include","in":"query","required":false,"type":"string"},{"name":"expand","in":"query","required":false,"type":"string"},{"name":"udf","in":"query","required":false,"type":"string"}],"responses":{"200":{"description":"OK","schema":{"$ref":"#/definitions/ApiResourceResultEntity[ApiIntegratorInvoiceResource]"}}}}},"/accounting/invoices":{"get":{"tags":["Invoice"],"summary":"Find with Filters","description":"| Property       | Description                                                  |\r\n| -------------- | ------------------------------------------------------------ |\r\n| GUID                                  | The GUID associated to the invoice.                          |\r\n| RelatedCustomerGuid                   | The GUID associated to the customer of to the invoice. | \r\n| InvoiceNumber                         | The invoice number associated to the invoice. Filterable. |\r\n| CustomerInvoiceNumber                 | The customer invoice number associated to the invoice. | \r\n| AccountingPeriodListItem              | The GUID and name of the accounting period associated to the invoice. | \r\n| InvoiceCycleListItem                  | The GUID and name of the invoice cycle associated to the invoice. | \r\n| RebateInvoiceCycleListItem            | The GUID and name of the rebate invoice cycle associated to the invoice. | \r\n| VATExemptNumber                       | The VAT exempt number associated to the invoice. | \r\n| OutletListItem                        | The GUID and name of the company outlet associated to the invoice. | \r\n| DepartmentListItem                    | The GUID and name of the department associated to the invoice. | \r\n| IsCash                                | The isCash boolean associated to the invoice. | \r\n| IsAccepted                            | The isAccepted boolean associated to the invoice. | \r\n| IsDebit                               | The isDebit boolean associated to the invoice. | \r\n| IsRebilled                            | The isRebilled boolean associated to the invoice. | \r\n| IsTaxAdjustment                       | The isTaxAdjustment boolean associated to the invoice. | \r\n| IsRequestForPayment                   | The isRequestForPayment boolean associated to the invoice. | \r\n| InputDate                             | The inputDate associated to the invoice in ISO format (YYYY-MM-DD). | \r\n| InvoiceDate                           | The invoiceDate associated to the invoice in ISO format (YYYY-MM-DD). | \r\n| DueDate                               | The dueDate associated to the invoice in ISO format (YYYY-MM-DD). | \r\n| WriteOffReasonListItem                | The GUID and name of the writeoffReason associated to the invoice. | \r\n| ExchangeRate                          | The exchange rate associated to the invoice. | \r\n| Rate                                  | The rate associated to the invoice. | \r\n| ExchangeDate                          | The exchange date associated to the invoice in ISO format (YYYY-MM-DD). | \r\n| BaseCurrencyListItem                  | The GUID and name of the base currency associated to the invoice. | \r\n| ExchangeCurrencyListItem              | The GUID and name of the exchange currency associated to the invoice. | \r\n| RelatedOrderGuid\t\t\t\t\t\t| Used to filter the related site guid associated to the details. |\r\n| RelatedWeighingGuid\t\t\t\t\t| Used to filter the related weighing guid associated to the details. | \r\n| RelatedWeighingInGuid\t\t\t\t\t| Used to filter the related weighing in guid associated to the details. | \r\n| RelatedWeighingOutGuid\t\t\t\t| Used to filter the related weighing out guid associated to the details. | \r\n| RelatedJobGuid\t\t\t\t\t\t| Used to filter the related job guid associated to the details. | \r\n| RelatedSiteGuid\t\t\t\t\t\t| Used to filter the related site guid associated to the details. |\r\n| RelatedRouteVisitGuid\t\t\t\t\t| Used to filter the related route visit guid associated to the details. |\r\n| RelatedPONumberGuidFilter\t\t\t\t| Used to filter the related PO Number guid associated to the details. |\r\n| RelatedRouteVisitJobGuid\t\t\t\t| Used to filter the related route visit job guid associated to the details. |\r\n| ReferenceFilter\t\t\t\t\t\t| Used to filter the reference associated to the details. |\r\n| RelatedBatchGuid\t\t\t\t\t\t| Used to filter the related batch associated to the invoice. |\r\n| RelatedUserGeneratedGuid\t\t\t\t| Used to filter the related user generated guid associated to the batch. |\r\n| RelatedUserAcceptedByGuid\t\t\t\t| Used to filter the related user acceptedby guid associated to the batch. |\r\n| RelatedInvoiceAllocatedToGuidFilter\t| Used to filter the related invoice guid associated to the invoice bill dealloaction. |\r\n| RelatedUserDeallocatedByGuidFilter\t| Used to filter the related user guid associated to the invoice bill deallocation.\t|\r\n| Amount                                | The amount associated to the invoice. | \r\n| BaseAmount                            | The base amount associated to the invoice. | \r\n| RelatedLocationGuid\t\t\t\t\t| Used to filter the related location guid associated to the invoice. |\r\n| PrintAddress                          | The print address object associated to the invoice. | \r\n| PrintAddress.HouseNumber              | The house number associated to the print address. | \r\n| PrintAddress.Address1                 | The address1 associated to the print address. | \r\n| PrintAddress.Address2                 | The address2 associated to the print address. | \r\n| PrintAddress.Address3                 | The address3 associated to the print address. | \r\n| PrintAddress.Address4                 | The address4 associated to the print address. | \r\n| PrintAddress.Address5                 | The address5 associated to the print address. | \r\n| PrintAddress.Postcode                 | The postcode associated to the print address. | \r\n| RemitAddress                          | The remit address object associated to the invoice. | \r\n| RemitAddress.HouseNumber              | The house number associated to the remit address. | \r\n| RemitAddress.Address1                 | The address1 associated to the remit address. | \r\n| RemitAddress.Address2                 | The address2 associated to the remit address. | \r\n| RemitAddress.Address3                 | The address3 associated to the remit address. | \r\n| RemitAddress.Address4                 | The address4 associated to the remit address. | \r\n| RemitAddress.Address5                 | The address5 associated to the remit address. | \r\n| RemitAddress.Postcode                 | The postcode associated to the remit address. |\r\n| Notes                                 | The notes associated to the invoice. | \r\n| Details[0]                            | List of details associated to the invoice. | \r\n| Details[0].ItemDate                   | The item date associated to the details in ISO format (YYYY-MM-DD). | \r\n| Details[0].OrderNo                    | The order number associated to the details. | \r\n| Details[0].CustomerOrderNo            | The customer order number associated to the details. | \r\n| Details[0].CustomerLoadReference      | The customer load reference associated to the details. | \r\n| Details[0].PoNumber                   | The po number associated to the details. | \r\n| Details[0].ReleaseNumber              | The release number associated to the details. | \r\n| Details[0].DepartmentListItem         | The GUID and name of the department associated to the details. | \r\n| Details[0].ServiceDescriptionOverride | The service description override associated to the details. | \r\n| Details[0].ActionDescriptionOverride  | The action description override associated to the details. | \r\n| Details[0].UnitOfMeasurementListItem  | The GUID and name of the unit of measurement associated to the details. | \r\n| Details[0].SiteAddress                | The site address object associated to the details. | \r\n| Details[0].SiteAddress.HouseNumber    | The house number associated to the site address. | \r\n| Details[0].SiteAddress.Address1       | The address1 associated to the site address. | \r\n| Details[0].SiteAddress.Address2       | The address2 associated to the site address. | \r\n| Details[0].SiteAddress.Address3       | The address3 associated to the site address. | \r\n| Details[0].SiteAddress.Address4       | The address4 associated to the site address. | \r\n| Details[0].SiteAddress.Address5       | The address5 associated to the site address. | \r\n| Details[0].SiteAddress.Postcode       | The postcode associated to the site address. | \r\n| Details[0].SiteAddress.ContactMethods | The contact methods associated to the site address. | \r\n| Details[0].SiteAddress.ContactMethods.TelNo | The telephone number associated to the site address contact methods. | \r\n| Details[0].SiteAddress.ContactMethods.FaxNo | The fax number associated to the site address contact methods. | \r\n| Details[0].Reason                     | The reason associated to the details. | \r\n| Details[0].ServiceListItem            | The GUID and name of the service associated to the details. | \r\n| Details[0].ActionListItem             | The GUID and name of the action associated to the details. | \r\n| Details[0].ContainerTypeListItem      | The GUID and name of the container type associated to the details. | \r\n| Details[0].MaterialListItem           | The GUID and name of the material associated to the details. | \r\n| Details[0].ServiceFrequencyListItem   | The GUID and name of the service frequency associated to the details. | \r\n| Details[0].DefaultActionListItem      | The GUID and name of the default action associated to the details. | \r\n| Details[0].Rent                       | The rent object associated to the details. | \r\n| Details[0].Rent.RentTermListItem      | The GUID and name of the associated to the details. | \r\n| Details[0].Rent.From                  | The from date of the associated to the details.Rent in ISO format (YYYY-MM-DD). | \r\n| Details[0].Rent.To                    | The to date of the associated to the details.Rent in ISO format (YYYY-MM-DD). | \r\n| Details[0].Amount                     | The amount object associated to the details. | \r\n| Details[0].Amount.Rate                | The rate associated to the amount. | \r\n| Details[0].Amount.IsRebilled          | Is this amount rebilled? | \r\n| Details[0].Amount.Quantity            | The quantity associated to the amount. | \r\n| Details[0].Amount.Volume              | The volume associated to the amount. | \r\n| Details[0].Amount.Weight              | The weight associated to the amount. | \r\n| Details[0].Amount.Price               | The price associated to the amount. | \r\n| Details[0].Amount.PriceIncVAT         | The price including VAT associated to the amount. | \r\n| Details[0].Amount.ChargeableHours     | The chargable hours associated to the amount. | \r\n| Details[0].Amount.MinimumCharge       | The minimum charge associated to the amount. | \r\n| Details[0].Amount.MaximumCharge       | The maximum charge associated to the amount. | \r\n| Details[0].Amount.Allowance           | The allowance associated to the amount. | \r\n| Details[0].Amount.RebillQuantity      | The rebill quantity associated to the amount. | \r\n| Details[0].Amount.RebillVolume        | The rebill volume associated to the amount. | \r\n| Details[0].Amount.RebillWeight        | The rebill weight associated to the amount. | \r\n| Details[0].Amount.RebilledPrice       | The rebilled price associated to the amount. | \r\n| Details[0].Amount.RebilledPriceIncVAT | The rebilled price including VAT associated to the amount. | \r\n| Details[0].Amount.RebilledChargeableHours | The rebilled chargeable hours associated to the amount. | \r\n| Details[0].Amount.RebilledMinimumCharge | The rebilled minimum charge associated to the amount. | \r\n| Details[0].Amount.RebilledMaximumCharge | The rebilled maximum charge associated to the amount. | \r\n| Details[0].Amount.RebilledAllowance   | The rebilled allowance associated to the amount. | \r\n| Details[0].NotDueAmount               | The not due amount associated to the details. | \r\n| Details[0].RelatedWeighingGuid        | The related weighing guid associated to the details. | \r\n| Details[0].RelatedWeighingInGuid      | The related weighing in guid associated to the details. | \r\n| Details[0].RelatedWeighingOutGuid     | The related weighing out guid associated to the details. | \r\n| Details[0].RelatedJobGuid             | The related job guid associated to the details. | \r\n| Details[0].RelatedSiteGuid            | The related site guid associated to the details. | \r\n| Details[0].RelatedRouteVisitGuid      | The related route visit guid associated to the details. |\r\n| Details[0].RelatedPONumberGuid\t\t| The related PO Number guid associated to the details. |\r\n| Details[0].RelatedOrderGuid           | The related order guid associated to the details. | \r\n| Details[0].RelatedRouteVisitJobGuid   | The related route visit job guid associated to the details. | \r\n| Details[0].VATListItem\t\t\t\t| The GUID and name of the VAT associated to the details. | \r\n| Details[0].Notes                      | The notes associated to the details. |\r\n| Details[0].Reference                  | The reference associated to the details. |\r\n| RelatedBlobHashes\t\t\t\t\t\t| The array of related blob hashes and descriptions associated to the invoice.\t\t|\r\n| RelatedBlobHashes[0].Hash\t\t\t\t| The hash of the blob to be used against the /blob endpoint. Files are provided as an octet stream which will need to be converted. |\r\n| Batch.GeneratedTimestamp\t\t\t\t| The generated timestamp associated to the batch. |\r\n| Batch.AcceptedTimestamp\t\t\t\t| The accepted timestamp associated to the batch. |\r\n| Batch.InvoiceDate\t\t\t\t\t\t| The invoice date associated to the batch. |\r\n| Batch.InvoiceUntil\t\t\t\t\t| The invoice until associated to the batch. |\r\n| Batch.IsAcceptanceInProgress\t\t\t| The isAcceptanceInProgress boolean associated to the batch. |\r\n| Batch.IsGenerationInProgress\t\t\t| The isGenerationInProgress boolean associated to the batch. |\r\n| Batch.IsExported\t\t\t\t\t\t| The isExported boolean associated to the batch. |\r\n| Batch.RelatedUserGeneratedGuid\t\t| The related user generated guid associated to the batch. |\r\n| Batch.RelatedUserAcceptedByGuid\t\t| The related user acceptedby guid associated to the batch. |\r\n| Batch.AnalysisCode\t\t\t\t\t| The analysis code associated to the batch. |\r\n| Batch.Notes\t\t\t\t\t\t\t| The notes associated to the batch. |\r\n| Batch.InvoiceBatchStatusListItem\t\t| The Guid and name of invoice batch status associated to the batch. |\r\n| Batch.IsDeleted\t\t\t\t\t\t| The isDeleted boolean associated to the batch. |\r\n| Batch.BatchGuid\t\t\t\t\t\t| The guid associated to the batch. |\r\n| Deallocations[0]\t\t\t\t\t\t\t\t\t\t\t| List of invoice bill deallocations. | \r\n| Deallocations[0].Amount\t\t\t\t\t\t\t\t\t| The amount of the deallocated invoice bill. | \r\n| Deallocations[0].RelatedInvoiceAllocatedToGuid\t\t\t| The GUID associated to the invoice allocated to. |\r\n| Deallocations[0].DateDeallocated\t\t\t\t\t\t\t| The date of invoice bill deallocation. | \r\n| Deallocations[0].DateInput\t\t\t\t\t\t\t\t| The date input of the invoice bill deallocation. | \r\n| Deallocations[0].RelatedUserDeallocatedByGuid\t\t\t\t| The GUID associated to the user who deallocated the invoice bill. | \r\n| Deallocations[0].IsExported\t\t\t\t\t\t\t\t| Whether deallocation is exported. | \r\n| Deallocations[0].IsInvoiceBillDeallocationExported\t\t| Whether the invoice bill deallocation is exported. | \r\n| Deallocations[0].IsInvoiceBillExported\t\t\t\t\t| Whether the invoice bill is exported. |\r\n| Deallocations[0].IsDeleted\t\t\t\t\t\t\t\t| Whether the invoice bill is deleted. |\r\n| Deallocations[0].AllocationAccountingPeriodListItem\t\t| The GUID and description of allocation accounting period.\t|\r\n| Deallocations[0].DateExported\t\t\t\t\t\t\t\t| The deallocation exported date. | \r\n| Deallocations[0].DateInvoiceBillDeallocationExported\t\t| The invoice bill deallocation exported date. | \r\n| Deallocations[0].DateInvoiceBillExported\t\t\t\t\t| The invoice bill exported date. | \r\n| Deallocations[0].DeallocationAccountingPeriodListItem\t\t| The GUID and description of deallocation accounting period. |\r\n| Deallocations[0].Guid\t\t\t\t\t\t\t\t\t\t| The GUID associated to the invoice deallocation. |\r\n| Allocations[0]\t\t\t\t\t\t\t\t\t\t\t| List of invoice bill allocations. | \r\n| Allocations[0].Amount\t\t\t\t\t\t\t\t\t\t| The amount of the allocated invoice bill. | \r\n| Allocations[0].RelatedInvoiceAllocatedToGuid\t\t\t\t| The GUID associated to the invoice allocated to. |\r\n| Allocations[0].DateInput\t\t\t\t\t\t\t\t\t| The date input of the invoice bill allocation. | \r\n| Allocations[0].IsExported\t\t\t\t\t\t\t\t\t| Whether allocation is exported. | \r\n| Allocations[0].IsDeleted\t\t\t\t\t\t\t\t\t| Whether the invoice bill is deleted. |\r\n| Allocations[0].AccountingPeriodListItem\t\t\t\t\t| The GUID and description of accounting period. |\r\n| Allocations[0].DateExported\t\t\t\t\t\t\t\t| The invoice bill allocation exported date. |\r\n| Allocations[0].Guid\t\t\t\t\t\t\t\t\t\t| The GUID associated to the invoice allocation. |","operationId":"Invoice_GetCollection","consumes":["application/json"],"produces":["application/json"],"parameters":[{"name":"filter","in":"query","required":false,"type":"string"},{"name":"search","in":"query","required":false,"type":"string"},{"name":"order","in":"query","required":false,"type":"string"},{"name":"max","in":"query","required":false,"type":"integer","format":"int32"},{"name":"page","in":"query","required":false,"type":"integer","format":"int32"},{"name":"includeCount","in":"query","required":false,"type":"boolean"},{"name":"includeDeleted","in":"query","required":false,"type":"boolean"},{"name":"links","in":"query","required":false,"type":"string"},{"name":"udf","in":"query","required":false,"type":"string"}],"responses":{"200":{"description":"OK","schema":{"$ref":"#/definitions/ApiResourceResultCollection[ApiIntegratorInvoiceResource]"}}}}},"/lists/invoiceCycles/{guid}":{"get":{"tags":["InvoiceCycle"],"summary":"Find with GUID","description":"| Property                  | Description                                                              |\r\n| ------------------------- | ------------------------------------------------------------------------ |\r\n| GUID                      | The GUID associated to the invoice cycle                              |\r\n| Description               | The description of the invoice cycle                                  |\r\n| IsDeleted                 | Whether the invoice cycle is deleted\t      \t \t\t\t\t\t\t|","operationId":"InvoiceCycle_Get","consumes":["application/json"],"produces":["application/json"],"parameters":[{"name":"guid","in":"path","required":true,"type":"string","format":"uuid"},{"name":"links","in":"query","required":false,"type":"string"},{"name":"include","in":"query","required":false,"type":"string"},{"name":"expand","in":"query","required":false,"type":"string"},{"name":"udf","in":"query","required":false,"type":"string"}],"responses":{"200":{"description":"OK","schema":{"$ref":"#/definitions/ApiResourceResultEntity[ApiIntegratorInvoiceCycleResource]"}}}}},"/lists/invoiceCycles":{"get":{"tags":["InvoiceCycle"],"summary":"Find with Filters","description":"| Property                  | Description                                                              |\r\n| ------------------------- | ------------------------------------------------------------------------ |\r\n| GUID                      | The GUID associated to the invoice cycle                              |\r\n| Description               | The description of the invoice cycle                                  |\r\n| IsDeleted                 | Whether the invoice cycle is deleted\t      \t \t\t\t\t\t\t|","operationId":"InvoiceCycle_GetCollection","consumes":["application/json"],"produces":["application/json"],"parameters":[{"name":"filter","in":"query","required":false,"type":"string"},{"name":"search","in":"query","required":false,"type":"string"},{"name":"order","in":"query","required":false,"type":"string"},{"name":"max","in":"query","required":false,"type":"integer","format":"int32"},{"name":"page","in":"query","required":false,"type":"integer","format":"int32"},{"name":"includeCount","in":"query","required":false,"type":"boolean"},{"name":"includeDeleted","in":"query","required":false,"type":"boolean"},{"name":"links","in":"query","required":false,"type":"string"},{"name":"udf","in":"query","required":false,"type":"string"}],"responses":{"200":{"description":"OK","schema":{"$ref":"#/definitions/ApiResourceResultCollection[ApiIntegratorInvoiceCycleResource]"}}}}},"/lists/invoiceFrequencies/{guid}":{"get":{"tags":["InvoiceFrequency"],"summary":"Find with GUID","description":"| Property                  | Description                                                              |\r\n| ------------------------- | ------------------------------------------------------------------------ |\r\n| GUID                      | The GUID associated to the invoice frequency                              |\r\n| Description               | The description of the invoice frequency                                  |\r\n| IsDeleted                 | Whether the invoice frequency is deleted\t      \t \t\t\t\t\t\t|","operationId":"InvoiceFrequency_Get","consumes":["application/json"],"produces":["application/json"],"parameters":[{"name":"guid","in":"path","required":true,"type":"string","format":"uuid"},{"name":"links","in":"query","required":false,"type":"string"},{"name":"include","in":"query","required":false,"type":"string"},{"name":"expand","in":"query","required":false,"type":"string"},{"name":"udf","in":"query","required":false,"type":"string"}],"responses":{"200":{"description":"OK","schema":{"$ref":"#/definitions/ApiResourceResultEntity[ApiIntegratorInvoiceFrequencyResource]"}}}}},"/lists/invoiceFrequencies":{"get":{"tags":["InvoiceFrequency"],"summary":"Find with Filters","description":"| Property                  | Description                                                              |\r\n| ------------------------- | ------------------------------------------------------------------------ |\r\n| GUID                      | The GUID associated to the invoice frequency                              |\r\n| Description               | The description of the invoice frequency                                  |\r\n| IsDeleted                 | Whether the invoice frequency is deleted\t      \t \t\t\t\t\t\t|","operationId":"InvoiceFrequency_GetCollection","consumes":["application/json"],"produces":["application/json"],"parameters":[{"name":"filter","in":"query","required":false,"type":"string"},{"name":"search","in":"query","required":false,"type":"string"},{"name":"order","in":"query","required":false,"type":"string"},{"name":"max","in":"query","required":false,"type":"integer","format":"int32"},{"name":"page","in":"query","required":false,"type":"integer","format":"int32"},{"name":"includeCount","in":"query","required":false,"type":"boolean"},{"name":"includeDeleted","in":"query","required":false,"type":"boolean"},{"name":"links","in":"query","required":false,"type":"string"},{"name":"udf","in":"query","required":false,"type":"string"}],"responses":{"200":{"description":"OK","schema":{"$ref":"#/definitions/ApiResourceResultCollection[ApiIntegratorInvoiceFrequencyResource]"}}}}},"/transport/jobs/changes":{"get":{"tags":["Job"],"summary":"Retrieve changes","description":"| Property                              | Description                                                                   |\r\n| ------------------------------------- | ----------------------------------------------------------------------------- |\r\n| GUID                                  | The GUID associated to the job.\t\t\t\t\t\t\t\t\t\t\t\t|\r\n| DeleteRouteAssignmentsOnCompletion\t| Whether to delete route assignments on completion of the job.\t\t\t\t\t|\r\n| InProgress\t\t\t\t\t\t\t| Is the job in progress?\t\t\t\t\t\t\t\t\t\t\t\t\t\t|\r\n| IsAdhoc\t\t\t\t\t\t\t\t| Is the job ad hoc?\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t|\r\n| IsCompleted\t\t\t\t\t\t\t| Is the job completed?\tFilterable.\t\t\t\t\t\t\t\t\t\t\t\t\t\t|\r\n| CompletedDate\t\t\t\t\t\t\t| The completed date of the job\t\t\t\t\t\t\t\t\t\t\t\t\t|\r\n| IsConfirmed\t\t\t\t\t\t\t| Is the job confirmed?\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t|\r\n| IsExternalTransport\t\t\t\t\t| Is the job using external transport?\t\t\t\t\t\t\t\t\t\t\t|\r\n| IsFinanciallyConfirmed\t\t\t\t| Is the job financially confirmed?\t\t\t\t\t\t\t\t\t\t\t\t|\t\r\n| IsHazardousPaperworkComplete\t\t\t| Is the hazardous paperwork complete?\t\t\t\t\t\t\t\t\t\t\t|\t\r\n| IsScheduledTransfer\t\t\t\t\t| Is the job a scheduled transfer?\t\t\t\t\t\t\t\t\t\t\t\t|\t\r\n| IsWarranty\t\t\t\t\t\t\t| Is the job a warranty?\t\t\t\t\t\t\t\t\t\t\t\t\t\t|\r\n| RelatedPONumberGuid\t\t\t\t\t| The GUID of related PONumber associated to the job. Filterable.\t\t\t\t\t|\r\n| RelatedRouteVisitGuid\t\t\t\t\t| The GUID of related routeVisit associated to the job. Filterable.\t\t\t\t\t|\r\n| RelatedScheduleGuid\t\t\t\t\t| The GUID of related schedule associated to the job. Filterable.\t\t\t\t\t|\r\n| RelatedSiteOrderGuid\t\t\t\t\t| The GUID of related siteorder associated to the job. Filterable.\t\t\t\t\t|\r\n| RelatedSiteOrderItemGuid\t\t\t\t| The GUID of related siteorder item associated to the job. Filterable.\t\t\t\t|\r\n| RelatedSupplierSiteTransportGuid\t\t| The GUID of related supplier site transport associated to the job. Filterable.\t|\r\n| RelatedExternalVehicleGuid            | The GUID of related external vehicle associated to the job. Filterable.\t\t\t|\r\n| ActionListItem\t\t\t\t\t\t| The GUID and description of the action associated to the job.\t\t\t\t\t|  \r\n| CancelledReasonListItem\t\t\t\t| The GUID and description of the cancellation reason associated to the job. \t|\r\n| CompanyOutletListItem\t\t\t\t\t| The GUID and description of the company outlet associated to the job. \t\t|\t\r\n| ContainerTypeListItem\t\t\t\t\t| The GUID and description of the container type associated to the job. \t\t|\t\r\n| DepartmentListItem\t\t\t\t\t| The GUID and description of the department associated to the job. \t\t\t|\t\r\n| MaterialListItem\t\t\t\t\t\t| The GUID and description of the material associated to the job. \t\t\t\t|\t\r\n| PaymentTypeListItem\t\t\t\t\t| The GUID and description of the payment type associated to the job. \t\t\t|\t\r\n| RepairReasonListItem\t\t\t\t\t| The GUID and description of the repair reason associated to the job. \t\t\t|\t\r\n| Access[]\t\t\t\t\t\t\t\t| The array of job access time associated to the job.\t\t\t\t\t\t\t|\r\n| Access[0].Contact\t\t\t\t\t\t| The contact associated to the job access time.\t\t\t\t\t\t\t\t|\r\n| Access[0].StartTime\t\t\t\t\t| The start time associated to the job access time in ISO format (YYYY-MM-DD HH:mm).|\r\n| Access[0].EndTime\t\t\t\t\t\t| The end time associated to the job access time in ISO format (YYYY-MM-DD HH:mm).\t|\r\n| Access[0].Notes\t\t\t\t\t\t| The notes time associated to the job access time.\t\t\t\t\t\t\t\t|\r\n| Access[0].DayOfWeekId  \t\t\t    | The day of the week associated to the job access time.\t\t\t\t\t\t|\r\n| Access[0].GUID\t\t\t\t\t\t| The Guid associated to the job access time.\t\t\t\t\t\t\t\t\t|\r\n| ContainerDetails\t\t\t\t\t\t| The container details object associated to the job.\t\t\t\t\t\t\t|\r\n| ContainerDetails.Delivered\t\t\t| The container delivered to the job.\t\t\t\t\t\t\t\t\t\t\t|\r\n| ContainerDetails.Delivered.RelatedContainerGuid | The GUID of the container delivered to the job.\t\t\t\t\t\t|\r\n| ContainerDetails.Delivered.ContainerTypeListItem | The GUID and description of the container type delivered to the job. |\r\n| ContainerDetails.Delivered.Notes\t\t| The delivered container notes.\t\t\t\t\t\t\t\t\t\t\t\t|\r\n| ContainerDetails.Delivered.SerialNo\t| The delivered container serial number.\t\t\t\t\t\t\t\t\t\t|\r\n| ContainerDetails.Delivered.Tag\t\t| The delivered container tag.\t\t\t\t\t\t\t\t\t\t\t\t\t|\t\r\n| ContainerDetails.Removed\t\t\t\t| The container removed from the job.\t\t\t\t\t\t\t\t\t\t\t|\t\r\n| ContainerDetails.Removed.RelatedContainerGuid\t| The GUID of the container removed from the job.\t\t\t\t\t\t|\r\n| ContainerDetails.Removed.ContainerTypeListItem | The GUID and description of the container type removed from to the job. |\r\n| ContainerDetails.Removed.Notes\t\t| The removed container notes.\t\t\t\t\t\t\t\t\t\t\t\t\t|\r\n| ContainerDetails.Removed.SerialNo\t\t| The removed container serial number.\t\t\t\t\t\t\t\t\t\t\t|\r\n| ContainerDetails.Removed.Tag\t\t\t| The removed container tag.\t\t\t\t\t\t\t\t\t\t\t\t\t|\t\r\n| VisitDetails\t\t\t\t\t\t\t| The visit details object associated to the job.\t\t\t\t\t\t\t\t|\t\r\n| VisitDetails.DriverNotes\t\t\t\t| The driver notes on the visit associated to the job.\t\t\t\t\t\t\t|\t\r\n| VisitDetails.TimeInCustomerSite\t\t| The time in on the visit associated to the job.\t\t\t\t\t\t\t\t|\r\n| VisitDetails.TimeOutCustomerSite\t\t| The time out on the visit associated to the job.\t\t\t\t\t\t\t\t|\r\n| VisitDetails.HoursChargable\t\t\t| The hours chargeable on the visit associated to the job.\t\t\t\t\t\t|\r\n| VisitDetails.HoursNotChargable\t\t| The hours not chargeable on the visit associated to the job.\t\t\t\t\t|\r\n| CustomerOrderNo\t\t\t\t\t\t| The customer order number associated to the job. Filterable.\t\t\t\t\t|\r\n| DateRequired\t\t\t\t\t\t\t| The date the job is required.\t\t\t\t\t\t\t\t\t\t\t\t\t|\r\n| HazardousLoadReference\t\t\t\t| The hazardous load reference associated to the job. Filterable.\t\t\t\t|\r\n| ManualTicketNo\t\t\t\t\t\t| The manual ticket number associated to the job. Filterable. \t\t\t\t\t|\r\n| Notes\t\t\t\t\t\t\t\t\t| The notes associated to the job.\t\t\t\t\t\t\t\t\t\t\t\t|\r\n| PONumber\t\t\t\t\t\t\t\t| The PO number associated to the job.\t\t\t\t\t\t\t\t\t\t\t|\r\n| Quantity\t\t\t\t\t\t\t\t| The quantity associated to the job.\t\t\t\t\t\t\t\t\t\t\t|\r\n| ReleaseNumber\t\t\t\t\t\t\t| The release number associated to the job.\t\t\t\t\t\t\t\t\t\t|\r\n| TicketNo\t\t\t\t\t\t\t\t| The ticket number associated to the job. Filterable. \t\t\t\t\t\t\t|\r\n| RejectedReasonListItem\t\t\t\t| The GUID and description of the job rejection reason.\t\t\t\t \t\t\t|\r\n| RelatedLocationDestinationGuid\t\t| Used to filter the related destination location guid associated to the job. Filterable. |\r\n| RelatedPictureBlobHashes\t\t\t\t\t\t| The array of related blob hashes and descriptions associated to the job.\t\t|\r\n| RelatedPictureBlobHashes[0].Description\t\t| The description of the blob.\t\t\t\t\t\t\t\t\t\t\t\t\t|\r\n| RelatedPictureBlobHashes[0].Hash\t\t\t\t| The hash of the blob to be used against the /blob endpoint. Files are provided as an octet stream which will need to be converted. |\r\n| PriceOverrides\t\t\t\t\t\t| The array of price overrides associated to the job.\t\t\t\t\t\t\t|\r\n| PriceOverrides[0].RelatedPriceGuid\t| The GUID of the price associated to the job price override.\t\t\t\t\t|\r\n| PriceOverrides[0].OverrideRate\t\t| The override rate associated to the job price override.\t\t\t\t\t\t|\r\n| PriceOverrides[0].Guid\t\t\t\t| The GUID associated to the job price override.\t\t\t\t\t\t\t\t|\r\n| PriceOverrides[0].IsSelected\t\t\t| The price isselected associated to the job price override.\t\t\t\t\t|\r\n| PriceOverrides[0].Breakdowns\t\t\t| The array of price breakdowns associated to the job price.\t\t\t\t\t|\r\n| PriceOverrides[0].Breakdowns[0].Guid\t| The GUID associated to the price breakdown.\t\t\t\t\t\t\t\t\t|\r\n| PriceOverrides[0].Breakdowns[0].IsDeleted\t| Whether the price breakdown is deleted.\t\t\t\t\t\t\t\t\t|\r\n| PriceOverrides[0].Breakdowns[0].FillLevel\t| The fill level associated to the price breakdown.\t\t\t\t\t\t\t|\r\n| PriceOverrides[0].Breakdowns[0].Quantity\t| The quantity associated to the price breakdown.\t\t\t\t\t\t\t|\r\n| PriceOverrides[0].Breakdowns[0].IsReceived\t| Whether the price breakdown is received.\t\t\t\t\t\t\t\t|\r\n| PriceOverrides[0].Breakdowns[0].Barcode\t| The BarCode associated to the price breakdown.\t\t\t\t\t\t\t|\r\n| PriceOverrides[0].Breakdowns[0].JobPriceBreakdownTypeEnum\t| The Job Price Breakdown Type associated to the price breakdown.\t|\r\n| RelatedPriceGuidFilter\t\t\t\t| Used to filter on the related price GUID.\t\t\t\t\t\t\t\t\t\t|\r\n| RelatedBlobJobDocketPdfHashes\t\t\t| The array of related job docket blob hashes. |\r\n| RelatedBlobJobDocketPdfHashes[0].Hash\t| The hash of the job docket blob to be used against the /blob endpoint. Files are provided as an octet stream which will need to be converted. |\r\n| RelatedWTNBlobHashes\t\t\t\t\t| The array of related waste transfer note blob hashes. |\r\n| RelatedWTNBlobHashes[0].Guid\t\t\t| The guid of the job waste transfer note blob.\t|\r\n| RelatedWTNBlobHashes[0].Hash\t\t\t| The hash of the job waste transfer note blob to be used against the /blob endpoint. Files are provided as an octet stream which will need to be converted. |\r\n| VATIntendedListItem\t\t\t\t\t| The GUID and description (code + rate) of the VAT associated to the job.\t\t|\r\n| RequiredStartTime\t\t\t\t\t\t| The start time at which the job is required.\t\t\t\t\t\t\t\t\t|\r\n| RequiredEndTime\t\t\t\t\t\t| The end time at which the job is required.\t\t\t\t\t\t\t\t\t|\r\n| ServiceListItem\t\t\t\t\t\t| The GUID and description of the Service associated to the job.\t\t\t\t|\r\n| LastChangeReasonListItem\t\t\t\t| The GUID and description of the last change reason associated to the job. \t|\r\n| LinkedJobs\t\t\t\t\t\t\t| The array of linked jobs associated to the job.\t\t\t\t\t\t\t\t|\r\n| LinkedJobs[0].Guid\t\t\t\t\t| The guid of the linked job associated to the job.\t\t\t\t\t\t\t\t|\r\n| LinkedJobs[0].IsDeleted\t\t\t\t| Whether the linked job is deleted.\t\t\t\t\t\t\t\t\t\t\t|\r\n| LinkedJobs[0].RelatedJobGuid\t\t\t| The job guid of the linked job associated to the job.\t\t\t\t\t\t\t|\r\n| Position\t\t\t\t\t\t\t\t| The position associated to the job.\t\t\t\t\t\t\t\t\t\t\t|\r\n| RelatedCreatedByUserGuid\t\t\t\t| The created by sys user guid associated to the job. Filterable.\t\t\t\t|\r\n| LinkedJobGuidFilter\t\t\t\t\t| Used to filter on linked job guid.\t\t\t\t\t\t\t\t\t\t\t|\r\n| RelatedJobGuidFilter\t\t\t\t\t| Used to filer on the job guid of the linked job.\t\t\t\t\t\t\t\t|\r\n| MaterialSaleSlots\t\t\t\t\t\t| The array of material sale slots associated to the job.\t\t\t\t\t\t|\r\n| MaterialSaleSlots[0].SlotNumber\t\t| The slot number associated to the job\tmaterial sale slot.\t\t\t\t\t\t|\r\n| MaterialSaleSlots[0].SlotDate\t\t\t| The slot date associated to the job material sale slot.\t\t\t\t\t\t|\r\n| MaterialSaleSlots[0].SlotTime\t\t\t| The slot time associated to the job material sale slot.\t\t\t\t\t\t|\r\n| MaterialSaleSlots[0].CompanyOutletListItem\t    | The GUID and description of the CompanyOutlet associated to the material sale slot. \t|\r\n| MaterialSaleSlots[0].MaterialListItem\t\t\t\t| The GUID and description of the Material associated to the material sale slot.\t\t\t|\r\n| MaterialSaleSlots[0].Notes\t\t\t\t\t\t| The notes associated to the job.\t\t\t\t\t\t|\r\n| MaterialSaleSlots[0].RelatedBookingSlotGuid\t\t| The guid of booking slot associated to the material sale slot.\t\t\t\t\t\t|\r\n| MaterialSaleSlots[0].RelatedCustomerGuid | The guid of customer associated to the material sale slot.\t\t\t\t\t\t\t|\r\n| MaterialSaleSlots[0].IsSchedule\t\t\t\t\t\t| The Schedule of material sale slots associated to the job.\t\t\t\t\t\t|\r\n| MaterialSaleSlots[0].IsManuallyAssigned\t\t\t\t| The IsManuallyAssigned of material sale slots associated to the job.\t|\t\r\n| MaterialSaleSlots[0].IsDeleted\t\t\t\t| Whether the material sale slot is deleted.\t|\r\n| MaterialSaleSlots[0].Guid\t\t\t\t| The GUID associated to the material sale slot.|\r\n| MaterialSaleSlotSlotNumberFilter |  Used to filter on the material sale slot slot number. |\r\n| MaterialSaleSlotGuidFilter | Used to filter on the material sale slot guid. |\r\n| MaterialSaleSlotRelatedBookingSlotGuidFilter | Used to filter on the material sale slot related booking slot guid. |\r\n| MaterialSaleSlotRelatedCustomerGuidFilter | Used to filter on the material sale slot related customer guid. |\r\n","operationId":"Job_GetChanges","consumes":["application/json"],"produces":["application/json"],"parameters":[{"name":"since","in":"query","required":false,"type":"string"},{"name":"cursor","in":"query","required":false,"type":"string"},{"name":"links","in":"query","required":false,"type":"string"}],"responses":{"200":{"description":"OK","schema":{"$ref":"#/definitions/ApiResourceChanges[ApiIntegratorJobResource]"}}}}},"/transport/jobs/{guid}":{"get":{"tags":["Job"],"summary":"Find with GUID","description":"| Property                              | Description                                                                   |\r\n| ------------------------------------- | ----------------------------------------------------------------------------- |\r\n| GUID                                  | The GUID associated to the job.\t\t\t\t\t\t\t\t\t\t\t\t|\r\n| DeleteRouteAssignmentsOnCompletion\t| Whether to delete route assignments on completion of the job.\t\t\t\t\t|\r\n| InProgress\t\t\t\t\t\t\t| Is the job in progress?\t\t\t\t\t\t\t\t\t\t\t\t\t\t|\r\n| IsAdhoc\t\t\t\t\t\t\t\t| Is the job ad hoc?\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t|\r\n| IsCompleted\t\t\t\t\t\t\t| Is the job completed?\tFilterable.\t\t\t\t\t\t\t\t\t\t\t\t\t\t|\r\n| CompletedDate\t\t\t\t\t\t\t| The completed date of the job\t\t\t\t\t\t\t\t\t\t\t\t\t|\r\n| IsConfirmed\t\t\t\t\t\t\t| Is the job confirmed?\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t|\r\n| IsExternalTransport\t\t\t\t\t| Is the job using external transport?\t\t\t\t\t\t\t\t\t\t\t|\r\n| IsFinanciallyConfirmed\t\t\t\t| Is the job financially confirmed?\t\t\t\t\t\t\t\t\t\t\t\t|\t\r\n| IsHazardousPaperworkComplete\t\t\t| Is the hazardous paperwork complete?\t\t\t\t\t\t\t\t\t\t\t|\t\r\n| IsScheduledTransfer\t\t\t\t\t| Is the job a scheduled transfer?\t\t\t\t\t\t\t\t\t\t\t\t|\t\r\n| IsWarranty\t\t\t\t\t\t\t| Is the job a warranty?\t\t\t\t\t\t\t\t\t\t\t\t\t\t|\r\n| RelatedPONumberGuid\t\t\t\t\t| The GUID of related PONumber associated to the job. Filterable.\t\t\t\t\t|\r\n| RelatedRouteVisitGuid\t\t\t\t\t| The GUID of related routeVisit associated to the job. Filterable.\t\t\t\t\t|\r\n| RelatedScheduleGuid\t\t\t\t\t| The GUID of related schedule associated to the job. Filterable.\t\t\t\t\t|\r\n| RelatedSiteOrderGuid\t\t\t\t\t| The GUID of related siteorder associated to the job. Filterable.\t\t\t\t\t|\r\n| RelatedSiteOrderItemGuid\t\t\t\t| The GUID of related siteorder item associated to the job. Filterable.\t\t\t\t|\r\n| RelatedSupplierSiteTransportGuid\t\t| The GUID of related supplier site transport associated to the job. Filterable.\t|\r\n| RelatedExternalVehicleGuid            | The GUID of related external vehicle associated to the job. Filterable.\t\t\t|\r\n| ActionListItem\t\t\t\t\t\t| The GUID and description of the action associated to the job.\t\t\t\t\t|  \r\n| CancelledReasonListItem\t\t\t\t| The GUID and description of the cancellation reason associated to the job. \t|\r\n| CompanyOutletListItem\t\t\t\t\t| The GUID and description of the company outlet associated to the job. \t\t|\t\r\n| ContainerTypeListItem\t\t\t\t\t| The GUID and description of the container type associated to the job. \t\t|\t\r\n| DepartmentListItem\t\t\t\t\t| The GUID and description of the department associated to the job. \t\t\t|\t\r\n| MaterialListItem\t\t\t\t\t\t| The GUID and description of the material associated to the job. \t\t\t\t|\t\r\n| PaymentTypeListItem\t\t\t\t\t| The GUID and description of the payment type associated to the job. \t\t\t|\t\r\n| RepairReasonListItem\t\t\t\t\t| The GUID and description of the repair reason associated to the job. \t\t\t|\t\r\n| Access[]\t\t\t\t\t\t\t\t| The array of job access time associated to the job.\t\t\t\t\t\t\t|\r\n| Access[0].Contact\t\t\t\t\t\t| The contact associated to the job access time.\t\t\t\t\t\t\t\t|\r\n| Access[0].StartTime\t\t\t\t\t| The start time associated to the job access time in ISO format (YYYY-MM-DD HH:mm).|\r\n| Access[0].EndTime\t\t\t\t\t\t| The end time associated to the job access time in ISO format (YYYY-MM-DD HH:mm).\t|\r\n| Access[0].Notes\t\t\t\t\t\t| The notes time associated to the job access time.\t\t\t\t\t\t\t\t|\r\n| Access[0].DayOfWeekId  \t\t\t    | The day of the week associated to the job access time.\t\t\t\t\t\t|\r\n| Access[0].GUID\t\t\t\t\t\t| The Guid associated to the job access time.\t\t\t\t\t\t\t\t\t|\r\n| ContainerDetails\t\t\t\t\t\t| The container details object associated to the job.\t\t\t\t\t\t\t|\r\n| ContainerDetails.Delivered\t\t\t| The container delivered to the job.\t\t\t\t\t\t\t\t\t\t\t|\r\n| ContainerDetails.Delivered.RelatedContainerGuid | The GUID of the container delivered to the job.\t\t\t\t\t\t|\r\n| ContainerDetails.Delivered.ContainerTypeListItem | The GUID and description of the container type delivered to the job. |\r\n| ContainerDetails.Delivered.Notes\t\t| The delivered container notes.\t\t\t\t\t\t\t\t\t\t\t\t|\r\n| ContainerDetails.Delivered.SerialNo\t| The delivered container serial number.\t\t\t\t\t\t\t\t\t\t|\r\n| ContainerDetails.Delivered.Tag\t\t| The delivered container tag.\t\t\t\t\t\t\t\t\t\t\t\t\t|\t\r\n| ContainerDetails.Removed\t\t\t\t| The container removed from the job.\t\t\t\t\t\t\t\t\t\t\t|\t\r\n| ContainerDetails.Removed.RelatedContainerGuid\t| The GUID of the container removed from the job.\t\t\t\t\t\t|\r\n| ContainerDetails.Removed.ContainerTypeListItem | The GUID and description of the container type removed from to the job. |\r\n| ContainerDetails.Removed.Notes\t\t| The removed container notes.\t\t\t\t\t\t\t\t\t\t\t\t\t|\r\n| ContainerDetails.Removed.SerialNo\t\t| The removed container serial number.\t\t\t\t\t\t\t\t\t\t\t|\r\n| ContainerDetails.Removed.Tag\t\t\t| The removed container tag.\t\t\t\t\t\t\t\t\t\t\t\t\t|\t\r\n| VisitDetails\t\t\t\t\t\t\t| The visit details object associated to the job.\t\t\t\t\t\t\t\t|\t\r\n| VisitDetails.DriverNotes\t\t\t\t| The driver notes on the visit associated to the job.\t\t\t\t\t\t\t|\t\r\n| VisitDetails.TimeInCustomerSite\t\t| The time in on the visit associated to the job.\t\t\t\t\t\t\t\t|\r\n| VisitDetails.TimeOutCustomerSite\t\t| The time out on the visit associated to the job.\t\t\t\t\t\t\t\t|\r\n| VisitDetails.HoursChargable\t\t\t| The hours chargeable on the visit associated to the job.\t\t\t\t\t\t|\r\n| VisitDetails.HoursNotChargable\t\t| The hours not chargeable on the visit associated to the job.\t\t\t\t\t|\r\n| CustomerOrderNo\t\t\t\t\t\t| The customer order number associated to the job. Filterable.\t\t\t\t\t|\r\n| DateRequired\t\t\t\t\t\t\t| The date the job is required.\t\t\t\t\t\t\t\t\t\t\t\t\t|\r\n| HazardousLoadReference\t\t\t\t| The hazardous load reference associated to the job. Filterable.\t\t\t\t|\r\n| ManualTicketNo\t\t\t\t\t\t| The manual ticket number associated to the job. Filterable. \t\t\t\t\t|\r\n| Notes\t\t\t\t\t\t\t\t\t| The notes associated to the job.\t\t\t\t\t\t\t\t\t\t\t\t|\r\n| PONumber\t\t\t\t\t\t\t\t| The PO number associated to the job.\t\t\t\t\t\t\t\t\t\t\t|\r\n| Quantity\t\t\t\t\t\t\t\t| The quantity associated to the job.\t\t\t\t\t\t\t\t\t\t\t|\r\n| ReleaseNumber\t\t\t\t\t\t\t| The release number associated to the job.\t\t\t\t\t\t\t\t\t\t|\r\n| TicketNo\t\t\t\t\t\t\t\t| The ticket number associated to the job. Filterable. \t\t\t\t\t\t\t|\r\n| RejectedReasonListItem\t\t\t\t| The GUID and description of the job rejection reason.\t\t\t\t \t\t\t|\r\n| RelatedLocationDestinationGuid\t\t| Used to filter the related destination location guid associated to the job. Filterable. |\r\n| RelatedPictureBlobHashes\t\t\t\t\t\t| The array of related blob hashes and descriptions associated to the job.\t\t|\r\n| RelatedPictureBlobHashes[0].Description\t\t| The description of the blob.\t\t\t\t\t\t\t\t\t\t\t\t\t|\r\n| RelatedPictureBlobHashes[0].Hash\t\t\t\t| The hash of the blob to be used against the /blob endpoint. Files are provided as an octet stream which will need to be converted. |\r\n| PriceOverrides\t\t\t\t\t\t| The array of price overrides associated to the job.\t\t\t\t\t\t\t|\r\n| PriceOverrides[0].RelatedPriceGuid\t| The GUID of the price associated to the job price override.\t\t\t\t\t|\r\n| PriceOverrides[0].OverrideRate\t\t| The override rate associated to the job price override.\t\t\t\t\t\t|\r\n| PriceOverrides[0].Guid\t\t\t\t| The GUID associated to the job price override.\t\t\t\t\t\t\t\t|\r\n| PriceOverrides[0].IsSelected\t\t\t| The price isselected associated to the job price override.\t\t\t\t\t|\r\n| PriceOverrides[0].Breakdowns\t\t\t| The array of price breakdowns associated to the job price.\t\t\t\t\t|\r\n| PriceOverrides[0].Breakdowns[0].Guid\t| The GUID associated to the price breakdown.\t\t\t\t\t\t\t\t\t|\r\n| PriceOverrides[0].Breakdowns[0].IsDeleted\t| Whether the price breakdown is deleted.\t\t\t\t\t\t\t\t\t|\r\n| PriceOverrides[0].Breakdowns[0].FillLevel\t| The fill level associated to the price breakdown.\t\t\t\t\t\t\t|\r\n| PriceOverrides[0].Breakdowns[0].Quantity\t| The quantity associated to the price breakdown.\t\t\t\t\t\t\t|\r\n| PriceOverrides[0].Breakdowns[0].IsReceived\t| Whether the price breakdown is received.\t\t\t\t\t\t\t\t|\r\n| PriceOverrides[0].Breakdowns[0].Barcode\t| The BarCode associated to the price breakdown.\t\t\t\t\t\t\t|\r\n| PriceOverrides[0].Breakdowns[0].JobPriceBreakdownTypeEnum\t| The Job Price Breakdown Type associated to the price breakdown.\t|\r\n| RelatedPriceGuidFilter\t\t\t\t| Used to filter on the related price GUID.\t\t\t\t\t\t\t\t\t\t|\r\n| RelatedBlobJobDocketPdfHashes\t\t\t| The array of related job docket blob hashes. |\r\n| RelatedBlobJobDocketPdfHashes[0].Hash\t| The hash of the job docket blob to be used against the /blob endpoint. Files are provided as an octet stream which will need to be converted. |\r\n| RelatedWTNBlobHashes\t\t\t\t\t| The array of related waste transfer note blob hashes. |\r\n| RelatedWTNBlobHashes[0].Guid\t\t\t| The guid of the job waste transfer note blob.\t|\r\n| RelatedWTNBlobHashes[0].Hash\t\t\t| The hash of the job waste transfer note blob to be used against the /blob endpoint. Files are provided as an octet stream which will need to be converted. |\r\n| VATIntendedListItem\t\t\t\t\t| The GUID and description (code + rate) of the VAT associated to the job.\t\t|\r\n| RequiredStartTime\t\t\t\t\t\t| The start time at which the job is required.\t\t\t\t\t\t\t\t\t|\r\n| RequiredEndTime\t\t\t\t\t\t| The end time at which the job is required.\t\t\t\t\t\t\t\t\t|\r\n| ServiceListItem\t\t\t\t\t\t| The GUID and description of the Service associated to the job.\t\t\t\t|\r\n| LastChangeReasonListItem\t\t\t\t| The GUID and description of the last change reason associated to the job. \t|\r\n| LinkedJobs\t\t\t\t\t\t\t| The array of linked jobs associated to the job.\t\t\t\t\t\t\t\t|\r\n| LinkedJobs[0].Guid\t\t\t\t\t| The guid of the linked job associated to the job.\t\t\t\t\t\t\t\t|\r\n| LinkedJobs[0].IsDeleted\t\t\t\t| Whether the linked job is deleted.\t\t\t\t\t\t\t\t\t\t\t|\r\n| LinkedJobs[0].RelatedJobGuid\t\t\t| The job guid of the linked job associated to the job.\t\t\t\t\t\t\t|\r\n| Position\t\t\t\t\t\t\t\t| The position associated to the job.\t\t\t\t\t\t\t\t\t\t\t|\r\n| RelatedCreatedByUserGuid\t\t\t\t| The created by sys user guid associated to the job. Filterable.\t\t\t\t|\r\n| LinkedJobGuidFilter\t\t\t\t\t| Used to filter on linked job guid.\t\t\t\t\t\t\t\t\t\t\t|\r\n| RelatedJobGuidFilter\t\t\t\t\t| Used to filer on the job guid of the linked job.\t\t\t\t\t\t\t\t|\r\n| MaterialSaleSlots\t\t\t\t\t\t| The array of material sale slots associated to the job.\t\t\t\t\t\t|\r\n| MaterialSaleSlots[0].SlotNumber\t\t| The slot number associated to the job\tmaterial sale slot.\t\t\t\t\t\t|\r\n| MaterialSaleSlots[0].SlotDate\t\t\t| The slot date associated to the job material sale slot.\t\t\t\t\t\t|\r\n| MaterialSaleSlots[0].SlotTime\t\t\t| The slot time associated to the job material sale slot.\t\t\t\t\t\t|\r\n| MaterialSaleSlots[0].CompanyOutletListItem\t    | The GUID and description of the CompanyOutlet associated to the material sale slot. \t|\r\n| MaterialSaleSlots[0].MaterialListItem\t\t\t\t| The GUID and description of the Material associated to the material sale slot.\t\t\t|\r\n| MaterialSaleSlots[0].Notes\t\t\t\t\t\t| The notes associated to the job.\t\t\t\t\t\t|\r\n| MaterialSaleSlots[0].RelatedBookingSlotGuid\t\t| The guid of booking slot associated to the material sale slot.\t\t\t\t\t\t|\r\n| MaterialSaleSlots[0].RelatedCustomerGuid | The guid of customer associated to the material sale slot.\t\t\t\t\t\t\t|\r\n| MaterialSaleSlots[0].IsSchedule\t\t\t\t\t\t| The Schedule of material sale slots associated to the job.\t\t\t\t\t\t|\r\n| MaterialSaleSlots[0].IsManuallyAssigned\t\t\t\t| The IsManuallyAssigned of material sale slots associated to the job.\t|\t\r\n| MaterialSaleSlots[0].IsDeleted\t\t\t\t| Whether the material sale slot is deleted.\t|\r\n| MaterialSaleSlots[0].Guid\t\t\t\t| The GUID associated to the material sale slot.|\r\n| MaterialSaleSlotSlotNumberFilter |  Used to filter on the material sale slot slot number. |\r\n| MaterialSaleSlotGuidFilter | Used to filter on the material sale slot guid. |\r\n| MaterialSaleSlotRelatedBookingSlotGuidFilter | Used to filter on the material sale slot related booking slot guid. |\r\n| MaterialSaleSlotRelatedCustomerGuidFilter | Used to filter on the material sale slot related customer guid. |\r\n","operationId":"Job_Get","consumes":["application/json"],"produces":["application/json"],"parameters":[{"name":"guid","in":"path","required":true,"type":"string","format":"uuid"},{"name":"links","in":"query","required":false,"type":"string"},{"name":"include","in":"query","required":false,"type":"string"},{"name":"expand","in":"query","required":false,"type":"string"},{"name":"udf","in":"query","required":false,"type":"string"}],"responses":{"200":{"description":"OK","schema":{"$ref":"#/definitions/ApiResourceResultEntity[ApiIntegratorJobResource]"}}}},"put":{"tags":["Job"],"summary":"Partial update","description":"| Property                              | Description                                                                   | Required |\r\n| ------------------------------------- | ----------------------------------------------------------------------------- | -------- |\r\n| GUID                                  | The GUID associated to the job.\t\t\t\t\t\t\t\t\t\t\t\t| Yes |\r\n| DeleteRouteAssignmentsOnCompletion\t| Whether to delete route assignments on completion of the job.\t\t\t\t\t| Yes |\r\n| InProgress\t\t\t\t\t\t\t| Is the job in progress?\t\t\t\t\t\t\t\t\t\t\t\t\t\t| Yes |\r\n| IsAdhoc\t\t\t\t\t\t\t\t| Is the job ad hoc?\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t| Yes |\r\n| IsCompleted\t\t\t\t\t\t\t| Is the job completed?\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t| Yes |\r\n| CompletedDate\t\t\t\t\t\t\t| The completed date of the job\t\t\t\t\t\t\t\t\t\t\t\t\t| No |\r\n| IsConfirmed\t\t\t\t\t\t\t| Is the job confirmed?\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t| Yes |\r\n| IsExternalTransport\t\t\t\t\t| Is the job using external transport?\t\t\t\t\t\t\t\t\t\t\t| Yes |\r\n| IsFinanciallyConfirmed\t\t\t\t| Is the job financially confirmed?\t\t\t\t\t\t\t\t\t\t\t\t| Yes |\r\n| IsHazardousPaperworkComplete\t\t\t| Is the hazardous paperwork complete?\t\t\t\t\t\t\t\t\t\t\t| Yes |\r\n| IsScheduledTransfer\t\t\t\t\t| Is the job a scheduled transfer?\t\t\t\t\t\t\t\t\t\t\t\t| Yes |\r\n| IsWarranty\t\t\t\t\t\t\t| Is the job a warranty?\t\t\t\t\t\t\t\t\t\t\t\t\t\t| Yes |\r\n| RelatedPONumberGuid\t\t\t\t\t| The GUID of related PONumber associated to the job. \t\t\t\t\t\t\t| No |\r\n| RelatedRouteVisitGuid\t\t\t\t\t| The GUID of related routeVisit associated to the job. \t\t\t\t\t\t| No |\r\n| RelatedScheduleGuid\t\t\t\t\t| The GUID of related schedule associated to the job. \t\t\t\t\t\t\t| No |\r\n| RelatedSiteOrderGuid\t\t\t\t\t| The GUID of related siteorder associated to the job. \t\t\t\t\t\t\t| Yes (Not required for Transfer out weighingType)|\r\n| RelatedSiteOrderItemGuid\t\t\t\t| The GUID of related siteorder item associated to the job. \t\t\t\t\t| No (Required Only for Container Jobs) |\r\n| RelatedSupplierSiteTransportGuid\t\t| The GUID of related supplier site transport associated to the job. \t\t\t| No |\r\n| RelatedExternalVehicleGuid            | The GUID of related external vehicle associated to the job.                   | No |\r\n| ActionListItem\t\t\t\t\t\t| The GUID and description of the action associated to the job.\t\t\t\t\t| Yes |\r\n| CancelledReasonListItem\t\t\t\t| The GUID and description of the cancellation reason associated to the job. \t| No |\r\n| CompanyOutletListItem\t\t\t\t\t| The GUID and description of the company outlet associated to the job. \t\t| Yes |\r\n| ContainerTypeListItem\t\t\t\t\t| The GUID and description of the container type associated to the job. \t\t| Yes (Only for Container & Collection Jobs) |\r\n| DepartmentListItem\t\t\t\t\t| The GUID and description of the department associated to the job. \t\t\t| No |\r\n| MaterialListItem\t\t\t\t\t\t| The GUID and description of the material associated to the job. \t\t\t\t| Yes (Only for Container & Collection Jobs)|\r\n| PaymentTypeListItem\t\t\t\t\t| The GUID and description of the payment type associated to the job. \t\t\t| No |\r\n| RepairReasonListItem\t\t\t\t\t| The GUID and description of the repair reason associated to the job. \t\t\t| No |\r\n| Access[]\t\t\t\t\t\t\t\t| The array of job access time associated to the job.\t\t\t\t\t\t\t| No |\r\n| Access[0].Contact\t\t\t\t\t\t| The contact associated to the job access time.\t\t\t\t\t\t\t\t| No |\r\n| Access[0].StartTime\t\t\t\t\t| The start time associated to the job access time in ISO format (YYYY-MM-DD HH:mm).| Yes |\r\n| Access[0].EndTime\t\t\t\t\t\t| The end time associated to the job access time in ISO format (YYYY-MM-DD HH:mm).\t| Yes |\r\n| Access[0].Notes\t\t\t\t\t\t| The notes time associated to the job access time.\t\t\t\t\t\t\t\t| No |\r\n| Access[0].DayOfWeekId  \t\t\t    | The day of the week associated to the job access time.\t\t\t\t\t\t| Yes |\r\n| Access[0].GUID\t\t\t\t\t\t| The Guid associated to the job access time.\t\t\t\t\t\t\t\t\t| Yes |\r\n| ContainerDetails\t\t\t\t\t\t| The container details object associated to the job.\t\t\t\t\t\t\t| No |\r\n| ContainerDetails.Delivered\t\t\t| The container delivered to the job.\t\t\t\t\t\t\t\t\t\t\t| No |\r\n| ContainerDetails.Delivered.RelatedContainerGuid | The GUID of the container delivered to the job.\t\t\t\t\t\t| No |\r\n| ContainerDetails.Delivered.ContainerTypeListItem | The GUID and description of the container type delivered to the job. | No |\r\n| ContainerDetails.Delivered.Notes\t\t| The delivered container notes.\t\t\t\t\t\t\t\t\t\t\t\t| No |\r\n| ContainerDetails.Delivered.SerialNo\t| The delivered container serial number.\t\t\t\t\t\t\t\t\t\t| Yes |\r\n| ContainerDetails.Delivered.Tag\t\t| The delivered container tag.\t\t\t\t\t\t\t\t\t\t\t\t\t| Yes |\r\n| ContainerDetails.Removed\t\t\t\t| The container removed from the job.\t\t\t\t\t\t\t\t\t\t\t| No |\r\n| ContainerDetails.Removed.RelatedContainerGuid\t| The GUID of the container removed from the job.\t\t\t\t\t\t| No |\r\n| ContainerDetails.Removed.ContainerTypeListItem | The GUID and description of the container type removed from to the job. | No |\r\n| ContainerDetails.Removed.Notes\t\t| The removed container notes.\t\t\t\t\t\t\t\t\t\t\t\t\t| No |\r\n| ContainerDetails.Removed.SerialNo\t\t| The removed container serial number.\t\t\t\t\t\t\t\t\t\t\t| Yes |\r\n| ContainerDetails.Removed.Tag\t\t\t| The removed container tag.\t\t\t\t\t\t\t\t\t\t\t\t\t| Yes |\r\n| VisitDetails\t\t\t\t\t\t\t| The visit details object associated to the job.\t\t\t\t\t\t\t\t| No |\r\n| VisitDetails.DriverNotes\t\t\t\t| The driver notes on the visit associated to the job.\t\t\t\t\t\t\t| No |\r\n| VisitDetails.TimeInCustomerSite\t\t| The time in on the visit associated to the job.\t\t\t\t\t\t\t\t| No |\r\n| VisitDetails.TimeOutCustomerSite\t\t| The time out on the visit associated to the job.\t\t\t\t\t\t\t\t| No |\r\n| VisitDetails.HoursChargeable\t\t\t| The hours chargeable on the visit associated to the job.\t\t\t\t\t\t| No |\r\n| VisitDetails.HoursNotChargeable\t\t| The hours not chargeable on the visit associated to the job.\t\t\t\t\t| No |\r\n| CustomerOrderNo\t\t\t\t\t\t| The customer order number associated to the job.\t\t\t\t\t\t\t\t| No |\r\n| DateRequired\t\t\t\t\t\t\t| The date the job is required.\t\t\t\t\t\t\t\t\t\t\t\t\t| Yes |\r\n| HazardousLoadReference\t\t\t\t| The hazardous load reference associated to the job.\t\t\t\t\t\t\t| No |\r\n| ManualTicketNo\t\t\t\t\t\t| The manual ticket number associated to the job.\t\t\t\t\t\t\t\t| No |\r\n| Notes\t\t\t\t\t\t\t\t\t| The notes associated to the job.\t\t\t\t\t\t\t\t\t\t\t\t| No |\r\n| PONumber\t\t\t\t\t\t\t\t| The PO number associated to the job.\t\t\t\t\t\t\t\t\t\t\t| No |\r\n| Quantity\t\t\t\t\t\t\t\t| The quantity associated to the job.\t\t\t\t\t\t\t\t\t\t\t| No |\r\n| ReleaseNumber\t\t\t\t\t\t\t| The release number associated to the job.\t\t\t\t\t\t\t\t\t\t| No |\r\n| TicketNo\t\t\t\t\t\t\t\t| The ticket number associated to the job.\t\t\t\t\t\t\t\t\t\t| No |\r\n| RejectedReasonListItem\t\t\t\t| The GUID and description of the job rejection reason.\t\t\t\t \t\t\t| No |\r\n| RelatedLocationDestinationGuid\t\t| The GUID of the destination location associated with the job.\t\t\t\t\t| Yes |\r\n| RelatedPictureBlobHashes\t\t\t\t\t\t| The array of related blob hashes and descriptions associated to the job.\t\t| No |\r\n| RelatedPictureBlobHashes[0].Description\t\t| The description of the blob.\t\t\t\t\t\t\t\t\t\t\t\t\t| No |\r\n| RelatedPictureBlobHashes[0].Hash\t\t\t\t| The hash of the blob to be used against the /blob endpoint. Files are provided as an octet stream which will need to be converted. | No |\r\n| PriceOverrides\t\t\t\t\t\t| The array of price overrides associated to the job.\t\t\t\t\t\t\t| No |\r\n| PriceOverrides[0].RelatedPriceGuid\t| The GUID of the price associated to the job price override.\t\t\t\t\t| Yes |\r\n| PriceOverrides[0].OverrideRate\t\t| The override rate associated to the job price override.\t\t\t\t\t\t| No |\r\n| PriceOverrides[0].Guid\t\t\t\t| The GUID associated to the job price override.\t\t\t\t\t\t\t\t| Yes |\r\n| PriceOverrides[0].IsSelected\t\t\t| The price isselected associated to the job price override.\t\t\t\t\t| Yes |\r\n| PriceOverrides[0].Breakdowns\t\t\t| The array of price breakdowns associated to the job price.\t\t\t\t\t| No |\r\n| PriceOverrides[0].Breakdowns[0].Guid\t| The GUID associated to the price breakdown.\t\t\t\t\t\t\t\t\t| Yes |\r\n| PriceOverrides[0].Breakdowns[0].IsDeleted\t| Whether the price breakdown is deleted.\t\t\t\t\t\t\t\t\t| No |\r\n| PriceOverrides[0].Breakdowns[0].FillLevel\t| The fill level associated to the price breakdown.\t\t\t\t\t\t\t| Yes |\r\n| PriceOverrides[0].Breakdowns[0].Quantity\t| The quantity associated to the price breakdown.\t\t\t\t\t\t\t| Yes |\r\n| PriceOverrides[0].Breakdowns[0].IsReceived\t| Whether the price breakdown is received.\t\t\t\t\t\t\t\t| Yes |\r\n| PriceOverrides[0].Breakdowns[0].Barcode\t| The BarCode associated to the price breakdown.\t\t\t\t\t\t\t| No |\r\n| PriceOverrides[0].Breakdowns[0].JobPriceBreakdownTypeEnum\t| The Job Price Breakdown Type associated to the price breakdown.\t| Yes |\r\n| RelatedPriceGuidFilter\t\t\t\t| Used to filter on the related price GUID.\t\t\t\t\t\t\t\t\t\t| No |\r\n| RelatedBlobJobDocketPdfHashes\t\t\t| The array of related job docket blob hashes. | No |\r\n| RelatedBlobJobDocketPdfHashes[0].Hash\t| The hash of the job docket blob to be used against the /blob endpoint. Files are provided as an octet stream which will need to be converted. | No |\r\n| RelatedWTNBlobHashes\t\t\t\t\t| The array of related waste transfer note blob hashes. | No |\r\n| RelatedWTNBlobHashes[0].Guid\t\t\t| The guid of the job waste transfer note blob.\t| No |\r\n| RelatedWTNBlobHashes[0].Hash\t\t\t| The hash of the job waste transfer note blob to be used against the /blob endpoint. Files are provided as an octet stream which will need to be converted. | No |\r\n| VATIntendedListItem\t\t\t\t\t| The GUID and description (code + rate) of the VAT associated to the job.\t\t| No |\r\n| RequiredStartTime\t\t\t\t\t\t| The start time at which the job is required.\t\t\t\t\t\t\t\t\t| No |\r\n| RequiredEndTime\t\t\t\t\t\t| The end time at which the job is required.\t\t\t\t\t\t\t\t\t| No |\r\n| ServiceListItem\t\t\t\t\t\t| The GUID and description of the Service associated to the job.\t\t\t\t| No |\r\n| LastChangeReasonListItem\t\t\t\t| The GUID and description of the last change reason associated to the job. \t| No |\r\n| LinkedJobs\t\t\t\t\t\t\t| The array of linked jobs associated to the job.\t\t| No  |\r\n| LinkedJobs[0].Guid\t\t\t\t\t| The guid of the linked job-job associated to the job.\t| Yes |\r\n| LinkedJobs[0].IsDeleted\t\t\t\t| Whether the linked job-job is deleted.\t\t\t\t| Yes |\r\n| LinkedJobs[0].RelatedJobGuid\t\t\t| The guid of the linked job associated to the job.\t\t| Yes |\r\n| Position\t\t\t\t\t\t\t\t| The position associated to the job.\t\t\t\t\t| No |\r\n| RelatedCreatedByUserGuid\t\t\t\t| The created by sys user guid associated to the job.   | No |\r\n| MaterialSaleSlots\t\t\t\t\t\t| The array of material sale slots associated to the job.\t\t\t\t\t\t| No |\r\n| MaterialSaleSlots[0].SlotNumber\t\t| The slot number associated to the job\tmaterial sale slot.\t\t\t\t\t\t| Yes |\r\n| MaterialSaleSlots[0].SlotDate\t\t\t| The slot date associated to the job material sale slot.\t\t\t\t\t\t| Yes |\r\n| MaterialSaleSlots[0].SlotTime\t\t\t| The slot time associated to the job material sale slot.\t\t\t\t\t\t| No |\r\n| MaterialSaleSlots[0].CompanyOutletListItem\t    | The GUID and description of the CompanyOutlet associated to the material sale slot. \t| Yes |\r\n| MaterialSaleSlots[0].MaterialListItem\t\t\t\t| The GUID and description of the Material associated to the material sale slot.\t\t\t| Yes |\r\n| MaterialSaleSlots[0].Notes\t\t\t\t\t\t| The notes associated to the job.\t\t\t\t\t\t| No |\r\n| MaterialSaleSlots[0].RelatedBookingSlotGuid\t\t| The guid of booking slot associated to the material sale slot.\t\t\t\t\t\t| No |\r\n| MaterialSaleSlots[0].RelatedCustomerGuid | The guid of customer associated to the material sale slot.\t\t\t\t\t\t\t| No |\r\n| MaterialSaleSlots[0].IsSchedule\t\t\t\t\t\t| The Schedule of material sale slots associated to the job.\t\t\t\t\t\t| Yes |\r\n| MaterialSaleSlots[0].IsManuallyAssigned\t\t\t\t| The IsManuallyAssigned of material sale slots associated to the job.\t| Yes |\r\n| MaterialSaleSlots[0].IsDeleted\t\t\t\t| Whether the material sale slot is deleted.\t| Yes |\r\n| MaterialSaleSlots[0].Guid\t\t\t\t| The GUID associated to the material sale slot.| No |\r\n| MaterialSaleSlotSlotNumberFilter |  Used to filter on the material sale slot slot number. | No |\r\n| MaterialSaleSlotGuidFilter | Used to filter on the material sale slot guid. | No |\r\n| MaterialSaleSlotRelatedBookingSlotGuidFilter | Used to filter on the material sale slot related booking slot guid. | No |\r\n| MaterialSaleSlotRelatedCustomerGuidFilter | Used to filter on the material sale slot related customer guid. | No |\r\n\r\n## Extra validations\r\n\r\n| Condition | Error message |\r\n| --------- | ------------- |\r\n| Both Tag and SerialNo are null | Tag Or Serial Number: Must be entered. |\r\n| VisitDetails.HoursChargeable is changed on update | VisitDetails.HoursChargeable is a read-only property. |\r\n| ContainerDetails.Delivered is not null and ContainerDetails.Delivered.ContainerTypeListItem is not null | ContainerDetails.Delivered.ContainerTypeListItem is a read-only property. |\r\n| ContainerDetails.Removed is not null and ContainerDetails.Removed.ContainerTypeListItem is not null | ContainerDetails.Removed.ContainerTypeListItem is a read-only property. |\r\n| RejectedReasonListItem is not in one of the following reason categories: Callout Rejects, Lift Problem, Job Scheduled for Unexpected Day, Reject Schedule, Job Cancelled | RejectedReasonListItem must be in one of the following reason categories: Callout Rejects, Lift Problem, Job Scheduled for Unexpected Day, Reject Schedule, Job Cancelled. |\r\n| Job access times cannot overlap | Job.Access.StartTime and Job.Access.EndTime cannot overlap. |\r\n| RelatedBlobJobDocketPdfHashes[0].Hash is not null for Update and the Job did not have RelatedBlobJobDocketPdfHashes initially | Failed to save/update Job because RelatedBlobJobDocketPdfHashes do not exist for the Job. |\r\n| RelatedBlobJobDocketPdfHashes[0].Hash is not null for Update and Invalid Hash | Could not find JobDocketOutput matching template. |\r\n| If the GUID passed to VATIntendedListItem has a value that is not in the VAT table OR is deleted | Failed to save/update Job because The supplied VAT is not valid. The update has been rejected. Change the VATIntendedListItem to the Guid of a valid and undeleted VAT. |\r\n| If the RequiredEndTime is before RequiredStartTime | Failed to save/update Job because RequiredEndTime should not be before RequiredStartDate. |\r\n| If action type belongs to container job | RelatedSiteOrderItemGuid is required. |\r\n| If Action or ContainerType or Material changed on PriceOverrides PUT | Failed to save. Job with PriceOverrides cannot be set if Action or ContainerType or Material are changed. |\r\n| ActionListItem or ContainerTypeListItem is not valid for job prices | Failed to save/update Job because related SiteOrder does not have prices for given Action and ContainerType. |\r\n| If ServiceListItem is changed or not null | ServiceListItem.Guid is a read-only property. |\r\n| If the GUID passed to ActionListItem has a value that is not in the Action table OR is deleted | Failed to save/update Job because the supplied Action is not valid. The update has been rejected. Change the ActionListItem to the Guid of a valid and undeleted Action |\r\n| If the GUID passed to LastChangeReasonListItem has a value that is deleted | The provided LastChangeReasonListItem is deleted. Could not update the resource. Please check the relevant list end point for the available options. |\r\n| If an Invalid value for JobPriceBreakdownTypeEnum is provided | An invalid JobPriceBreakdownType was provided. Could not action the request. Please provide one of the following values: Collected,LeftOnSite |\r\n| If the Breakdowns provided do not match the PriceOverrides | The Breakdowns and PriceOverrides do not match. The resource could not be created/updated. Ensure that Breakdowns.Guid references a Breakdowns of PriceOverrides. |\r\n| If LinkedJobs.IsDeleted is null | The mandatory property LinkedJobs.IsDeleted has a null value. The request could not be processed. Supply a value for the LinkedJobs.IsDeleted property of the submitted resource. |\r\n| If LinkedJobs.IsDeleted is true | IsDeleted is TRUE. Could not process the request. LinkedJobs can not be deleted via the REST API. |\r\n| If RelatedCreatedByUserGuid is changed on update | RelatedCreatedByUserGuid is a read-only property. |\r\n| If RelatedWTNBlobHashes array value is being edited | RelatedWTNBlobHashes is a read-only property. |\r\n| If RelatedWTNBlobHashes Guid is duplicate | The Guid must be unique per RelatedWTNBlobHashes |","operationId":"Job_Update","consumes":["application/json"],"produces":["application/json"],"parameters":[{"name":"guid","in":"path","required":true,"type":"string","format":"uuid"},{"in":"body","required":true,"schema":{"$ref":"#/definitions/ApiResourceId"}}],"responses":{"200":{"description":"OK","schema":{"$ref":"#/definitions/ApiResourceId"}}}}},"/transport/jobs":{"get":{"tags":["Job"],"summary":"Find with Filters","description":"| Property                              | Description                                                                   |\r\n| ------------------------------------- | ----------------------------------------------------------------------------- |\r\n| GUID                                  | The GUID associated to the job.\t\t\t\t\t\t\t\t\t\t\t\t|\r\n| DeleteRouteAssignmentsOnCompletion\t| Whether to delete route assignments on completion of the job.\t\t\t\t\t|\r\n| InProgress\t\t\t\t\t\t\t| Is the job in progress?\t\t\t\t\t\t\t\t\t\t\t\t\t\t|\r\n| IsAdhoc\t\t\t\t\t\t\t\t| Is the job ad hoc?\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t|\r\n| IsCompleted\t\t\t\t\t\t\t| Is the job completed?\tFilterable.\t\t\t\t\t\t\t\t\t\t\t\t\t\t|\r\n| CompletedDate\t\t\t\t\t\t\t| The completed date of the job\t\t\t\t\t\t\t\t\t\t\t\t\t|\r\n| IsConfirmed\t\t\t\t\t\t\t| Is the job confirmed?\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t|\r\n| IsExternalTransport\t\t\t\t\t| Is the job using external transport?\t\t\t\t\t\t\t\t\t\t\t|\r\n| IsFinanciallyConfirmed\t\t\t\t| Is the job financially confirmed?\t\t\t\t\t\t\t\t\t\t\t\t|\t\r\n| IsHazardousPaperworkComplete\t\t\t| Is the hazardous paperwork complete?\t\t\t\t\t\t\t\t\t\t\t|\t\r\n| IsScheduledTransfer\t\t\t\t\t| Is the job a scheduled transfer?\t\t\t\t\t\t\t\t\t\t\t\t|\t\r\n| IsWarranty\t\t\t\t\t\t\t| Is the job a warranty?\t\t\t\t\t\t\t\t\t\t\t\t\t\t|\r\n| RelatedPONumberGuid\t\t\t\t\t| The GUID of related PONumber associated to the job. Filterable.\t\t\t\t\t|\r\n| RelatedRouteVisitGuid\t\t\t\t\t| The GUID of related routeVisit associated to the job. Filterable.\t\t\t\t\t|\r\n| RelatedScheduleGuid\t\t\t\t\t| The GUID of related schedule associated to the job. Filterable.\t\t\t\t\t|\r\n| RelatedSiteOrderGuid\t\t\t\t\t| The GUID of related siteorder associated to the job. Filterable.\t\t\t\t\t|\r\n| RelatedSiteOrderItemGuid\t\t\t\t| The GUID of related siteorder item associated to the job. Filterable.\t\t\t\t|\r\n| RelatedSupplierSiteTransportGuid\t\t| The GUID of related supplier site transport associated to the job. Filterable.\t|\r\n| RelatedExternalVehicleGuid            | The GUID of related external vehicle associated to the job. Filterable.\t\t\t|\r\n| ActionListItem\t\t\t\t\t\t| The GUID and description of the action associated to the job.\t\t\t\t\t|  \r\n| CancelledReasonListItem\t\t\t\t| The GUID and description of the cancellation reason associated to the job. \t|\r\n| CompanyOutletListItem\t\t\t\t\t| The GUID and description of the company outlet associated to the job. \t\t|\t\r\n| ContainerTypeListItem\t\t\t\t\t| The GUID and description of the container type associated to the job. \t\t|\t\r\n| DepartmentListItem\t\t\t\t\t| The GUID and description of the department associated to the job. \t\t\t|\t\r\n| MaterialListItem\t\t\t\t\t\t| The GUID and description of the material associated to the job. \t\t\t\t|\t\r\n| PaymentTypeListItem\t\t\t\t\t| The GUID and description of the payment type associated to the job. \t\t\t|\t\r\n| RepairReasonListItem\t\t\t\t\t| The GUID and description of the repair reason associated to the job. \t\t\t|\t\r\n| Access[]\t\t\t\t\t\t\t\t| The array of job access time associated to the job.\t\t\t\t\t\t\t|\r\n| Access[0].Contact\t\t\t\t\t\t| The contact associated to the job access time.\t\t\t\t\t\t\t\t|\r\n| Access[0].StartTime\t\t\t\t\t| The start time associated to the job access time in ISO format (YYYY-MM-DD HH:mm).|\r\n| Access[0].EndTime\t\t\t\t\t\t| The end time associated to the job access time in ISO format (YYYY-MM-DD HH:mm).\t|\r\n| Access[0].Notes\t\t\t\t\t\t| The notes time associated to the job access time.\t\t\t\t\t\t\t\t|\r\n| Access[0].DayOfWeekId  \t\t\t    | The day of the week associated to the job access time.\t\t\t\t\t\t|\r\n| Access[0].GUID\t\t\t\t\t\t| The Guid associated to the job access time.\t\t\t\t\t\t\t\t\t|\r\n| ContainerDetails\t\t\t\t\t\t| The container details object associated to the job.\t\t\t\t\t\t\t|\r\n| ContainerDetails.Delivered\t\t\t| The container delivered to the job.\t\t\t\t\t\t\t\t\t\t\t|\r\n| ContainerDetails.Delivered.RelatedContainerGuid | The GUID of the container delivered to the job.\t\t\t\t\t\t|\r\n| ContainerDetails.Delivered.ContainerTypeListItem | The GUID and description of the container type delivered to the job. |\r\n| ContainerDetails.Delivered.Notes\t\t| The delivered container notes.\t\t\t\t\t\t\t\t\t\t\t\t|\r\n| ContainerDetails.Delivered.SerialNo\t| The delivered container serial number.\t\t\t\t\t\t\t\t\t\t|\r\n| ContainerDetails.Delivered.Tag\t\t| The delivered container tag.\t\t\t\t\t\t\t\t\t\t\t\t\t|\t\r\n| ContainerDetails.Removed\t\t\t\t| The container removed from the job.\t\t\t\t\t\t\t\t\t\t\t|\t\r\n| ContainerDetails.Removed.RelatedContainerGuid\t| The GUID of the container removed from the job.\t\t\t\t\t\t|\r\n| ContainerDetails.Removed.ContainerTypeListItem | The GUID and description of the container type removed from to the job. |\r\n| ContainerDetails.Removed.Notes\t\t| The removed container notes.\t\t\t\t\t\t\t\t\t\t\t\t\t|\r\n| ContainerDetails.Removed.SerialNo\t\t| The removed container serial number.\t\t\t\t\t\t\t\t\t\t\t|\r\n| ContainerDetails.Removed.Tag\t\t\t| The removed container tag.\t\t\t\t\t\t\t\t\t\t\t\t\t|\t\r\n| VisitDetails\t\t\t\t\t\t\t| The visit details object associated to the job.\t\t\t\t\t\t\t\t|\t\r\n| VisitDetails.DriverNotes\t\t\t\t| The driver notes on the visit associated to the job.\t\t\t\t\t\t\t|\t\r\n| VisitDetails.TimeInCustomerSite\t\t| The time in on the visit associated to the job.\t\t\t\t\t\t\t\t|\r\n| VisitDetails.TimeOutCustomerSite\t\t| The time out on the visit associated to the job.\t\t\t\t\t\t\t\t|\r\n| VisitDetails.HoursChargable\t\t\t| The hours chargeable on the visit associated to the job.\t\t\t\t\t\t|\r\n| VisitDetails.HoursNotChargable\t\t| The hours not chargeable on the visit associated to the job.\t\t\t\t\t|\r\n| CustomerOrderNo\t\t\t\t\t\t| The customer order number associated to the job. Filterable.\t\t\t\t\t|\r\n| DateRequired\t\t\t\t\t\t\t| The date the job is required.\t\t\t\t\t\t\t\t\t\t\t\t\t|\r\n| HazardousLoadReference\t\t\t\t| The hazardous load reference associated to the job. Filterable.\t\t\t\t|\r\n| ManualTicketNo\t\t\t\t\t\t| The manual ticket number associated to the job. Filterable. \t\t\t\t\t|\r\n| Notes\t\t\t\t\t\t\t\t\t| The notes associated to the job.\t\t\t\t\t\t\t\t\t\t\t\t|\r\n| PONumber\t\t\t\t\t\t\t\t| The PO number associated to the job.\t\t\t\t\t\t\t\t\t\t\t|\r\n| Quantity\t\t\t\t\t\t\t\t| The quantity associated to the job.\t\t\t\t\t\t\t\t\t\t\t|\r\n| ReleaseNumber\t\t\t\t\t\t\t| The release number associated to the job.\t\t\t\t\t\t\t\t\t\t|\r\n| TicketNo\t\t\t\t\t\t\t\t| The ticket number associated to the job. Filterable. \t\t\t\t\t\t\t|\r\n| RejectedReasonListItem\t\t\t\t| The GUID and description of the job rejection reason.\t\t\t\t \t\t\t|\r\n| RelatedLocationDestinationGuid\t\t| Used to filter the related destination location guid associated to the job. Filterable. |\r\n| RelatedPictureBlobHashes\t\t\t\t\t\t| The array of related blob hashes and descriptions associated to the job.\t\t|\r\n| RelatedPictureBlobHashes[0].Description\t\t| The description of the blob.\t\t\t\t\t\t\t\t\t\t\t\t\t|\r\n| RelatedPictureBlobHashes[0].Hash\t\t\t\t| The hash of the blob to be used against the /blob endpoint. Files are provided as an octet stream which will need to be converted. |\r\n| PriceOverrides\t\t\t\t\t\t| The array of price overrides associated to the job.\t\t\t\t\t\t\t|\r\n| PriceOverrides[0].RelatedPriceGuid\t| The GUID of the price associated to the job price override.\t\t\t\t\t|\r\n| PriceOverrides[0].OverrideRate\t\t| The override rate associated to the job price override.\t\t\t\t\t\t|\r\n| PriceOverrides[0].Guid\t\t\t\t| The GUID associated to the job price override.\t\t\t\t\t\t\t\t|\r\n| PriceOverrides[0].IsSelected\t\t\t| The price isselected associated to the job price override.\t\t\t\t\t|\r\n| PriceOverrides[0].Breakdowns\t\t\t| The array of price breakdowns associated to the job price.\t\t\t\t\t|\r\n| PriceOverrides[0].Breakdowns[0].Guid\t| The GUID associated to the price breakdown.\t\t\t\t\t\t\t\t\t|\r\n| PriceOverrides[0].Breakdowns[0].IsDeleted\t| Whether the price breakdown is deleted.\t\t\t\t\t\t\t\t\t|\r\n| PriceOverrides[0].Breakdowns[0].FillLevel\t| The fill level associated to the price breakdown.\t\t\t\t\t\t\t|\r\n| PriceOverrides[0].Breakdowns[0].Quantity\t| The quantity associated to the price breakdown.\t\t\t\t\t\t\t|\r\n| PriceOverrides[0].Breakdowns[0].IsReceived\t| Whether the price breakdown is received.\t\t\t\t\t\t\t\t|\r\n| PriceOverrides[0].Breakdowns[0].Barcode\t| The BarCode associated to the price breakdown.\t\t\t\t\t\t\t|\r\n| PriceOverrides[0].Breakdowns[0].JobPriceBreakdownTypeEnum\t| The Job Price Breakdown Type associated to the price breakdown.\t|\r\n| RelatedPriceGuidFilter\t\t\t\t| Used to filter on the related price GUID.\t\t\t\t\t\t\t\t\t\t|\r\n| RelatedBlobJobDocketPdfHashes\t\t\t| The array of related job docket blob hashes. |\r\n| RelatedBlobJobDocketPdfHashes[0].Hash\t| The hash of the job docket blob to be used against the /blob endpoint. Files are provided as an octet stream which will need to be converted. |\r\n| RelatedWTNBlobHashes\t\t\t\t\t| The array of related waste transfer note blob hashes. |\r\n| RelatedWTNBlobHashes[0].Guid\t\t\t| The guid of the job waste transfer note blob.\t|\r\n| RelatedWTNBlobHashes[0].Hash\t\t\t| The hash of the job waste transfer note blob to be used against the /blob endpoint. Files are provided as an octet stream which will need to be converted. |\r\n| VATIntendedListItem\t\t\t\t\t| The GUID and description (code + rate) of the VAT associated to the job.\t\t|\r\n| RequiredStartTime\t\t\t\t\t\t| The start time at which the job is required.\t\t\t\t\t\t\t\t\t|\r\n| RequiredEndTime\t\t\t\t\t\t| The end time at which the job is required.\t\t\t\t\t\t\t\t\t|\r\n| ServiceListItem\t\t\t\t\t\t| The GUID and description of the Service associated to the job.\t\t\t\t|\r\n| LastChangeReasonListItem\t\t\t\t| The GUID and description of the last change reason associated to the job. \t|\r\n| LinkedJobs\t\t\t\t\t\t\t| The array of linked jobs associated to the job.\t\t\t\t\t\t\t\t|\r\n| LinkedJobs[0].Guid\t\t\t\t\t| The guid of the linked job associated to the job.\t\t\t\t\t\t\t\t|\r\n| LinkedJobs[0].IsDeleted\t\t\t\t| Whether the linked job is deleted.\t\t\t\t\t\t\t\t\t\t\t|\r\n| LinkedJobs[0].RelatedJobGuid\t\t\t| The job guid of the linked job associated to the job.\t\t\t\t\t\t\t|\r\n| Position\t\t\t\t\t\t\t\t| The position associated to the job.\t\t\t\t\t\t\t\t\t\t\t|\r\n| RelatedCreatedByUserGuid\t\t\t\t| The created by sys user guid associated to the job. Filterable.\t\t\t\t|\r\n| LinkedJobGuidFilter\t\t\t\t\t| Used to filter on linked job guid.\t\t\t\t\t\t\t\t\t\t\t|\r\n| RelatedJobGuidFilter\t\t\t\t\t| Used to filer on the job guid of the linked job.\t\t\t\t\t\t\t\t|\r\n| MaterialSaleSlots\t\t\t\t\t\t| The array of material sale slots associated to the job.\t\t\t\t\t\t|\r\n| MaterialSaleSlots[0].SlotNumber\t\t| The slot number associated to the job\tmaterial sale slot.\t\t\t\t\t\t|\r\n| MaterialSaleSlots[0].SlotDate\t\t\t| The slot date associated to the job material sale slot.\t\t\t\t\t\t|\r\n| MaterialSaleSlots[0].SlotTime\t\t\t| The slot time associated to the job material sale slot.\t\t\t\t\t\t|\r\n| MaterialSaleSlots[0].CompanyOutletListItem\t    | The GUID and description of the CompanyOutlet associated to the material sale slot. \t|\r\n| MaterialSaleSlots[0].MaterialListItem\t\t\t\t| The GUID and description of the Material associated to the material sale slot.\t\t\t|\r\n| MaterialSaleSlots[0].Notes\t\t\t\t\t\t| The notes associated to the job.\t\t\t\t\t\t|\r\n| MaterialSaleSlots[0].RelatedBookingSlotGuid\t\t| The guid of booking slot associated to the material sale slot.\t\t\t\t\t\t|\r\n| MaterialSaleSlots[0].RelatedCustomerGuid | The guid of customer associated to the material sale slot.\t\t\t\t\t\t\t|\r\n| MaterialSaleSlots[0].IsSchedule\t\t\t\t\t\t| The Schedule of material sale slots associated to the job.\t\t\t\t\t\t|\r\n| MaterialSaleSlots[0].IsManuallyAssigned\t\t\t\t| The IsManuallyAssigned of material sale slots associated to the job.\t|\t\r\n| MaterialSaleSlots[0].IsDeleted\t\t\t\t| Whether the material sale slot is deleted.\t|\r\n| MaterialSaleSlots[0].Guid\t\t\t\t| The GUID associated to the material sale slot.|\r\n| MaterialSaleSlotSlotNumberFilter |  Used to filter on the material sale slot slot number. |\r\n| MaterialSaleSlotGuidFilter | Used to filter on the material sale slot guid. |\r\n| MaterialSaleSlotRelatedBookingSlotGuidFilter | Used to filter on the material sale slot related booking slot guid. |\r\n| MaterialSaleSlotRelatedCustomerGuidFilter | Used to filter on the material sale slot related customer guid. |\r\n","operationId":"Job_GetCollection","consumes":["application/json"],"produces":["application/json"],"parameters":[{"name":"filter","in":"query","required":false,"type":"string"},{"name":"search","in":"query","required":false,"type":"string"},{"name":"order","in":"query","required":false,"type":"string"},{"name":"max","in":"query","required":false,"type":"integer","format":"int32"},{"name":"page","in":"query","required":false,"type":"integer","format":"int32"},{"name":"includeCount","in":"query","required":false,"type":"boolean"},{"name":"includeDeleted","in":"query","required":false,"type":"boolean"},{"name":"links","in":"query","required":false,"type":"string"},{"name":"udf","in":"query","required":false,"type":"string"}],"responses":{"200":{"description":"OK","schema":{"$ref":"#/definitions/ApiResourceResultCollection[ApiIntegratorJobResource]"}}}},"post":{"tags":["Job"],"summary":"Create or update","description":"| Property                              | Description                                                                   | Required |\r\n| ------------------------------------- | ----------------------------------------------------------------------------- | -------- |\r\n| GUID                                  | The GUID associated to the job.\t\t\t\t\t\t\t\t\t\t\t\t| No |\r\n| DeleteRouteAssignmentsOnCompletion\t| Whether to delete route assignments on completion of the job.\t\t\t\t\t| Yes |\r\n| InProgress\t\t\t\t\t\t\t| Is the job in progress?\t\t\t\t\t\t\t\t\t\t\t\t\t\t| Yes |\r\n| IsAdhoc\t\t\t\t\t\t\t\t| Is the job ad hoc?\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t| Yes |\r\n| IsCompleted\t\t\t\t\t\t\t| Is the job completed?\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t| Yes |\r\n| CompletedDate\t\t\t\t\t\t\t| The completed date of the job\t\t\t\t\t\t\t\t\t\t\t\t\t| No |\r\n| IsConfirmed\t\t\t\t\t\t\t| Is the job confirmed?\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t| Yes |\r\n| IsExternalTransport\t\t\t\t\t| Is the job using external transport?\t\t\t\t\t\t\t\t\t\t\t| Yes |\r\n| IsFinanciallyConfirmed\t\t\t\t| Is the job financially confirmed?\t\t\t\t\t\t\t\t\t\t\t\t| Yes |\r\n| IsHazardousPaperworkComplete\t\t\t| Is the hazardous paperwork complete?\t\t\t\t\t\t\t\t\t\t\t| Yes |\r\n| IsScheduledTransfer\t\t\t\t\t| Is the job a scheduled transfer?\t\t\t\t\t\t\t\t\t\t\t\t| Yes |\r\n| IsWarranty\t\t\t\t\t\t\t| Is the job a warranty?\t\t\t\t\t\t\t\t\t\t\t\t\t\t| Yes |\r\n| RelatedPONumberGuid\t\t\t\t\t| The GUID of related PONumber associated to the job. \t\t\t\t\t\t\t| No |\r\n| RelatedRouteVisitGuid\t\t\t\t\t| The GUID of related routeVisit associated to the job. \t\t\t\t\t\t| No |\r\n| RelatedScheduleGuid\t\t\t\t\t| The GUID of related schedule associated to the job. \t\t\t\t\t\t\t| No |\r\n| RelatedSiteOrderGuid\t\t\t\t\t| The GUID of related siteorder associated to the job. \t\t\t\t\t\t\t| Yes (Not required for Transfer out weighingType)|\r\n| RelatedSiteOrderItemGuid\t\t\t\t| The GUID of related siteorder item associated to the job. \t\t\t\t\t| No (Required Only for Container Jobs) |\r\n| RelatedSupplierSiteTransportGuid\t\t| The GUID of related supplier site transport associated to the job. \t\t\t| No |\r\n| RelatedExternalVehicleGuid            | The GUID of related external vehicle associated to the job.                   | No |\r\n| ActionListItem\t\t\t\t\t\t| The GUID and description of the action associated to the job.\t\t\t\t\t| Yes |\r\n| CancelledReasonListItem\t\t\t\t| The GUID and description of the cancellation reason associated to the job. \t| No |\r\n| CompanyOutletListItem\t\t\t\t\t| The GUID and description of the company outlet associated to the job. \t\t| Yes |\r\n| ContainerTypeListItem\t\t\t\t\t| The GUID and description of the container type associated to the job. \t\t| Yes (Only for Container & Collection Jobs) |\r\n| DepartmentListItem\t\t\t\t\t| The GUID and description of the department associated to the job. \t\t\t| No |\r\n| MaterialListItem\t\t\t\t\t\t| The GUID and description of the material associated to the job. \t\t\t\t| Yes (Only for Container & Collection Jobs)|\r\n| PaymentTypeListItem\t\t\t\t\t| The GUID and description of the payment type associated to the job. \t\t\t| No |\r\n| RepairReasonListItem\t\t\t\t\t| The GUID and description of the repair reason associated to the job. \t\t\t| No |\r\n| Access[]\t\t\t\t\t\t\t\t| The array of job access time associated to the job.\t\t\t\t\t\t\t| No |\r\n| Access[0].Contact\t\t\t\t\t\t| The contact associated to the job access time.\t\t\t\t\t\t\t\t| No |\r\n| Access[0].StartTime\t\t\t\t\t| The start time associated to the job access time in ISO format (YYYY-MM-DD HH:mm).| Yes |\r\n| Access[0].EndTime\t\t\t\t\t\t| The end time associated to the job access time in ISO format (YYYY-MM-DD HH:mm).\t| Yes |\r\n| Access[0].Notes\t\t\t\t\t\t| The notes time associated to the job access time.\t\t\t\t\t\t\t\t| No |\r\n| Access[0].DayOfWeekId  \t\t\t    | The day of the week associated to the job access time.\t\t\t\t\t\t| Yes |\r\n| Access[0].GUID\t\t\t\t\t\t| The Guid associated to the job access time.\t\t\t\t\t\t\t\t\t| No |\r\n| ContainerDetails\t\t\t\t\t\t| The container details object associated to the job.\t\t\t\t\t\t\t| No |\r\n| ContainerDetails.Delivered\t\t\t| The container delivered to the job.\t\t\t\t\t\t\t\t\t\t\t| No |\r\n| ContainerDetails.Delivered.RelatedContainerGuid | The GUID of the container delivered to the job.\t\t\t\t\t\t| No |\r\n| ContainerDetails.Delivered.ContainerTypeListItem | The GUID and description of the container type delivered to the job. | No |\r\n| ContainerDetails.Delivered.Notes\t\t| The delivered container notes.\t\t\t\t\t\t\t\t\t\t\t\t| No |\r\n| ContainerDetails.Delivered.SerialNo\t| The delivered container serial number.\t\t\t\t\t\t\t\t\t\t| Yes |\r\n| ContainerDetails.Delivered.Tag\t\t| The delivered container tag.\t\t\t\t\t\t\t\t\t\t\t\t\t| Yes |\r\n| ContainerDetails.Removed\t\t\t\t| The container removed from the job.\t\t\t\t\t\t\t\t\t\t\t| No |\r\n| ContainerDetails.Removed.RelatedContainerGuid\t| The GUID of the container removed from the job.\t\t\t\t\t\t| No |\r\n| ContainerDetails.Removed.ContainerTypeListItem | The GUID and description of the container type removed from to the job. | No |\r\n| ContainerDetails.Removed.Notes\t\t| The removed container notes.\t\t\t\t\t\t\t\t\t\t\t\t\t| No |\r\n| ContainerDetails.Removed.SerialNo\t\t| The removed container serial number.\t\t\t\t\t\t\t\t\t\t\t| Yes |\r\n| ContainerDetails.Removed.Tag\t\t\t| The removed container tag.\t\t\t\t\t\t\t\t\t\t\t\t\t| Yes |\r\n| VisitDetails\t\t\t\t\t\t\t| The visit details object associated to the job.\t\t\t\t\t\t\t\t| No |\r\n| VisitDetails.DriverNotes\t\t\t\t| The driver notes on the visit associated to the job.\t\t\t\t\t\t\t| No |\r\n| VisitDetails.TimeInCustomerSite\t\t| The time in on the visit associated to the job.\t\t\t\t\t\t\t\t| No |\r\n| VisitDetails.TimeOutCustomerSite\t\t| The time out on the visit associated to the job.\t\t\t\t\t\t\t\t| No |\r\n| VisitDetails.HoursChargeable\t\t\t| The hours chargeable on the visit associated to the job.\t\t\t\t\t\t| No |\r\n| VisitDetails.HoursNotChargeable\t\t| The hours not chargeable on the visit associated to the job.\t\t\t\t\t| No |\r\n| CustomerOrderNo\t\t\t\t\t\t| The customer order number associated to the job.\t\t\t\t\t\t\t\t| No |\r\n| DateRequired\t\t\t\t\t\t\t| The date the job is required.\t\t\t\t\t\t\t\t\t\t\t\t\t| Yes |\r\n| HazardousLoadReference\t\t\t\t| The hazardous load reference associated to the job.\t\t\t\t\t\t\t| No |\r\n| ManualTicketNo\t\t\t\t\t\t| The manual ticket number associated to the job.\t\t\t\t\t\t\t\t| No |\r\n| Notes\t\t\t\t\t\t\t\t\t| The notes associated to the job.\t\t\t\t\t\t\t\t\t\t\t\t| No |\r\n| PONumber\t\t\t\t\t\t\t\t| The PO number associated to the job.\t\t\t\t\t\t\t\t\t\t\t| No |\r\n| Quantity\t\t\t\t\t\t\t\t| The quantity associated to the job.\t\t\t\t\t\t\t\t\t\t\t| No |\r\n| ReleaseNumber\t\t\t\t\t\t\t| The release number associated to the job.\t\t\t\t\t\t\t\t\t\t| No |\r\n| TicketNo\t\t\t\t\t\t\t\t| The ticket number associated to the job.\t\t\t\t\t\t\t\t\t\t| No |\r\n| RejectedReasonListItem\t\t\t\t| The GUID and description of the job rejection reason.\t\t\t\t \t\t\t| No |\r\n| RelatedLocationDestinationGuid\t\t| The GUID of the destination location associated with the job.\t\t\t\t\t| Yes |\r\n| RelatedPictureBlobHashes\t\t\t\t\t\t| The array of related blob hashes and descriptions associated to the job.\t\t| No |\r\n| RelatedPictureBlobHashes[0].Description\t\t| The description of the blob.\t\t\t\t\t\t\t\t\t\t\t\t\t| No |\r\n| RelatedPictureBlobHashes[0].Hash\t\t\t\t| The hash of the blob to be used against the /blob endpoint. Files are provided as an octet stream which will need to be converted. | No |\r\n| PriceOverrides\t\t\t\t\t\t| The array of price overrides associated to the job.\t\t\t\t\t\t\t| No |\r\n| PriceOverrides[0].RelatedPriceGuid\t| The GUID of the price associated to the job price override.\t\t\t\t\t| Yes |\r\n| PriceOverrides[0].OverrideRate\t\t| The override rate associated to the job price override.\t\t\t\t\t\t| No |\r\n| PriceOverrides[0].Guid\t\t\t\t| The GUID associated to the job price override.\t\t\t\t\t\t\t\t| No |\r\n| PriceOverrides[0].IsSelected\t\t\t| The price isselected associated to the job price override.\t\t\t\t\t| Yes |\r\n| PriceOverrides[0].Breakdowns\t\t\t| The array of price breakdowns associated to the job price.\t\t\t\t\t| No |\r\n| PriceOverrides[0].Breakdowns[0].Guid\t| The GUID associated to the price breakdown.\t\t\t\t\t\t\t\t\t| No |\r\n| PriceOverrides[0].Breakdowns[0].IsDeleted\t| Whether the price breakdown is deleted.\t\t\t\t\t\t\t\t\t| No |\r\n| PriceOverrides[0].Breakdowns[0].FillLevel\t| The fill level associated to the price breakdown.\t\t\t\t\t\t\t| Yes |\r\n| PriceOverrides[0].Breakdowns[0].Quantity\t| The quantity associated to the price breakdown.\t\t\t\t\t\t\t| Yes |\r\n| PriceOverrides[0].Breakdowns[0].IsReceived\t| Whether the price breakdown is received.\t\t\t\t\t\t\t\t| Yes |\r\n| PriceOverrides[0].Breakdowns[0].Barcode\t| The BarCode associated to the price breakdown.\t\t\t\t\t\t\t| No |\r\n| PriceOverrides[0].Breakdowns[0].JobPriceBreakdownTypeEnum\t| The Job Price Breakdown Type associated to the price breakdown.\t| Yes |\r\n| RelatedPriceGuidFilter\t\t\t\t| Used to filter on the related price GUID.\t\t\t\t\t\t\t\t\t\t| No |\r\n| RelatedBlobJobDocketPdfHashes\t\t\t| The array of related job docket blob hashes. | No |\r\n| RelatedBlobJobDocketPdfHashes[0].Hash\t| The hash of the job docket blob to be used against the /blob endpoint. Files are provided as an octet stream which will need to be converted. | No |\r\n| RelatedWTNBlobHashes\t\t\t\t\t| The array of related waste transfer note blob hashes. | No |\r\n| RelatedWTNBlobHashes[0].Guid\t\t\t| The guid of the job waste transfer note blob.\t| No |\r\n| RelatedWTNBlobHashes[0].Hash\t\t\t| The hash of the job waste transfer note blob to be used against the /blob endpoint. Files are provided as an octet stream which will need to be converted. | No |\r\n| VATIntendedListItem\t\t\t\t\t| The GUID and description (code + rate) of the VAT associated to the job.\t\t| No |\r\n| RequiredStartTime\t\t\t\t\t\t| The start time at which the job is required.\t\t\t\t\t\t\t\t\t| No |\r\n| RequiredEndTime\t\t\t\t\t\t| The end time at which the job is required.\t\t\t\t\t\t\t\t\t| No |\r\n| ServiceListItem\t\t\t\t\t\t| The GUID and description of the Service associated to the job.\t\t\t\t| No |\r\n| LastChangeReasonListItem\t\t\t\t| The GUID and description of the last change reason associated to the job. \t| No |\r\n| LinkedJobs\t\t\t\t\t\t\t| The array of linked jobs associated to the job.\t\t| No  |\r\n| LinkedJobs[0].Guid\t\t\t\t\t| The guid of the linked job-job associated to the job.\t| No  |\r\n| LinkedJobs[0].IsDeleted\t\t\t\t| Whether the linked job-job is deleted.\t\t\t\t| Yes |\r\n| LinkedJobs[0].RelatedJobGuid\t\t\t| The guid of the linked job associated to the job.\t\t| Yes |\r\n| Position\t\t\t\t\t\t\t\t| The position associated to the job.\t\t\t\t\t| No |\r\n| RelatedCreatedByUserGuid\t\t\t\t| The created by sys user guid associated to the job.\t| No |\r\n| MaterialSaleSlots\t\t\t\t\t\t| The array of material sale slots associated to the job.\t\t\t\t\t\t| No |\r\n| MaterialSaleSlots[0].SlotNumber\t\t| The slot number associated to the job\tmaterial sale slot.\t\t\t\t\t\t| Yes |\r\n| MaterialSaleSlots[0].SlotDate\t\t\t| The slot date associated to the job material sale slot.\t\t\t\t\t\t| Yes |\r\n| MaterialSaleSlots[0].SlotTime\t\t\t| The slot time associated to the job material sale slot.\t\t\t\t\t\t| No |\r\n| MaterialSaleSlots[0].CompanyOutletListItem\t    | The GUID and description of the CompanyOutlet associated to the material sale slot. \t| Yes |\r\n| MaterialSaleSlots[0].MaterialListItem\t\t\t\t| The GUID and description of the Material associated to the material sale slot.\t\t\t| Yes |\r\n| MaterialSaleSlots[0].Notes\t\t\t\t\t\t| The notes associated to the job.\t\t\t\t\t\t| No |\r\n| MaterialSaleSlots[0].RelatedBookingSlotGuid\t\t| The guid of booking slot associated to the material sale slot.\t\t\t\t\t\t| No |\r\n| MaterialSaleSlots[0].RelatedCustomerGuid | The guid of customer associated to the material sale slot.\t\t\t\t\t\t\t| No |\r\n| MaterialSaleSlots[0].IsSchedule\t\t\t\t\t\t| The Schedule of material sale slots associated to the job.\t\t\t\t\t\t| Yes |\r\n| MaterialSaleSlots[0].IsManuallyAssigned\t\t\t\t| The IsManuallyAssigned of material sale slots associated to the job.\t| Yes |\r\n| MaterialSaleSlots[0].IsDeleted\t\t\t\t| Whether the material sale slot is deleted.\t| Yes |\r\n| MaterialSaleSlots[0].Guid\t\t\t\t| The GUID associated to the material sale slot.| No |\r\n| MaterialSaleSlotSlotNumberFilter |  Used to filter on the material sale slot slot number. | No |\r\n| MaterialSaleSlotGuidFilter | Used to filter on the material sale slot guid. | No |\r\n| MaterialSaleSlotRelatedBookingSlotGuidFilter | Used to filter on the material sale slot related booking slot guid. | No |\r\n| MaterialSaleSlotRelatedCustomerGuidFilter | Used to filter on the material sale slot related customer guid. | No |\r\n\r\n## Extra validations\r\n\r\n| Condition | Error message |\r\n| --------- | ------------- |\r\n| Both Tag and SerialNo are null | Tag Or Serial Number: Must be entered. |\r\n| VisitDetails.HoursChargeable is not null | VisitDetails.HoursChargeable is a read-only property. |\r\n| ContainerDetails.Delivered is not null and ContainerDetails.Delivered.ContainerTypeListItem is not null | ContainerDetails.Delivered.ContainerTypeListItem is a read-only property. |\r\n| ContainerDetails.Removed is not null and ContainerDetails.Removed.ContainerTypeListItem is not null | ContainerDetails.Removed.ContainerTypeListItem is a read-only property. |\r\n| RejectedReasonListItem is not in one of the following reason categories: Callout Rejects, Lift Problem, Job Scheduled for Unexpected Day, Reject Schedule, Job Cancelled | RejectedReasonListItem must be in one of the following reason categories: Callout Rejects, Lift Problem, Job Scheduled for Unexpected Day, Reject Schedule, Job Cancelled. |\r\n| Job access times cannot overlap | Job.Access.StartTime and Job.Access.EndTime cannot overlap. |\r\n| RelatedBlobJobDocketPdfHashes[0].Hash is not null for Insert | Failed to save Job because RelatedBlobJobDocketPdfHashes creation is not permitted. |\r\n| RelatedBlobJobDocketPdfHashes[0].Hash is not null for Update and the Job did not have RelatedBlobJobDocketPdfHashes initially | Failed to save/update Job because RelatedBlobJobDocketPdfHashes do not exist for the Job. |\r\n| RelatedBlobJobDocketPdfHashes[0].Hash is not null for Update and Invalid Hash | Could not find JobDocketOutput matching template. |\r\n| If the GUID passed to VATIntendedListItem has a value that is not in the VAT table OR is deleted | Failed to save/update Job because The supplied VAT is not valid. The update has been rejected. Change the VATIntendedListItem to the Guid of a valid and undeleted VAT. |\r\n| If the RequiredEndTime is before RequiredStartTime | Failed to save/update Job because RequiredEndTime should not be before RequiredStartDate. |\r\n| If action type belongs to container job | RelatedSiteOrderItemGuid is required. |\r\n| If Action or ContainerType or Material changed on PriceOverrides update | Failed to save. Job with PriceOverrides cannot be set if Action or ContainerType or Material are changed. |\r\n| ActionListItem or ContainerTypeListItem is not valid for job prices | Failed to save/update Job because related SiteOrder does not have prices for given Action and ContainerType. |\r\n| If ServiceListItem is not null | ServiceListItem.Guid: is not supported. |\r\n| If the GUID passed to ActionListItem has a value that is not in the Action table OR is deleted | Failed to save/update Job because the supplied Action is not valid. The update has been rejected. Change the ActionListItem to the Guid of a valid and undeleted Action |\r\n| If the GUID passed to LastChangeReasonListItem has a value that is deleted | The provided LastChangeReasonListItem is deleted. Could not update the resource. Please check the relevant list end point for the available options. |\r\n| If an Invalid value for JobPriceBreakdownTypeEnum is provided on update | An invalid JobPriceBreakdownType was provided. Could not action the request. Please provide one of the following values: Collected,LeftOnSite |\r\n| If the Breakdowns provided do not match the PriceOverrides on update | The Breakdowns and PriceOverrides do not match. The resource could not be created/updated. Ensure that Breakdowns.Guid references a Breakdowns of PriceOverrides. |\r\n| If LinkedJobs.Guid is not null | LinkedJobs.Guid: is not supported. |\r\n| If LinkedJobs.IsDeleted is null | The mandatory property LinkedJobs.IsDeleted has a null value. The request could not be processed. Supply a value for the LinkedJobs.IsDeleted property of the submitted resource. |\r\n| If LinkedJobs.IsDeleted is true | IsDeleted is TRUE. Could not process the request. LinkedJobs can not be deleted via the REST API. |\r\n| Slot number already exists | Failed to save/update Job because the material sale slot that you are trying to save conflicts with an existing item. Each material sale slot must be unique in terms of SlotNumber. |\r\n| If RelatedWTNBlobHashes is not null for Insert | Failed to save Job because RelatedWTNBlobHashes creation is not permitted. |\r\n| If RelatedWTNBlobHashes array value is being edited | RelatedWTNBlobHashes is a read-only property. |\r\n| If RelatedWTNBlobHashes Guid is duplicate | The Guid must be unique per RelatedWTNBlobHashes |\r\n| If PriceOverrides[0].Guid is not null on insert | PriceOverrides.Guid: is not supported. |\r\n| If PriceOverrides[0]Breakdowns[0].Guid is not null on insert | PriceOverrides.Breakdowns.Guid: is not supported. |","operationId":"Job_Create","consumes":["application/json"],"produces":["application/json"],"parameters":[{"in":"body","required":true,"schema":{"$ref":"#/definitions/ApiResourceId"}}],"responses":{"200":{"description":"OK","schema":{"$ref":"#/definitions/ApiResourceId"}}}}},"/lists/latePaymentFeeTypes/{guid}":{"get":{"tags":["LatePaymentFeeType"],"summary":"Find with GUID","description":"| Property                  | Description                                                              |\r\n| ------------------------- | ------------------------------------------------------------------------ |\r\n| GUID                      | The GUID associated to the latepaymentfeetype                              |\r\n| Description               | The description of the latepaymentfeetype                                  |\r\n| IsDeleted                 | Whether the latepaymentfeetype is deleted\t      \t \t\t\t\t\t\t |\r\n| LatePaymentFeeListItem\t| The GUID and description of the latePaymentFee\t\t\t\t\t         |","operationId":"LatePaymentFeeType_Get","consumes":["application/json"],"produces":["application/json"],"parameters":[{"name":"guid","in":"path","required":true,"type":"string","format":"uuid"},{"name":"links","in":"query","required":false,"type":"string"},{"name":"include","in":"query","required":false,"type":"string"},{"name":"expand","in":"query","required":false,"type":"string"},{"name":"udf","in":"query","required":false,"type":"string"}],"responses":{"200":{"description":"OK","schema":{"$ref":"#/definitions/ApiResourceResultEntity[ApiIntegratorLatePaymentFeeTypeResource]"}}}}},"/lists/latePaymentFeeTypes":{"get":{"tags":["LatePaymentFeeType"],"summary":"Find with Filters","description":"| Property                  | Description                                                              |\r\n| ------------------------- | ------------------------------------------------------------------------ |\r\n| GUID                      | The GUID associated to the latepaymentfeetype                              |\r\n| Description               | The description of the latepaymentfeetype                                  |\r\n| IsDeleted                 | Whether the latepaymentfeetype is deleted\t      \t \t\t\t\t\t\t |\r\n| LatePaymentFeeListItem\t| The GUID and description of the latePaymentFee\t\t\t\t\t         |","operationId":"LatePaymentFeeType_GetCollection","consumes":["application/json"],"produces":["application/json"],"parameters":[{"name":"filter","in":"query","required":false,"type":"string"},{"name":"search","in":"query","required":false,"type":"string"},{"name":"order","in":"query","required":false,"type":"string"},{"name":"max","in":"query","required":false,"type":"integer","format":"int32"},{"name":"page","in":"query","required":false,"type":"integer","format":"int32"},{"name":"includeCount","in":"query","required":false,"type":"boolean"},{"name":"includeDeleted","in":"query","required":false,"type":"boolean"},{"name":"links","in":"query","required":false,"type":"string"},{"name":"udf","in":"query","required":false,"type":"string"}],"responses":{"200":{"description":"OK","schema":{"$ref":"#/definitions/ApiResourceResultCollection[ApiIntegratorLatePaymentFeeTypeResource]"}}}}},"/transport/liftEvents/changes":{"get":{"tags":["LiftEvent"],"summary":"Retrieve changes","description":"| Property\t\t\t\t\t\t\t\t\t\t\t| Description\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t|\r\n| ------------------------------------------------- | ------------------------------------------------------------------------------------------------- |\r\n| GUID\t\t\t\t\t\t\t\t\t\t\t\t| The GUID associated to the lift event.\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t|\r\n| IsAutoGPSMatching\t\t\t\t\t\t\t\t\t| Is AutoGPSMatching in the lift event?\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t|\r\n| IsAutoGPSMatchingResult\t\t\t\t\t\t\t| Is AutoGPSMatchingResult in the lift event?\t\t\t\t\t\t\t\t\t\t\t\t\t\t|\r\n| IsBilled\t\t\t\t\t\t\t\t\t\t\t| Is Billed in the lift event?\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t|\r\n| IsCollected\t\t\t\t\t\t\t\t\t\t| Is Collected in the lift event?\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t|\r\n| IsContaminated\t\t\t\t\t\t\t\t\t| Is Contaminated in the lift event?\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t|\r\n| IsDriverGPSMatching\t\t\t\t\t\t\t\t| Is DriverGPSMatching in the lift event?\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t|\r\n| IsDriverGPSMatchingResult\t\t\t\t\t\t\t| Is DriverGPSMatchingResult in the lift event?\t\t\t\t\t\t\t\t\t\t\t\t\t\t|\r\n| IsDumped\t\t\t\t\t\t\t\t\t\t\t| Is Dumped in the lift event?\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t|\r\n| IsAdHoc\t\t\t\t\t\t\t\t\t\t\t| Is AdHoc in the lift event?\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t|\r\n| IsCombinedLift\t\t\t\t\t\t\t\t\t| Is CombinedLift in the lift event?\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t|\r\n| IsGeoCompressed\t\t\t\t\t\t\t\t\t| Is GeoCompressed in the lift event?\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t|\r\n| IsManual\t\t\t\t\t\t\t\t\t\t\t| Is Manual in the lift event?\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t|\r\n| IsOnHold\t\t\t\t\t\t\t\t\t\t\t| Is OnHold\t in the lift event?\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t|\r\n| IsOverridden\t\t\t\t\t\t\t\t\t\t| Is Overridden in the lift event?\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t|\r\n| IsStopListed\t\t\t\t\t\t\t\t\t\t| Is StopListed in the lift event?\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t|\r\n| BaseWeight\t\t\t\t\t\t\t\t\t\t| Base weight of the lift event.\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t|\r\n| ChargeWeight\t\t\t\t\t\t\t\t\t\t| Charge weight of the lift event.\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t|\r\n| GrossWeight\t\t\t\t\t\t\t\t\t\t| Gross weight of the lift event.\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t|\r\n| NetWeight\t\t\t\t\t\t\t\t\t\t\t| Net weight of the lift event.\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t|\r\n| TareWeight\t\t\t\t\t\t\t\t\t\t| Tare weight of the lift event.\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t|\r\n| Weight\t\t\t\t\t\t\t\t\t\t\t| Weight of the lift event.\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t|\r\n| DoubleDumps\t\t\t\t\t\t\t\t\t\t| Double dumps of the lift event.\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t|\r\n| ErrorCodeWeight\t\t\t\t\t\t\t\t\t| Error code weight of the lift event.\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t|\r\n| ErrorCodeTag\t\t\t\t\t\t\t\t\t\t| Error code tag of the lift event.\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t|\r\n| LifterSide\t\t\t\t\t\t\t\t\t\t| Lifter side of the lift event.\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t|\r\n| NumberOfPictures\t\t\t\t\t\t\t\t\t| Number of pictures of the lift event.\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t|\r\n| QuantityCollected\t\t\t\t\t\t\t\t\t| Quantity collected of the lift event.\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t|\r\n| RouteInstanceOrderNumber\t\t\t\t\t\t\t| Route instance order number of the lift event.\t\t\t\t\t\t\t\t\t\t\t\t\t|\r\n| RouteVersion\t\t\t\t\t\t\t\t\t\t| Route version of the lift event.\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t|\r\n| GPSMatchingSourceListItem\t\t\t\t\t\t\t| The GUID and description of the GPS matching source associated to the lift event.\t\t\t\t\t|\r\n| ReasonLastChangeListItem\t\t\t\t\t\t\t| The GUID and description of the reason for last change associated to the lift event.\t\t\t\t|\r\n| ReasonLiftInformationListItem\t\t\t\t\t\t| The GUID and description of the reason for lift information associated to the lift event.\t\t\t|\r\n| ReasonLiftProblemListItem\t\t\t\t\t\t\t| The GUID and description of the reason for lift problem associated to the lift event.\t\t\t\t|\r\n| ContainerTypeNewOfficeListItem\t\t\t\t\t| The GUID and description of the container type associated to the lift event.\t\t\t\t\t\t|\r\n| MaterialTypeNewOfficeListItem\t\t\t\t\t\t| The GUID and description of the material associated to the lift event.\t\t\t\t\t\t\t|\r\n| UnitOfMeasurementListItem\t\t\t\t\t\t\t| The GUID and description of the unit of measurement associated to the lift event.\t\t\t\t\t|\r\n| WeightChangeReasonListItem\t\t\t\t\t\t| The GUID and description of the reason for weight change associated to the lift event.\t\t\t|\r\n| Location\t\t\t\t\t\t\t\t\t\t\t| The latitude and longitude of the location associated to the lift event.\t\t\t\t\t\t\t|\r\n| VehicleCode\t\t\t\t\t\t\t\t\t\t| The vehicle code associated to the lift event. Filterable.\t\t\t\t\t\t\t\t\t\t|\r\n| InformationText\t\t\t\t\t\t\t\t\t| The information text associated to the lift event.\t\t\t\t\t\t\t\t\t\t\t\t|\r\n| LiftDataXml\t\t\t\t\t\t\t\t\t\t| The lift data xml associated to the lift event.\t\t\t\t\t\t\t\t\t\t\t\t\t|\r\n| LiftText\t\t\t\t\t\t\t\t\t\t\t| The lift text associated to the lift event.\t\t\t\t\t\t\t\t\t\t\t\t\t\t|\r\n| ProblemText\t\t\t\t\t\t\t\t\t\t| The problem text associated to the lift event.\t\t\t\t\t\t\t\t\t\t\t\t\t|\r\n| Tag\t\t\t\t\t\t\t\t\t\t\t\t| The tag associated to the lift event. Filterable.\t\t\t\t\t\t\t\t\t\t\t\t\t|\r\n| CollectionDate\t\t\t\t\t\t\t\t\t| The collection date associated to the lift event. Filterable.\t\t\t\t\t\t\t\t\t\t|\r\n| CollectionTimeStamp\t\t\t\t\t\t\t\t| The collection timestamp associated to the lift event.\t\t\t\t\t\t\t\t\t\t\t|\r\n| ImportTimeStamp\t\t\t\t\t\t\t\t\t| The import timestamp associated to the lift event.\t\t\t\t\t\t\t\t\t\t\t\t|\r\n| InstrumentTimeStamp\t\t\t\t\t\t\t\t| The instrument timestamp associated to the lift event.\t\t\t\t\t\t\t\t\t\t\t|\r\n| RouteInstanceStartTime\t\t\t\t\t\t\t| The route instance start time associated to the lift event.\t\t\t\t\t\t\t\t\t\t|\r\n| RelatedUserRecordedByGuid\t\t\t\t\t\t\t| The GUID associated to the user of the lift event. Filterable.\t\t\t\t\t\t\t\t\t|\r\n| RelatedRouteGuid\t\t\t\t\t\t\t\t\t| The GUID associated to the route of the lift event. Filterable.\t\t\t\t\t\t\t\t\t|\r\n| RelatedRouteVisitGuid\t\t\t\t\t\t\t\t| The GUID associated to the route visit of the lift event. Filterable.\t\t\t\t\t\t\t\t|\r\n| RelatedSiteOrderContainerGuid\t\t\t\t\t\t| The GUID associated to the site order item of the lift event. Filterable.\t\t\t\t\t\t\t|\r\n| RelatedVehicleGuid\t\t\t\t\t\t\t\t| The GUID associated to the vehicle of the lift event.\tFilterable.\t\t\t\t\t\t\t\t\t\t\t|\r\n| IsDeleted\t\t\t\t\t\t\t\t\t\t\t| Lift event is being deleted?\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t|\r\n","operationId":"LiftEvent_GetChanges","consumes":["application/json"],"produces":["application/json"],"parameters":[{"name":"since","in":"query","required":false,"type":"string"},{"name":"cursor","in":"query","required":false,"type":"string"},{"name":"links","in":"query","required":false,"type":"string"}],"responses":{"200":{"description":"OK","schema":{"$ref":"#/definitions/ApiResourceChanges[ApiIntegratorLiftEventResource]"}}}}},"/transport/liftEvents/{guid}":{"get":{"tags":["LiftEvent"],"summary":"Find with GUID","description":"| Property\t\t\t\t\t\t\t\t\t\t\t| Description\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t|\r\n| ------------------------------------------------- | ------------------------------------------------------------------------------------------------- |\r\n| GUID\t\t\t\t\t\t\t\t\t\t\t\t| The GUID associated to the lift event.\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t|\r\n| IsAutoGPSMatching\t\t\t\t\t\t\t\t\t| Is AutoGPSMatching in the lift event?\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t|\r\n| IsAutoGPSMatchingResult\t\t\t\t\t\t\t| Is AutoGPSMatchingResult in the lift event?\t\t\t\t\t\t\t\t\t\t\t\t\t\t|\r\n| IsBilled\t\t\t\t\t\t\t\t\t\t\t| Is Billed in the lift event?\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t|\r\n| IsCollected\t\t\t\t\t\t\t\t\t\t| Is Collected in the lift event?\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t|\r\n| IsContaminated\t\t\t\t\t\t\t\t\t| Is Contaminated in the lift event?\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t|\r\n| IsDriverGPSMatching\t\t\t\t\t\t\t\t| Is DriverGPSMatching in the lift event?\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t|\r\n| IsDriverGPSMatchingResult\t\t\t\t\t\t\t| Is DriverGPSMatchingResult in the lift event?\t\t\t\t\t\t\t\t\t\t\t\t\t\t|\r\n| IsDumped\t\t\t\t\t\t\t\t\t\t\t| Is Dumped in the lift event?\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t|\r\n| IsAdHoc\t\t\t\t\t\t\t\t\t\t\t| Is AdHoc in the lift event?\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t|\r\n| IsCombinedLift\t\t\t\t\t\t\t\t\t| Is CombinedLift in the lift event?\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t|\r\n| IsGeoCompressed\t\t\t\t\t\t\t\t\t| Is GeoCompressed in the lift event?\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t|\r\n| IsManual\t\t\t\t\t\t\t\t\t\t\t| Is Manual in the lift event?\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t|\r\n| IsOnHold\t\t\t\t\t\t\t\t\t\t\t| Is OnHold\t in the lift event?\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t|\r\n| IsOverridden\t\t\t\t\t\t\t\t\t\t| Is Overridden in the lift event?\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t|\r\n| IsStopListed\t\t\t\t\t\t\t\t\t\t| Is StopListed in the lift event?\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t|\r\n| BaseWeight\t\t\t\t\t\t\t\t\t\t| Base weight of the lift event.\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t|\r\n| ChargeWeight\t\t\t\t\t\t\t\t\t\t| Charge weight of the lift event.\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t|\r\n| GrossWeight\t\t\t\t\t\t\t\t\t\t| Gross weight of the lift event.\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t|\r\n| NetWeight\t\t\t\t\t\t\t\t\t\t\t| Net weight of the lift event.\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t|\r\n| TareWeight\t\t\t\t\t\t\t\t\t\t| Tare weight of the lift event.\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t|\r\n| Weight\t\t\t\t\t\t\t\t\t\t\t| Weight of the lift event.\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t|\r\n| DoubleDumps\t\t\t\t\t\t\t\t\t\t| Double dumps of the lift event.\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t|\r\n| ErrorCodeWeight\t\t\t\t\t\t\t\t\t| Error code weight of the lift event.\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t|\r\n| ErrorCodeTag\t\t\t\t\t\t\t\t\t\t| Error code tag of the lift event.\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t|\r\n| LifterSide\t\t\t\t\t\t\t\t\t\t| Lifter side of the lift event.\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t|\r\n| NumberOfPictures\t\t\t\t\t\t\t\t\t| Number of pictures of the lift event.\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t|\r\n| QuantityCollected\t\t\t\t\t\t\t\t\t| Quantity collected of the lift event.\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t|\r\n| RouteInstanceOrderNumber\t\t\t\t\t\t\t| Route instance order number of the lift event.\t\t\t\t\t\t\t\t\t\t\t\t\t|\r\n| RouteVersion\t\t\t\t\t\t\t\t\t\t| Route version of the lift event.\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t|\r\n| GPSMatchingSourceListItem\t\t\t\t\t\t\t| The GUID and description of the GPS matching source associated to the lift event.\t\t\t\t\t|\r\n| ReasonLastChangeListItem\t\t\t\t\t\t\t| The GUID and description of the reason for last change associated to the lift event.\t\t\t\t|\r\n| ReasonLiftInformationListItem\t\t\t\t\t\t| The GUID and description of the reason for lift information associated to the lift event.\t\t\t|\r\n| ReasonLiftProblemListItem\t\t\t\t\t\t\t| The GUID and description of the reason for lift problem associated to the lift event.\t\t\t\t|\r\n| ContainerTypeNewOfficeListItem\t\t\t\t\t| The GUID and description of the container type associated to the lift event.\t\t\t\t\t\t|\r\n| MaterialTypeNewOfficeListItem\t\t\t\t\t\t| The GUID and description of the material associated to the lift event.\t\t\t\t\t\t\t|\r\n| UnitOfMeasurementListItem\t\t\t\t\t\t\t| The GUID and description of the unit of measurement associated to the lift event.\t\t\t\t\t|\r\n| WeightChangeReasonListItem\t\t\t\t\t\t| The GUID and description of the reason for weight change associated to the lift event.\t\t\t|\r\n| Location\t\t\t\t\t\t\t\t\t\t\t| The latitude and longitude of the location associated to the lift event.\t\t\t\t\t\t\t|\r\n| VehicleCode\t\t\t\t\t\t\t\t\t\t| The vehicle code associated to the lift event. Filterable.\t\t\t\t\t\t\t\t\t\t|\r\n| InformationText\t\t\t\t\t\t\t\t\t| The information text associated to the lift event.\t\t\t\t\t\t\t\t\t\t\t\t|\r\n| LiftDataXml\t\t\t\t\t\t\t\t\t\t| The lift data xml associated to the lift event.\t\t\t\t\t\t\t\t\t\t\t\t\t|\r\n| LiftText\t\t\t\t\t\t\t\t\t\t\t| The lift text associated to the lift event.\t\t\t\t\t\t\t\t\t\t\t\t\t\t|\r\n| ProblemText\t\t\t\t\t\t\t\t\t\t| The problem text associated to the lift event.\t\t\t\t\t\t\t\t\t\t\t\t\t|\r\n| Tag\t\t\t\t\t\t\t\t\t\t\t\t| The tag associated to the lift event. Filterable.\t\t\t\t\t\t\t\t\t\t\t\t\t|\r\n| CollectionDate\t\t\t\t\t\t\t\t\t| The collection date associated to the lift event. Filterable.\t\t\t\t\t\t\t\t\t\t|\r\n| CollectionTimeStamp\t\t\t\t\t\t\t\t| The collection timestamp associated to the lift event.\t\t\t\t\t\t\t\t\t\t\t|\r\n| ImportTimeStamp\t\t\t\t\t\t\t\t\t| The import timestamp associated to the lift event.\t\t\t\t\t\t\t\t\t\t\t\t|\r\n| InstrumentTimeStamp\t\t\t\t\t\t\t\t| The instrument timestamp associated to the lift event.\t\t\t\t\t\t\t\t\t\t\t|\r\n| RouteInstanceStartTime\t\t\t\t\t\t\t| The route instance start time associated to the lift event.\t\t\t\t\t\t\t\t\t\t|\r\n| RelatedUserRecordedByGuid\t\t\t\t\t\t\t| The GUID associated to the user of the lift event. Filterable.\t\t\t\t\t\t\t\t\t|\r\n| RelatedRouteGuid\t\t\t\t\t\t\t\t\t| The GUID associated to the route of the lift event. Filterable.\t\t\t\t\t\t\t\t\t|\r\n| RelatedRouteVisitGuid\t\t\t\t\t\t\t\t| The GUID associated to the route visit of the lift event. Filterable.\t\t\t\t\t\t\t\t|\r\n| RelatedSiteOrderContainerGuid\t\t\t\t\t\t| The GUID associated to the site order item of the lift event. Filterable.\t\t\t\t\t\t\t|\r\n| RelatedVehicleGuid\t\t\t\t\t\t\t\t| The GUID associated to the vehicle of the lift event.\tFilterable.\t\t\t\t\t\t\t\t\t\t\t|\r\n| IsDeleted\t\t\t\t\t\t\t\t\t\t\t| Lift event is being deleted?\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t|\r\n","operationId":"LiftEvent_Get","consumes":["application/json"],"produces":["application/json"],"parameters":[{"name":"guid","in":"path","required":true,"type":"string","format":"uuid"},{"name":"links","in":"query","required":false,"type":"string"},{"name":"include","in":"query","required":false,"type":"string"},{"name":"expand","in":"query","required":false,"type":"string"},{"name":"udf","in":"query","required":false,"type":"string"}],"responses":{"200":{"description":"OK","schema":{"$ref":"#/definitions/ApiResourceResultEntity[ApiIntegratorLiftEventResource]"}}}},"put":{"tags":["LiftEvent"],"summary":"Partial update","description":"| Property\t\t\t\t\t\t\t\t\t\t\t| Description\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t| Required |\r\n| ------------------------------------------------- | ------------------------------------------------------------------------------------------------- | -------- |\r\n| GUID\t\t\t\t\t\t\t\t\t\t\t\t| The GUID associated to the lift event.\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t|\t No    |\r\n| IsAutoGPSMatching\t\t\t\t\t\t\t\t\t| Is AutoGPSMatching in the lift event?\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t|\t Yes   |\r\n| IsAutoGPSMatchingResult\t\t\t\t\t\t\t| Is AutoGPSMatchingResult in the lift event?\t\t\t\t\t\t\t\t\t\t\t\t\t\t|\t Yes   |\r\n| IsBilled\t\t\t\t\t\t\t\t\t\t\t| Is Billed in the lift event?\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t|\t Yes   |\r\n| IsCollected\t\t\t\t\t\t\t\t\t\t| Is Collected in the lift event?\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t|\t Yes   |\r\n| IsContaminated\t\t\t\t\t\t\t\t\t| Is Contaminated in the lift event?\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t|\t Yes   |\r\n| IsDriverGPSMatching\t\t\t\t\t\t\t\t| Is DriverGPSMatching in the lift event?\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t|\t Yes   |\r\n| IsDriverGPSMatchingResult\t\t\t\t\t\t\t| Is DriverGPSMatchingResult in the lift event?\t\t\t\t\t\t\t\t\t\t\t\t\t\t|\t Yes   |\r\n| IsDumped\t\t\t\t\t\t\t\t\t\t\t| Is Dumped in the lift event?\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t|\t Yes   |\r\n| IsAdHoc\t\t\t\t\t\t\t\t\t\t\t| Is AdHoc in the lift event?\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t|\t Yes   |\r\n| IsCombinedLift\t\t\t\t\t\t\t\t\t| Is CombinedLift in the lift event?\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t|\t Yes   |\r\n| IsGeoCompressed\t\t\t\t\t\t\t\t\t| Is GeoCompressed in the lift event?\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t|\t Yes   |\r\n| IsManual\t\t\t\t\t\t\t\t\t\t\t| Is Manual in the lift event?\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t|\t Yes   |\r\n| IsOnHold\t\t\t\t\t\t\t\t\t\t\t| Is OnHold\t in the lift event?\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t|\t Yes   |\r\n| IsOverridden\t\t\t\t\t\t\t\t\t\t| Is Overridden in the lift event?\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t|\t Yes   |\r\n| IsStopListed\t\t\t\t\t\t\t\t\t\t| Is StopListed in the lift event?\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t|\t Yes   |\r\n| BaseWeight\t\t\t\t\t\t\t\t\t\t| Base weight of the lift event.\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t|\t No    |\r\n| ChargeWeight\t\t\t\t\t\t\t\t\t\t| Charge weight of the lift event.\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t|\t No    |\r\n| GrossWeight\t\t\t\t\t\t\t\t\t\t| Gross weight of the lift event.\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t|\t No    |\r\n| NetWeight\t\t\t\t\t\t\t\t\t\t\t| Net weight of the lift event.\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t|\t No    |\r\n| TareWeight\t\t\t\t\t\t\t\t\t\t| Tare weight of the lift event.\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t|\t No    |\r\n| Weight\t\t\t\t\t\t\t\t\t\t\t| Weight of the lift event.\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t|\t No    |\r\n| DoubleDumps\t\t\t\t\t\t\t\t\t\t| Double dumps of the lift event.\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t|\t No    |\r\n| ErrorCodeWeight\t\t\t\t\t\t\t\t\t| Error code weight of the lift event.\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t|\t No    |\r\n| ErrorCodeTag\t\t\t\t\t\t\t\t\t\t| Error code tag of the lift event.\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t|\t No    |\r\n| LifterSide\t\t\t\t\t\t\t\t\t\t| Lifter side of the lift event.\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t|\t No    |\r\n| NumberOfPictures\t\t\t\t\t\t\t\t\t| Number of pictures of the lift event.\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t|\t No    |\r\n| QuantityCollected\t\t\t\t\t\t\t\t\t| Quantity collected of the lift event.\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t|\t No    |\r\n| RouteInstanceOrderNumber\t\t\t\t\t\t\t| Route instance order number of the lift event.\t\t\t\t\t\t\t\t\t\t\t\t\t|\t No    |\r\n| RouteVersion\t\t\t\t\t\t\t\t\t\t| Route version of the lift event.\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t|\t No    |\r\n| GPSMatchingSourceListItem\t\t\t\t\t\t\t| The GUID and description of the GPS matching source associated to the lift event.\t\t\t\t\t|\t No    |\r\n| ReasonLastChangeListItem\t\t\t\t\t\t\t| The GUID and description of the reason for last change associated to the lift event.\t\t\t\t|\t No    |\r\n| ReasonLiftInformationListItem\t\t\t\t\t\t| The GUID and description of the reason for lift information associated to the lift event.\t\t\t|\t No    |\r\n| ReasonLiftProblemListItem\t\t\t\t\t\t\t| The GUID and description of the reason for lift problem associated to the lift event.\t\t\t\t|\t No    |\r\n| ContainerTypeNewOfficeListItem\t\t\t\t\t| The GUID and description of the container type associated to the lift event.\t\t\t\t\t\t|\t No    |\r\n| MaterialTypeNewOfficeListItem\t\t\t\t\t\t| The GUID and description of the material associated to the lift event.\t\t\t\t\t\t\t|\t No    |\r\n| UnitOfMeasurementListItem\t\t\t\t\t\t\t| The GUID and description of the unit of measurement associated to the lift event.\t\t\t\t\t|\t No    |\r\n| WeightChangeReasonListItem\t\t\t\t\t\t| The GUID and description of the reason for weight change associated to the lift event.\t\t\t|\t No    |\r\n| Location\t\t\t\t\t\t\t\t\t\t\t| The latitude and longitude of the location associated to the lift event.\t\t\t\t\t\t\t|\t No    |\r\n| VehicleCode\t\t\t\t\t\t\t\t\t\t| The vehicle code associated to the lift event.\t\t\t\t\t\t\t\t\t\t\t\t\t|\t Yes   |\r\n| InformationText\t\t\t\t\t\t\t\t\t| The information text associated to the lift event.\t\t\t\t\t\t\t\t\t\t\t\t|\t No    |\r\n| LiftDataXml\t\t\t\t\t\t\t\t\t\t| The lift data xml associated to the lift event.\t\t\t\t\t\t\t\t\t\t\t\t\t|\t No    |\r\n| LiftText\t\t\t\t\t\t\t\t\t\t\t| The lift text associated to the lift event.\t\t\t\t\t\t\t\t\t\t\t\t\t\t|\t No    |\r\n| ProblemText\t\t\t\t\t\t\t\t\t\t| The problem text associated to the lift event.\t\t\t\t\t\t\t\t\t\t\t\t\t|\t No    |\r\n| Tag\t\t\t\t\t\t\t\t\t\t\t\t| The tag associated to the lift event.\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t|\t No    |\r\n| CollectionDate\t\t\t\t\t\t\t\t\t| The collection date associated to the lift event.\t\t\t\t\t\t\t\t\t\t\t\t\t|\t No    |\r\n| CollectionTimeStamp\t\t\t\t\t\t\t\t| The collection timestamp associated to the lift event.\t\t\t\t\t\t\t\t\t\t\t|\t No    |\r\n| ImportTimeStamp\t\t\t\t\t\t\t\t\t| The import timestamp associated to the lift event.\t\t\t\t\t\t\t\t\t\t\t\t|\t No    |\r\n| InstrumentTimeStamp\t\t\t\t\t\t\t\t| The instrument timestamp associated to the lift event.\t\t\t\t\t\t\t\t\t\t\t|\t No    |\r\n| RouteInstanceStartTime\t\t\t\t\t\t\t| The route instance start time associated to the lift event.\t\t\t\t\t\t\t\t\t\t|\t No    |\r\n| RelatedUserRecordedByGuid\t\t\t\t\t\t\t| The GUID associated to the user of the lift event.\t\t\t\t\t\t\t\t\t\t\t\t|\t No    |\r\n| RelatedRouteGuid\t\t\t\t\t\t\t\t\t| The GUID associated to the route of the lift event.\t\t\t\t\t\t\t\t\t\t\t\t|\t No    |\r\n| RelatedRouteVisitGuid\t\t\t\t\t\t\t\t| The GUID associated to the route visit of the lift event.\t\t\t\t\t\t\t\t\t\t\t|\t No    |\r\n| RelatedSiteOrderContainerGuid\t\t\t\t\t\t| The GUID associated to the site order item of the lift event.\t\t\t\t\t\t\t\t\t\t|\t No    |\r\n| RelatedVehicleGuid\t\t\t\t\t\t\t\t| The GUID associated to the vehicle of the lift event.\t\t\t\t\t\t\t\t\t\t\t\t|\t No    |\r\n| IsDeleted\t\t\t\t\t\t\t\t\t\t\t| Lift event is being deleted?\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t|\t No    |\r\n\r\n## Extra validations\r\n\r\n| Condition | Error message |\r\n| --------- | ------------- |\r\n| If WeightChangeReasonListItem is not in one of the following reason categories: Lift Weight Change. | WeightChangeReasonListItem must be in one of the following reason categories: Lift Weight Change. |\r\n| If ReasonLiftInformationListItem is not in one of the following reason categories: Lift Information. | ReasonLiftInformationListItem must be in one of the following reason categories: Lift Information. |\r\n| If ReasonLiftProblemListItem is not in one of the following reason categories: Lift Problem. | ReasonLiftProblemListItem must be in one of the following reason categories: Lift Problem. |\r\n| If GPSMatchingSourceListItem.Guid provided is Deleted. | The provided GPSMatchingSourceListItem is deleted. Could not update the resource. Please check the relevant list end point for the available options. |\r\n| If ReasonLastChangeListItem.Guid provided is Deleted. | The provided ReasonLastChangeListItem is deleted. Could not update the resource. Please check the relevant list end point for the available options. |\r\n| If ReasonLiftInformationListItem.Guid provided is Deleted. | The provided ReasonLiftInformationListItem is deleted. Could not update the resource. Please check the relevant list end point for the available options. |\r\n| If ReasonLiftProblemListItem.Guid provided is Deleted. | The provided ReasonLiftProblemListItem is deleted. Could not update the resource. Please check the relevant list end point for the available options. |\r\n| If ContainerTypeNewOfficeListItem.Guid provided is Deleted. | The provided ContainerTypeNewOfficeListItem is deleted. Could not update the resource. Please check the relevant list end point for the available options. |\r\n| If MaterialTypeNewOfficeListItem.Guid provided is Deleted. | The provided MaterialTypeNewOfficeListItem is deleted. Could not update the resource. Please check the relevant list end point for the available options. |\r\n| If UnitOfMeasurementListItem.Guid provided is Deleted. | The provided UnitOfMeasurementListItem is deleted. Could not update the resource. Please check the relevant list end point for the available options. |\r\n| If WeightChangeReasonListItem.Guid provided is Deleted. | The provided WeightChangeReasonListItem is deleted. Could not update the resource. Please check the relevant list end point for the available options. |\r\n| If RelatedUserRecordedByGuid provided is Deleted. | The provided RelatedUserRecordedByGuid is deleted. Could not update the resource. Please check the relevant list end point for the available options. |\r\n| If RelatedRouteGuid provided is Deleted. | The provided RelatedRouteGuid is deleted. Could not update the resource. Please check the relevant list end point for the available options. |\r\n| If RelatedRouteVisitGuid provided is Deleted. | The provided RelatedRouteVisitGuid is deleted. Could not update the resource. Please check the relevant list end point for the available options. |\r\n| If RelatedSiteOrderContainerGuid provided is Deleted. | The provided RelatedSiteOrderContainerGuid is deleted. Could not update the resource. Please check the relevant list end point for the available options. |\r\n| If RelatedVehicleGuid provided is Deleted. | The provided RelatedVehicleGuid is deleted. Could not update the resource. Please check the relevant list end point for the available options. |\r\n| If the provided location is invalid. | Values of location lat/long is invalid. Could not process the request. Supply latitude and longitude as a decimal fraction of a degree. |\r\n| If we attempt to delete a lift event | IsDeleted is TRUE. Could not process the request. Resources can not be deleted via the REST API. |","operationId":"LiftEvent_Update","consumes":["application/json"],"produces":["application/json"],"parameters":[{"name":"guid","in":"path","required":true,"type":"string","format":"uuid"},{"in":"body","required":true,"schema":{"$ref":"#/definitions/ApiResourceId"}}],"responses":{"200":{"description":"OK","schema":{"$ref":"#/definitions/ApiResourceId"}}}}},"/transport/liftEvents":{"get":{"tags":["LiftEvent"],"summary":"Find with Filters","description":"| Property\t\t\t\t\t\t\t\t\t\t\t| Description\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t|\r\n| ------------------------------------------------- | ------------------------------------------------------------------------------------------------- |\r\n| GUID\t\t\t\t\t\t\t\t\t\t\t\t| The GUID associated to the lift event.\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t|\r\n| IsAutoGPSMatching\t\t\t\t\t\t\t\t\t| Is AutoGPSMatching in the lift event?\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t|\r\n| IsAutoGPSMatchingResult\t\t\t\t\t\t\t| Is AutoGPSMatchingResult in the lift event?\t\t\t\t\t\t\t\t\t\t\t\t\t\t|\r\n| IsBilled\t\t\t\t\t\t\t\t\t\t\t| Is Billed in the lift event?\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t|\r\n| IsCollected\t\t\t\t\t\t\t\t\t\t| Is Collected in the lift event?\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t|\r\n| IsContaminated\t\t\t\t\t\t\t\t\t| Is Contaminated in the lift event?\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t|\r\n| IsDriverGPSMatching\t\t\t\t\t\t\t\t| Is DriverGPSMatching in the lift event?\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t|\r\n| IsDriverGPSMatchingResult\t\t\t\t\t\t\t| Is DriverGPSMatchingResult in the lift event?\t\t\t\t\t\t\t\t\t\t\t\t\t\t|\r\n| IsDumped\t\t\t\t\t\t\t\t\t\t\t| Is Dumped in the lift event?\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t|\r\n| IsAdHoc\t\t\t\t\t\t\t\t\t\t\t| Is AdHoc in the lift event?\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t|\r\n| IsCombinedLift\t\t\t\t\t\t\t\t\t| Is CombinedLift in the lift event?\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t|\r\n| IsGeoCompressed\t\t\t\t\t\t\t\t\t| Is GeoCompressed in the lift event?\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t|\r\n| IsManual\t\t\t\t\t\t\t\t\t\t\t| Is Manual in the lift event?\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t|\r\n| IsOnHold\t\t\t\t\t\t\t\t\t\t\t| Is OnHold\t in the lift event?\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t|\r\n| IsOverridden\t\t\t\t\t\t\t\t\t\t| Is Overridden in the lift event?\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t|\r\n| IsStopListed\t\t\t\t\t\t\t\t\t\t| Is StopListed in the lift event?\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t|\r\n| BaseWeight\t\t\t\t\t\t\t\t\t\t| Base weight of the lift event.\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t|\r\n| ChargeWeight\t\t\t\t\t\t\t\t\t\t| Charge weight of the lift event.\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t|\r\n| GrossWeight\t\t\t\t\t\t\t\t\t\t| Gross weight of the lift event.\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t|\r\n| NetWeight\t\t\t\t\t\t\t\t\t\t\t| Net weight of the lift event.\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t|\r\n| TareWeight\t\t\t\t\t\t\t\t\t\t| Tare weight of the lift event.\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t|\r\n| Weight\t\t\t\t\t\t\t\t\t\t\t| Weight of the lift event.\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t|\r\n| DoubleDumps\t\t\t\t\t\t\t\t\t\t| Double dumps of the lift event.\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t|\r\n| ErrorCodeWeight\t\t\t\t\t\t\t\t\t| Error code weight of the lift event.\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t|\r\n| ErrorCodeTag\t\t\t\t\t\t\t\t\t\t| Error code tag of the lift event.\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t|\r\n| LifterSide\t\t\t\t\t\t\t\t\t\t| Lifter side of the lift event.\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t|\r\n| NumberOfPictures\t\t\t\t\t\t\t\t\t| Number of pictures of the lift event.\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t|\r\n| QuantityCollected\t\t\t\t\t\t\t\t\t| Quantity collected of the lift event.\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t|\r\n| RouteInstanceOrderNumber\t\t\t\t\t\t\t| Route instance order number of the lift event.\t\t\t\t\t\t\t\t\t\t\t\t\t|\r\n| RouteVersion\t\t\t\t\t\t\t\t\t\t| Route version of the lift event.\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t|\r\n| GPSMatchingSourceListItem\t\t\t\t\t\t\t| The GUID and description of the GPS matching source associated to the lift event.\t\t\t\t\t|\r\n| ReasonLastChangeListItem\t\t\t\t\t\t\t| The GUID and description of the reason for last change associated to the lift event.\t\t\t\t|\r\n| ReasonLiftInformationListItem\t\t\t\t\t\t| The GUID and description of the reason for lift information associated to the lift event.\t\t\t|\r\n| ReasonLiftProblemListItem\t\t\t\t\t\t\t| The GUID and description of the reason for lift problem associated to the lift event.\t\t\t\t|\r\n| ContainerTypeNewOfficeListItem\t\t\t\t\t| The GUID and description of the container type associated to the lift event.\t\t\t\t\t\t|\r\n| MaterialTypeNewOfficeListItem\t\t\t\t\t\t| The GUID and description of the material associated to the lift event.\t\t\t\t\t\t\t|\r\n| UnitOfMeasurementListItem\t\t\t\t\t\t\t| The GUID and description of the unit of measurement associated to the lift event.\t\t\t\t\t|\r\n| WeightChangeReasonListItem\t\t\t\t\t\t| The GUID and description of the reason for weight change associated to the lift event.\t\t\t|\r\n| Location\t\t\t\t\t\t\t\t\t\t\t| The latitude and longitude of the location associated to the lift event.\t\t\t\t\t\t\t|\r\n| VehicleCode\t\t\t\t\t\t\t\t\t\t| The vehicle code associated to the lift event. Filterable.\t\t\t\t\t\t\t\t\t\t|\r\n| InformationText\t\t\t\t\t\t\t\t\t| The information text associated to the lift event.\t\t\t\t\t\t\t\t\t\t\t\t|\r\n| LiftDataXml\t\t\t\t\t\t\t\t\t\t| The lift data xml associated to the lift event.\t\t\t\t\t\t\t\t\t\t\t\t\t|\r\n| LiftText\t\t\t\t\t\t\t\t\t\t\t| The lift text associated to the lift event.\t\t\t\t\t\t\t\t\t\t\t\t\t\t|\r\n| ProblemText\t\t\t\t\t\t\t\t\t\t| The problem text associated to the lift event.\t\t\t\t\t\t\t\t\t\t\t\t\t|\r\n| Tag\t\t\t\t\t\t\t\t\t\t\t\t| The tag associated to the lift event. Filterable.\t\t\t\t\t\t\t\t\t\t\t\t\t|\r\n| CollectionDate\t\t\t\t\t\t\t\t\t| The collection date associated to the lift event. Filterable.\t\t\t\t\t\t\t\t\t\t|\r\n| CollectionTimeStamp\t\t\t\t\t\t\t\t| The collection timestamp associated to the lift event.\t\t\t\t\t\t\t\t\t\t\t|\r\n| ImportTimeStamp\t\t\t\t\t\t\t\t\t| The import timestamp associated to the lift event.\t\t\t\t\t\t\t\t\t\t\t\t|\r\n| InstrumentTimeStamp\t\t\t\t\t\t\t\t| The instrument timestamp associated to the lift event.\t\t\t\t\t\t\t\t\t\t\t|\r\n| RouteInstanceStartTime\t\t\t\t\t\t\t| The route instance start time associated to the lift event.\t\t\t\t\t\t\t\t\t\t|\r\n| RelatedUserRecordedByGuid\t\t\t\t\t\t\t| The GUID associated to the user of the lift event. Filterable.\t\t\t\t\t\t\t\t\t|\r\n| RelatedRouteGuid\t\t\t\t\t\t\t\t\t| The GUID associated to the route of the lift event. Filterable.\t\t\t\t\t\t\t\t\t|\r\n| RelatedRouteVisitGuid\t\t\t\t\t\t\t\t| The GUID associated to the route visit of the lift event. Filterable.\t\t\t\t\t\t\t\t|\r\n| RelatedSiteOrderContainerGuid\t\t\t\t\t\t| The GUID associated to the site order item of the lift event. Filterable.\t\t\t\t\t\t\t|\r\n| RelatedVehicleGuid\t\t\t\t\t\t\t\t| The GUID associated to the vehicle of the lift event.\tFilterable.\t\t\t\t\t\t\t\t\t\t\t|\r\n| IsDeleted\t\t\t\t\t\t\t\t\t\t\t| Lift event is being deleted?\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t|\r\n","operationId":"LiftEvent_GetCollection","consumes":["application/json"],"produces":["application/json"],"parameters":[{"name":"filter","in":"query","required":false,"type":"string"},{"name":"search","in":"query","required":false,"type":"string"},{"name":"order","in":"query","required":false,"type":"string"},{"name":"max","in":"query","required":false,"type":"integer","format":"int32"},{"name":"page","in":"query","required":false,"type":"integer","format":"int32"},{"name":"includeCount","in":"query","required":false,"type":"boolean"},{"name":"includeDeleted","in":"query","required":false,"type":"boolean"},{"name":"links","in":"query","required":false,"type":"string"},{"name":"udf","in":"query","required":false,"type":"string"}],"responses":{"200":{"description":"OK","schema":{"$ref":"#/definitions/ApiResourceResultCollection[ApiIntegratorLiftEventResource]"}}}},"post":{"tags":["LiftEvent"],"summary":"Create or update","description":"| Property\t\t\t\t\t\t\t\t\t\t\t| Description\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t| Required |\r\n| ------------------------------------------------- | ------------------------------------------------------------------------------------------------- | -------- |\r\n| GUID\t\t\t\t\t\t\t\t\t\t\t\t| The GUID associated to the lift event.\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t|\t No    |\r\n| IsAutoGPSMatching\t\t\t\t\t\t\t\t\t| Is AutoGPSMatching in the lift event?\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t|\t Yes   |\r\n| IsAutoGPSMatchingResult\t\t\t\t\t\t\t| Is AutoGPSMatchingResult in the lift event?\t\t\t\t\t\t\t\t\t\t\t\t\t\t|\t Yes   |\r\n| IsBilled\t\t\t\t\t\t\t\t\t\t\t| Is Billed in the lift event?\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t|\t Yes   |\r\n| IsCollected\t\t\t\t\t\t\t\t\t\t| Is Collected in the lift event?\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t|\t Yes   |\r\n| IsContaminated\t\t\t\t\t\t\t\t\t| Is Contaminated in the lift event?\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t|\t Yes   |\r\n| IsDriverGPSMatching\t\t\t\t\t\t\t\t| Is DriverGPSMatching in the lift event?\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t|\t Yes   |\r\n| IsDriverGPSMatchingResult\t\t\t\t\t\t\t| Is DriverGPSMatchingResult in the lift event?\t\t\t\t\t\t\t\t\t\t\t\t\t\t|\t Yes   |\r\n| IsDumped\t\t\t\t\t\t\t\t\t\t\t| Is Dumped in the lift event?\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t|\t Yes   |\r\n| IsAdHoc\t\t\t\t\t\t\t\t\t\t\t| Is AdHoc in the lift event?\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t|\t Yes   |\r\n| IsCombinedLift\t\t\t\t\t\t\t\t\t| Is CombinedLift in the lift event?\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t|\t Yes   |\r\n| IsGeoCompressed\t\t\t\t\t\t\t\t\t| Is GeoCompressed in the lift event?\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t|\t Yes   |\r\n| IsManual\t\t\t\t\t\t\t\t\t\t\t| Is Manual in the lift event?\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t|\t Yes   |\r\n| IsOnHold\t\t\t\t\t\t\t\t\t\t\t| Is OnHold\t in the lift event?\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t|\t Yes   |\r\n| IsOverridden\t\t\t\t\t\t\t\t\t\t| Is Overridden in the lift event?\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t|\t Yes   |\r\n| IsStopListed\t\t\t\t\t\t\t\t\t\t| Is StopListed in the lift event?\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t|\t Yes   |\r\n| BaseWeight\t\t\t\t\t\t\t\t\t\t| Base weight of the lift event.\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t|\t No    |\r\n| ChargeWeight\t\t\t\t\t\t\t\t\t\t| Charge weight of the lift event.\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t|\t No    |\r\n| GrossWeight\t\t\t\t\t\t\t\t\t\t| Gross weight of the lift event.\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t|\t No    |\r\n| NetWeight\t\t\t\t\t\t\t\t\t\t\t| Net weight of the lift event.\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t|\t No    |\r\n| TareWeight\t\t\t\t\t\t\t\t\t\t| Tare weight of the lift event.\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t|\t No    |\r\n| Weight\t\t\t\t\t\t\t\t\t\t\t| Weight of the lift event.\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t|\t No    |\r\n| DoubleDumps\t\t\t\t\t\t\t\t\t\t| Double dumps of the lift event.\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t|\t No    |\r\n| ErrorCodeWeight\t\t\t\t\t\t\t\t\t| Error code weight of the lift event.\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t|\t No    |\r\n| ErrorCodeTag\t\t\t\t\t\t\t\t\t\t| Error code tag of the lift event.\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t|\t No    |\r\n| LifterSide\t\t\t\t\t\t\t\t\t\t| Lifter side of the lift event.\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t|\t No    |\r\n| NumberOfPictures\t\t\t\t\t\t\t\t\t| Number of pictures of the lift event.\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t|\t No    |\r\n| QuantityCollected\t\t\t\t\t\t\t\t\t| Quantity collected of the lift event.\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t|\t No    |\r\n| RouteInstanceOrderNumber\t\t\t\t\t\t\t| Route instance order number of the lift event.\t\t\t\t\t\t\t\t\t\t\t\t\t|\t No    |\r\n| RouteVersion\t\t\t\t\t\t\t\t\t\t| Route version of the lift event.\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t|\t No    |\r\n| GPSMatchingSourceListItem\t\t\t\t\t\t\t| The GUID and description of the GPS matching source associated to the lift event.\t\t\t\t\t|\t No    |\r\n| ReasonLastChangeListItem\t\t\t\t\t\t\t| The GUID and description of the reason for last change associated to the lift event.\t\t\t\t|\t No    |\r\n| ReasonLiftInformationListItem\t\t\t\t\t\t| The GUID and description of the reason for lift information associated to the lift event.\t\t\t|\t No    |\r\n| ReasonLiftProblemListItem\t\t\t\t\t\t\t| The GUID and description of the reason for lift problem associated to the lift event.\t\t\t\t|\t No    |\r\n| ContainerTypeNewOfficeListItem\t\t\t\t\t| The GUID and description of the container type associated to the lift event.\t\t\t\t\t\t|\t No    |\r\n| MaterialTypeNewOfficeListItem\t\t\t\t\t\t| The GUID and description of the material associated to the lift event.\t\t\t\t\t\t\t|\t No    |\r\n| UnitOfMeasurementListItem\t\t\t\t\t\t\t| The GUID and description of the unit of measurement associated to the lift event.\t\t\t\t\t|\t No    |\r\n| WeightChangeReasonListItem\t\t\t\t\t\t| The GUID and description of the reason for weight change associated to the lift event.\t\t\t|\t No    |\r\n| Location\t\t\t\t\t\t\t\t\t\t\t| The latitude and longitude of the location associated to the lift event.\t\t\t\t\t\t\t|\t No    |\r\n| VehicleCode\t\t\t\t\t\t\t\t\t\t| The vehicle code associated to the lift event.\t\t\t\t\t\t\t\t\t\t\t\t\t|\t Yes   |\r\n| InformationText\t\t\t\t\t\t\t\t\t| The information text associated to the lift event.\t\t\t\t\t\t\t\t\t\t\t\t|\t No    |\r\n| LiftDataXml\t\t\t\t\t\t\t\t\t\t| The lift data xml associated to the lift event.\t\t\t\t\t\t\t\t\t\t\t\t\t|\t No    |\r\n| LiftText\t\t\t\t\t\t\t\t\t\t\t| The lift text associated to the lift event.\t\t\t\t\t\t\t\t\t\t\t\t\t\t|\t No    |\r\n| ProblemText\t\t\t\t\t\t\t\t\t\t| The problem text associated to the lift event.\t\t\t\t\t\t\t\t\t\t\t\t\t|\t No    |\r\n| Tag\t\t\t\t\t\t\t\t\t\t\t\t| The tag associated to the lift event.\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t|\t No    |\r\n| CollectionDate\t\t\t\t\t\t\t\t\t| The collection date associated to the lift event.\t\t\t\t\t\t\t\t\t\t\t\t\t|\t No    |\r\n| CollectionTimeStamp\t\t\t\t\t\t\t\t| The collection timestamp associated to the lift event.\t\t\t\t\t\t\t\t\t\t\t|\t No    |\r\n| ImportTimeStamp\t\t\t\t\t\t\t\t\t| The import timestamp associated to the lift event.\t\t\t\t\t\t\t\t\t\t\t\t|\t No    |\r\n| InstrumentTimeStamp\t\t\t\t\t\t\t\t| The instrument timestamp associated to the lift event.\t\t\t\t\t\t\t\t\t\t\t|\t No    |\r\n| RouteInstanceStartTime\t\t\t\t\t\t\t| The route instance start time associated to the lift event.\t\t\t\t\t\t\t\t\t\t|\t No    |\r\n| RelatedUserRecordedByGuid\t\t\t\t\t\t\t| The GUID associated to the user of the lift event.\t\t\t\t\t\t\t\t\t\t\t\t|\t No    |\r\n| RelatedRouteGuid\t\t\t\t\t\t\t\t\t| The GUID associated to the route of the lift event.\t\t\t\t\t\t\t\t\t\t\t\t|\t No    |\r\n| RelatedRouteVisitGuid\t\t\t\t\t\t\t\t| The GUID associated to the route visit of the lift event.\t\t\t\t\t\t\t\t\t\t\t|\t No    |\r\n| RelatedSiteOrderContainerGuid\t\t\t\t\t\t| The GUID associated to the site order item of the lift event.\t\t\t\t\t\t\t\t\t\t|\t No    |\r\n| RelatedVehicleGuid\t\t\t\t\t\t\t\t| The GUID associated to the vehicle of the lift event.\t\t\t\t\t\t\t\t\t\t\t\t|\t No    |\r\n| IsDeleted\t\t\t\t\t\t\t\t\t\t\t| Lift event is being deleted?\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t|\t No    |\r\n\r\n## Extra validations\r\n\r\n| Condition | Error message |\r\n| --------- | ------------- |\r\n| If WeightChangeReasonListItem is not in one of the following reason categories: Lift Weight Change. | WeightChangeReasonListItem must be in one of the following reason categories: Lift Weight Change. |\r\n| If ReasonLiftInformationListItem is not in one of the following reason categories: Lift Information. | ReasonLiftInformationListItem must be in one of the following reason categories: Lift Information. |\r\n| If ReasonLiftProblemListItem is not in one of the following reason categories: Lift Problem. | ReasonLiftProblemListItem must be in one of the following reason categories: Lift Problem. |\r\n| If GPSMatchingSourceListItem.Guid provided is Deleted. | The provided GPSMatchingSourceListItem is deleted. Could not update the resource. Please check the relevant list end point for the available options. |\r\n| If ReasonLastChangeListItem.Guid provided is Deleted. | The provided ReasonLastChangeListItem is deleted. Could not update the resource. Please check the relevant list end point for the available options. |\r\n| If ReasonLiftInformationListItem.Guid provided is Deleted. | The provided ReasonLiftInformationListItem is deleted. Could not update the resource. Please check the relevant list end point for the available options. |\r\n| If ReasonLiftProblemListItem.Guid provided is Deleted. | The provided ReasonLiftProblemListItem is deleted. Could not update the resource. Please check the relevant list end point for the available options. |\r\n| If ContainerTypeNewOfficeListItem.Guid provided is Deleted. | The provided ContainerTypeNewOfficeListItem is deleted. Could not update the resource. Please check the relevant list end point for the available options. |\r\n| If MaterialTypeNewOfficeListItem.Guid provided is Deleted. | The provided MaterialTypeNewOfficeListItem is deleted. Could not update the resource. Please check the relevant list end point for the available options. |\r\n| If UnitOfMeasurementListItem.Guid provided is Deleted. | The provided UnitOfMeasurementListItem is deleted. Could not update the resource. Please check the relevant list end point for the available options. |\r\n| If WeightChangeReasonListItem.Guid provided is Deleted. | The provided WeightChangeReasonListItem is deleted. Could not update the resource. Please check the relevant list end point for the available options. |\r\n| If RelatedUserRecordedByGuid provided is Deleted. | The provided RelatedUserRecordedByGuid is deleted. Could not update the resource. Please check the relevant list end point for the available options. |\r\n| If RelatedRouteGuid provided is Deleted. | The provided RelatedRouteGuid is deleted. Could not update the resource. Please check the relevant list end point for the available options. |\r\n| If RelatedRouteVisitGuid provided is Deleted. | The provided RelatedRouteVisitGuid is deleted. Could not update the resource. Please check the relevant list end point for the available options. |\r\n| If RelatedSiteOrderContainerGuid provided is Deleted. | The provided RelatedSiteOrderContainerGuid is deleted. Could not update the resource. Please check the relevant list end point for the available options. |\r\n| If RelatedVehicleGuid provided is Deleted. | The provided RelatedVehicleGuid is deleted. Could not update the resource. Please check the relevant list end point for the available options. |\r\n| If the provided location is invalid. | Values of location lat/long is invalid. Could not process the request. Supply latitude and longitude as a decimal fraction of a degree. |\r\n| If we attempt to delete a lift event | An attempt has been made to set IsDeleted. The request could not be processed. Ensure that IsDeleted has default value. |\r\n","operationId":"LiftEvent_Create","consumes":["application/json"],"produces":["application/json"],"parameters":[{"in":"body","required":true,"schema":{"$ref":"#/definitions/ApiResourceId"}}],"responses":{"200":{"description":"OK","schema":{"$ref":"#/definitions/ApiResourceId"}}}}},"/lists/localAuthorities/{guid}":{"get":{"tags":["LocalAuthority"],"summary":"Find with GUID","description":"| Property                  | Description                                                              |\r\n| ------------------------- | ------------------------------------------------------------------------ |\r\n| GUID                      | The GUID associated to the local authority\t\t\t\t   |\r\n| Description               | The description of the local authority\t\t\t\t\t   |\r\n| IsDeleted                 | Whether the local authority is deleted\t                   |\r\n\t\t\t\t   ","operationId":"LocalAuthority_Get","consumes":["application/json"],"produces":["application/json"],"parameters":[{"name":"guid","in":"path","required":true,"type":"string","format":"uuid"},{"name":"links","in":"query","required":false,"type":"string"},{"name":"include","in":"query","required":false,"type":"string"},{"name":"expand","in":"query","required":false,"type":"string"},{"name":"udf","in":"query","required":false,"type":"string"}],"responses":{"200":{"description":"OK","schema":{"$ref":"#/definitions/ApiResourceResultEntity[ApiIntegratorLocalAuthorityResource]"}}}}},"/lists/localAuthorities":{"get":{"tags":["LocalAuthority"],"summary":"Find with Filters","description":"| Property                  | Description                                                              |\r\n| ------------------------- | ------------------------------------------------------------------------ |\r\n| GUID                      | The GUID associated to the local authority\t\t\t\t   |\r\n| Description               | The description of the local authority\t\t\t\t\t   |\r\n| IsDeleted                 | Whether the local authority is deleted\t                   |\r\n\t\t\t\t   ","operationId":"LocalAuthority_GetCollection","consumes":["application/json"],"produces":["application/json"],"parameters":[{"name":"filter","in":"query","required":false,"type":"string"},{"name":"search","in":"query","required":false,"type":"string"},{"name":"order","in":"query","required":false,"type":"string"},{"name":"max","in":"query","required":false,"type":"integer","format":"int32"},{"name":"page","in":"query","required":false,"type":"integer","format":"int32"},{"name":"includeCount","in":"query","required":false,"type":"boolean"},{"name":"includeDeleted","in":"query","required":false,"type":"boolean"},{"name":"links","in":"query","required":false,"type":"string"},{"name":"udf","in":"query","required":false,"type":"string"}],"responses":{"200":{"description":"OK","schema":{"$ref":"#/definitions/ApiResourceResultCollection[ApiIntegratorLocalAuthorityResource]"}}}}},"/directory/locations/changes":{"get":{"tags":["Location"],"summary":"Retrieve changes","description":"| Property             | Description                                                           |\r\n| -------------------- | --------------------------------------------------------------------- |\r\n| GUID                 | The GUID associated to the location.                                  |\r\n| Description\t\t   | The description associated to the location.                           |\r\n| TimeZone\t\t       | The TimeZone associated to the location.                              |\r\n| LegalName\t\t\t   | The LegalName associated to the location.                             |\r\n| Directions\t\t   | The Directions associated to the location.                            |\r\n| UniqueReference\t   | The UniqueReference associated to the location.                       |\r\n| Acreage\t\t\t   | The Acreage associated to the location.\t\t\t\t\t\t\t   |\r\n| IsDeleted\t\t\t   | Whether the location is deleted.\t\t\t\t\t\t               |\r\n| Address\t\t\t   | The Address object associated to the location.\t\t\t\t\t\t   |\r\n| Address.HouseNumber  | The HouseNumber associated address object of the location.            |\r\n| Address.Address1\t   | The Address1 associated to the address object of the location.               |\r\n| Address.Address2\t   | The Address2 associated to the address object of the location.               |\r\n| Address.Address3\t   | The Address3 associated to the address object of the location.               |\r\n| Address.Address4\t   | The Address4 associated to the address object of the location.               |\r\n| Address.Address5\t   | The Address5 associated to the address object of the location.               |\r\n| Address.Address6\t   | The Address6 associated to the address object of the location.               |\r\n| Address.Address7\t   | The Address7 associated to the address object of the location.               |\r\n| Address.Address8\t   | The Address8 associated to the address object of the location.               |\r\n| Address.Address9\t   | The Address9 associated to the address object of the location.               |\r\n| Address.Postcode\t   | The Postcode associated to the address object of the location.               |\r\n| Address.PostTownListItem\t| The GUID and post town associated to the address object of the location. |\r\n| Address.RegionCodeListItem  | The GUID and region code associated to the address object of the location. |\r\n| Address.ContactMethods | The ContactMethods object associated to the address object of the location. |\r\n| Address.ContactMethods.TelNo | The telephone number object associated to the ContactMethods object of the address object of the location. |\r\n| Address.ContactMethods.FaxNo | The fax number object associated to the ContactMethods object of the address object of the location. |\r\n| Geo\t\t\t\t\t| The Geo object associated to the location.\t\t\t\t\t\t   |\r\n| Geo.ZoneListItem\t\t| The GUID and description of the zone associated to the Geo object of the location. |\r\n| Geo.ParcelBoundaryListItem | The GUID and description of the parcel boundary associated to the Geo object of the location. |\r\n| Geo.Location\t\t\t| The location object associated to the Geo object of the location. |\r\n| Geo.Location.Lat\t\t| The latitude associated to the location object associated to the Geo object of the location. |\r\n| Geo.Location.Long\t\t| The longitude associated to the location object associated to the Geo object of the location. |\r\n| Geo.Latitude\t\t\t| The latitude associated to the Geo object of the location. |\r\n| Geo.Longitude\t\t\t| The longitude associated to the Geo object of the location. |","operationId":"Location_GetChanges","consumes":["application/json"],"produces":["application/json"],"parameters":[{"name":"since","in":"query","required":false,"type":"string"},{"name":"cursor","in":"query","required":false,"type":"string"},{"name":"links","in":"query","required":false,"type":"string"}],"responses":{"200":{"description":"OK","schema":{"$ref":"#/definitions/ApiResourceChanges[ApiIntegratorLocationResource]"}}}}},"/directory/locations/{guid}":{"get":{"tags":["Location"],"summary":"Find with GUID","description":"| Property             | Description                                                           |\r\n| -------------------- | --------------------------------------------------------------------- |\r\n| GUID                 | The GUID associated to the location.                                  |\r\n| Description\t\t   | The description associated to the location.                           |\r\n| TimeZone\t\t       | The TimeZone associated to the location.                              |\r\n| LegalName\t\t\t   | The LegalName associated to the location.                             |\r\n| Directions\t\t   | The Directions associated to the location.                            |\r\n| UniqueReference\t   | The UniqueReference associated to the location.                       |\r\n| Acreage\t\t\t   | The Acreage associated to the location.\t\t\t\t\t\t\t   |\r\n| IsDeleted\t\t\t   | Whether the location is deleted.\t\t\t\t\t\t               |\r\n| Address\t\t\t   | The Address object associated to the location.\t\t\t\t\t\t   |\r\n| Address.HouseNumber  | The HouseNumber associated address object of the location.            |\r\n| Address.Address1\t   | The Address1 associated to the address object of the location.               |\r\n| Address.Address2\t   | The Address2 associated to the address object of the location.               |\r\n| Address.Address3\t   | The Address3 associated to the address object of the location.               |\r\n| Address.Address4\t   | The Address4 associated to the address object of the location.               |\r\n| Address.Address5\t   | The Address5 associated to the address object of the location.               |\r\n| Address.Address6\t   | The Address6 associated to the address object of the location.               |\r\n| Address.Address7\t   | The Address7 associated to the address object of the location.               |\r\n| Address.Address8\t   | The Address8 associated to the address object of the location.               |\r\n| Address.Address9\t   | The Address9 associated to the address object of the location.               |\r\n| Address.Postcode\t   | The Postcode associated to the address object of the location.               |\r\n| Address.PostTownListItem\t| The GUID and post town associated to the address object of the location. |\r\n| Address.RegionCodeListItem  | The GUID and region code associated to the address object of the location. |\r\n| Address.ContactMethods | The ContactMethods object associated to the address object of the location. |\r\n| Address.ContactMethods.TelNo | The telephone number object associated to the ContactMethods object of the address object of the location. |\r\n| Address.ContactMethods.FaxNo | The fax number object associated to the ContactMethods object of the address object of the location. |\r\n| Geo\t\t\t\t\t| The Geo object associated to the location.\t\t\t\t\t\t   |\r\n| Geo.ZoneListItem\t\t| The GUID and description of the zone associated to the Geo object of the location. |\r\n| Geo.ParcelBoundaryListItem | The GUID and description of the parcel boundary associated to the Geo object of the location. |\r\n| Geo.Location\t\t\t| The location object associated to the Geo object of the location. |\r\n| Geo.Location.Lat\t\t| The latitude associated to the location object associated to the Geo object of the location. |\r\n| Geo.Location.Long\t\t| The longitude associated to the location object associated to the Geo object of the location. |\r\n| Geo.Latitude\t\t\t| The latitude associated to the Geo object of the location. |\r\n| Geo.Longitude\t\t\t| The longitude associated to the Geo object of the location. |","operationId":"Location_Get","consumes":["application/json"],"produces":["application/json"],"parameters":[{"name":"guid","in":"path","required":true,"type":"string","format":"uuid"},{"name":"links","in":"query","required":false,"type":"string"},{"name":"include","in":"query","required":false,"type":"string"},{"name":"expand","in":"query","required":false,"type":"string"},{"name":"udf","in":"query","required":false,"type":"string"}],"responses":{"200":{"description":"OK","schema":{"$ref":"#/definitions/ApiResourceResultEntity[ApiIntegratorLocationResource]"}}}},"put":{"tags":["Location"],"summary":"Partial update","description":"| Property             | Description                                                           | Required |\r\n| -------------------- | --------------------------------------------------------------------- | -------- |\r\n| GUID                 | The GUID associated to the customer.                                  | No |\r\n| Description\t\t   | The description associated to the location.                           | Yes |\r\n| TimeZone\t\t       | The TimeZone associated to the location.                              | No |\r\n| LegalName\t\t\t   | The LegalName associated to the location.                             | No |\r\n| Directions\t\t   | The Directions associated to the location.                            | No |\r\n| UniqueReference\t   | The UniqueReference associated to the location.                       | No |\r\n| Acreage\t\t\t   | The Acreage associated to the location.\t\t\t\t\t\t\t   | No |\r\n| Address\t\t\t   | The Address object associated to the location.\t\t\t\t\t\t   | Yes |\r\n| Address.HouseNumber  | The HouseNumber associated address object of the location.            | No |\r\n| Address.Address1\t   | The Address1 associated to the address object of the location.               | Yes |\r\n| Address.Address2\t   | The Address2 associated to the address object of the location.               | No |\r\n| Address.Address3\t   | The Address3 associated to the address object of the location.               | No |\r\n| Address.Address4\t   | The Address4 associated to the address object of the location.               | Yes |\r\n| Address.Address5\t   | The Address5 associated to the address object of the location.               | No |\r\n| Address.Address6\t   | The Address6 associated to the address object of the location.               | No |\r\n| Address.Address7\t   | The Address7 associated to the address object of the location.               | No |\r\n| Address.Address8\t   | The Address8 associated to the address object of the location.               | No |\r\n| Address.Address9\t   | The Address9 associated to the address object of the location.               | No |\r\n| Address.Postcode\t   | The Postcode associated to the address object of the location.               | Yes |\r\n| Address.PostTownListItem\t| The GUID and post town associated to the address object of the location. | No |\r\n| Address.RegionCodeListItem  | The GUID and region code associated to the address object of the location. | No |\r\n| Address.ContactMethods | The ContactMethods object associated to the address object of the location. | No |\r\n| Address.ContactMethods.TelNo | The telephone number object associated to the ContactMethods object of the address object of the location. | No |\r\n| Address.ContactMethods.FaxNo | The fax number object associated to the ContactMethods object of the address object of the location. | No |\r\n| Geo\t\t\t\t\t| The Geo object associated to the location.\t\t\t\t\t\t   | No |\r\n| Geo.ZoneListItem\t\t| The GUID and description of the zone associated to the Geo object of the location. | No |\r\n| Geo.ParcelBoundaryListItem | The GUID and description of the parcel boundary associated to the Geo object of the location. | No |\r\n| Geo.Location\t\t\t| The location object associated to the Geo object of the location. | No |\r\n| Geo.Location.Lat\t\t| The latitude associated to the location object associated to the Geo object of the location. | No |\r\n| Geo.Location.Long\t\t| The longitude associated to the location object associated to the Geo object of the location. | No |\r\n| Geo.Latitude\t\t\t| The latitude associated to the Geo object of the location. | No |\r\n| Geo.Longitude\t\t\t| The longitude associated to the Geo object of the location. | No |\r\n| IsDeleted\t\t\t\t| Whether the location is deleted.\t\t\t\t              | No |\r\n\r\n## Extra validations\r\n\r\n| Condition | Error message |\r\n| --------- | ------------- |\r\n| If TimeZone value has been changed | TimeZone is a read-only property |\r\n| If IsDeleted true | IsDeleted is TRUE. Could not process the request. Resources can not be deleted via the REST API. |\r\n| If we attempt to delete a Location | An attempt has been made to set IsDeleted. The request could not be processed. Ensure that IsDeleted has default value. |\r\n| If Geo.Location.Lat value has been changed | Geo.Location.Lat is a read-only property |\r\n| If Geo.Location.Long value has been changed | Geo.Location.Long is a read-only property |\r\n| If Geo.Location has a value initially and has been removed or changed to null | Geo.Location is a read-only property |\r\n| Geo.Latitude value not in range between -90 and 90 or Geo.Longitude value not in range between -180 and 180 | Geo.Latitude value must be between -90 and 90. Geo.Longitude value must be between -180 and 180. |","operationId":"Location_Update","consumes":["application/json"],"produces":["application/json"],"parameters":[{"name":"guid","in":"path","required":true,"type":"string","format":"uuid"},{"in":"body","required":true,"schema":{"$ref":"#/definitions/ApiResourceId"}}],"responses":{"200":{"description":"OK","schema":{"$ref":"#/definitions/ApiResourceId"}}}}},"/directory/locations":{"get":{"tags":["Location"],"summary":"Find with Filters","description":"| Property             | Description                                                           |\r\n| -------------------- | --------------------------------------------------------------------- |\r\n| GUID                 | The GUID associated to the location.                                  |\r\n| Description\t\t   | The description associated to the location.                           |\r\n| TimeZone\t\t       | The TimeZone associated to the location.                              |\r\n| LegalName\t\t\t   | The LegalName associated to the location.                             |\r\n| Directions\t\t   | The Directions associated to the location.                            |\r\n| UniqueReference\t   | The UniqueReference associated to the location.                       |\r\n| Acreage\t\t\t   | The Acreage associated to the location.\t\t\t\t\t\t\t   |\r\n| IsDeleted\t\t\t   | Whether the location is deleted.\t\t\t\t\t\t               |\r\n| Address\t\t\t   | The Address object associated to the location.\t\t\t\t\t\t   |\r\n| Address.HouseNumber  | The HouseNumber associated address object of the location.            |\r\n| Address.Address1\t   | The Address1 associated to the address object of the location.               |\r\n| Address.Address2\t   | The Address2 associated to the address object of the location.               |\r\n| Address.Address3\t   | The Address3 associated to the address object of the location.               |\r\n| Address.Address4\t   | The Address4 associated to the address object of the location.               |\r\n| Address.Address5\t   | The Address5 associated to the address object of the location.               |\r\n| Address.Address6\t   | The Address6 associated to the address object of the location.               |\r\n| Address.Address7\t   | The Address7 associated to the address object of the location.               |\r\n| Address.Address8\t   | The Address8 associated to the address object of the location.               |\r\n| Address.Address9\t   | The Address9 associated to the address object of the location.               |\r\n| Address.Postcode\t   | The Postcode associated to the address object of the location.               |\r\n| Address.PostTownListItem\t| The GUID and post town associated to the address object of the location. |\r\n| Address.RegionCodeListItem  | The GUID and region code associated to the address object of the location. |\r\n| Address.ContactMethods | The ContactMethods object associated to the address object of the location. |\r\n| Address.ContactMethods.TelNo | The telephone number object associated to the ContactMethods object of the address object of the location. |\r\n| Address.ContactMethods.FaxNo | The fax number object associated to the ContactMethods object of the address object of the location. |\r\n| Geo\t\t\t\t\t| The Geo object associated to the location.\t\t\t\t\t\t   |\r\n| Geo.ZoneListItem\t\t| The GUID and description of the zone associated to the Geo object of the location. |\r\n| Geo.ParcelBoundaryListItem | The GUID and description of the parcel boundary associated to the Geo object of the location. |\r\n| Geo.Location\t\t\t| The location object associated to the Geo object of the location. |\r\n| Geo.Location.Lat\t\t| The latitude associated to the location object associated to the Geo object of the location. |\r\n| Geo.Location.Long\t\t| The longitude associated to the location object associated to the Geo object of the location. |\r\n| Geo.Latitude\t\t\t| The latitude associated to the Geo object of the location. |\r\n| Geo.Longitude\t\t\t| The longitude associated to the Geo object of the location. |","operationId":"Location_GetCollection","consumes":["application/json"],"produces":["application/json"],"parameters":[{"name":"filter","in":"query","required":false,"type":"string"},{"name":"search","in":"query","required":false,"type":"string"},{"name":"order","in":"query","required":false,"type":"string"},{"name":"max","in":"query","required":false,"type":"integer","format":"int32"},{"name":"page","in":"query","required":false,"type":"integer","format":"int32"},{"name":"includeCount","in":"query","required":false,"type":"boolean"},{"name":"includeDeleted","in":"query","required":false,"type":"boolean"},{"name":"links","in":"query","required":false,"type":"string"},{"name":"udf","in":"query","required":false,"type":"string"}],"responses":{"200":{"description":"OK","schema":{"$ref":"#/definitions/ApiResourceResultCollection[ApiIntegratorLocationResource]"}}}},"post":{"tags":["Location"],"summary":"Create or update","description":"| Property             | Description                                                           | Required |\r\n| -------------------- | --------------------------------------------------------------------- | -------- |\r\n| GUID                 | The GUID associated to the customer.                                  | No |\r\n| Description\t\t   | The description associated to the location.                           | Yes |\r\n| TimeZone\t\t       | The TimeZone associated to the location.                              | No |\r\n| LegalName\t\t\t   | The LegalName associated to the location.                             | No |\r\n| Directions\t\t   | The Directions associated to the location.                            | No |\r\n| UniqueReference\t   | The UniqueReference associated to the location.                       | No |\r\n| Acreage\t\t\t   | The Acreage associated to the location.\t\t\t\t\t\t\t   | No |\r\n| Address\t\t\t   | The Address object associated to the location.\t\t\t\t\t\t   | Yes |\r\n| Address.HouseNumber  | The HouseNumber associated address object of the location.            | No |\r\n| Address.Address1\t   | The Address1 associated to the address object of the location.               | Yes |\r\n| Address.Address2\t   | The Address2 associated to the address object of the location.               | No |\r\n| Address.Address3\t   | The Address3 associated to the address object of the location.               | No |\r\n| Address.Address4\t   | The Address4 associated to the address object of the location.               | Yes |\r\n| Address.Address5\t   | The Address5 associated to the address object of the location.               | No |\r\n| Address.Address6\t   | The Address6 associated to the address object of the location.               | No |\r\n| Address.Address7\t   | The Address7 associated to the address object of the location.               | No |\r\n| Address.Address8\t   | The Address8 associated to the address object of the location.               | No |\r\n| Address.Address9\t   | The Address9 associated to the address object of the location.               | No |\r\n| Address.Postcode\t   | The Postcode associated to the address object of the location.               | Yes |\r\n| Address.PostTownListItem\t| The GUID and post town associated to the address object of the location. | No |\r\n| Address.RegionCodeListItem  | The GUID and region code associated to the address object of the location. | No |\r\n| Address.ContactMethods | The ContactMethods object associated to the address object of the location. | No |\r\n| Address.ContactMethods.TelNo | The telephone number object associated to the ContactMethods object of the address object of the location. | No |\r\n| Address.ContactMethods.FaxNo | The fax number object associated to the ContactMethods object of the address object of the location. | No |\r\n| Geo\t\t\t\t\t| The Geo object associated to the location.\t\t\t\t\t\t   | No |\r\n| Geo.ZoneListItem\t\t| The GUID and description of the zone associated to the Geo object of the location. | No |\r\n| Geo.ParcelBoundaryListItem | The GUID and description of the parcel boundary associated to the Geo object of the location. | No |\r\n| Geo.Location\t\t\t| The location object associated to the Geo object of the location. | No |\r\n| Geo.Location.Lat\t\t| The latitude associated to the location object associated to the Geo object of the location. | No |\r\n| Geo.Location.Long\t\t| The longitude associated to the location object associated to the Geo object of the location. | No |\r\n| Geo.Latitude\t\t\t| The latitude associated to the Geo object of the location. | No |\r\n| Geo.Longitude\t\t\t| The longitude associated to the Geo object of the location. | No |\r\n| IsDeleted\t\t\t\t| Whether the location is deleted.\t\t\t\t              | No |\r\n\r\n## Extra validations\r\n\r\n| Condition | Error message |\r\n| --------- | ------------- |\r\n| TimeZone has a value | TimeZone must be set to null. |\r\n| If IsDeleted true | IsDeleted is TRUE. Could not process the request. Resources can not be deleted via the REST API. |\r\n| If we attempt to delete a Location | An attempt has been made to set IsDeleted. The request could not be processed. Ensure that IsDeleted has default value. |\r\n| Geo.Location has a value | Geo.Location must be set to null. |\r\n| Geo.Latitude value not in range between -90 and 90 or Geo.Longitude value not in range between -180 and 180 | Geo.Latitude value must be between -90 and 90. Geo.Longitude value must be between -180 and 180. |","operationId":"Location_Create","consumes":["application/json"],"produces":["application/json"],"parameters":[{"in":"body","required":true,"schema":{"$ref":"#/definitions/ApiResourceId"}}],"responses":{"200":{"description":"OK","schema":{"$ref":"#/definitions/ApiResourceId"}}}}},"/accounting/lodgements/changes":{"get":{"tags":["Lodgement"],"summary":"Retrieve changes","description":"| Property\t\t\t\t\t| Description\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t|\r\n| --------------------------| ---------------------------------------------------------------------\t\t\t|\r\n| GUID\t\t\t\t\t\t| The GUID associated to the lodgement.\t\t\t\t\t\t\t\t\t\t\t|\r\n| IsDeleted\t\t\t\t\t| Whether the lodgement is deleted.\t\t\t\t\t\t\t\t\t\t\t\t|\r\n| DateLodged\t\t\t\t| The date lodged associated to the lodgement.\t\t\t\t\t\t\t\t\t|\r\n| Reference\t\t\t\t\t| The Reference associated to the lodgement.\t\t\t\t\t\t\t\t\t|\r\n| LodgementTypeListItem\t\t| The GUID and Description of the lodgement type associated to the lodgement.   |","operationId":"Lodgement_GetChanges","consumes":["application/json"],"produces":["application/json"],"parameters":[{"name":"since","in":"query","required":false,"type":"string"},{"name":"cursor","in":"query","required":false,"type":"string"},{"name":"links","in":"query","required":false,"type":"string"}],"responses":{"200":{"description":"OK","schema":{"$ref":"#/definitions/ApiResourceChanges[ApiIntegratorLodgementResource]"}}}}},"/accounting/lodgements/{guid}":{"get":{"tags":["Lodgement"],"summary":"Find with GUID","description":"| Property\t\t\t\t\t| Description\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t|\r\n| --------------------------| ---------------------------------------------------------------------\t\t\t|\r\n| GUID\t\t\t\t\t\t| The GUID associated to the lodgement.\t\t\t\t\t\t\t\t\t\t\t|\r\n| IsDeleted\t\t\t\t\t| Whether the lodgement is deleted.\t\t\t\t\t\t\t\t\t\t\t\t|\r\n| DateLodged\t\t\t\t| The date lodged associated to the lodgement.\t\t\t\t\t\t\t\t\t|\r\n| Reference\t\t\t\t\t| The Reference associated to the lodgement.\t\t\t\t\t\t\t\t\t|\r\n| LodgementTypeListItem\t\t| The GUID and Description of the lodgement type associated to the lodgement.   |","operationId":"Lodgement_Get","consumes":["application/json"],"produces":["application/json"],"parameters":[{"name":"guid","in":"path","required":true,"type":"string","format":"uuid"},{"name":"links","in":"query","required":false,"type":"string"},{"name":"include","in":"query","required":false,"type":"string"},{"name":"expand","in":"query","required":false,"type":"string"},{"name":"udf","in":"query","required":false,"type":"string"}],"responses":{"200":{"description":"OK","schema":{"$ref":"#/definitions/ApiResourceResultEntity[ApiIntegratorLodgementResource]"}}}}},"/accounting/lodgements":{"get":{"tags":["Lodgement"],"summary":"Find with Filters","description":"| Property\t\t\t\t\t| Description\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t|\r\n| --------------------------| ---------------------------------------------------------------------\t\t\t|\r\n| GUID\t\t\t\t\t\t| The GUID associated to the lodgement.\t\t\t\t\t\t\t\t\t\t\t|\r\n| IsDeleted\t\t\t\t\t| Whether the lodgement is deleted.\t\t\t\t\t\t\t\t\t\t\t\t|\r\n| DateLodged\t\t\t\t| The date lodged associated to the lodgement.\t\t\t\t\t\t\t\t\t|\r\n| Reference\t\t\t\t\t| The Reference associated to the lodgement.\t\t\t\t\t\t\t\t\t|\r\n| LodgementTypeListItem\t\t| The GUID and Description of the lodgement type associated to the lodgement.   |","operationId":"Lodgement_GetCollection","consumes":["application/json"],"produces":["application/json"],"parameters":[{"name":"filter","in":"query","required":false,"type":"string"},{"name":"search","in":"query","required":false,"type":"string"},{"name":"order","in":"query","required":false,"type":"string"},{"name":"max","in":"query","required":false,"type":"integer","format":"int32"},{"name":"page","in":"query","required":false,"type":"integer","format":"int32"},{"name":"includeCount","in":"query","required":false,"type":"boolean"},{"name":"includeDeleted","in":"query","required":false,"type":"boolean"},{"name":"links","in":"query","required":false,"type":"string"},{"name":"udf","in":"query","required":false,"type":"string"}],"responses":{"200":{"description":"OK","schema":{"$ref":"#/definitions/ApiResourceResultCollection[ApiIntegratorLodgementResource]"}}}}},"/lists/lodgementTypes/{guid}":{"get":{"tags":["LodgementType"],"summary":"Find with GUID","description":"| Property                  | Description                                                              |\r\n| ------------------------- | ------------------------------------------------------------------------ |\r\n| GUID                      | The GUID associated to the lodgement type\t\t\t\t   |\r\n| Description               | The description of the lodgement type\t\t\t\t\t   |\r\n| IsDeleted                 | Whether the lodgement type is deleted\t                   |\r\n\t\t\t\t   ","operationId":"LodgementType_Get","consumes":["application/json"],"produces":["application/json"],"parameters":[{"name":"guid","in":"path","required":true,"type":"string","format":"uuid"},{"name":"links","in":"query","required":false,"type":"string"},{"name":"include","in":"query","required":false,"type":"string"},{"name":"expand","in":"query","required":false,"type":"string"},{"name":"udf","in":"query","required":false,"type":"string"}],"responses":{"200":{"description":"OK","schema":{"$ref":"#/definitions/ApiResourceResultEntity[ApiIntegratorLodgementTypeResource]"}}}}},"/lists/lodgementTypes":{"get":{"tags":["LodgementType"],"summary":"Find with Filters","description":"| Property                  | Description                                                              |\r\n| ------------------------- | ------------------------------------------------------------------------ |\r\n| GUID                      | The GUID associated to the lodgement type\t\t\t\t   |\r\n| Description               | The description of the lodgement type\t\t\t\t\t   |\r\n| IsDeleted                 | Whether the lodgement type is deleted\t                   |\r\n\t\t\t\t   ","operationId":"LodgementType_GetCollection","consumes":["application/json"],"produces":["application/json"],"parameters":[{"name":"filter","in":"query","required":false,"type":"string"},{"name":"search","in":"query","required":false,"type":"string"},{"name":"order","in":"query","required":false,"type":"string"},{"name":"max","in":"query","required":false,"type":"integer","format":"int32"},{"name":"page","in":"query","required":false,"type":"integer","format":"int32"},{"name":"includeCount","in":"query","required":false,"type":"boolean"},{"name":"includeDeleted","in":"query","required":false,"type":"boolean"},{"name":"links","in":"query","required":false,"type":"string"},{"name":"udf","in":"query","required":false,"type":"string"}],"responses":{"200":{"description":"OK","schema":{"$ref":"#/definitions/ApiResourceResultCollection[ApiIntegratorLodgementTypeResource]"}}}}},"/lists/markets/{guid}":{"get":{"tags":["Market"],"summary":"Find with GUID","description":"| Property                  | Description\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t|\r\n| ------------------------- | -------------------------------------------------------------------------\t|\r\n| GUID                      | The GUID associated to the market.\t\t\t\t\t\t\t\t\t\t|\r\n| Description               | The description of the market.\t\t\t\t\t\t\t\t\t\t\t|","operationId":"Market_Get","consumes":["application/json"],"produces":["application/json"],"parameters":[{"name":"guid","in":"path","required":true,"type":"string","format":"uuid"},{"name":"links","in":"query","required":false,"type":"string"},{"name":"include","in":"query","required":false,"type":"string"},{"name":"expand","in":"query","required":false,"type":"string"},{"name":"udf","in":"query","required":false,"type":"string"}],"responses":{"200":{"description":"OK","schema":{"$ref":"#/definitions/ApiResourceResultEntity[ApiIntegratorMarketResource]"}}}}},"/lists/markets":{"get":{"tags":["Market"],"summary":"Find with Filters","description":"| Property                  | Description\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t|\r\n| ------------------------- | -------------------------------------------------------------------------\t|\r\n| GUID                      | The GUID associated to the market.\t\t\t\t\t\t\t\t\t\t|\r\n| Description               | The description of the market.\t\t\t\t\t\t\t\t\t\t\t|","operationId":"Market_GetCollection","consumes":["application/json"],"produces":["application/json"],"parameters":[{"name":"filter","in":"query","required":false,"type":"string"},{"name":"search","in":"query","required":false,"type":"string"},{"name":"order","in":"query","required":false,"type":"string"},{"name":"max","in":"query","required":false,"type":"integer","format":"int32"},{"name":"page","in":"query","required":false,"type":"integer","format":"int32"},{"name":"includeCount","in":"query","required":false,"type":"boolean"},{"name":"includeDeleted","in":"query","required":false,"type":"boolean"},{"name":"links","in":"query","required":false,"type":"string"},{"name":"udf","in":"query","required":false,"type":"string"}],"responses":{"200":{"description":"OK","schema":{"$ref":"#/definitions/ApiResourceResultCollection[ApiIntegratorMarketResource]"}}}}},"/accounting/masterAccounts/changes":{"get":{"tags":["MasterAccount"],"summary":"Retrieve changes","description":"| Property                  | Description                                                              |\r\n| ------------------------- | ------------------------------------------------------------------------ |\r\n| GUID                      | The GUID associated to the master account.                               |\r\n| Name                      | The master account's name.                                               |\r\n| ARAccountCode             | The account code used for accounts receivable.                           |\r\n| APAccountCode             | The account code used for accounts payable.                              |\r\n| CurrencyListItem          | The GUID and currency of the master account (various values).            |\r\n","operationId":"MasterAccount_GetChanges","consumes":["application/json"],"produces":["application/json"],"parameters":[{"name":"since","in":"query","required":false,"type":"string"},{"name":"cursor","in":"query","required":false,"type":"string"},{"name":"links","in":"query","required":false,"type":"string"}],"responses":{"200":{"description":"OK","schema":{"$ref":"#/definitions/ApiResourceChanges[ApiIntegratorMasterCustomerResource]"}}}}},"/accounting/masterAccounts/{guid}":{"get":{"tags":["MasterAccount"],"summary":"Find with GUID","description":"| Property                  | Description                                                              |\r\n| ------------------------- | ------------------------------------------------------------------------ |\r\n| GUID                      | The GUID associated to the master account.                               |\r\n| Name                      | The master account's name.                                               |\r\n| ARAccountCode             | The account code used for accounts receivable.                           |\r\n| APAccountCode             | The account code used for accounts payable.                              |\r\n| CurrencyListItem          | The GUID and currency of the master account (various values).            |\r\n","operationId":"MasterAccount_Get","consumes":["application/json"],"produces":["application/json"],"parameters":[{"name":"guid","in":"path","required":true,"type":"string","format":"uuid"},{"name":"links","in":"query","required":false,"type":"string"},{"name":"include","in":"query","required":false,"type":"string"},{"name":"expand","in":"query","required":false,"type":"string"},{"name":"udf","in":"query","required":false,"type":"string"}],"responses":{"200":{"description":"OK","schema":{"$ref":"#/definitions/ApiResourceResultEntity[ApiIntegratorMasterCustomerResource]"}}}},"put":{"tags":["MasterAccount"],"summary":"Partial update","description":"| Property                  | Description                                                              | Required |\r\n| ------------------------- | ------------------------------------------------------------------------ | -------- |\r\n| GUID                      | The GUID associated to the master account.                               | No |\r\n| Name                      | The master account's name.                                               | Yes |\r\n| ARAccountCode             | The account code used for accounts receivable.                           | Yes |\r\n| APAccountCode             | The account code used for accounts payable.                              | No |\r\n| CurrencyListItem          | The GUID and currency of the master account (various values).            | No |\r\n\r\n## Extra validations\r\n\r\n| Condition | Error message |\r\n| --------- | ------------- |\r\n| ARAccountCode is not unique | Failed to save. Entity already exists with arAccountCode of {value of ARAccountCode} |\r\n|If the provided CurrencyListItem.Guid belongs to a deleted currency | The provided CurrencyListItem is deleted. Could not update the resource. Please check the relevant list end point for the available options. |\r\n","operationId":"MasterAccount_Update","consumes":["application/json"],"produces":["application/json"],"parameters":[{"name":"guid","in":"path","required":true,"type":"string","format":"uuid"},{"in":"body","required":true,"schema":{"$ref":"#/definitions/ApiResourceId"}}],"responses":{"200":{"description":"OK","schema":{"$ref":"#/definitions/ApiResourceId"}}}}},"/accounting/masterAccounts":{"get":{"tags":["MasterAccount"],"summary":"Find with Filters","description":"| Property                  | Description                                                              |\r\n| ------------------------- | ------------------------------------------------------------------------ |\r\n| GUID                      | The GUID associated to the master account.                               |\r\n| Name                      | The master account's name.                                               |\r\n| ARAccountCode             | The account code used for accounts receivable.                           |\r\n| APAccountCode             | The account code used for accounts payable.                              |\r\n| CurrencyListItem          | The GUID and currency of the master account (various values).            |\r\n","operationId":"MasterAccount_GetCollection","consumes":["application/json"],"produces":["application/json"],"parameters":[{"name":"filter","in":"query","required":false,"type":"string"},{"name":"search","in":"query","required":false,"type":"string"},{"name":"order","in":"query","required":false,"type":"string"},{"name":"max","in":"query","required":false,"type":"integer","format":"int32"},{"name":"page","in":"query","required":false,"type":"integer","format":"int32"},{"name":"includeCount","in":"query","required":false,"type":"boolean"},{"name":"includeDeleted","in":"query","required":false,"type":"boolean"},{"name":"links","in":"query","required":false,"type":"string"},{"name":"udf","in":"query","required":false,"type":"string"}],"responses":{"200":{"description":"OK","schema":{"$ref":"#/definitions/ApiResourceResultCollection[ApiIntegratorMasterCustomerResource]"}}}},"post":{"tags":["MasterAccount"],"summary":"Create or update","description":"| Property                  | Description                                                              | Required |\r\n| ------------------------- | ------------------------------------------------------------------------ | -------- |\r\n| GUID                      | The GUID associated to the master account.                               | No |\r\n| Name                      | The master account's name.                                               | Yes |\r\n| ARAccountCode             | The account code used for accounts receivable.                           | Yes |\r\n| APAccountCode             | The account code used for accounts payable.                              | No |\r\n| CurrencyListItem          | The GUID and currency of the master account (various values).            | No |\r\n\r\n## Extra validations\r\n\r\n| Condition | Error message |\r\n| --------- | ------------- |\r\n| ARAccountCode is not unique | Failed to save. Entity already exists with arAccountCode of {value of ARAccountCode} |\r\n|If the provided CurrencyListItem.Guid belongs to a deleted currency | The provided CurrencyListItem is deleted. Could not update the resource. Please check the relevant list end point for the available options. |\r\n","operationId":"MasterAccount_Create","consumes":["application/json"],"produces":["application/json"],"parameters":[{"in":"body","required":true,"schema":{"$ref":"#/definitions/ApiResourceId"}}],"responses":{"200":{"description":"OK","schema":{"$ref":"#/definitions/ApiResourceId"}}}}},"/lists/materials/{guid}":{"get":{"tags":["Material"],"summary":"Find with GUID","description":"| Property                  | Description                                                              |\r\n| ------------------------- | ------------------------------------------------------------------------ |\r\n| GUID                      | The GUID associated to the material\t\t                               |\r\n| Description               | The description of the material\t\t\t\t\t                       |\r\n| Color\t\t\t\t\t\t| The color of the material\t\t\t\t\t\t\t\t\t\t           |\r\n| AnalysisCode              | The analysis code of the material\t\t\t\t\t\t\t\t\t\t   |\r\n| ShortName                 | The short name of the material\t\t\t\t\t\t\t\t\t\t   |\r\n| MaterialStateListItem     | The The GUID and material state of the material (various values)         |\r\n| MaterialClassListItem     | The The GUID and material class of the material (various values)         |\r\n| EWCCodeListItem\t\t\t| The GUID and EWC Code of the material (various values)\t\t\t\t   |\r\n| IsDeleted                 | Whether the material is deleted\t\t\t\t \t \t\t\t\t\t   |\r\n","operationId":"Material_Get","consumes":["application/json"],"produces":["application/json"],"parameters":[{"name":"guid","in":"path","required":true,"type":"string","format":"uuid"},{"name":"links","in":"query","required":false,"type":"string"},{"name":"include","in":"query","required":false,"type":"string"},{"name":"expand","in":"query","required":false,"type":"string"},{"name":"udf","in":"query","required":false,"type":"string"}],"responses":{"200":{"description":"OK","schema":{"$ref":"#/definitions/ApiResourceResultEntity[ApiIntegratorMaterialResource]"}}}}},"/lists/materials":{"get":{"tags":["Material"],"summary":"Find with Filters","description":"| Property                  | Description                                                              |\r\n| ------------------------- | ------------------------------------------------------------------------ |\r\n| GUID                      | The GUID associated to the material\t\t                               |\r\n| Description               | The description of the material\t\t\t\t\t                       |\r\n| Color\t\t\t\t\t\t| The color of the material\t\t\t\t\t\t\t\t\t\t           |\r\n| AnalysisCode              | The analysis code of the material\t\t\t\t\t\t\t\t\t\t   |\r\n| ShortName                 | The short name of the material\t\t\t\t\t\t\t\t\t\t   |\r\n| MaterialStateListItem     | The The GUID and material state of the material (various values)         |\r\n| MaterialClassListItem     | The The GUID and material class of the material (various values)         |\r\n| EWCCodeListItem\t\t\t| The GUID and EWC Code of the material (various values)\t\t\t\t   |\r\n| IsDeleted                 | Whether the material is deleted\t\t\t\t \t \t\t\t\t\t   |\r\n","operationId":"Material_GetCollection","consumes":["application/json"],"produces":["application/json"],"parameters":[{"name":"filter","in":"query","required":false,"type":"string"},{"name":"search","in":"query","required":false,"type":"string"},{"name":"order","in":"query","required":false,"type":"string"},{"name":"max","in":"query","required":false,"type":"integer","format":"int32"},{"name":"page","in":"query","required":false,"type":"integer","format":"int32"},{"name":"includeCount","in":"query","required":false,"type":"boolean"},{"name":"includeDeleted","in":"query","required":false,"type":"boolean"},{"name":"links","in":"query","required":false,"type":"string"},{"name":"udf","in":"query","required":false,"type":"string"}],"responses":{"200":{"description":"OK","schema":{"$ref":"#/definitions/ApiResourceResultCollection[ApiIntegratorMaterialResource]"}}}}},"/lists/materialClasses/{guid}":{"get":{"tags":["MaterialClass"],"summary":"Find with GUID","description":"| Property                  | Description                                                              |\r\n| ------------------------- | ------------------------------------------------------------------------ |\r\n| GUID                      | The GUID associated to the material class                                |\r\n| Description               | The description of the material class                                    |\r\n| AnalysisCode              | The analysis code of the material class                                  |\r\n| MaterialClassGroupListItem | The GUID and material class group of the material class (various values) |\r\n| IsDeleted                 | Whether the material class is deleted\t      \t \t\t\t\t\t\t\t|\r\n","operationId":"MaterialClass_Get","consumes":["application/json"],"produces":["application/json"],"parameters":[{"name":"guid","in":"path","required":true,"type":"string","format":"uuid"},{"name":"links","in":"query","required":false,"type":"string"},{"name":"include","in":"query","required":false,"type":"string"},{"name":"expand","in":"query","required":false,"type":"string"},{"name":"udf","in":"query","required":false,"type":"string"}],"responses":{"200":{"description":"OK","schema":{"$ref":"#/definitions/ApiResourceResultEntity[ApiIntegratorMaterialClassResource]"}}}}},"/lists/materialClasses":{"get":{"tags":["MaterialClass"],"summary":"Find with Filters","description":"| Property                  | Description                                                              |\r\n| ------------------------- | ------------------------------------------------------------------------ |\r\n| GUID                      | The GUID associated to the material class                                |\r\n| Description               | The description of the material class                                    |\r\n| AnalysisCode              | The analysis code of the material class                                  |\r\n| MaterialClassGroupListItem | The GUID and material class group of the material class (various values) |\r\n| IsDeleted                 | Whether the material class is deleted\t      \t \t\t\t\t\t\t\t|\r\n","operationId":"MaterialClass_GetCollection","consumes":["application/json"],"produces":["application/json"],"parameters":[{"name":"filter","in":"query","required":false,"type":"string"},{"name":"search","in":"query","required":false,"type":"string"},{"name":"order","in":"query","required":false,"type":"string"},{"name":"max","in":"query","required":false,"type":"integer","format":"int32"},{"name":"page","in":"query","required":false,"type":"integer","format":"int32"},{"name":"includeCount","in":"query","required":false,"type":"boolean"},{"name":"includeDeleted","in":"query","required":false,"type":"boolean"},{"name":"links","in":"query","required":false,"type":"string"},{"name":"udf","in":"query","required":false,"type":"string"}],"responses":{"200":{"description":"OK","schema":{"$ref":"#/definitions/ApiResourceResultCollection[ApiIntegratorMaterialClassResource]"}}}}},"/lists/materialClassGroups/{guid}":{"get":{"tags":["MaterialClassGroup"],"summary":"Find with GUID","description":"| Property                  | Description                                                              |\r\n| ------------------------- | ------------------------------------------------------------------------ |\r\n| GUID                      | The GUID associated to the material class group                          |\r\n| Description               | The description of the material class group                              |\r\n| IsDeleted                 | Whether the material class group is deleted\t      \t \t\t\t\t\t|","operationId":"MaterialClassGroup_Get","consumes":["application/json"],"produces":["application/json"],"parameters":[{"name":"guid","in":"path","required":true,"type":"string","format":"uuid"},{"name":"links","in":"query","required":false,"type":"string"},{"name":"include","in":"query","required":false,"type":"string"},{"name":"expand","in":"query","required":false,"type":"string"},{"name":"udf","in":"query","required":false,"type":"string"}],"responses":{"200":{"description":"OK","schema":{"$ref":"#/definitions/ApiResourceResultEntity[ApiIntegratorMaterialClassGroupResource]"}}}}},"/lists/materialClassGroups":{"get":{"tags":["MaterialClassGroup"],"summary":"Find with Filters","description":"| Property                  | Description                                                              |\r\n| ------------------------- | ------------------------------------------------------------------------ |\r\n| GUID                      | The GUID associated to the material class group                          |\r\n| Description               | The description of the material class group                              |\r\n| IsDeleted                 | Whether the material class group is deleted\t      \t \t\t\t\t\t|","operationId":"MaterialClassGroup_GetCollection","consumes":["application/json"],"produces":["application/json"],"parameters":[{"name":"filter","in":"query","required":false,"type":"string"},{"name":"search","in":"query","required":false,"type":"string"},{"name":"order","in":"query","required":false,"type":"string"},{"name":"max","in":"query","required":false,"type":"integer","format":"int32"},{"name":"page","in":"query","required":false,"type":"integer","format":"int32"},{"name":"includeCount","in":"query","required":false,"type":"boolean"},{"name":"includeDeleted","in":"query","required":false,"type":"boolean"},{"name":"links","in":"query","required":false,"type":"string"},{"name":"udf","in":"query","required":false,"type":"string"}],"responses":{"200":{"description":"OK","schema":{"$ref":"#/definitions/ApiResourceResultCollection[ApiIntegratorMaterialClassGroupResource]"}}}}},"/lists/materialFinishedStates/{guid}":{"get":{"tags":["MaterialFinishedState"],"summary":"Find with GUID","description":"| Property                  | Description                                                              |\r\n| ------------------------- | ------------------------------------------------------------------------ |\r\n| GUID                      | The GUID associated to the material finished state                       |\r\n| Description               | The description of the material finished state                           |\r\n| IsDeleted                 | Whether the material finished state is deleted                           |","operationId":"MaterialFinishedState_Get","consumes":["application/json"],"produces":["application/json"],"parameters":[{"name":"guid","in":"path","required":true,"type":"string","format":"uuid"},{"name":"links","in":"query","required":false,"type":"string"},{"name":"include","in":"query","required":false,"type":"string"},{"name":"expand","in":"query","required":false,"type":"string"},{"name":"udf","in":"query","required":false,"type":"string"}],"responses":{"200":{"description":"OK","schema":{"$ref":"#/definitions/ApiResourceResultEntity[ApiIntegratorMaterialFinishedStateResource]"}}}}},"/lists/materialFinishedStates":{"get":{"tags":["MaterialFinishedState"],"summary":"Find with Filters","description":"| Property                  | Description                                                              |\r\n| ------------------------- | ------------------------------------------------------------------------ |\r\n| GUID                      | The GUID associated to the material finished state                       |\r\n| Description               | The description of the material finished state                           |\r\n| IsDeleted                 | Whether the material finished state is deleted                           |","operationId":"MaterialFinishedState_GetCollection","consumes":["application/json"],"produces":["application/json"],"parameters":[{"name":"filter","in":"query","required":false,"type":"string"},{"name":"search","in":"query","required":false,"type":"string"},{"name":"order","in":"query","required":false,"type":"string"},{"name":"max","in":"query","required":false,"type":"integer","format":"int32"},{"name":"page","in":"query","required":false,"type":"integer","format":"int32"},{"name":"includeCount","in":"query","required":false,"type":"boolean"},{"name":"includeDeleted","in":"query","required":false,"type":"boolean"},{"name":"links","in":"query","required":false,"type":"string"},{"name":"udf","in":"query","required":false,"type":"string"}],"responses":{"200":{"description":"OK","schema":{"$ref":"#/definitions/ApiResourceResultCollection[ApiIntegratorMaterialFinishedStateResource]"}}}}},"/lists/materialProducerTypes/{guid}":{"get":{"tags":["MaterialProducerType"],"summary":"Find with GUID","description":"| Property                  | Description                                                              |\r\n| ------------------------- | ------------------------------------------------------------------------ |\r\n| GUID                      | The GUID associated to the material producer type                              |\r\n| Description               | The description of the material producer type                                  |\r\n| IsDeleted                 | Whether the material producer type is deleted\t      \t \t\t\t\t\t\t|","operationId":"MaterialProducerType_Get","consumes":["application/json"],"produces":["application/json"],"parameters":[{"name":"guid","in":"path","required":true,"type":"string","format":"uuid"},{"name":"links","in":"query","required":false,"type":"string"},{"name":"include","in":"query","required":false,"type":"string"},{"name":"expand","in":"query","required":false,"type":"string"},{"name":"udf","in":"query","required":false,"type":"string"}],"responses":{"200":{"description":"OK","schema":{"$ref":"#/definitions/ApiResourceResultEntity[ApiIntegratorMaterialProducerTypeResource]"}}}}},"/lists/materialProducerTypes":{"get":{"tags":["MaterialProducerType"],"summary":"Find with Filters","description":"| Property                  | Description                                                              |\r\n| ------------------------- | ------------------------------------------------------------------------ |\r\n| GUID                      | The GUID associated to the material producer type                              |\r\n| Description               | The description of the material producer type                                  |\r\n| IsDeleted                 | Whether the material producer type is deleted\t      \t \t\t\t\t\t\t|","operationId":"MaterialProducerType_GetCollection","consumes":["application/json"],"produces":["application/json"],"parameters":[{"name":"filter","in":"query","required":false,"type":"string"},{"name":"search","in":"query","required":false,"type":"string"},{"name":"order","in":"query","required":false,"type":"string"},{"name":"max","in":"query","required":false,"type":"integer","format":"int32"},{"name":"page","in":"query","required":false,"type":"integer","format":"int32"},{"name":"includeCount","in":"query","required":false,"type":"boolean"},{"name":"includeDeleted","in":"query","required":false,"type":"boolean"},{"name":"links","in":"query","required":false,"type":"string"},{"name":"udf","in":"query","required":false,"type":"string"}],"responses":{"200":{"description":"OK","schema":{"$ref":"#/definitions/ApiResourceResultCollection[ApiIntegratorMaterialProducerTypeResource]"}}}}},"/lists/materialStates/{guid}":{"get":{"tags":["MaterialState"],"summary":"Find with GUID","description":"| Property                  | Description                                                              |\r\n| ------------------------- | ------------------------------------------------------------------------ |\r\n| GUID                      | The GUID associated to the material state                              |\r\n| Description               | The description of the material state                                  |\r\n| IsDeleted                 | Whether the material state is deleted\t\t \t \t\t\t\t\t\t|","operationId":"MaterialState_Get","consumes":["application/json"],"produces":["application/json"],"parameters":[{"name":"guid","in":"path","required":true,"type":"string","format":"uuid"},{"name":"links","in":"query","required":false,"type":"string"},{"name":"include","in":"query","required":false,"type":"string"},{"name":"expand","in":"query","required":false,"type":"string"},{"name":"udf","in":"query","required":false,"type":"string"}],"responses":{"200":{"description":"OK","schema":{"$ref":"#/definitions/ApiResourceResultEntity[ApiIntegratorMaterialStateResource]"}}}}},"/lists/materialStates":{"get":{"tags":["MaterialState"],"summary":"Find with Filters","description":"| Property                  | Description                                                              |\r\n| ------------------------- | ------------------------------------------------------------------------ |\r\n| GUID                      | The GUID associated to the material state                              |\r\n| Description               | The description of the material state                                  |\r\n| IsDeleted                 | Whether the material state is deleted\t\t \t \t\t\t\t\t\t|","operationId":"MaterialState_GetCollection","consumes":["application/json"],"produces":["application/json"],"parameters":[{"name":"filter","in":"query","required":false,"type":"string"},{"name":"search","in":"query","required":false,"type":"string"},{"name":"order","in":"query","required":false,"type":"string"},{"name":"max","in":"query","required":false,"type":"integer","format":"int32"},{"name":"page","in":"query","required":false,"type":"integer","format":"int32"},{"name":"includeCount","in":"query","required":false,"type":"boolean"},{"name":"includeDeleted","in":"query","required":false,"type":"boolean"},{"name":"links","in":"query","required":false,"type":"string"},{"name":"udf","in":"query","required":false,"type":"string"}],"responses":{"200":{"description":"OK","schema":{"$ref":"#/definitions/ApiResourceResultCollection[ApiIntegratorMaterialStateResource]"}}}}},"/lists/mobileSettingsProfileLists/{guid}":{"get":{"tags":["MobileSettingsProfileList"],"summary":"Find with GUID","description":"| Property                  | Description\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t|\r\n| ------------------------- | -------------------------------------------------------------------------\t|\r\n| GUID                      | The GUID associated to the mobile settings profile.\t\t\t\t\t\t|\r\n| Description               | The description of the mobile settings profile.\t\t\t\t\t\t\t|\r\n| IsDeleted                 | Whether the mobile settings profile is deleted.\t          \t\t\t\t|","operationId":"MobileSettingsProfileList_Get","consumes":["application/json"],"produces":["application/json"],"parameters":[{"name":"guid","in":"path","required":true,"type":"string","format":"uuid"},{"name":"links","in":"query","required":false,"type":"string"},{"name":"include","in":"query","required":false,"type":"string"},{"name":"expand","in":"query","required":false,"type":"string"},{"name":"udf","in":"query","required":false,"type":"string"}],"responses":{"200":{"description":"OK","schema":{"$ref":"#/definitions/ApiResourceResultEntity[ApiIntegratorMobileSettingsProfileListResource]"}}}}},"/lists/mobileSettingsProfileLists":{"get":{"tags":["MobileSettingsProfileList"],"summary":"Find with Filters","description":"| Property                  | Description\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t|\r\n| ------------------------- | -------------------------------------------------------------------------\t|\r\n| GUID                      | The GUID associated to the mobile settings profile.\t\t\t\t\t\t|\r\n| Description               | The description of the mobile settings profile.\t\t\t\t\t\t\t|\r\n| IsDeleted                 | Whether the mobile settings profile is deleted.\t          \t\t\t\t|","operationId":"MobileSettingsProfileList_GetCollection","consumes":["application/json"],"produces":["application/json"],"parameters":[{"name":"filter","in":"query","required":false,"type":"string"},{"name":"search","in":"query","required":false,"type":"string"},{"name":"order","in":"query","required":false,"type":"string"},{"name":"max","in":"query","required":false,"type":"integer","format":"int32"},{"name":"page","in":"query","required":false,"type":"integer","format":"int32"},{"name":"includeCount","in":"query","required":false,"type":"boolean"},{"name":"includeDeleted","in":"query","required":false,"type":"boolean"},{"name":"links","in":"query","required":false,"type":"string"},{"name":"udf","in":"query","required":false,"type":"string"}],"responses":{"200":{"description":"OK","schema":{"$ref":"#/definitions/ApiResourceResultCollection[ApiIntegratorMobileSettingsProfileListResource]"}}}}},"/comms/notifications/changes":{"get":{"tags":["Notification"],"summary":"Retrieve changes","description":"| Property       | Description                                                  |\r\n| -------------- | ------------------------------------------------------------ |\r\n| ThirdPartyKey\t\t\t| The third party key of the notification.\t|\r\n| GeneratedTimestamp\t| The generated date of the notification.\t|\r\n| SentTimeStamp\t\t\t| The send date of the notification.\t\t|\r\n| ResponseDate\t\t\t| The response date of the notification.\t|\r\n| ResponseString\t\t| The response string of the notification.\t|\r\n| RelatedApplicationNotificationMessageTransportProviderGuid\t| The GUID of the notification message transport provider associated to the notification. |\r\n| RelatedApplicationNotificationMessageTransportGuid\t\t\t| The GUID of the notification message transport associated to the notification. |\r\n| RelatedApplicationNotificationRunItemGuid\t\t\t\t\t\t| The GUID of the notification run item associated to the notification. |\r\n| Subject\t\t\t\t| The subject of the notification.\t\t\t|\r\n| DestinationAddress\t| The destination address of the notification. |\r\n| Message\t\t\t\t| The message of the notification.\t\t\t|\r\n| IsSent\t\t\t\t| Is this notification sent?\t\t\t\t|\r\n","operationId":"Notification_GetChanges","consumes":["application/json"],"produces":["application/json"],"parameters":[{"name":"since","in":"query","required":false,"type":"string"},{"name":"cursor","in":"query","required":false,"type":"string"},{"name":"links","in":"query","required":false,"type":"string"}],"responses":{"200":{"description":"OK","schema":{"$ref":"#/definitions/ApiResourceChanges[ApiIntegratorNotificationResource]"}}}}},"/comms/notifications/{guid}":{"get":{"tags":["Notification"],"summary":"Find with GUID","description":"| Property       | Description                                                  |\r\n| -------------- | ------------------------------------------------------------ |\r\n| ThirdPartyKey\t\t\t| The third party key of the notification.\t|\r\n| GeneratedTimestamp\t| The generated date of the notification.\t|\r\n| SentTimeStamp\t\t\t| The send date of the notification.\t\t|\r\n| ResponseDate\t\t\t| The response date of the notification.\t|\r\n| ResponseString\t\t| The response string of the notification.\t|\r\n| RelatedApplicationNotificationMessageTransportProviderGuid\t| The GUID of the notification message transport provider associated to the notification. |\r\n| RelatedApplicationNotificationMessageTransportGuid\t\t\t| The GUID of the notification message transport associated to the notification. |\r\n| RelatedApplicationNotificationRunItemGuid\t\t\t\t\t\t| The GUID of the notification run item associated to the notification. |\r\n| Subject\t\t\t\t| The subject of the notification.\t\t\t|\r\n| DestinationAddress\t| The destination address of the notification. |\r\n| Message\t\t\t\t| The message of the notification.\t\t\t|\r\n| IsSent\t\t\t\t| Is this notification sent?\t\t\t\t|\r\n","operationId":"Notification_Get","consumes":["application/json"],"produces":["application/json"],"parameters":[{"name":"guid","in":"path","required":true,"type":"string","format":"uuid"},{"name":"links","in":"query","required":false,"type":"string"},{"name":"include","in":"query","required":false,"type":"string"},{"name":"expand","in":"query","required":false,"type":"string"},{"name":"udf","in":"query","required":false,"type":"string"}],"responses":{"200":{"description":"OK","schema":{"$ref":"#/definitions/ApiResourceResultEntity[ApiIntegratorNotificationResource]"}}}}},"/comms/notifications":{"get":{"tags":["Notification"],"summary":"Find with Filters","description":"| Property       | Description                                                  |\r\n| -------------- | ------------------------------------------------------------ |\r\n| ThirdPartyKey\t\t\t| The third party key of the notification.\t|\r\n| GeneratedTimestamp\t| The generated date of the notification.\t|\r\n| SentTimeStamp\t\t\t| The send date of the notification.\t\t|\r\n| ResponseDate\t\t\t| The response date of the notification.\t|\r\n| ResponseString\t\t| The response string of the notification.\t|\r\n| RelatedApplicationNotificationMessageTransportProviderGuid\t| The GUID of the notification message transport provider associated to the notification. |\r\n| RelatedApplicationNotificationMessageTransportGuid\t\t\t| The GUID of the notification message transport associated to the notification. |\r\n| RelatedApplicationNotificationRunItemGuid\t\t\t\t\t\t| The GUID of the notification run item associated to the notification. |\r\n| Subject\t\t\t\t| The subject of the notification.\t\t\t|\r\n| DestinationAddress\t| The destination address of the notification. |\r\n| Message\t\t\t\t| The message of the notification.\t\t\t|\r\n| IsSent\t\t\t\t| Is this notification sent?\t\t\t\t|\r\n","operationId":"Notification_GetCollection","consumes":["application/json"],"produces":["application/json"],"parameters":[{"name":"filter","in":"query","required":false,"type":"string"},{"name":"search","in":"query","required":false,"type":"string"},{"name":"order","in":"query","required":false,"type":"string"},{"name":"max","in":"query","required":false,"type":"integer","format":"int32"},{"name":"page","in":"query","required":false,"type":"integer","format":"int32"},{"name":"includeCount","in":"query","required":false,"type":"boolean"},{"name":"includeDeleted","in":"query","required":false,"type":"boolean"},{"name":"links","in":"query","required":false,"type":"string"},{"name":"udf","in":"query","required":false,"type":"string"}],"responses":{"200":{"description":"OK","schema":{"$ref":"#/definitions/ApiResourceResultCollection[ApiIntegratorNotificationResource]"}}}}},"/transport/oneOffActions/changes":{"get":{"tags":["OneOffAction"],"summary":"Retrieve changes","description":"| Property\t\t\t\t\t\t\t\t\t\t\t| Description\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t|\r\n| ------------------------------------------------- | ------------------------------------------------------------------------------------------------- |\r\n| GUID\t\t\t\t\t\t\t\t\t\t\t\t| The GUID associated to the one-off action.\t\t\t\t\t\t\t\t\t\t\t\t\t\t|\r\n| RelatedOrderGuid\t\t\t\t\t\t\t\t\t| The GUID associated to the site order of the one-off action. Filterable.\t\t\t\t\t\t\t|\r\n| RelatedPriceGuid\t\t\t\t\t\t\t\t\t| The GUID associated to the price of the one-off action.\t\t\t\t\t\t\t\t\t\t\t|\r\n| RelatedPriceAdjustmentGuid\t\t\t\t\t\t| The GUID associated to the price adjustment of the one-off action. Filterable.\t\t\t\t\t|\r\n| RelatedUserFinanciallyConfirmedByGuid\t\t\t\t| The GUID associated to the financially confirmed sysuser of the one-off action. Filterable.\t\t|\r\n| RelatedJobGuid\t\t\t\t\t\t\t\t\t| The GUID associated to the job of the one-off action. Filterable.\t\t\t\t\t\t\t\t\t|\r\n| RelatedRouteVisitGuid\t\t\t\t\t\t\t\t| The GUID associated to the route visit of the one-off action.\tFilterable.\t\t\t\t\t\t\t|\r\n| RelatedPONumberGuid\t\t\t\t\t\t\t\t| The GUID associated to the PO number of the one-off action. Filterable.\t\t\t\t\t\t\t|\r\n| RelatedServiceAgreementGuid\t\t\t\t\t\t| The GUID associated to the service agreement of the one-off action. Filterable.\t\t\t\t\t|\r\n| RelatedWeighingInGuid\t\t\t\t\t\t\t\t| The GUID associated to the weighing in of the one-off action.\tFilterable.\t\t\t\t\t\t\t|\r\n| RelatedWeighingOutGuid\t\t\t\t\t\t\t| The GUID associated to the weighing out of the one-off action. Filterable.\t\t\t\t\t\t|\r\n| ContainerTypeListItem\t\t\t\t\t\t\t\t| The GUID and description of the container type associated to the one-off action.\t\t\t\t\t|\r\n| MaterialListItem\t\t\t\t\t\t\t\t\t| The GUID and description of the material associated to the one-off action.\t\t\t\t\t\t|\r\n| ReasonListItem\t\t\t\t\t\t\t\t\t| The GUID and description of the reason associated to the one-off action.\t\t\t\t\t\t\t|\r\n| ServiceListItem\t\t\t\t\t\t\t\t\t| The GUID and description of the service associated to the one-off action.\t\t\t\t\t\t\t|\r\n| ActionListItem\t\t\t\t\t\t\t\t\t| The GUID and description of the action associated to the one-off action.\t\t\t\t\t\t\t|\r\n| DateCreated\t\t\t\t\t\t\t\t\t\t| The created date associated to the one-off action in ISO format (YYYY-MM-DD).\t\t\t\t\t\t|\r\n| DateRequired\t\t\t\t\t\t\t\t\t\t| The required date associated to the one-off action in ISO format (YYYY-MM-DD).\t\t\t\t\t|\r\n| IsDiscount\t\t\t\t\t\t\t\t\t\t| Is discount in the one-off action?\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t|\r\n| IsFinanciallyConfirmed\t\t\t\t\t\t\t| Is financially confirmed in the one-off action?\t\t\t\t\t\t\t\t\t\t\t\t\t|\r\n| IsQuantityAdjustment\t\t\t\t\t\t\t\t| Is quantity adjustment in the one-off action?\t\t\t\t\t\t\t\t\t\t\t\t\t\t|\r\n| IsRateAdjustment\t\t\t\t\t\t\t\t\t| Is rate adjustment in the one-off action?\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t|\r\n| IsWeightAdjustment\t\t\t\t\t\t\t\t| Is weight adjustment in the one-off action?\t\t\t\t\t\t\t\t\t\t\t\t\t\t|\r\n| PriceOverride\t\t\t\t\t\t\t\t\t\t| Price override of the one-off action.\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t|\r\n| AdjustedRate\t\t\t\t\t\t\t\t\t\t| Adjusted rate of the one-off action.\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t|\r\n| AdjustedWeight\t\t\t\t\t\t\t\t\t| Adjusted weight of the one-off action.\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t|\r\n| CustomerOrderNo\t\t\t\t\t\t\t\t\t| Customer order no of the one-off action.\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t|\r\n| DateTo\t\t\t\t\t\t\t\t\t\t\t| The date to associated to the one-off action in ISO format (YYYY-MM-DD).\t\t\t\t\t\t\t|\r\n| HoursChargable\t\t\t\t\t\t\t\t\t| Chargable hours of the one-off action.\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t|\r\n| Notes\t\t\t\t\t\t\t\t\t\t\t\t| Notes of the one-off action.\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t|\r\n| PONumber\t\t\t\t\t\t\t\t\t\t\t| PONumber of the one-off action.\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t|\r\n| Quantity\t\t\t\t\t\t\t\t\t\t\t| Quantity of the one-off action.\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t|\r\n| ReferenceNo\t\t\t\t\t\t\t\t\t\t| ReferenceNo of the one-off action. Filterable.\t\t\t\t\t\t\t\t\t\t\t\t\t|","operationId":"OneOffAction_GetChanges","consumes":["application/json"],"produces":["application/json"],"parameters":[{"name":"since","in":"query","required":false,"type":"string"},{"name":"cursor","in":"query","required":false,"type":"string"},{"name":"links","in":"query","required":false,"type":"string"}],"responses":{"200":{"description":"OK","schema":{"$ref":"#/definitions/ApiResourceChanges[ApiIntegratorOneOffActionResource]"}}}}},"/transport/oneOffActions/{guid}":{"get":{"tags":["OneOffAction"],"summary":"Find with GUID","description":"| Property\t\t\t\t\t\t\t\t\t\t\t| Description\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t|\r\n| ------------------------------------------------- | ------------------------------------------------------------------------------------------------- |\r\n| GUID\t\t\t\t\t\t\t\t\t\t\t\t| The GUID associated to the one-off action.\t\t\t\t\t\t\t\t\t\t\t\t\t\t|\r\n| RelatedOrderGuid\t\t\t\t\t\t\t\t\t| The GUID associated to the site order of the one-off action. Filterable.\t\t\t\t\t\t\t|\r\n| RelatedPriceGuid\t\t\t\t\t\t\t\t\t| The GUID associated to the price of the one-off action.\t\t\t\t\t\t\t\t\t\t\t|\r\n| RelatedPriceAdjustmentGuid\t\t\t\t\t\t| The GUID associated to the price adjustment of the one-off action. Filterable.\t\t\t\t\t|\r\n| RelatedUserFinanciallyConfirmedByGuid\t\t\t\t| The GUID associated to the financially confirmed sysuser of the one-off action. Filterable.\t\t|\r\n| RelatedJobGuid\t\t\t\t\t\t\t\t\t| The GUID associated to the job of the one-off action. Filterable.\t\t\t\t\t\t\t\t\t|\r\n| RelatedRouteVisitGuid\t\t\t\t\t\t\t\t| The GUID associated to the route visit of the one-off action.\tFilterable.\t\t\t\t\t\t\t|\r\n| RelatedPONumberGuid\t\t\t\t\t\t\t\t| The GUID associated to the PO number of the one-off action. Filterable.\t\t\t\t\t\t\t|\r\n| RelatedServiceAgreementGuid\t\t\t\t\t\t| The GUID associated to the service agreement of the one-off action. Filterable.\t\t\t\t\t|\r\n| RelatedWeighingInGuid\t\t\t\t\t\t\t\t| The GUID associated to the weighing in of the one-off action.\tFilterable.\t\t\t\t\t\t\t|\r\n| RelatedWeighingOutGuid\t\t\t\t\t\t\t| The GUID associated to the weighing out of the one-off action. Filterable.\t\t\t\t\t\t|\r\n| ContainerTypeListItem\t\t\t\t\t\t\t\t| The GUID and description of the container type associated to the one-off action.\t\t\t\t\t|\r\n| MaterialListItem\t\t\t\t\t\t\t\t\t| The GUID and description of the material associated to the one-off action.\t\t\t\t\t\t|\r\n| ReasonListItem\t\t\t\t\t\t\t\t\t| The GUID and description of the reason associated to the one-off action.\t\t\t\t\t\t\t|\r\n| ServiceListItem\t\t\t\t\t\t\t\t\t| The GUID and description of the service associated to the one-off action.\t\t\t\t\t\t\t|\r\n| ActionListItem\t\t\t\t\t\t\t\t\t| The GUID and description of the action associated to the one-off action.\t\t\t\t\t\t\t|\r\n| DateCreated\t\t\t\t\t\t\t\t\t\t| The created date associated to the one-off action in ISO format (YYYY-MM-DD).\t\t\t\t\t\t|\r\n| DateRequired\t\t\t\t\t\t\t\t\t\t| The required date associated to the one-off action in ISO format (YYYY-MM-DD).\t\t\t\t\t|\r\n| IsDiscount\t\t\t\t\t\t\t\t\t\t| Is discount in the one-off action?\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t|\r\n| IsFinanciallyConfirmed\t\t\t\t\t\t\t| Is financially confirmed in the one-off action?\t\t\t\t\t\t\t\t\t\t\t\t\t|\r\n| IsQuantityAdjustment\t\t\t\t\t\t\t\t| Is quantity adjustment in the one-off action?\t\t\t\t\t\t\t\t\t\t\t\t\t\t|\r\n| IsRateAdjustment\t\t\t\t\t\t\t\t\t| Is rate adjustment in the one-off action?\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t|\r\n| IsWeightAdjustment\t\t\t\t\t\t\t\t| Is weight adjustment in the one-off action?\t\t\t\t\t\t\t\t\t\t\t\t\t\t|\r\n| PriceOverride\t\t\t\t\t\t\t\t\t\t| Price override of the one-off action.\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t|\r\n| AdjustedRate\t\t\t\t\t\t\t\t\t\t| Adjusted rate of the one-off action.\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t|\r\n| AdjustedWeight\t\t\t\t\t\t\t\t\t| Adjusted weight of the one-off action.\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t|\r\n| CustomerOrderNo\t\t\t\t\t\t\t\t\t| Customer order no of the one-off action.\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t|\r\n| DateTo\t\t\t\t\t\t\t\t\t\t\t| The date to associated to the one-off action in ISO format (YYYY-MM-DD).\t\t\t\t\t\t\t|\r\n| HoursChargable\t\t\t\t\t\t\t\t\t| Chargable hours of the one-off action.\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t|\r\n| Notes\t\t\t\t\t\t\t\t\t\t\t\t| Notes of the one-off action.\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t|\r\n| PONumber\t\t\t\t\t\t\t\t\t\t\t| PONumber of the one-off action.\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t|\r\n| Quantity\t\t\t\t\t\t\t\t\t\t\t| Quantity of the one-off action.\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t|\r\n| ReferenceNo\t\t\t\t\t\t\t\t\t\t| ReferenceNo of the one-off action. Filterable.\t\t\t\t\t\t\t\t\t\t\t\t\t|","operationId":"OneOffAction_Get","consumes":["application/json"],"produces":["application/json"],"parameters":[{"name":"guid","in":"path","required":true,"type":"string","format":"uuid"},{"name":"links","in":"query","required":false,"type":"string"},{"name":"include","in":"query","required":false,"type":"string"},{"name":"expand","in":"query","required":false,"type":"string"},{"name":"udf","in":"query","required":false,"type":"string"}],"responses":{"200":{"description":"OK","schema":{"$ref":"#/definitions/ApiResourceResultEntity[ApiIntegratorOneOffActionResource]"}}}},"put":{"tags":["OneOffAction"],"summary":"Partial update","description":"| Property\t\t\t\t\t\t\t\t\t\t\t| Description\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t| Required |\r\n| ------------------------------------------------- | ------------------------------------------------------------------------------------------------- | -------- |\r\n| GUID\t\t\t\t\t\t\t\t\t\t\t\t| The GUID associated to the one-off action.\t\t\t\t\t\t\t\t\t\t\t\t\t\t|\t No    |\r\n| RelatedOrderGuid\t\t\t\t\t\t\t\t\t| The GUID associated to the site order of the one-off action.\t\t\t\t\t\t\t\t\t\t|\t Yes   |\r\n| RelatedPriceGuid\t\t\t\t\t\t\t\t\t| The GUID associated to the price of the one-off action.\t\t\t\t\t\t\t\t\t\t\t|\t Yes   |\r\n| RelatedPriceAdjustmentGuid\t\t\t\t\t\t| The GUID associated to the price adjustment of the one-off action.\t\t\t\t\t\t\t\t|\t No    |\r\n| RelatedUserFinanciallyConfirmedByGuid\t\t\t\t| The GUID associated to the financially confirmed sysuser of the one-off action.\t\t\t\t\t|\t No    |\r\n| RelatedJobGuid\t\t\t\t\t\t\t\t\t| The GUID associated to the job of the one-off action.\t\t\t\t\t\t\t\t\t\t\t\t|\t No    |\r\n| RelatedRouteVisitGuid\t\t\t\t\t\t\t\t| The GUID associated to the route visit of the one-off action.\t\t\t\t\t\t\t\t\t\t|\t No    |\r\n| RelatedPONumberGuid\t\t\t\t\t\t\t\t| The GUID associated to the PO number of the one-off action.\t\t\t\t\t\t\t\t\t\t|\t No    |\r\n| RelatedServiceAgreementGuid\t\t\t\t\t\t| The GUID associated to the service agreement of the one-off action.\t\t\t\t\t\t\t\t|\t No    |\r\n| RelatedWeighingInGuid\t\t\t\t\t\t\t\t| The GUID associated to the weighing in of the one-off action.\t\t\t\t\t\t\t\t\t\t|\t No    |\r\n| RelatedWeighingOutGuid\t\t\t\t\t\t\t| The GUID associated to the weighing out of the one-off action.\t\t\t\t\t\t\t\t\t|\t No    |\r\n| ContainerTypeListItem\t\t\t\t\t\t\t\t| The GUID and description of the container type associated to the one-off action.\t\t\t\t\t|\t No    |\r\n| MaterialListItem\t\t\t\t\t\t\t\t\t| The GUID and description of the material associated to the one-off action.\t\t\t\t\t\t|\t No    |\r\n| ReasonListItem\t\t\t\t\t\t\t\t\t| The GUID and description of the reason associated to the one-off action.\t\t\t\t\t\t\t|\t No    |\r\n| ServiceListItem\t\t\t\t\t\t\t\t\t| The GUID and description of the service associated to the one-off action.\t\t\t\t\t\t\t|\t No    |\r\n| ActionListItem\t\t\t\t\t\t\t\t\t| The GUID and description of the action associated to the one-off action.\t\t\t\t\t\t\t|\t Yes   |\r\n| DateCreated\t\t\t\t\t\t\t\t\t\t| The created date associated to the one-off action in ISO format (YYYY-MM-DD).\t\t\t\t\t\t|\t Yes   |\r\n| DateRequired\t\t\t\t\t\t\t\t\t\t| The required date associated to the one-off action in ISO format (YYYY-MM-DD).\t\t\t\t\t|\t Yes   |\r\n| IsDiscount\t\t\t\t\t\t\t\t\t\t| Is discount in the one-off action?\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t|\t Yes   |\r\n| IsFinanciallyConfirmed\t\t\t\t\t\t\t| Is financially confirmed in the one-off action?\t\t\t\t\t\t\t\t\t\t\t\t\t|\t Yes   |\r\n| IsQuantityAdjustment\t\t\t\t\t\t\t\t| Is quantity adjustment in the one-off action?\t\t\t\t\t\t\t\t\t\t\t\t\t\t|\t Yes   |\r\n| IsRateAdjustment\t\t\t\t\t\t\t\t\t| Is rate adjustment in the one-off action?\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t|\t Yes   |\r\n| IsWeightAdjustment\t\t\t\t\t\t\t\t| Is weight adjustment in the one-off action?\t\t\t\t\t\t\t\t\t\t\t\t\t\t|\t Yes   |\r\n| PriceOverride\t\t\t\t\t\t\t\t\t\t| Price override of the one-off action.\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t|\t No    |\r\n| AdjustedRate\t\t\t\t\t\t\t\t\t\t| Adjusted rate of the one-off action.\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t|\t No    |\r\n| AdjustedWeight\t\t\t\t\t\t\t\t\t| Adjusted weight of the one-off action.\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t|\t No    |\r\n| CustomerOrderNo\t\t\t\t\t\t\t\t\t| Customer order no of the one-off action.\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t|\t No    |\r\n| DateTo\t\t\t\t\t\t\t\t\t\t\t| The date to associated to the one-off action in ISO format (YYYY-MM-DD).\t\t\t\t\t\t\t|\t No    |\r\n| HoursChargable\t\t\t\t\t\t\t\t\t| Chargable hours of the one-off action.\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t|\t No    |\r\n| Notes\t\t\t\t\t\t\t\t\t\t\t\t| Notes of the one-off action.\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t|\t No    |\r\n| PONumber\t\t\t\t\t\t\t\t\t\t\t| PONumber of the one-off action.\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t|\t No    |\r\n| Quantity\t\t\t\t\t\t\t\t\t\t\t| Quantity of the one-off action.\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t|\t No    |\r\n| ReferenceNo\t\t\t\t\t\t\t\t\t\t| ReferenceNo of the one-off action.\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t|\t No    |\r\n\r\n## Extra validations\r\n\r\n| Condition | Error message |\r\n| --------- | ------------- |\r\n| When an existing one-off action IsFinancialyConfirmed is true  | Attempted to update a financially confirmed one-off action. Could not update the one-off action. |\r\n| If RelatedOrderGuid is being edited | RelatedOrderGuid is a read-only property. |\r\n| If the provided RelatedPriceGuid is not in site order price with the provide ActionListItem.Guid.  | OneOffAction has the property RelatedPriceGuid with value of guid that is not supported. The given RelatedPriceGuid is not found in siteorder price with ActionListItem.Guid - guid. |\r\n| If RelatedPriceGuid is being edited | RelatedPriceGuid is a read-only property. |\r\n| If RelatedPriceAdjustmentGuid is being edited | RelatedPriceAdjustmentGuid is a read-only property. |\r\n| If RelatedUserFinanciallyConfirmedByGuid is being edited | RelatedUserFinanciallyConfirmedByGuid is a read-only property. |\r\n| If RelatedJobGuid is being edited | RelatedJobGuid is a read-only property. |\r\n| If RelatedRouteVisitGuid is being edited | RelatedRouteVisitGuid is a read-only property. |\r\n| If RelatedPONumberGuid is being edited | RelatedPONumberGuid is a read-only property. |\r\n| If RelatedServiceAgreementGuid is being edited | RelatedServiceAgreementGuid is a read-only property. |\r\n| If RelatedWeighingInGuid is being edited | RelatedWeighingInGuid is a read-only property. |\r\n| If RelatedWeighingOutGuid is being edited | RelatedWeighingOutGuid is a read-only property. |\r\n| If ContainerTypeListItem.Guid is being edited | ContainerTypeListItem.Guid is a read-only property. |\r\n| If MaterialListItem.Guid is being edited | MaterialListItem.Guid is a read-only property. |\r\n| If ReasonListItem.Guid is being edited | ReasonListItem.Guid is a read-only property. |\r\n| If ServiceListItem.Guid is being edited | ServiceListItem.Guid is a read-only property. |\r\n| If ActionListItem.Guid is being edited | ActionListItem.Guid is a read-only property. |\r\n| If DateRequired is being edited | DateRequired is a read-only property. |\r\n| If IsDiscount is being edited | IsDiscount is a read-only property. |\r\n| If IsFinanciallyConfirmed is being edited | IsFinanciallyConfirmed is a read-only property. |\r\n| If IsQuantityAdjustment is being edited | IsQuantityAdjustment is a read-only property. |\r\n| If IsRateAdjustment is being edited | IsRateAdjustment is a read-only property. |\r\n| If IsWeightAdjustment is being edited | IsWeightAdjustment is a read-only property. |\r\n| If AdjustedRate is being edited | AdjustedRate is a read-only property. |\r\n| If AdjustedWeight is being edited | AdjustedWeight is a read-only property. |\r\n| If CustomerOrderNo is being edited | CustomerOrderNo is a read-only property. |\r\n| If DateTo is being edited | DateTo is a read-only property. |\r\n| If HoursChargable is being edited | HoursChargable is a read-only property. |\r\n| If Notes is being edited | Notes is a read-only property. |\r\n| If PONumber is being edited | PONumber is a read-only property. |\r\n| If Quantity is being edited | Quantity is a read-only property. |\r\n| If ReferenceNo is being edited | ReferenceNo is a read-only property. |","operationId":"OneOffAction_Update","consumes":["application/json"],"produces":["application/json"],"parameters":[{"name":"guid","in":"path","required":true,"type":"string","format":"uuid"},{"in":"body","required":true,"schema":{"$ref":"#/definitions/ApiResourceId"}}],"responses":{"200":{"description":"OK","schema":{"$ref":"#/definitions/ApiResourceId"}}}}},"/transport/oneOffActions":{"get":{"tags":["OneOffAction"],"summary":"Find with Filters","description":"| Property\t\t\t\t\t\t\t\t\t\t\t| Description\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t|\r\n| ------------------------------------------------- | ------------------------------------------------------------------------------------------------- |\r\n| GUID\t\t\t\t\t\t\t\t\t\t\t\t| The GUID associated to the one-off action.\t\t\t\t\t\t\t\t\t\t\t\t\t\t|\r\n| RelatedOrderGuid\t\t\t\t\t\t\t\t\t| The GUID associated to the site order of the one-off action. Filterable.\t\t\t\t\t\t\t|\r\n| RelatedPriceGuid\t\t\t\t\t\t\t\t\t| The GUID associated to the price of the one-off action.\t\t\t\t\t\t\t\t\t\t\t|\r\n| RelatedPriceAdjustmentGuid\t\t\t\t\t\t| The GUID associated to the price adjustment of the one-off action. Filterable.\t\t\t\t\t|\r\n| RelatedUserFinanciallyConfirmedByGuid\t\t\t\t| The GUID associated to the financially confirmed sysuser of the one-off action. Filterable.\t\t|\r\n| RelatedJobGuid\t\t\t\t\t\t\t\t\t| The GUID associated to the job of the one-off action. Filterable.\t\t\t\t\t\t\t\t\t|\r\n| RelatedRouteVisitGuid\t\t\t\t\t\t\t\t| The GUID associated to the route visit of the one-off action.\tFilterable.\t\t\t\t\t\t\t|\r\n| RelatedPONumberGuid\t\t\t\t\t\t\t\t| The GUID associated to the PO number of the one-off action. Filterable.\t\t\t\t\t\t\t|\r\n| RelatedServiceAgreementGuid\t\t\t\t\t\t| The GUID associated to the service agreement of the one-off action. Filterable.\t\t\t\t\t|\r\n| RelatedWeighingInGuid\t\t\t\t\t\t\t\t| The GUID associated to the weighing in of the one-off action.\tFilterable.\t\t\t\t\t\t\t|\r\n| RelatedWeighingOutGuid\t\t\t\t\t\t\t| The GUID associated to the weighing out of the one-off action. Filterable.\t\t\t\t\t\t|\r\n| ContainerTypeListItem\t\t\t\t\t\t\t\t| The GUID and description of the container type associated to the one-off action.\t\t\t\t\t|\r\n| MaterialListItem\t\t\t\t\t\t\t\t\t| The GUID and description of the material associated to the one-off action.\t\t\t\t\t\t|\r\n| ReasonListItem\t\t\t\t\t\t\t\t\t| The GUID and description of the reason associated to the one-off action.\t\t\t\t\t\t\t|\r\n| ServiceListItem\t\t\t\t\t\t\t\t\t| The GUID and description of the service associated to the one-off action.\t\t\t\t\t\t\t|\r\n| ActionListItem\t\t\t\t\t\t\t\t\t| The GUID and description of the action associated to the one-off action.\t\t\t\t\t\t\t|\r\n| DateCreated\t\t\t\t\t\t\t\t\t\t| The created date associated to the one-off action in ISO format (YYYY-MM-DD).\t\t\t\t\t\t|\r\n| DateRequired\t\t\t\t\t\t\t\t\t\t| The required date associated to the one-off action in ISO format (YYYY-MM-DD).\t\t\t\t\t|\r\n| IsDiscount\t\t\t\t\t\t\t\t\t\t| Is discount in the one-off action?\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t|\r\n| IsFinanciallyConfirmed\t\t\t\t\t\t\t| Is financially confirmed in the one-off action?\t\t\t\t\t\t\t\t\t\t\t\t\t|\r\n| IsQuantityAdjustment\t\t\t\t\t\t\t\t| Is quantity adjustment in the one-off action?\t\t\t\t\t\t\t\t\t\t\t\t\t\t|\r\n| IsRateAdjustment\t\t\t\t\t\t\t\t\t| Is rate adjustment in the one-off action?\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t|\r\n| IsWeightAdjustment\t\t\t\t\t\t\t\t| Is weight adjustment in the one-off action?\t\t\t\t\t\t\t\t\t\t\t\t\t\t|\r\n| PriceOverride\t\t\t\t\t\t\t\t\t\t| Price override of the one-off action.\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t|\r\n| AdjustedRate\t\t\t\t\t\t\t\t\t\t| Adjusted rate of the one-off action.\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t|\r\n| AdjustedWeight\t\t\t\t\t\t\t\t\t| Adjusted weight of the one-off action.\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t|\r\n| CustomerOrderNo\t\t\t\t\t\t\t\t\t| Customer order no of the one-off action.\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t|\r\n| DateTo\t\t\t\t\t\t\t\t\t\t\t| The date to associated to the one-off action in ISO format (YYYY-MM-DD).\t\t\t\t\t\t\t|\r\n| HoursChargable\t\t\t\t\t\t\t\t\t| Chargable hours of the one-off action.\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t|\r\n| Notes\t\t\t\t\t\t\t\t\t\t\t\t| Notes of the one-off action.\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t|\r\n| PONumber\t\t\t\t\t\t\t\t\t\t\t| PONumber of the one-off action.\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t|\r\n| Quantity\t\t\t\t\t\t\t\t\t\t\t| Quantity of the one-off action.\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t|\r\n| ReferenceNo\t\t\t\t\t\t\t\t\t\t| ReferenceNo of the one-off action. Filterable.\t\t\t\t\t\t\t\t\t\t\t\t\t|","operationId":"OneOffAction_GetCollection","consumes":["application/json"],"produces":["application/json"],"parameters":[{"name":"filter","in":"query","required":false,"type":"string"},{"name":"search","in":"query","required":false,"type":"string"},{"name":"order","in":"query","required":false,"type":"string"},{"name":"max","in":"query","required":false,"type":"integer","format":"int32"},{"name":"page","in":"query","required":false,"type":"integer","format":"int32"},{"name":"includeCount","in":"query","required":false,"type":"boolean"},{"name":"includeDeleted","in":"query","required":false,"type":"boolean"},{"name":"links","in":"query","required":false,"type":"string"},{"name":"udf","in":"query","required":false,"type":"string"}],"responses":{"200":{"description":"OK","schema":{"$ref":"#/definitions/ApiResourceResultCollection[ApiIntegratorOneOffActionResource]"}}}},"post":{"tags":["OneOffAction"],"summary":"Create or update","description":"| Property\t\t\t\t\t\t\t\t\t\t\t| Description\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t| Required |\r\n| ------------------------------------------------- | --------------------------------------------------------------------------------------------------| -------- |\r\n| GUID\t\t\t\t\t\t\t\t\t\t\t\t| The GUID associated to the one-off action.\t\t\t\t\t\t\t\t\t\t\t\t\t\t|\t No    |\r\n| RelatedOrderGuid\t\t\t\t\t\t\t\t\t| The GUID associated to the site order of the one-off action.\t\t\t\t\t\t\t\t\t\t|\t Yes   |\r\n| RelatedPriceGuid\t\t\t\t\t\t\t\t\t| The GUID associated to the price of the one-off action.\t\t\t\t\t\t\t\t\t\t\t|\t Yes   |\r\n| RelatedPriceAdjustmentGuid\t\t\t\t\t\t| The GUID associated to the price adjustment of the one-off action.\t\t\t\t\t\t\t\t|\t No    |\r\n| RelatedUserFinanciallyConfirmedByGuid\t\t\t\t| The GUID associated to the financially confirmed sysuser of the one-off action.\t\t\t\t\t|\t No    |\r\n| RelatedJobGuid\t\t\t\t\t\t\t\t\t| The GUID associated to the job of the one-off action.\t\t\t\t\t\t\t\t\t\t\t\t|\t No    |\r\n| RelatedRouteVisitGuid\t\t\t\t\t\t\t\t| The GUID associated to the route visit of the one-off action.\t\t\t\t\t\t\t\t\t\t|\t No    |\r\n| RelatedPONumberGuid\t\t\t\t\t\t\t\t| The GUID associated to the PO number of the one-off action.\t\t\t\t\t\t\t\t\t\t|\t No    |\r\n| RelatedServiceAgreementGuid\t\t\t\t\t\t| The GUID associated to the service agreement of the one-off action.\t\t\t\t\t\t\t\t|\t No    |\r\n| RelatedWeighingInGuid\t\t\t\t\t\t\t\t| The GUID associated to the weighing in of the one-off action.\t\t\t\t\t\t\t\t\t\t|\t No    |\r\n| RelatedWeighingOutGuid\t\t\t\t\t\t\t| The GUID associated to the weighing out of the one-off action.\t\t\t\t\t\t\t\t\t|\t No    |\r\n| ContainerTypeListItem\t\t\t\t\t\t\t\t| The GUID and description of the container type associated to the one-off action.\t\t\t\t\t|\t No    |\r\n| MaterialListItem\t\t\t\t\t\t\t\t\t| The GUID and description of the material associated to the one-off action.\t\t\t\t\t\t|\t No    |\r\n| ReasonListItem\t\t\t\t\t\t\t\t\t| The GUID and description of the reason associated to the one-off action.\t\t\t\t\t\t\t|\t No    |\r\n| ServiceListItem\t\t\t\t\t\t\t\t\t| The GUID and description of the service associated to the one-off action.\t\t\t\t\t\t\t|\t No    |\r\n| ActionListItem\t\t\t\t\t\t\t\t\t| The GUID and description of the action associated to the one-off action.\t\t\t\t\t\t\t|\t Yes   |\r\n| DateCreated\t\t\t\t\t\t\t\t\t\t| The created date associated to the one-off action in ISO format (YYYY-MM-DD).\t\t\t\t\t\t|\t No    |\r\n| DateRequired\t\t\t\t\t\t\t\t\t\t| The required date associated to the one-off action in ISO format (YYYY-MM-DD).\t\t\t\t\t|\t Yes   |\r\n| IsDiscount\t\t\t\t\t\t\t\t\t\t| Is discount in the one-off action?\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t|\t Yes   |\r\n| IsFinanciallyConfirmed\t\t\t\t\t\t\t| Is financially confirmed in the one-off action?\t\t\t\t\t\t\t\t\t\t\t\t\t|\t Yes   |\r\n| IsQuantityAdjustment\t\t\t\t\t\t\t\t| Is quantity adjustment in the one-off action?\t\t\t\t\t\t\t\t\t\t\t\t\t\t|\t Yes   |\r\n| IsRateAdjustment\t\t\t\t\t\t\t\t\t| Is rate adjustment in the one-off action?\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t|\t Yes   |\r\n| IsWeightAdjustment\t\t\t\t\t\t\t\t| Is weight adjustment in the one-off action?\t\t\t\t\t\t\t\t\t\t\t\t\t\t|\t Yes   |\r\n| PriceOverride\t\t\t\t\t\t\t\t\t\t| Price override of the one-off action.\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t|\t No    |\r\n| AdjustedRate\t\t\t\t\t\t\t\t\t\t| Adjusted rate of the one-off action.\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t|\t No    |\r\n| AdjustedWeight\t\t\t\t\t\t\t\t\t| Adjusted weight of the one-off action.\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t|\t No    |\r\n| CustomerOrderNo\t\t\t\t\t\t\t\t\t| Customer order no of the one-off action.\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t|\t No    |\r\n| DateTo\t\t\t\t\t\t\t\t\t\t\t| The date to associated to the one-off action in ISO format (YYYY-MM-DD).\t\t\t\t\t\t\t|\t No    |\r\n| HoursChargable\t\t\t\t\t\t\t\t\t| Chargable hours of the one-off action.\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t|\t No    |\r\n| Notes\t\t\t\t\t\t\t\t\t\t\t\t| Notes of the one-off action.\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t|\t No    |\r\n| PONumber\t\t\t\t\t\t\t\t\t\t\t| PONumber of the one-off action.\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t|\t No    |\r\n| Quantity\t\t\t\t\t\t\t\t\t\t\t| Quantity of the one-off action.\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t|\t No    |\r\n| ReferenceNo\t\t\t\t\t\t\t\t\t\t| ReferenceNo of the one-off action.\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t|\t No    |\r\n\r\n## Extra validations\r\n\r\n| Condition | Error message |\r\n| --------- | ------------- |\r\n| If ReasonListItem is not in one of the following reason categories: One Off Charge. | ReasonListItem must be in one of the following reason categories: One Off Charge. |\r\n| If the provided RelatedPriceGuid is not in site order price with the provide ActionListItem.Guid.  | OneOffAction has the property RelatedPriceGuid with value of guid that is not supported. The given RelatedPriceGuid is not found in siteorder price with ActionListItem.Guid - guid. |\r\n| If the action in the ActionListItem is not linked to Activity Type OneOffCharge | The given ActionListItem.Guid is not supported by OneOffAction. |\r\n| If we provide value to DateCreated(As DateCreated would be auto populated with todays date).  | DateCreated is not supported. |\r\n| If RelatedOrderGuid provided is Deleted. | The provided RelatedOrderGuid is deleted. Could not update the resource. Please check the relevant list end point for the available options. |\r\n| If RelatedPriceGuid provided is Deleted. | The provided RelatedPriceGuid is deleted. Could not update the resource. Please check the relevant list end point for the available options. |\r\n| If RelatedPriceAdjustmentGuid provided is Deleted. | The provided RelatedPriceAdjustmentGuid is deleted. Could not update the resource. Please check the relevant list end point for the available options. |\r\n| If RelatedUserFinanciallyConfirmedByGuid provided is Deleted. | The provided RelatedUserFinanciallyConfirmedByGuid is deleted. Could not update the resource. Please check the relevant list end point for the available options. |\r\n| If RelatedPONumberGuid provided is Deleted. | The provided RelatedPONumberGuid is deleted. Could not update the resource. Please check the relevant list end point for the available options. |\r\n| If ContainerTypeListItem.Guid provided is Deleted. | The provided ContainerTypeListItem is deleted. Could not update the resource. Please check the relevant list end point for the available options. |\r\n| If MaterialListItem.Guid provided is Deleted. | The provided MaterialListItem is deleted. Could not update the resource. Please check the relevant list end point for the available options. |\r\n| If ReasonListItem.Guid provided is Deleted. | The provided ReasonListItem is deleted. Could not update the resource. Please check the relevant list end point for the available options. |\r\n| If ServiceListItem.Guid provided is Deleted. | The provided ServiceListItem is deleted. Could not update the resource. Please check the relevant list end point for the available options. |\r\n| If ActionListItem.Guid provided is Deleted. | The provided ActionListItem is deleted. Could not update the resource. Please check the relevant list end point for the available options. |","operationId":"OneOffAction_Create","consumes":["application/json"],"produces":["application/json"],"parameters":[{"in":"body","required":true,"schema":{"$ref":"#/definitions/ApiResourceId"}}],"responses":{"200":{"description":"OK","schema":{"$ref":"#/definitions/ApiResourceId"}}}}},"/transport/orders/changes":{"get":{"tags":["Order"],"summary":"Retrieve changes","description":"| Property\t\t\t\t\t\t\t\t\t\t\t| Description\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t|\r\n| ------------------------------------------------- | ------------------------------------------------------------------------------------------------- |\r\n| GUID\t\t\t\t\t\t\t\t\t\t\t\t| The GUID associated to the site order.\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t|\r\n| RelatedSiteGuid\t\t\t\t\t\t\t\t\t| The GUID associated to the customer site of the site order.\t\t\t\t\t\t\t\t\t\t|\r\n| RelatedSiteAreaGuid\t\t\t\t\t\t\t\t| The GUID associated to the customer site area of the site order.\t\t\t\t\t\t\t\t\t|\r\n| RelatedSupplierSiteForServiceGuid\t\t\t\t\t| The GUID associated to the supplier site for service of the site order.\t\t\t\t\t\t\t|\r\n| RelatedSupplierSiteForTransportGuid\t\t\t\t| The GUID associated to the supplier site for transport of the site order.\t\t\t\t\t\t\t|\r\n| RelatedUserSalesRepGuid\t\t\t\t\t\t\t| The GUID associated to the sales rep of the site order.\t\t\t\t\t\t\t\t\t\t\t|     \r\n| RelatedServiceAgreementGuid\t\t\t\t\t\t| The GUID associated to the service agreement of the site order.\t\t\t\t\t\t\t\t\t|\r\n| OrderNumber\t\t\t\t\t\t\t\t\t\t| Used to filter the order number associated to the site order.\t\t\t\t\t\t\t\t\t\t|\r\n| CustomerOrderNumber\t\t\t\t\t\t\t\t| The customer order number associated to the site order.\t\t\t\t\t\t\t\t\t\t\t|\r\n| OrderedBy\t\t\t\t\t\t\t\t\t\t\t| The ordered by associated to the site order.\t\t\t\t\t\t\t\t\t\t\t\t\t\t|\r\n| ProcessFrom\t\t\t\t\t\t\t\t\t\t| The process from date associated to the site order in ISO format (YYYY-MM-DD).\t\t\t\t\t|\r\n| ValidUntil\t\t\t\t\t\t\t\t\t\t| The valid until date associated to the site order in ISO format (YYYY-MM-DD).\t\t\t\t\t\t|\r\n| Notes\t\t\t\t\t\t\t\t\t\t\t\t| The notes associated to the site order.\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t|\r\n| DriverNotes\t\t\t\t\t\t\t\t\t\t| The driver notes associated to the site order.\t\t\t\t\t\t\t\t\t\t\t\t\t|\r\n| IsCustomerOwnedEquipment\t\t\t\t\t\t\t| Is the equipment used in the site order customer owned?\t\t\t\t\t\t\t\t\t\t\t|\r\n| CompanyOutletListItem\t\t\t\t\t\t\t\t| The GUID and description of the company outlet associated to the site order.\t\t\t\t\t\t|\r\n| ServiceListItem\t\t\t\t\t\t\t\t\t| The GUID and description of the service associated to the site order.\t\t\t\t\t\t\t\t|\r\n| MaterialListItem\t\t\t\t\t\t\t\t\t| The GUID and description of the material associated to the site order.\t\t\t\t\t\t\t|\r\n| DefaultContainerTypeListItem\t\t\t\t\t\t| The GUID and description of the container type associated to the site order.\t\t\t\t\t\t|\r\n| PriorityListItem\t\t\t\t\t\t\t\t\t| The GUID and description of the priority associated to the site order.\t\t\t\t\t\t\t|\r\n| PaymentTypeListItem\t\t\t\t\t\t\t\t| The GUID and description of the payment type associated to the site order.\t\t\t\t\t\t|\r\n| Containers[0]\t\t\t\t\t\t\t\t\t\t| The list of site order items associated to the site order.\t\t\t\t\t\t\t\t\t\t|\r\n| Containers[0].Guid\t\t\t\t\t\t\t\t| The GUID associated to the site order item.\t\t\t\t\t\t\t\t\t\t\t\t\t\t|\r\n| Containers[0].IsDeleted\t\t\t\t\t\t\t| Whether the site order item is deleted.\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t|\r\n| Containers[0].Notes\t\t\t\t\t\t\t\t| The Notes associated to the site order item.\t\t\t\t\t\t\t\t\t\t\t\t\t\t|\r\n| Containers[0].IsContainerAssignedWithoutJob \t\t| Whether the container is assigned without job.\t\t\t\t\t\t\t\t\t\t\t\t\t|\r\n| Containers[0].IsFromIncreasedOrder \t\t\t\t| Whether the container is from increased order.\t\t\t\t\t\t\t\t\t\t\t\t\t|\r\n| Containers[0].IsContainerRemovedWithoutJob \t\t| Whether the container is removed without job.\t\t\t\t\t\t\t\t\t\t\t\t\t\t|\r\n| Containers[0].IsFixLocation \t\t\t\t\t\t| Whether the container has a fixed location.\t\t\t\t\t\t\t\t\t\t\t\t\t\t|\r\n| Containers[0].Geo \t\t\t\t\t\t\t\t| The Geo Location associated to the site order item.\t\t\t\t\t\t\t\t\t\t\t\t|\r\n| Containers[0].Geo.Location.Lat\t\t\t\t\t| The latitude of Geo Location associated to the site order item.\t\t\t\t\t\t\t\t\t|\r\n| Containers[0].Geo.Location.Long\t\t\t\t\t| The longitude of Geo Location associated to the site order item.\t\t\t\t\t\t\t\t\t|\r\n| Containers[0].StartDate \t\t\t\t\t\t\t| The StartDate associated to the site order item.\t\t\t\t\t\t\t\t\t\t\t\t\t|\r\n| Containers[0].EndDate\t\t\t\t\t\t\t\t| The EndDate associated to the site order item.\t\t\t\t\t\t\t\t\t\t\t\t\t|\r\n| Containers[0].DateLinked\t\t\t\t\t\t    | The DateLinked associated to the site order item.\t\t\t\t\t\t\t\t\t\t\t\t\t|\r\n| Containers[0].RelatedContainerGuid\t\t\t\t| The GUID associated to the container of the site order item.\t\t\t\t\t\t\t\t\t\t|\r\n| Containers[0].ContainerTypeListItem\t\t\t\t| The GUID and description of the container type associated to site order item.\t\t\t\t\t\t|\r\n| Containers[0].ContainerStateListItem\t\t\t\t| The GUID and description of the site order item state associated to site order item.\t\t\t\t|\r\n| RelatedLocationDestinationGuid\t\t\t\t\t| Used to filter the related destination location guid associated to the site order. \t\t\t\t|\r\n| IsDeleted\t\t\t\t\t\t\t\t\t\t\t| Whether the site order is deleted.\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t|\r\n| ItemRentals\t\t\t\t\t\t\t\t\t\t| The list of site order item rentals associated to the site order.\t\t\t\t\t\t\t\t\t|\r\n| ItemRentals[0].RelatedPriceGuid\t\t\t\t\t| The GUID associated to the price of the site order item rental.\t\t\t\t\t\t\t\t\t|\r\n| ItemRentals[0].RelatedPriceModifierGuid\t\t\t| The GUID associated to the price modifier of the site order item rental.\t\t\t\t\t\t\t|\r\n| ItemRentals[0].RelatedCostGuid\t\t\t\t\t| The GUID associated to the cost of the site order item rental.\t\t\t\t\t\t\t\t\t|\r\n| ItemRentals[0].ContainerTypeListItem\t\t\t\t| The GUID and description of the container type associated to site order item rental.\t\t\t\t|\r\n| ItemRentals[0].ActionListItem\t\t\t\t\t\t| The GUID and description of the action associated to site order item rental.\t\t\t\t\t\t|\r\n| ItemRentals[0].StartDate\t\t\t\t\t\t\t| The start date associated to the site order item rental in ISO format (YYYY-MM-DD).\t\t\t\t|\r\n| ItemRentals[0].EndDate\t\t\t\t\t\t\t| The end date associated to the site order item rental in ISO format (YYYY-MM-DD).\t\t\t\t\t|\r\n| ItemRentals[0].IsStartOnStartOfCycle\t\t\t\t| Start on start of cycle when site order item rental.\t\t\t\t\t\t\t\t\t\t\t\t|\r\n| ItemRentals[0].IsEndOnEndOfCycle\t\t\t\t\t| End on start of cycle when site order item rental.\t\t\t\t\t\t\t\t\t\t\t\t|\r\n| ItemRentals[0].Quantity\t\t\t\t\t\t\t| The quantity associated to the site order item rental.\t\t\t\t\t\t\t\t\t\t\t|\r\n| ItemRentals[0].Notes\t\t\t\t\t\t\t\t| The notes associated to the site order item rental.\t\t\t\t\t\t\t\t\t\t\t\t|\r\n| ItemRentals[0].IsArrears\t\t\t\t\t\t\t| Is the site order item rental in arrears?\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t|\r\n| ItemRentals[0].RentalQuantityAttributeListItem\t| The GUID and description of the rental quantity attribute associated to site order item rental.\t|\r\n| ItemRentals[0].IsBinOnSiteBasedOnQuantityNow\t\t| Is the bin on site are based on quantity for site order item rental?\t\t\t\t\t\t\t\t|\r\n| ItemRentals[0].IsDiscount\t\t\t\t\t\t\t| Is the site order item rental discounted?\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t|\r\n| ItemRentals[0].DiscountOverridePrice\t\t\t\t| The discount override price associated to the site order item rental.\t\t\t\t\t\t\t\t|\r\n| ItemRentals[0].DiscountReasonListItem\t\t\t\t| The GUID and description of the discount reason associated to site order item rental.\t\t\t\t|\r\n| ItemRentals[0].Guid\t\t\t\t\t\t\t\t| The GUID associated to the site order item rental.\t\t\t\t\t\t\t\t\t\t\t\t|\r\n| ItemRentals[0].IsDeleted\t\t\t\t\t\t\t| Whether the site order item rental is deleted.\t\t\t\t\t\t\t\t\t\t\t\t\t|\r\n| PermitRequired\t\t\t\t\t\t\t\t\t| Whether the site order has required permit.\t\t\t\t\t\t\t\t\t\t\t\t\t\t|\r\n| RelatedPriceGuidFilter\t\t\t\t\t\t\t| Used to filter by the related price GUID.\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t|\r\n| RelatedPriceModifierGuidFilter\t\t\t\t\t| Used to filter by the related price modifier GUID.\t\t\t\t\t\t\t\t\t\t\t\t|\r\n| RelatedCostGuidFilter\t\t\t\t\t\t\t\t| Used to filter by the related cost GUID.\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t|\r\n| AreaOfOriginListItem\t\t\t\t\t\t\t\t| The GUID and description of the area of origin associated to the site order.\t\t\t\t\t\t|\r\n| StandingJobs\t\t\t\t\t\t\t\t\t\t| The list of standing job template associated to the site order.\t\t\t\t\t\t\t\t\t|\r\n| StandingJobs[0].Guid\t\t\t\t\t\t\t\t| The GUID associated to the standing job template of site order.\t\t\t\t\t\t\t\t\t|\r\n| StandingJobs[0].ActionListItem\t\t\t\t\t| The GUID and description of the action associated to site order standing job\t\t\t\t\t\t|\r\n| StandingJobs[0].ContainerTypeListItem\t\t\t\t| The GUID and description of the containertype associated to site order standing job\t\t\t\t|\r\n| StandingJobs[0].EndOnJobCompletion\t\t\t\t| Is job completion on end for standing job\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t|\r\n| StandingJobs[0].ExcludeNoBinOnSite\t\t\t\t| Exclude no bin on site for standing job\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t|\r\n| StandingJobs[0].IsNoPlannedDay\t\t\t\t\t| Is on no planned day for standing job\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t|\r\n| StandingJobs[0].PickupIntervalListItem\t\t\t| The GUID and description of the pickup interval associated to site order standing job\t\t\t\t|\r\n| StandingJobs[0].StartDate\t\t\t\t\t\t\t| The start date associated to the standing job.\t\t\t\t\t\t\t\t\t\t\t\t\t|\r\n| StandingJobs[0].EndDate\t\t\t\t\t\t\t| The end date associated to the standing job.\t\t\t\t\t\t\t\t\t\t\t\t\t\t|\r\n| StandingJobs[0].CompanyOutletListItem\t\t\t\t| The GUID and description of the companyoutlet associated to site order standing job\t\t\t\t|\r\n| StandingJobs[0].RelatedSiteAreaGuid\t\t\t\t| The GUID associated to the customer site area of the site order standing job.\t\t\t\t\t\t|\r\n| StandingJobs[0].DayOfWeekListItem\t\t\t\t\t| The GUID and description of the day of week associated to site order standing job\t\t\t\t\t|\r\n| StandingJobs[0].RelatedSysUserDriverGuid\t\t\t| The GUID associated to the sriver sysuser of the site order standing job.\t\t\t\t\t\t\t|\r\n| StandingJobs[0].RelatedVehicleGuid\t\t\t\t| The GUID associated to the vehcile of the site order standing job.\t\t\t\t\t\t\t\t|\r\n| StandingJobs[0].RequestedBy\t\t\t\t\t\t| Requested by details of standing job.\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t|\r\n| StandingJobs[0].IsDeleted\t\t\t\t\t\t\t| Whether the standing job related to the siteorder\tis deleted.\t\t\t\t\t\t\t\t\t\t|\r\n| StandingJobsSiteAreaGuidFilter\t\t\t\t\t| Used to filter by the standing job site area guid.\t\t\t\t\t\t\t\t\t\t\t\t|\r\n| StandingJobsSysUserDriverGuidFilter\t\t\t\t| Used to filter by the standing job sysuser driver guid.\t\t\t\t\t\t\t\t\t\t\t|\r\n| StandingJobsVehicleGuidFilter\t\t\t\t\t\t| Used to filter by the standing job vehicle guid.\t\t\t\t\t\t\t\t\t\t\t\t\t|\r\n| StandingJobsStartDateFilter\t\t\t\t\t\t| Used to filter by the standing job start date.\t\t\t\t\t\t\t\t\t\t\t\t\t|\r\n| StandingJobsEndDateFilter\t\t\t\t\t\t\t| Used to filter by the standing job end date.\t\t\t\t\t\t\t\t\t\t\t\t\t\t|\r\n| InspectionTypeListItem\t\t\t\t\t\t\t| The GUID and description of the inspection type associated to the site order.\t\t\t\t\t\t|\r\n| ItemTimeStamp\t\t\t\t\t\t\t\t\t\t| The item timestamp of the site order.\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t|\r\n| RouteAssignments\t\t\t\t\t\t\t\t\t| The list of route assignments associated to the site order.\t\t\t\t\t\t\t\t\t\t|\r\n| RouteAssignments[0].Guid\t\t\t\t\t\t\t| The guid associated to the route assignment.\t\t\t\t\t\t\t\t\t\t\t\t\t\t|\r\n| RouteAssignments[0].ActionListItem\t\t\t\t| The GUID and description of the action associated to site order route assignment\t\t\t\t\t|\r\n| RouteAssignments[0].ContainerTypeListItem\t\t\t| The GUID and description of the containertype associated to site order route assignment\t\t\t|\r\n| RouteAssignments[0].PickupIntervalListItem\t\t| The GUID and description of the pickup interval associated to site order route assignment\t\t\t|\r\n| RouteAssignments[0].DayOfWeekListItem\t\t\t\t| The GUID and description of the day of week associated to site order route assignment\t\t\t\t|\r\n| RouteAssignments[0].DayOfOccurrenceInMonthListItem| The GUID and description of the day of occurrence in month associated to site order route assignment\t\t\t\t|\r\n| RouteAssignments[0].Position\t\t\t\t\t\t| The position associated to the routeAssignment.\t\t\t\t\t\t\t\t\t\t\t\t\t|\r\n| RouteAssignments[0].StartDate\t\t\t\t\t\t| The start date associated to the route assignment in ISO format (YYYY-MM-DD).\t\t\t\t\t\t|\r\n| RouteAssignments[0].EndDate\t\t\t\t\t\t| The end date associated to the route assignment in ISO format (YYYY-MM-DD).\t\t\t\t\t\t|\r\n| RouteAssignments[0].RequestedBy\t\t\t\t\t| Who is the routeAssignment requested by?\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t|\r\n| RouteAssignments[0].Notes\t\t\t\t\t\t\t| The notes associated to the routeAssignment.\t\t\t\t\t\t\t\t\t\t\t\t\t\t|\r\n| RouteAssignments[0].MaxLiftQuantity\t\t\t\t| The max lift quantity associated to the routeAssignment.\t\t\t\t\t\t\t\t\t\t\t|\r\n| RouteAssignments[0].MinLiftQuantity\t\t\t\t| The min lift quantity associated to the routeAssignment.\t\t\t\t\t\t\t\t\t\t\t|\r\n| RouteAssignments[0].RequiresQuantity\t\t\t\t| Does the routeAssignment require quantity?\t\t\t\t\t\t\t\t\t\t\t\t\t\t|\r\n| RouteAssignments[0].IsGpsAutoMatchingDisabled\t\t| Is the GPS auto matching disabled for the routeAssignment?\t\t\t\t\t\t\t\t\t\t|\r\n| RouteAssignments[0].IsNoPlannedDate\t\t\t\t| Is there no planned date for the routeAssignment?\t\t\t\t\t\t\t\t\t\t\t\t\t|\r\n| RouteAssignments[0].IsNoBinOnSiteExcluded\t\t\t| Is the bin on site excluded for the routeAssignment?\t\t \t\t\t\t\t\t\t\t\t\t|\r\n| RouteAssignments[0].RelatedRouteTemplateGuid\t\t| The guid associated to the route template  to the routeAssignment.\t\t\t\t\t\t\t\t|\r\n| RouteAssignments[0].RelatedSiteAreaGuid\t\t\t| The guid associated to the site area of the route assignment.\t\t\t\t\t\t\t\t\t\t|\r\n| RouteAssignments[0].IsDeleted\t\t\t\t\t\t| Whether the site order route assignment is deleted.\t\t\t\t\t\t\t\t\t\t\t\t|\r\n| RouteAssignments[0].Exclusions\t\t\t\t\t| The list of exclusions associated to the route assignment.\t\t\t\t\t\t\t\t\t\t|\r\n| RouteAssignments[0].Exclusions[0].Guid\t\t\t\t\t\t| The guid associated to the exclusion.\t\t\t\t\t\t\t\t\t\t\t\t\t|\r\n| RouteAssignments[0].Exclusions[0].ExcludeFrom\t\t\t\t\t| The exclude from date associated to the exclusion.\t\t\t\t\t\t\t\t\t|\r\n| RouteAssignments[0].Exclusions[0].ExcludeTo\t\t\t\t\t| The exclude to date associated to the exclusion.\t\t\t\t\t\t\t\t\t\t|\r\n| RouteAssignments[0].Exclusions[0].ExclusionTypeListItem\t\t| The guid and description of the exclusion type associated to the exclusion\t.\t\t|\r\n| RouteAssignments[0].Exclusions[0].ReasonListItem\t\t\t\t| The guid and description of the reason associated to the exclusion\t.\t\t\t\t|\r\n| RouteAssignments[0].Exclusions[0].Notes\t\t\t\t\t\t| The notes associated to the exclusion.\t\t\t\t\t\t\t\t\t\t\t\t|\r\n| RouteCalloutRequests\t\t\t\t\t\t\t\t| The list of route callout requests associated to the site order.\t\t\t\t\t\t\t\t\t|\r\n| RouteCalloutRequests[0].Guid\t\t\t\t\t\t| The guid associated to the route callout request.\t\t\t\t\t\t\t\t\t\t\t\t\t|\r\n| RouteCalloutRequests[0].ActionListItem\t\t\t| The GUID and description of the action associated to site order route callout request\t\t\t\t|\r\n| RouteCalloutRequests[0].OutletListItem \t\t\t| The GUID and description of the company outlet associated to site order route callout request\t\t|\r\n| RouteCalloutRequests[0].ContainerTypeListItem\t\t| The GUID and description of the containertype associated to site order route callout request\t\t|\r\n| RouteCalloutRequests[0].DateRequired\t\t\t\t| The date required of the route callout request\t\t\t\t\t\t\t\t\t\t\t\t\t|\r\n| RouteCalloutRequests[0].Notes\t\t\t\t\t\t| The notes of the route callout request\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t|\r\n| RouteCalloutRequests[0].RelatedRouteVisitGuid\t\t| The guid associated to the routevisit of the route callout request.\t\t\t\t\t\t\t\t|\r\n| RouteCalloutRequests[0].RequestedBy\t\t\t\t| Who requested the route callout request.\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t|\r\n| RouteCalloutRequests[0].MaxLiftQuantity\t\t\t| The max lift quantity of the route callout request.\t\t\t\t\t\t\t\t\t\t\t\t|\r\n| RouteCalloutRequests[0].IsDeleted\t\t\t\t\t| Whether the route callout request is deleted.\t\t\t\t\t\t\t\t\t\t\t\t\t\t|\r\n| RouteAssignmentSiteAreaGuidFilter\t\t\t\t\t| Used to filter by the related route assignment site area GUID. \t\t\t\t\t\t\t\t\t|\r\n| RouteAssignmentStartDateFilter \t\t\t\t\t| Used to filter by the related route assignment start date\t\t\t\t\t\t\t\t\t\t\t|\r\n| RouteAssignmentEndDateFilter \t\t\t\t\t\t| Used to filter by the related route assignment end date\t\t\t\t\t\t\t\t\t\t\t|\r\n| RelatedContainerGuidFilter\t\t\t\t\t\t| Used to filter by the related container GUID.\t\t\t\t\t\t\t\t\t\t\t\t\t\t|\r\n| RelatedOrderCombinationGroupingGuid\t\t\t\t| The GUID associated to the order combination grouping. Filterable\t\t\t\t\t\t\t\t\t|\r\n| ContainersGeoLocationLatFilter\t\t\t\t\t| Used to filter by the location latitude of the site order item\t\t\t\t\t\t\t\t\t|\r\n| ContainersGeoLocationLongFilter\t\t\t\t\t| Used to filter by the location longitude of the site order item\t\t\t\t\t\t\t\t\t|\r\n| RelatedRouteVisitGuidFilter\t\t\t\t\t\t| Used to filter by the related routevisit GUID.\t\t\t\t\t\t\t\t\t\t\t\t\t|\r\n| RouteCalloutRequestGuidFilter\t\t\t\t\t\t| Used to filter by the route callout request GUID\t\t\t\t\t\t\t\t\t\t\t\t\t|","operationId":"Order_GetChanges","consumes":["application/json"],"produces":["application/json"],"parameters":[{"name":"since","in":"query","required":false,"type":"string"},{"name":"cursor","in":"query","required":false,"type":"string"},{"name":"links","in":"query","required":false,"type":"string"}],"responses":{"200":{"description":"OK","schema":{"$ref":"#/definitions/ApiResourceChanges[ApiIntegratorOrderResource]"}}}}},"/transport/orders/{guid}":{"get":{"tags":["Order"],"summary":"Find with GUID","description":"| Property\t\t\t\t\t\t\t\t\t\t\t| Description\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t|\r\n| ------------------------------------------------- | ------------------------------------------------------------------------------------------------- |\r\n| GUID\t\t\t\t\t\t\t\t\t\t\t\t| The GUID associated to the site order.\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t|\r\n| RelatedSiteGuid\t\t\t\t\t\t\t\t\t| The GUID associated to the customer site of the site order.\t\t\t\t\t\t\t\t\t\t|\r\n| RelatedSiteAreaGuid\t\t\t\t\t\t\t\t| The GUID associated to the customer site area of the site order.\t\t\t\t\t\t\t\t\t|\r\n| RelatedSupplierSiteForServiceGuid\t\t\t\t\t| The GUID associated to the supplier site for service of the site order.\t\t\t\t\t\t\t|\r\n| RelatedSupplierSiteForTransportGuid\t\t\t\t| The GUID associated to the supplier site for transport of the site order.\t\t\t\t\t\t\t|\r\n| RelatedUserSalesRepGuid\t\t\t\t\t\t\t| The GUID associated to the sales rep of the site order.\t\t\t\t\t\t\t\t\t\t\t|     \r\n| RelatedServiceAgreementGuid\t\t\t\t\t\t| The GUID associated to the service agreement of the site order.\t\t\t\t\t\t\t\t\t|\r\n| OrderNumber\t\t\t\t\t\t\t\t\t\t| Used to filter the order number associated to the site order.\t\t\t\t\t\t\t\t\t\t|\r\n| CustomerOrderNumber\t\t\t\t\t\t\t\t| The customer order number associated to the site order.\t\t\t\t\t\t\t\t\t\t\t|\r\n| OrderedBy\t\t\t\t\t\t\t\t\t\t\t| The ordered by associated to the site order.\t\t\t\t\t\t\t\t\t\t\t\t\t\t|\r\n| ProcessFrom\t\t\t\t\t\t\t\t\t\t| The process from date associated to the site order in ISO format (YYYY-MM-DD).\t\t\t\t\t|\r\n| ValidUntil\t\t\t\t\t\t\t\t\t\t| The valid until date associated to the site order in ISO format (YYYY-MM-DD).\t\t\t\t\t\t|\r\n| Notes\t\t\t\t\t\t\t\t\t\t\t\t| The notes associated to the site order.\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t|\r\n| DriverNotes\t\t\t\t\t\t\t\t\t\t| The driver notes associated to the site order.\t\t\t\t\t\t\t\t\t\t\t\t\t|\r\n| IsCustomerOwnedEquipment\t\t\t\t\t\t\t| Is the equipment used in the site order customer owned?\t\t\t\t\t\t\t\t\t\t\t|\r\n| CompanyOutletListItem\t\t\t\t\t\t\t\t| The GUID and description of the company outlet associated to the site order.\t\t\t\t\t\t|\r\n| ServiceListItem\t\t\t\t\t\t\t\t\t| The GUID and description of the service associated to the site order.\t\t\t\t\t\t\t\t|\r\n| MaterialListItem\t\t\t\t\t\t\t\t\t| The GUID and description of the material associated to the site order.\t\t\t\t\t\t\t|\r\n| DefaultContainerTypeListItem\t\t\t\t\t\t| The GUID and description of the container type associated to the site order.\t\t\t\t\t\t|\r\n| PriorityListItem\t\t\t\t\t\t\t\t\t| The GUID and description of the priority associated to the site order.\t\t\t\t\t\t\t|\r\n| PaymentTypeListItem\t\t\t\t\t\t\t\t| The GUID and description of the payment type associated to the site order.\t\t\t\t\t\t|\r\n| Containers[0]\t\t\t\t\t\t\t\t\t\t| The list of site order items associated to the site order.\t\t\t\t\t\t\t\t\t\t|\r\n| Containers[0].Guid\t\t\t\t\t\t\t\t| The GUID associated to the site order item.\t\t\t\t\t\t\t\t\t\t\t\t\t\t|\r\n| Containers[0].IsDeleted\t\t\t\t\t\t\t| Whether the site order item is deleted.\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t|\r\n| Containers[0].Notes\t\t\t\t\t\t\t\t| The Notes associated to the site order item.\t\t\t\t\t\t\t\t\t\t\t\t\t\t|\r\n| Containers[0].IsContainerAssignedWithoutJob \t\t| Whether the container is assigned without job.\t\t\t\t\t\t\t\t\t\t\t\t\t|\r\n| Containers[0].IsFromIncreasedOrder \t\t\t\t| Whether the container is from increased order.\t\t\t\t\t\t\t\t\t\t\t\t\t|\r\n| Containers[0].IsContainerRemovedWithoutJob \t\t| Whether the container is removed without job.\t\t\t\t\t\t\t\t\t\t\t\t\t\t|\r\n| Containers[0].IsFixLocation \t\t\t\t\t\t| Whether the container has a fixed location.\t\t\t\t\t\t\t\t\t\t\t\t\t\t|\r\n| Containers[0].Geo \t\t\t\t\t\t\t\t| The Geo Location associated to the site order item.\t\t\t\t\t\t\t\t\t\t\t\t|\r\n| Containers[0].Geo.Location.Lat\t\t\t\t\t| The latitude of Geo Location associated to the site order item.\t\t\t\t\t\t\t\t\t|\r\n| Containers[0].Geo.Location.Long\t\t\t\t\t| The longitude of Geo Location associated to the site order item.\t\t\t\t\t\t\t\t\t|\r\n| Containers[0].StartDate \t\t\t\t\t\t\t| The StartDate associated to the site order item.\t\t\t\t\t\t\t\t\t\t\t\t\t|\r\n| Containers[0].EndDate\t\t\t\t\t\t\t\t| The EndDate associated to the site order item.\t\t\t\t\t\t\t\t\t\t\t\t\t|\r\n| Containers[0].DateLinked\t\t\t\t\t\t    | The DateLinked associated to the site order item.\t\t\t\t\t\t\t\t\t\t\t\t\t|\r\n| Containers[0].RelatedContainerGuid\t\t\t\t| The GUID associated to the container of the site order item.\t\t\t\t\t\t\t\t\t\t|\r\n| Containers[0].ContainerTypeListItem\t\t\t\t| The GUID and description of the container type associated to site order item.\t\t\t\t\t\t|\r\n| Containers[0].ContainerStateListItem\t\t\t\t| The GUID and description of the site order item state associated to site order item.\t\t\t\t|\r\n| RelatedLocationDestinationGuid\t\t\t\t\t| Used to filter the related destination location guid associated to the site order. \t\t\t\t|\r\n| IsDeleted\t\t\t\t\t\t\t\t\t\t\t| Whether the site order is deleted.\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t|\r\n| ItemRentals\t\t\t\t\t\t\t\t\t\t| The list of site order item rentals associated to the site order.\t\t\t\t\t\t\t\t\t|\r\n| ItemRentals[0].RelatedPriceGuid\t\t\t\t\t| The GUID associated to the price of the site order item rental.\t\t\t\t\t\t\t\t\t|\r\n| ItemRentals[0].RelatedPriceModifierGuid\t\t\t| The GUID associated to the price modifier of the site order item rental.\t\t\t\t\t\t\t|\r\n| ItemRentals[0].RelatedCostGuid\t\t\t\t\t| The GUID associated to the cost of the site order item rental.\t\t\t\t\t\t\t\t\t|\r\n| ItemRentals[0].ContainerTypeListItem\t\t\t\t| The GUID and description of the container type associated to site order item rental.\t\t\t\t|\r\n| ItemRentals[0].ActionListItem\t\t\t\t\t\t| The GUID and description of the action associated to site order item rental.\t\t\t\t\t\t|\r\n| ItemRentals[0].StartDate\t\t\t\t\t\t\t| The start date associated to the site order item rental in ISO format (YYYY-MM-DD).\t\t\t\t|\r\n| ItemRentals[0].EndDate\t\t\t\t\t\t\t| The end date associated to the site order item rental in ISO format (YYYY-MM-DD).\t\t\t\t\t|\r\n| ItemRentals[0].IsStartOnStartOfCycle\t\t\t\t| Start on start of cycle when site order item rental.\t\t\t\t\t\t\t\t\t\t\t\t|\r\n| ItemRentals[0].IsEndOnEndOfCycle\t\t\t\t\t| End on start of cycle when site order item rental.\t\t\t\t\t\t\t\t\t\t\t\t|\r\n| ItemRentals[0].Quantity\t\t\t\t\t\t\t| The quantity associated to the site order item rental.\t\t\t\t\t\t\t\t\t\t\t|\r\n| ItemRentals[0].Notes\t\t\t\t\t\t\t\t| The notes associated to the site order item rental.\t\t\t\t\t\t\t\t\t\t\t\t|\r\n| ItemRentals[0].IsArrears\t\t\t\t\t\t\t| Is the site order item rental in arrears?\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t|\r\n| ItemRentals[0].RentalQuantityAttributeListItem\t| The GUID and description of the rental quantity attribute associated to site order item rental.\t|\r\n| ItemRentals[0].IsBinOnSiteBasedOnQuantityNow\t\t| Is the bin on site are based on quantity for site order item rental?\t\t\t\t\t\t\t\t|\r\n| ItemRentals[0].IsDiscount\t\t\t\t\t\t\t| Is the site order item rental discounted?\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t|\r\n| ItemRentals[0].DiscountOverridePrice\t\t\t\t| The discount override price associated to the site order item rental.\t\t\t\t\t\t\t\t|\r\n| ItemRentals[0].DiscountReasonListItem\t\t\t\t| The GUID and description of the discount reason associated to site order item rental.\t\t\t\t|\r\n| ItemRentals[0].Guid\t\t\t\t\t\t\t\t| The GUID associated to the site order item rental.\t\t\t\t\t\t\t\t\t\t\t\t|\r\n| ItemRentals[0].IsDeleted\t\t\t\t\t\t\t| Whether the site order item rental is deleted.\t\t\t\t\t\t\t\t\t\t\t\t\t|\r\n| PermitRequired\t\t\t\t\t\t\t\t\t| Whether the site order has required permit.\t\t\t\t\t\t\t\t\t\t\t\t\t\t|\r\n| RelatedPriceGuidFilter\t\t\t\t\t\t\t| Used to filter by the related price GUID.\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t|\r\n| RelatedPriceModifierGuidFilter\t\t\t\t\t| Used to filter by the related price modifier GUID.\t\t\t\t\t\t\t\t\t\t\t\t|\r\n| RelatedCostGuidFilter\t\t\t\t\t\t\t\t| Used to filter by the related cost GUID.\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t|\r\n| AreaOfOriginListItem\t\t\t\t\t\t\t\t| The GUID and description of the area of origin associated to the site order.\t\t\t\t\t\t|\r\n| StandingJobs\t\t\t\t\t\t\t\t\t\t| The list of standing job template associated to the site order.\t\t\t\t\t\t\t\t\t|\r\n| StandingJobs[0].Guid\t\t\t\t\t\t\t\t| The GUID associated to the standing job template of site order.\t\t\t\t\t\t\t\t\t|\r\n| StandingJobs[0].ActionListItem\t\t\t\t\t| The GUID and description of the action associated to site order standing job\t\t\t\t\t\t|\r\n| StandingJobs[0].ContainerTypeListItem\t\t\t\t| The GUID and description of the containertype associated to site order standing job\t\t\t\t|\r\n| StandingJobs[0].EndOnJobCompletion\t\t\t\t| Is job completion on end for standing job\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t|\r\n| StandingJobs[0].ExcludeNoBinOnSite\t\t\t\t| Exclude no bin on site for standing job\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t|\r\n| StandingJobs[0].IsNoPlannedDay\t\t\t\t\t| Is on no planned day for standing job\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t|\r\n| StandingJobs[0].PickupIntervalListItem\t\t\t| The GUID and description of the pickup interval associated to site order standing job\t\t\t\t|\r\n| StandingJobs[0].StartDate\t\t\t\t\t\t\t| The start date associated to the standing job.\t\t\t\t\t\t\t\t\t\t\t\t\t|\r\n| StandingJobs[0].EndDate\t\t\t\t\t\t\t| The end date associated to the standing job.\t\t\t\t\t\t\t\t\t\t\t\t\t\t|\r\n| StandingJobs[0].CompanyOutletListItem\t\t\t\t| The GUID and description of the companyoutlet associated to site order standing job\t\t\t\t|\r\n| StandingJobs[0].RelatedSiteAreaGuid\t\t\t\t| The GUID associated to the customer site area of the site order standing job.\t\t\t\t\t\t|\r\n| StandingJobs[0].DayOfWeekListItem\t\t\t\t\t| The GUID and description of the day of week associated to site order standing job\t\t\t\t\t|\r\n| StandingJobs[0].RelatedSysUserDriverGuid\t\t\t| The GUID associated to the sriver sysuser of the site order standing job.\t\t\t\t\t\t\t|\r\n| StandingJobs[0].RelatedVehicleGuid\t\t\t\t| The GUID associated to the vehcile of the site order standing job.\t\t\t\t\t\t\t\t|\r\n| StandingJobs[0].RequestedBy\t\t\t\t\t\t| Requested by details of standing job.\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t|\r\n| StandingJobs[0].IsDeleted\t\t\t\t\t\t\t| Whether the standing job related to the siteorder\tis deleted.\t\t\t\t\t\t\t\t\t\t|\r\n| StandingJobsSiteAreaGuidFilter\t\t\t\t\t| Used to filter by the standing job site area guid.\t\t\t\t\t\t\t\t\t\t\t\t|\r\n| StandingJobsSysUserDriverGuidFilter\t\t\t\t| Used to filter by the standing job sysuser driver guid.\t\t\t\t\t\t\t\t\t\t\t|\r\n| StandingJobsVehicleGuidFilter\t\t\t\t\t\t| Used to filter by the standing job vehicle guid.\t\t\t\t\t\t\t\t\t\t\t\t\t|\r\n| StandingJobsStartDateFilter\t\t\t\t\t\t| Used to filter by the standing job start date.\t\t\t\t\t\t\t\t\t\t\t\t\t|\r\n| StandingJobsEndDateFilter\t\t\t\t\t\t\t| Used to filter by the standing job end date.\t\t\t\t\t\t\t\t\t\t\t\t\t\t|\r\n| InspectionTypeListItem\t\t\t\t\t\t\t| The GUID and description of the inspection type associated to the site order.\t\t\t\t\t\t|\r\n| ItemTimeStamp\t\t\t\t\t\t\t\t\t\t| The item timestamp of the site order.\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t|\r\n| RouteAssignments\t\t\t\t\t\t\t\t\t| The list of route assignments associated to the site order.\t\t\t\t\t\t\t\t\t\t|\r\n| RouteAssignments[0].Guid\t\t\t\t\t\t\t| The guid associated to the route assignment.\t\t\t\t\t\t\t\t\t\t\t\t\t\t|\r\n| RouteAssignments[0].ActionListItem\t\t\t\t| The GUID and description of the action associated to site order route assignment\t\t\t\t\t|\r\n| RouteAssignments[0].ContainerTypeListItem\t\t\t| The GUID and description of the containertype associated to site order route assignment\t\t\t|\r\n| RouteAssignments[0].PickupIntervalListItem\t\t| The GUID and description of the pickup interval associated to site order route assignment\t\t\t|\r\n| RouteAssignments[0].DayOfWeekListItem\t\t\t\t| The GUID and description of the day of week associated to site order route assignment\t\t\t\t|\r\n| RouteAssignments[0].DayOfOccurrenceInMonthListItem| The GUID and description of the day of occurrence in month associated to site order route assignment\t\t\t\t|\r\n| RouteAssignments[0].Position\t\t\t\t\t\t| The position associated to the routeAssignment.\t\t\t\t\t\t\t\t\t\t\t\t\t|\r\n| RouteAssignments[0].StartDate\t\t\t\t\t\t| The start date associated to the route assignment in ISO format (YYYY-MM-DD).\t\t\t\t\t\t|\r\n| RouteAssignments[0].EndDate\t\t\t\t\t\t| The end date associated to the route assignment in ISO format (YYYY-MM-DD).\t\t\t\t\t\t|\r\n| RouteAssignments[0].RequestedBy\t\t\t\t\t| Who is the routeAssignment requested by?\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t|\r\n| RouteAssignments[0].Notes\t\t\t\t\t\t\t| The notes associated to the routeAssignment.\t\t\t\t\t\t\t\t\t\t\t\t\t\t|\r\n| RouteAssignments[0].MaxLiftQuantity\t\t\t\t| The max lift quantity associated to the routeAssignment.\t\t\t\t\t\t\t\t\t\t\t|\r\n| RouteAssignments[0].MinLiftQuantity\t\t\t\t| The min lift quantity associated to the routeAssignment.\t\t\t\t\t\t\t\t\t\t\t|\r\n| RouteAssignments[0].RequiresQuantity\t\t\t\t| Does the routeAssignment require quantity?\t\t\t\t\t\t\t\t\t\t\t\t\t\t|\r\n| RouteAssignments[0].IsGpsAutoMatchingDisabled\t\t| Is the GPS auto matching disabled for the routeAssignment?\t\t\t\t\t\t\t\t\t\t|\r\n| RouteAssignments[0].IsNoPlannedDate\t\t\t\t| Is there no planned date for the routeAssignment?\t\t\t\t\t\t\t\t\t\t\t\t\t|\r\n| RouteAssignments[0].IsNoBinOnSiteExcluded\t\t\t| Is the bin on site excluded for the routeAssignment?\t\t \t\t\t\t\t\t\t\t\t\t|\r\n| RouteAssignments[0].RelatedRouteTemplateGuid\t\t| The guid associated to the route template  to the routeAssignment.\t\t\t\t\t\t\t\t|\r\n| RouteAssignments[0].RelatedSiteAreaGuid\t\t\t| The guid associated to the site area of the route assignment.\t\t\t\t\t\t\t\t\t\t|\r\n| RouteAssignments[0].IsDeleted\t\t\t\t\t\t| Whether the site order route assignment is deleted.\t\t\t\t\t\t\t\t\t\t\t\t|\r\n| RouteAssignments[0].Exclusions\t\t\t\t\t| The list of exclusions associated to the route assignment.\t\t\t\t\t\t\t\t\t\t|\r\n| RouteAssignments[0].Exclusions[0].Guid\t\t\t\t\t\t| The guid associated to the exclusion.\t\t\t\t\t\t\t\t\t\t\t\t\t|\r\n| RouteAssignments[0].Exclusions[0].ExcludeFrom\t\t\t\t\t| The exclude from date associated to the exclusion.\t\t\t\t\t\t\t\t\t|\r\n| RouteAssignments[0].Exclusions[0].ExcludeTo\t\t\t\t\t| The exclude to date associated to the exclusion.\t\t\t\t\t\t\t\t\t\t|\r\n| RouteAssignments[0].Exclusions[0].ExclusionTypeListItem\t\t| The guid and description of the exclusion type associated to the exclusion\t.\t\t|\r\n| RouteAssignments[0].Exclusions[0].ReasonListItem\t\t\t\t| The guid and description of the reason associated to the exclusion\t.\t\t\t\t|\r\n| RouteAssignments[0].Exclusions[0].Notes\t\t\t\t\t\t| The notes associated to the exclusion.\t\t\t\t\t\t\t\t\t\t\t\t|\r\n| RouteCalloutRequests\t\t\t\t\t\t\t\t| The list of route callout requests associated to the site order.\t\t\t\t\t\t\t\t\t|\r\n| RouteCalloutRequests[0].Guid\t\t\t\t\t\t| The guid associated to the route callout request.\t\t\t\t\t\t\t\t\t\t\t\t\t|\r\n| RouteCalloutRequests[0].ActionListItem\t\t\t| The GUID and description of the action associated to site order route callout request\t\t\t\t|\r\n| RouteCalloutRequests[0].OutletListItem \t\t\t| The GUID and description of the company outlet associated to site order route callout request\t\t|\r\n| RouteCalloutRequests[0].ContainerTypeListItem\t\t| The GUID and description of the containertype associated to site order route callout request\t\t|\r\n| RouteCalloutRequests[0].DateRequired\t\t\t\t| The date required of the route callout request\t\t\t\t\t\t\t\t\t\t\t\t\t|\r\n| RouteCalloutRequests[0].Notes\t\t\t\t\t\t| The notes of the route callout request\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t|\r\n| RouteCalloutRequests[0].RelatedRouteVisitGuid\t\t| The guid associated to the routevisit of the route callout request.\t\t\t\t\t\t\t\t|\r\n| RouteCalloutRequests[0].RequestedBy\t\t\t\t| Who requested the route callout request.\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t|\r\n| RouteCalloutRequests[0].MaxLiftQuantity\t\t\t| The max lift quantity of the route callout request.\t\t\t\t\t\t\t\t\t\t\t\t|\r\n| RouteCalloutRequests[0].IsDeleted\t\t\t\t\t| Whether the route callout request is deleted.\t\t\t\t\t\t\t\t\t\t\t\t\t\t|\r\n| RouteAssignmentSiteAreaGuidFilter\t\t\t\t\t| Used to filter by the related route assignment site area GUID. \t\t\t\t\t\t\t\t\t|\r\n| RouteAssignmentStartDateFilter \t\t\t\t\t| Used to filter by the related route assignment start date\t\t\t\t\t\t\t\t\t\t\t|\r\n| RouteAssignmentEndDateFilter \t\t\t\t\t\t| Used to filter by the related route assignment end date\t\t\t\t\t\t\t\t\t\t\t|\r\n| RelatedContainerGuidFilter\t\t\t\t\t\t| Used to filter by the related container GUID.\t\t\t\t\t\t\t\t\t\t\t\t\t\t|\r\n| RelatedOrderCombinationGroupingGuid\t\t\t\t| The GUID associated to the order combination grouping. Filterable\t\t\t\t\t\t\t\t\t|\r\n| ContainersGeoLocationLatFilter\t\t\t\t\t| Used to filter by the location latitude of the site order item\t\t\t\t\t\t\t\t\t|\r\n| ContainersGeoLocationLongFilter\t\t\t\t\t| Used to filter by the location longitude of the site order item\t\t\t\t\t\t\t\t\t|\r\n| RelatedRouteVisitGuidFilter\t\t\t\t\t\t| Used to filter by the related routevisit GUID.\t\t\t\t\t\t\t\t\t\t\t\t\t|\r\n| RouteCalloutRequestGuidFilter\t\t\t\t\t\t| Used to filter by the route callout request GUID\t\t\t\t\t\t\t\t\t\t\t\t\t|","operationId":"Order_Get","consumes":["application/json"],"produces":["application/json"],"parameters":[{"name":"guid","in":"path","required":true,"type":"string","format":"uuid"},{"name":"links","in":"query","required":false,"type":"string"},{"name":"include","in":"query","required":false,"type":"string"},{"name":"expand","in":"query","required":false,"type":"string"},{"name":"udf","in":"query","required":false,"type":"string"}],"responses":{"200":{"description":"OK","schema":{"$ref":"#/definitions/ApiResourceResultEntity[ApiIntegratorOrderResource]"}}}},"put":{"tags":["Order"],"summary":"Partial update","description":"| Property\t\t\t\t\t\t\t\t\t\t\t| Description\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t| Required |\r\n| ------------------------------------------------- | ------------------------------------------------------------------------------------------------- | -------- |\r\n| GUID\t\t\t\t\t\t\t\t\t\t\t\t| The GUID associated to the site order.\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t| No  |\r\n| RelatedSiteGuid\t\t\t\t\t\t\t\t\t| The GUID associated to the customer site of the site order.\t\t\t\t\t\t\t\t\t\t| Yes |\r\n| RelatedSiteAreaGuid\t\t\t\t\t\t\t\t| The GUID associated to the customer site area of the site order.\t\t\t\t\t\t\t\t\t| No  |\r\n| RelatedSupplierSiteForServiceGuid\t\t\t\t\t| The GUID associated to the supplier site for service of the site order.\t\t\t\t\t\t\t| No |\r\n| RelatedSupplierSiteForTransportGuid\t\t\t\t| The GUID associated to the supplier site for transport of the site order.\t\t\t\t\t\t\t| No  |\r\n| RelatedUserSalesRepGuid\t\t\t\t\t\t\t| The GUID associated to the sales rep of the site order.\t\t\t\t\t\t\t\t\t\t\t| No  |  \r\n| RelatedServiceAgreementGuid\t\t\t\t\t\t| The GUID associated to the service agreement of the site order.\t\t\t\t\t\t\t\t\t| Yes |\r\n| OrderNumber\t\t\t\t\t\t\t\t\t\t| Used to filter the order number associated to the site order.\t\t\t\t\t\t\t\t\t\t| No  |\r\n| CustomerOrderNumber\t\t\t\t\t\t\t\t| The customer order number associated to the site order.\t\t\t\t\t\t\t\t\t\t\t| No  |\r\n| OrderedBy\t\t\t\t\t\t\t\t\t\t\t| The ordered by associated to the site order.\t\t\t\t\t\t\t\t\t\t\t\t\t\t| No  |\r\n| ProcessFrom\t\t\t\t\t\t\t\t\t\t| The process from date associated to the site order in ISO format (YYYY-MM-DD).\t\t\t\t\t| Yes |\r\n| ValidUntil\t\t\t\t\t\t\t\t\t\t| The valid until date associated to the site order in ISO format (YYYY-MM-DD).\t\t\t\t\t\t| No  |\r\n| Notes\t\t\t\t\t\t\t\t\t\t\t\t| The notes associated to the site order.\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t| No  |\r\n| DriverNotes\t\t\t\t\t\t\t\t\t\t| The driver notes associated to the site order.\t\t\t\t\t\t\t\t\t\t\t\t\t| No  |\r\n| IsCustomerOwnedEquipment\t\t\t\t\t\t\t| Is the equipment used in the site order customer owned?\t\t\t\t\t\t\t\t\t\t\t| Yes |\r\n| CompanyOutletListItem\t\t\t\t\t\t\t\t| The GUID and description of the company outlet associated to the site order.\t\t\t\t\t\t| Yes |\r\n| ServiceListItem\t\t\t\t\t\t\t\t\t| The GUID and description of the service associated to the site order.\t\t\t\t\t\t\t\t| Yes |\r\n| MaterialListItem\t\t\t\t\t\t\t\t\t| The GUID and description of the material associated to the site order.\t\t\t\t\t\t\t| Yes |\r\n| DefaultContainerTypeListItem\t\t\t\t\t\t| The GUID and description of the container type associated to the site order.\t\t\t\t\t\t| No |\r\n| PriorityListItem\t\t\t\t\t\t\t\t\t| The GUID and description of the priority associated to the site order.\t\t\t\t\t\t\t| Yes |\r\n| PaymentTypeListItem\t\t\t\t\t\t\t\t| The GUID and description of the payment type associated to the site order.\t\t\t\t\t\t| No  |\r\n| Containers[0]\t\t\t\t\t\t\t\t\t\t| The list of site order items associated to the site order.\t\t\t\t\t\t\t\t\t\t| No  |\r\n| Containers[0].Guid\t\t\t\t\t\t\t\t| The GUID associated to the site order item.\t\t\t\t\t\t\t\t\t\t\t\t\t\t| Yes |\r\n| Containers[0].IsDeleted\t\t\t\t\t\t\t| Whether the site order item is deleted.\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t| No  |\r\n| Containers[0].Notes\t\t\t\t\t\t\t\t| The Notes associated to the site order item.\t\t\t\t\t\t\t\t\t\t\t\t\t\t| No  |\r\n| Containers[0].IsContainerAssignedWithoutJob \t\t| Whether the container is assigned without job.\t\t\t\t\t\t\t\t\t\t\t\t\t| Yes |\r\n| Containers[0].IsFromIncreasedOrder \t\t\t\t| Whether the container is from increased order.\t\t\t\t\t\t\t\t\t\t\t\t\t| Yes |\r\n| Containers[0].IsContainerRemovedWithoutJob \t\t| Whether the container is removed without job.\t\t\t\t\t\t\t\t\t\t\t\t\t\t| Yes |\r\n| Containers[0].IsFixLocation \t\t\t\t\t\t| Whether the container has a fixed location.\t\t\t\t\t\t\t\t\t\t\t\t\t\t| No  |\r\n| Containers[0].Geo \t\t\t\t\t\t\t\t| The Geo Location associated to the site order item.\t\t\t\t\t\t\t\t\t\t\t\t| No  |\r\n| Containers[0].Geo.Location.Lat\t\t\t\t\t| The latitude of Geo Location associated to the site order item.\t\t\t\t\t\t\t\t\t| No  |\r\n| Containers[0].Geo.Location.Long\t\t\t\t\t| The longitude of Geo Location associated to the site order item.\t\t\t\t\t\t\t\t\t| No  |\r\n| Containers[0].StartDate \t\t\t\t\t\t\t| The StartDate associated to the site order item.\t\t\t\t\t\t\t\t\t\t\t\t\t| No  |\r\n| Containers[0].EndDate\t\t\t\t\t\t\t\t| The EndDate associated to the site order item.\t\t\t\t\t\t\t\t\t\t\t\t\t| No  |\r\n| Containers[0].DateLinked\t\t\t\t\t\t    | The DateLinked associated to the site order item.\t\t\t\t\t\t\t\t\t\t\t\t\t| No  |\r\n| Containers[0].RelatedContainerGuid\t\t\t\t| The GUID associated to the container of the site order item.\t\t\t\t\t\t\t\t\t\t| No  |\r\n| Containers[0].ContainerTypeListItem\t\t\t\t| The GUID and description of the container type associated to site order item.\t\t\t\t\t\t| Yes |\r\n| Containers[0].ContainerStateListItem\t\t\t\t| The GUID and description of the site order item state associated to site order item.\t\t\t\t| Yes |\r\n| RelatedLocationDestinationGuid\t\t\t\t\t| The destination location associated to the site order. \t\t\t\t\t\t\t\t\t\t\t| Yes |\r\n| IsDeleted\t\t\t\t\t\t\t\t\t\t\t| Whether the site order is deleted.\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t| No  |\r\n| ItemRentals\t\t\t\t\t\t\t\t\t\t| The list of site order item rentals associated to the site order.\t\t\t\t\t\t\t\t\t| No  |\r\n| ItemRentals[0].RelatedPriceGuid\t\t\t\t\t| The GUID associated to the price of the site order item rental.\t\t\t\t\t\t\t\t\t| Yes |\r\n| ItemRentals[0].RelatedPriceModifierGuid\t\t\t| The GUID associated to the price modifier of the site order item rental.\t\t\t\t\t\t\t| No  |\r\n| ItemRentals[0].RelatedCostGuid\t\t\t\t\t| The GUID associated to the cost of the site order item rental.\t\t\t\t\t\t\t\t\t| No  |\r\n| ItemRentals[0].ContainerTypeListItem\t\t\t\t| The GUID and description of the container type associated to site order item rental.\t\t\t\t| Yes |\r\n| ItemRentals[0].ActionListItem\t\t\t\t\t\t| The GUID and description of the action associated to site order item rental.\t\t\t\t\t\t| Yes |\r\n| ItemRentals[0].StartDate\t\t\t\t\t\t\t| The start date associated to the site order item rental in ISO format (YYYY-MM-DD).\t\t\t\t| Yes |\r\n| ItemRentals[0].EndDate\t\t\t\t\t\t\t| The end date associated to the site order item rental in ISO format (YYYY-MM-DD).\t\t\t\t\t| No  |\r\n| ItemRentals[0].IsStartOnStartOfCycle\t\t\t\t| Start on start of cycle when site order item rental.\t\t\t\t\t\t\t\t\t\t\t\t| No  |\r\n| ItemRentals[0].IsEndOnEndOfCycle\t\t\t\t\t| End on start of cycle when site order item rental.\t\t\t\t\t\t\t\t\t\t\t\t| No  |\r\n| ItemRentals[0].Quantity\t\t\t\t\t\t\t| The quantity associated to the site order item rental.\t\t\t\t\t\t\t\t\t\t\t| No  |\r\n| ItemRentals[0].Notes\t\t\t\t\t\t\t\t| The notes associated to the site order item rental.\t\t\t\t\t\t\t\t\t\t\t\t| No  |\r\n| ItemRentals[0].IsArrears\t\t\t\t\t\t\t| Is the site order item rental in arrears?\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t| No  |\r\n| ItemRentals[0].RentalQuantityAttributeListItem\t| The GUID and description of the rental quantity attribute associated to site order item rental.\t| No  |\r\n| ItemRentals[0].IsBinOnSiteBasedOnQuantityNow\t\t| Is the bin on site are based on quantity for site order item rental?\t\t\t\t\t\t\t\t| No  |\r\n| ItemRentals[0].IsDiscount\t\t\t\t\t\t\t| Is the site order item rental discounted?\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t| No  |\r\n| ItemRentals[0].DiscountOverridePrice\t\t\t\t| The discount override price associated to the site order item rental.\t\t\t\t\t\t\t\t| No  |\r\n| ItemRentals[0].DiscountReasonListItem\t\t\t\t| The GUID and description of the discount reason associated to site order item rental.\t\t\t\t| No  |\r\n| ItemRentals[0].Guid\t\t\t\t\t\t\t\t| The GUID associated to the site order item rental.\t\t\t\t\t\t\t\t\t\t\t\t| No  |\r\n| ItemRentals[0].IsDeleted\t\t\t\t\t\t\t| Whether the site order item rental is deleted.\t\t\t\t\t\t\t\t\t\t\t\t\t| No  |\r\n| PermitRequired\t\t\t\t\t\t\t\t\t| Whether the site order has required permit.\t\t\t\t\t\t\t\t\t\t\t\t\t\t| No  |\r\n| RelatedPriceGuidFilter\t\t\t\t\t\t\t| Used to filter by the related price GUID.\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t| No  |\r\n| RelatedPriceModifierGuidFilter\t\t\t\t\t| Used to filter by the related price modifier GUID.\t\t\t\t\t\t\t\t\t\t\t\t| No  |\r\n| RelatedCostGuidFilter\t\t\t\t\t\t\t\t| Used to filter by the related cost GUID.\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t| No  |\r\n| AreaOfOriginListItem\t\t\t\t\t\t\t\t| The GUID and description of the area of origin associated to the site order.\t\t\t\t\t\t| No  |\r\n| StandingJobs\t\t\t\t\t\t\t\t\t\t| The list of standing job template associated to the site order.\t\t\t\t\t\t\t\t\t| No  |\r\n| StandingJobs[0].Guid\t\t\t\t\t\t\t\t| The GUID associated to the standing job template of site order.\t\t\t\t\t\t\t\t\t| No  |\r\n| StandingJobs[0].ActionListItem\t\t\t\t\t| The GUID and description of the action associated to site order standing job\t\t\t\t\t\t| Yes |\r\n| StandingJobs[0].ContainerTypeListItem\t\t\t\t| The GUID and description of the containertype associated to site order standing job\t\t\t\t| Yes |\r\n| StandingJobs[0].EndOnJobCompletion\t\t\t\t| Is job completion on end for standing job\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t| Yes |\r\n| StandingJobs[0].ExcludeNoBinOnSite\t\t\t\t| Exclude no bin on site for standing job\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t| Yes |\r\n| StandingJobs[0].IsNoPlannedDay\t\t\t\t\t| Is on no planned day for standing job\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t| Yes |\r\n| StandingJobs[0].PickupIntervalListItem\t\t\t| The GUID and description of the pickup interval associated to site order standing job\t\t\t\t| Yes |\r\n| StandingJobs[0].StartDate\t\t\t\t\t\t\t| The start date associated to the standing job.\t\t\t\t\t\t\t\t\t\t\t\t\t| Yes |\r\n| StandingJobs[0].EndDate\t\t\t\t\t\t\t| The end date associated to the standing job.\t\t\t\t\t\t\t\t\t\t\t\t\t\t| No  |\r\n| StandingJobs[0].CompanyOutletListItem\t\t\t\t| The GUID and description of the companyoutlet associated to site order standing job\t\t\t\t| No  |\r\n| StandingJobs[0].RelatedSiteAreaGuid\t\t\t\t| The GUID associated to the customer site area of the site order standing job.\t\t\t\t\t\t| No  |\r\n| StandingJobs[0].DayOfWeekListItem\t\t\t\t\t| The GUID and description of the day of week associated to site order standing job\t\t\t\t\t| No  |\r\n| StandingJobs[0].RelatedSysUserDriverGuid\t\t\t| The GUID associated to the sriver sysuser of the site order standing job.\t\t\t\t\t\t\t| No  |\r\n| StandingJobs[0].RelatedVehicleGuid\t\t\t\t| The GUID associated to the vehcile of the site order standing job.\t\t\t\t\t\t\t\t| No  |\r\n| StandingJobs[0].RequestedBy\t\t\t\t\t\t| Requested by details of standing job\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t| No  |\r\n| StandingJobs[0].IsDeleted\t\t\t\t\t\t\t| Whether the standing job related to the siteorder\tis deleted.\t\t\t\t\t\t\t\t\t\t| No  |\r\n| StandingJobsSiteAreaGuidFilter\t\t\t\t\t| Used to filter by the standing job site area guid.\t\t\t\t\t\t\t\t\t\t\t\t| No  |\r\n| StandingJobsSysUserDriverGuidFilter\t\t\t\t| Used to filter by the standing job sysuser driver guid.\t\t\t\t\t\t\t\t\t\t\t| No  |\r\n| StandingJobsVehicleGuidFilter\t\t\t\t\t\t| Used to filter by the standing job vehicle guid.\t\t\t\t\t\t\t\t\t\t\t\t\t| No  |\r\n| StandingJobsStartDateFilter\t\t\t\t\t\t| Used to filter by the standing job start date.\t\t\t\t\t\t\t\t\t\t\t\t\t| No  |\r\n| StandingJobsEndDateFilter\t\t\t\t\t\t\t| Used to filter by the standing job end date.\t\t\t\t\t\t\t\t\t\t\t\t\t\t| No  |\r\n| InspectionTypeListItem\t\t\t\t\t\t\t| The GUID and description of the inspection type associated to the site order.\t\t\t\t\t\t| No  |\r\n| ItemTimeStamp\t\t\t\t\t\t\t\t\t\t| The item timestamp of the site order.\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t| Yes |\r\n| RouteAssignments\t\t\t\t\t\t\t\t\t| The list of route assignments associated to the site order.\t\t\t\t\t\t\t\t\t\t| No  |\r\n| RouteAssignments[0].Guid\t\t\t\t\t\t\t| The guid associated to the route assignment.\t\t\t\t\t\t\t\t\t\t\t\t\t\t| No  |\r\n| RouteAssignments[0].ActionListItem\t\t\t\t| The GUID and description of the action associated to site order route assignment\t\t\t\t\t| Yes |\r\n| RouteAssignments[0].ContainerTypeListItem\t\t\t| The GUID and description of the containertype associated to site order route assignment\t\t\t| Yes |\r\n| RouteAssignments[0].PickupIntervalListItem\t\t| The GUID and description of the pickup interval associated to site order route assignment\t\t\t| Yes |\r\n| RouteAssignments[0].DayOfWeekListItem\t\t\t\t| The GUID and description of the day of week associated to site order route assignment\t\t\t\t| No  |\r\n| RouteAssignments[0].DayOfOccurrenceInMonthListItem| The GUID and description of the day of occurrence in month associated to site order route assignment\t| No  |\r\n| RouteAssignments[0].Position\t\t\t\t\t\t| The position associated to the routeAssignment.\t\t\t\t\t\t\t\t\t\t\t\t\t| No  |\r\n| RouteAssignments[0].StartDate\t\t\t\t\t\t| The start date associated to the route assignment in ISO format (YYYY-MM-DD).\t\t\t\t\t\t| No  |\r\n| RouteAssignments[0].EndDate\t\t\t\t\t\t| The end date associated to the route assignment in ISO format (YYYY-MM-DD).\t\t\t\t\t\t| No  |\r\n| RouteAssignments[0].RequestedBy\t\t\t\t\t| Who is the routeAssignment requested by?\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t| No  |\r\n| RouteAssignments[0].Notes\t\t\t\t\t\t\t| The notes associated to the routeAssignment.\t\t\t\t\t\t\t\t\t\t\t\t\t\t| No  |\r\n| RouteAssignments[0].MaxLiftQuantity\t\t\t\t| The max lift quantity associated to the routeAssignment.\t\t\t\t\t\t\t\t\t\t\t| No  |\r\n| RouteAssignments[0].MinLiftQuantity\t\t\t\t| The min lift quantity associated to the routeAssignment.\t\t\t\t\t\t\t\t\t\t\t| No  |\r\n| RouteAssignments[0].RequiresQuantity\t\t\t\t| Does the routeAssignment require quantity?\t\t\t\t\t\t\t\t\t\t\t\t\t\t| Yes |\r\n| RouteAssignments[0].IsGpsAutoMatchingDisabled\t\t| Is the GPS auto matching disabled for the routeAssignment?\t\t\t\t\t\t\t\t\t\t| Yes |\r\n| RouteAssignments[0].IsNoPlannedDate\t\t\t\t| Is there no planned date for the routeAssignment?\t\t\t\t\t\t\t\t\t\t\t\t\t| Yes |\r\n| RouteAssignments[0].IsNoBinOnSiteExcluded\t\t\t| Is the bin on site excluded for the routeAssignment?\t\t \t\t\t\t\t\t\t\t\t\t| Yes |\r\n| RouteAssignments[0].RelatedRouteTemplateGuid\t\t| The guid associated to the route template  to the routeAssignment.\t\t\t\t\t\t\t\t| No  |\r\n| RouteAssignments[0].RelatedSiteAreaGuid\t\t\t| The guid associated to the site area of the route assignment.\t\t\t\t\t\t\t\t\t\t| No  |\r\n| RouteAssignments[0].IsDeleted\t\t\t\t\t\t| Whether the site order route assignment is deleted.\t\t\t\t\t\t\t\t\t\t\t\t| No  |\r\n| RouteAssignments[0].Exclusions\t\t\t\t\t| The list of exclusions associated to the route assignment.\t\t\t\t\t\t\t\t\t\t| No  |\r\n| RouteAssignments[0].Exclusions[0].Guid\t\t\t\t\t\t| The guid associated to the exclusion.\t\t\t\t\t\t\t\t\t\t\t\t\t| No  |\r\n| RouteAssignments[0].Exclusions[0].ExcludeFrom\t\t\t\t\t| The exclude from date associated to the exclusion.\t\t\t\t\t\t\t\t\t| Yes |\r\n| RouteAssignments[0].Exclusions[0].ExcludeTo\t\t\t\t\t| The exclude to date associated to the exclusion.\t\t\t\t\t\t\t\t\t\t| Yes |\r\n| RouteAssignments[0].Exclusions[0].ExclusionTypeListItem\t\t| The guid and description of the exclusion type associated to the exclusion\t.\t\t| Yes |\r\n| RouteAssignments[0].Exclusions[0].ReasonListItem\t\t\t\t| The guid and description of the reason associated to the exclusion\t.\t\t\t\t| No  |\r\n| RouteAssignments[0].Exclusions[0].Notes\t\t\t\t\t\t| The notes associated to the exclusion.\t\t\t\t\t\t\t\t\t\t\t\t| No  |\r\n| RouteCalloutRequests\t\t\t\t\t\t\t\t| The list of route callout requests associated to the site order.\t\t\t\t\t\t\t\t\t| No  |\r\n| RouteCalloutRequests[0].Guid\t\t\t\t\t\t| The guid associated to the route callout request.\t\t\t\t\t\t\t\t\t\t\t\t\t| No  |\r\n| RouteCalloutRequests[0].ActionListItem\t\t\t| The GUID and description of the action associated to site order route callout request\t\t\t\t| Yes |\r\n| RouteCalloutRequests[0].OutletListItem \t\t\t| The GUID and description of the company outlet associated to site order route callout request\t\t| Yes |\r\n| RouteCalloutRequests[0].ContainerTypeListItem\t\t| The GUID and description of the containertype associated to site order route callout request\t\t| Yes |\r\n| RouteCalloutRequests[0].DateRequired\t\t\t\t| The date required of the route callout request\t\t\t\t\t\t\t\t\t\t\t\t\t| Yes |\r\n| RouteCalloutRequests[0].Notes\t\t\t\t\t\t| The notes of the route callout request\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t| No  |\r\n| RouteCalloutRequests[0].RelatedRouteVisitGuid\t\t| The guid associated to the routevisit of the route callout request.\t\t\t\t\t\t\t\t| No  |\r\n| RouteCalloutRequests[0].RequestedBy\t\t\t\t| Who requested the route callout request.\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t| Yes |\r\n| RouteCalloutRequests[0].MaxLiftQuantity\t\t\t| The max lift quantity of the route callout request.\t\t\t\t\t\t\t\t\t\t\t\t| Yes |\r\n| RouteCalloutRequests[0].IsDeleted\t\t\t\t\t| Whether the route callout request is deleted.\t\t\t\t\t\t\t\t\t\t\t\t\t\t| No  |\r\n| RouteAssignmentSiteAreaGuidFilter\t\t\t\t\t| Used to filter by the related route assignment site area GUID. \t\t\t\t\t\t\t\t\t| No  |\r\n| RouteAssignmentStartDateFilter \t\t\t\t\t| Used to filter by the related route assignment start date\t\t\t\t\t\t\t\t\t\t\t| No  |\r\n| RouteAssignmentEndDateFilter \t\t\t\t\t\t| Used to filter by the related route assignment end date\t\t\t\t\t\t\t\t\t\t\t| No  |\r\n| RelatedContainerGuidFilter\t\t\t\t\t\t| Used to filter by the related container GUID.\t\t\t\t\t\t\t\t\t\t\t\t\t\t| No  |\r\n| RelatedOrderCombinationGroupingGuid\t\t\t\t| The GUID associated to the order combination grouping. \t\t\t\t\t\t\t\t\t\t\t| No  |\r\n| ContainersGeoLocationLatFilter\t\t\t\t\t| Used to filter by the location latitude of the site order item\t\t\t\t\t\t\t\t\t| No  |\r\n| ContainersGeoLocationLongFilter\t\t\t\t\t| Used to filter by the location longitude of the site order item\t\t\t\t\t\t\t\t\t| No  |\r\n| RelatedRouteVisitGuidFilter\t\t\t\t\t\t| Used to filter by the related routevisit GUID.\t\t\t\t\t\t\t\t\t\t\t\t\t| No  |\r\n| RouteCalloutRequestGuidFilter\t\t\t\t\t\t| Used to filter by the route callout request GUID\t\t\t\t\t\t\t\t\t\t\t\t\t| No  |\r\n\r\n## Extra validations\r\n\r\n| Condition | Error message |\r\n| --------- | ------------- |\r\n| Quantity or RentalQuantityAttributeListItem are expected | Either Quantity or RentalQuantityAttributeListItem.Guid properties must be set. SiteOrderItemRental with Quantity cannot be set if RentalQuantityAttributeListItem.Guid has a value. |\r\n| If OrderNumber is changed. | OrderNumber is a read-only property. | \r\n| If the given price is not in the service agreement and the actiontypes is not in rental or advance service  | Failed to save. SiteOrderItemRental with RelatedPriceGuid is not supported for SiteOrder |\r\n| If the GUID passed to AreaOfOriginListItem has a value that is not in the AreaOfOrigin table OR is deleted | Failed to save/update Order because The supplied AreaOfOrigin is not valid. The update has been rejected. Change the AreaOfOriginListItem to the Guid of a valid and undeleted AreaOfOrigin. |\r\n| If the given DefaultContainerTypeListItem is not in service | Failed to save. SiteOrder with DefaultContainerTypeListItem.GUID cannot be set if DefaultContainerType are not linked to Service. |\r\n| If related site area is deleted | Failed to save/update SiteOrder because the supplied CustomerSiteArea is not valid. The update has been rejected. Change the RelatedSiteAreaGuid to the Guid of a valid and undeleted CustomerSiteArea |\r\n| If RelatedSiteAreaGuid is not relevant | The site area and site do not match. The resource could not be created/updated. Ensure that RelatedSiteAreaGuid references an site area of RelatedSiteGuid |\r\n| If siteorder service is not IsScheduled and service is not IsCollection with IsStandingOrder. | StandingJobs is not supported. Primary service in ServiceAgreement should have IsScheduled or IsCollection set to true. If the service IsCollection set to true then IsStandingOrder also need to be set true. |\r\n| If site area is not linked with customer site | Failed to save. StandingJobs with RelatedSiteAreaGuid of guid is not supported for SiteOrder StandingJobs. The given customer site area is not linked to the customer site of site order. |\r\n| If site area is deleted | Failed to save/update SiteOrder because the supplied CustomerSiteArea is not valid. The update has been rejected. Change the StandingJobs.RelatedSiteAreaGuid to the Guid of a valid and undeleted CustomerSiteArea |\r\n| If Action List is not provided in the service agreement price, the action type not of CreateJobFrom, the action type not of CreateJobFrom,CreateContainerJobFrom when service IsCollection and action type in StartOfCycle,EndOfCycle| Failed to save. StandingJobs with ActionListItem.Guid of guid is not supported for SiteOrder StandingJobs. The given action is not linked to the service agreement price or the action does not belongs to action type of CreateJobFrom and CreateContainerJobFrom(when the service have IsCollection is enabled) or the actions action type should have enabled or disabled both StartOfCycle,EndOfCycle |\r\n| If ContainerType List is not provided in the service agreement price action| Failed to save. StandingJobs with ContainerTypeListItem.Guid of guid is not supported for SiteOrder StandingJobs. The given container type is not linked to the service agreement price |\r\n| If sysuser is not belong to order companyoutlet or standingjob companyoutlet and staff type is not driver | Failed to save. StandingJobs with RelatedSysUserDriverGuid of guid is not supported for SiteOrder StandingJobs. The given Sysuser must have staff type as Driver and  Sysuser must belongs to order companyoutlet or standingjob companyoutlet |\r\n| If vehicle is not belong to order companyoutlet or standingjob companyoutlet and vehicle containertype is not supported | Failed to save. StandingJobs with RelatedVehicleGuid of guid is not supported for SiteOrder StandingJobs. The vehicle must be linked with container type and vehicle must belongs to order companyoutlet or standingjob companyoutlet |\r\n| If DayOfWeekListItem is provided when IsNoPlannedDay set to true | Failed to save. StandingJobs with DayOfWeekListItem cannot be set if IsNoPlannedDay is set to true. |\r\n| If siteorder service is not IsCollection | RouteAssignments is not supported. Primary service in ServiceAgreement should have iscollection set to true. |\r\n| If site area is not linked with customer site | Failed to save. RouteAssignments with RelatedSiteAreaGuid of guid is not supported for SiteOrder Route Assignment. The given customer site area is not linked to the customer site of site order. |\r\n| If site area is deleted | Failed to save/update SiteOrder because the supplied CustomerSiteArea is not valid. The update has been rejected. Change the RouteAssignments.RelatedSiteAreaGuid to the Guid of a valid and undeleted CustomerSiteArea |\r\n| If the given action does not have action type of Assign To Round | Failed to save. ActionListItem.Guid is not supported for Route Assignment.The given actions should be linked with action type AssignToRound. |\r\n| If the given container type is not priced in the service agreement | Failed to save. ContainerTypeListItem.Guid is not supported for Route Assignment.The given container type should be in service agreement price. |\r\n| If DayOfWeekListItem is set when IsNoPlannedDate is true | Failed to save. DayOfWeekListItem cannot be set when IsNoPlannedDate is set to true |\r\n| If startDate is set when IsNoPlannedDate is true | Failed to save. StartDate cannot be set when IsNoPlannedDate is set to true |\r\n| If DayOfWeekListItem is null or empty when IsNoPlannedDate is false | Failed to save. DayOfWeekListItem cannot be null when IsNoPlannedDate is set to false |\r\n| If startDate is null or empty when IsNoPlannedDate is false | Failed to save. StartDate cannot be null when IsNoPlannedDate is set to false |\r\n| If position is set to 0 and relatedRouteTemplateGuid has a value | Failed to save. Position cannot be set to zero when relatedRouteTemplateGuid has a value |\r\n| If position has a value and relatedRouteTemplateGuid is null | Failed to save. Position cannot have a value if relatedRouteTemplateGuid is set to null |\r\n| If the company outlet passed is not related to the customer site | The Company Outlet and Customer Site do not match. The resource could not be created/updated. Ensure that CompanyOutletListItem.Guid references a Company Outlet of RelatedSiteGuid |\r\n| If the RouteAssignment is deleted in an order | Failed to save/update SiteOrder because the supplied RouteAssignment is not valid. The update has been rejected. Change the RouteAssignments to the Guid of a valid undeleted RouteAssignment |\r\n| If Containers[0].RelatedContainerGuid provided has a non-existent or deleted value | Failed to save/update SiteOrder because the supplied RelatedContainerGuid is not valid. The update has been rejected. Change the Containers[0].RelatedContainerGuid to the Guid of a valid and undeleted RelatedContainerGuid |\r\n| If Containers[0].ContainerTypeListItem.Guid is null | The mandatory property Containers[0].ContainerTypeListItem.Guid has a null value. The request could not be processed. Supply a value for the Containers[0].ContainerTypeListItem.Guid property of the submitted resource. |\r\n| If Containers[0].ContainerStateListItem.Guid provided is null | The mandatory property Containers[0].ContainerStateListItem.Guid has a null value. The request could not be processed. Supply a value for the Containers[0].ContainerStateListItem.Guid property of the submitted resource. |\r\n| If Containers[0].ContainerTypeListItem.Guid provided has a non-existent or deleted value | Failed to save/update SiteOrder because the supplied Containers[0].ContainerTypeListItem.Guid is not valid. The update has been rejected. Change the Containers[0].ContainerTypeListItem.Guid to the Guid of a valid and undeleted Containers[0].ContainerTypeListItem.Guid |\r\n| If Containers[0].ContainerStateListItem.Guid provided has a non-existent or deleted value | Failed to save/update SiteOrder because the supplied  Containers[0].ContainerStateListItem.Guid is not valid. The update has been rejected. Change the Containers[0].ContainerStateListItem.Guid to the Guid of a valid and undeleted Containers[0].ContainerStateListItem.Guid |\r\n| If Containers[0].ContainerStateListItem.Guid provided has an inactive value | Failed to save/update SiteOrder because the supplied  Containers[0].ContainerStateListItem.Guid is not valid. The update has been rejected. Change the Containers[0].ContainerStateListItem.Guid to the Guid of an active Containers[0].ContainerStateListItem.Guid |\r\n| If RouteAssignments[0].Exclusions[0].ExclusionTypeListItem.Guid provided with a mark as Deleted Exclusion Type | The provided  RouteAssignments[0].Exclusions[0].ExclusionTypeListItem is deleted. Could not update the resource. Please check the relevant list end point for the available options. |\r\n| If RouteAssignments[0].Exclusions[0].ReasonListItem.Guid provided with a mark as Deleted Reason | The provided  RouteAssignments[0].Exclusions[0].ReasonListItem is deleted. Could not update the resource. Please check the relevant list end point for the available options. |\r\n| If RouteAssignments[0].Exclusions[0].ReasonListItem is not in one of the following reason categories: Exclusions |  RouteAssignments[0].Exclusions[0].ReasonListItem must be in one of the following reason categories: Exclusions. |\r\n| If Valid Until date is provided on update and rentals/invoice is not created | Issue closing the order. Could not update the order and close it - {message} |\r\n| If the value for IsDeleted is changed on update | IsDeleted is a read-only property |\r\n| If the value for Containers.IsDeleted is changed on update | Containers.IsDeleted is a read-only property |\r\n| If the value for ItemRentals.IsDeleted is changed on update | ItemRentals.IsDeleted is a read-only property |\r\n| If the GUID passed to InspectionTypeListItem has a value that is deleted | The provided InspectionTypeListItem is deleted. Could not update the resource. Please check the relevant list end point for the available options. |\r\n| If RouteCalloutRequests[0].MaxLiftQuantity is a negative number |  Failed to save/update MaxLiftQuantity because value must be non negative. |\r\n","operationId":"Order_Update","consumes":["application/json"],"produces":["application/json"],"parameters":[{"name":"guid","in":"path","required":true,"type":"string","format":"uuid"},{"in":"body","required":true,"schema":{"$ref":"#/definitions/ApiResourceId"}}],"responses":{"200":{"description":"OK","schema":{"$ref":"#/definitions/ApiResourceId"}}}}},"/transport/orders":{"get":{"tags":["Order"],"summary":"Find with Filters","description":"| Property\t\t\t\t\t\t\t\t\t\t\t| Description\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t|\r\n| ------------------------------------------------- | ------------------------------------------------------------------------------------------------- |\r\n| GUID\t\t\t\t\t\t\t\t\t\t\t\t| The GUID associated to the site order.\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t|\r\n| RelatedSiteGuid\t\t\t\t\t\t\t\t\t| The GUID associated to the customer site of the site order.\t\t\t\t\t\t\t\t\t\t|\r\n| RelatedSiteAreaGuid\t\t\t\t\t\t\t\t| The GUID associated to the customer site area of the site order.\t\t\t\t\t\t\t\t\t|\r\n| RelatedSupplierSiteForServiceGuid\t\t\t\t\t| The GUID associated to the supplier site for service of the site order.\t\t\t\t\t\t\t|\r\n| RelatedSupplierSiteForTransportGuid\t\t\t\t| The GUID associated to the supplier site for transport of the site order.\t\t\t\t\t\t\t|\r\n| RelatedUserSalesRepGuid\t\t\t\t\t\t\t| The GUID associated to the sales rep of the site order.\t\t\t\t\t\t\t\t\t\t\t|     \r\n| RelatedServiceAgreementGuid\t\t\t\t\t\t| The GUID associated to the service agreement of the site order.\t\t\t\t\t\t\t\t\t|\r\n| OrderNumber\t\t\t\t\t\t\t\t\t\t| Used to filter the order number associated to the site order.\t\t\t\t\t\t\t\t\t\t|\r\n| CustomerOrderNumber\t\t\t\t\t\t\t\t| The customer order number associated to the site order.\t\t\t\t\t\t\t\t\t\t\t|\r\n| OrderedBy\t\t\t\t\t\t\t\t\t\t\t| The ordered by associated to the site order.\t\t\t\t\t\t\t\t\t\t\t\t\t\t|\r\n| ProcessFrom\t\t\t\t\t\t\t\t\t\t| The process from date associated to the site order in ISO format (YYYY-MM-DD).\t\t\t\t\t|\r\n| ValidUntil\t\t\t\t\t\t\t\t\t\t| The valid until date associated to the site order in ISO format (YYYY-MM-DD).\t\t\t\t\t\t|\r\n| Notes\t\t\t\t\t\t\t\t\t\t\t\t| The notes associated to the site order.\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t|\r\n| DriverNotes\t\t\t\t\t\t\t\t\t\t| The driver notes associated to the site order.\t\t\t\t\t\t\t\t\t\t\t\t\t|\r\n| IsCustomerOwnedEquipment\t\t\t\t\t\t\t| Is the equipment used in the site order customer owned?\t\t\t\t\t\t\t\t\t\t\t|\r\n| CompanyOutletListItem\t\t\t\t\t\t\t\t| The GUID and description of the company outlet associated to the site order.\t\t\t\t\t\t|\r\n| ServiceListItem\t\t\t\t\t\t\t\t\t| The GUID and description of the service associated to the site order.\t\t\t\t\t\t\t\t|\r\n| MaterialListItem\t\t\t\t\t\t\t\t\t| The GUID and description of the material associated to the site order.\t\t\t\t\t\t\t|\r\n| DefaultContainerTypeListItem\t\t\t\t\t\t| The GUID and description of the container type associated to the site order.\t\t\t\t\t\t|\r\n| PriorityListItem\t\t\t\t\t\t\t\t\t| The GUID and description of the priority associated to the site order.\t\t\t\t\t\t\t|\r\n| PaymentTypeListItem\t\t\t\t\t\t\t\t| The GUID and description of the payment type associated to the site order.\t\t\t\t\t\t|\r\n| Containers[0]\t\t\t\t\t\t\t\t\t\t| The list of site order items associated to the site order.\t\t\t\t\t\t\t\t\t\t|\r\n| Containers[0].Guid\t\t\t\t\t\t\t\t| The GUID associated to the site order item.\t\t\t\t\t\t\t\t\t\t\t\t\t\t|\r\n| Containers[0].IsDeleted\t\t\t\t\t\t\t| Whether the site order item is deleted.\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t|\r\n| Containers[0].Notes\t\t\t\t\t\t\t\t| The Notes associated to the site order item.\t\t\t\t\t\t\t\t\t\t\t\t\t\t|\r\n| Containers[0].IsContainerAssignedWithoutJob \t\t| Whether the container is assigned without job.\t\t\t\t\t\t\t\t\t\t\t\t\t|\r\n| Containers[0].IsFromIncreasedOrder \t\t\t\t| Whether the container is from increased order.\t\t\t\t\t\t\t\t\t\t\t\t\t|\r\n| Containers[0].IsContainerRemovedWithoutJob \t\t| Whether the container is removed without job.\t\t\t\t\t\t\t\t\t\t\t\t\t\t|\r\n| Containers[0].IsFixLocation \t\t\t\t\t\t| Whether the container has a fixed location.\t\t\t\t\t\t\t\t\t\t\t\t\t\t|\r\n| Containers[0].Geo \t\t\t\t\t\t\t\t| The Geo Location associated to the site order item.\t\t\t\t\t\t\t\t\t\t\t\t|\r\n| Containers[0].Geo.Location.Lat\t\t\t\t\t| The latitude of Geo Location associated to the site order item.\t\t\t\t\t\t\t\t\t|\r\n| Containers[0].Geo.Location.Long\t\t\t\t\t| The longitude of Geo Location associated to the site order item.\t\t\t\t\t\t\t\t\t|\r\n| Containers[0].StartDate \t\t\t\t\t\t\t| The StartDate associated to the site order item.\t\t\t\t\t\t\t\t\t\t\t\t\t|\r\n| Containers[0].EndDate\t\t\t\t\t\t\t\t| The EndDate associated to the site order item.\t\t\t\t\t\t\t\t\t\t\t\t\t|\r\n| Containers[0].DateLinked\t\t\t\t\t\t    | The DateLinked associated to the site order item.\t\t\t\t\t\t\t\t\t\t\t\t\t|\r\n| Containers[0].RelatedContainerGuid\t\t\t\t| The GUID associated to the container of the site order item.\t\t\t\t\t\t\t\t\t\t|\r\n| Containers[0].ContainerTypeListItem\t\t\t\t| The GUID and description of the container type associated to site order item.\t\t\t\t\t\t|\r\n| Containers[0].ContainerStateListItem\t\t\t\t| The GUID and description of the site order item state associated to site order item.\t\t\t\t|\r\n| RelatedLocationDestinationGuid\t\t\t\t\t| Used to filter the related destination location guid associated to the site order. \t\t\t\t|\r\n| IsDeleted\t\t\t\t\t\t\t\t\t\t\t| Whether the site order is deleted.\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t|\r\n| ItemRentals\t\t\t\t\t\t\t\t\t\t| The list of site order item rentals associated to the site order.\t\t\t\t\t\t\t\t\t|\r\n| ItemRentals[0].RelatedPriceGuid\t\t\t\t\t| The GUID associated to the price of the site order item rental.\t\t\t\t\t\t\t\t\t|\r\n| ItemRentals[0].RelatedPriceModifierGuid\t\t\t| The GUID associated to the price modifier of the site order item rental.\t\t\t\t\t\t\t|\r\n| ItemRentals[0].RelatedCostGuid\t\t\t\t\t| The GUID associated to the cost of the site order item rental.\t\t\t\t\t\t\t\t\t|\r\n| ItemRentals[0].ContainerTypeListItem\t\t\t\t| The GUID and description of the container type associated to site order item rental.\t\t\t\t|\r\n| ItemRentals[0].ActionListItem\t\t\t\t\t\t| The GUID and description of the action associated to site order item rental.\t\t\t\t\t\t|\r\n| ItemRentals[0].StartDate\t\t\t\t\t\t\t| The start date associated to the site order item rental in ISO format (YYYY-MM-DD).\t\t\t\t|\r\n| ItemRentals[0].EndDate\t\t\t\t\t\t\t| The end date associated to the site order item rental in ISO format (YYYY-MM-DD).\t\t\t\t\t|\r\n| ItemRentals[0].IsStartOnStartOfCycle\t\t\t\t| Start on start of cycle when site order item rental.\t\t\t\t\t\t\t\t\t\t\t\t|\r\n| ItemRentals[0].IsEndOnEndOfCycle\t\t\t\t\t| End on start of cycle when site order item rental.\t\t\t\t\t\t\t\t\t\t\t\t|\r\n| ItemRentals[0].Quantity\t\t\t\t\t\t\t| The quantity associated to the site order item rental.\t\t\t\t\t\t\t\t\t\t\t|\r\n| ItemRentals[0].Notes\t\t\t\t\t\t\t\t| The notes associated to the site order item rental.\t\t\t\t\t\t\t\t\t\t\t\t|\r\n| ItemRentals[0].IsArrears\t\t\t\t\t\t\t| Is the site order item rental in arrears?\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t|\r\n| ItemRentals[0].RentalQuantityAttributeListItem\t| The GUID and description of the rental quantity attribute associated to site order item rental.\t|\r\n| ItemRentals[0].IsBinOnSiteBasedOnQuantityNow\t\t| Is the bin on site are based on quantity for site order item rental?\t\t\t\t\t\t\t\t|\r\n| ItemRentals[0].IsDiscount\t\t\t\t\t\t\t| Is the site order item rental discounted?\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t|\r\n| ItemRentals[0].DiscountOverridePrice\t\t\t\t| The discount override price associated to the site order item rental.\t\t\t\t\t\t\t\t|\r\n| ItemRentals[0].DiscountReasonListItem\t\t\t\t| The GUID and description of the discount reason associated to site order item rental.\t\t\t\t|\r\n| ItemRentals[0].Guid\t\t\t\t\t\t\t\t| The GUID associated to the site order item rental.\t\t\t\t\t\t\t\t\t\t\t\t|\r\n| ItemRentals[0].IsDeleted\t\t\t\t\t\t\t| Whether the site order item rental is deleted.\t\t\t\t\t\t\t\t\t\t\t\t\t|\r\n| PermitRequired\t\t\t\t\t\t\t\t\t| Whether the site order has required permit.\t\t\t\t\t\t\t\t\t\t\t\t\t\t|\r\n| RelatedPriceGuidFilter\t\t\t\t\t\t\t| Used to filter by the related price GUID.\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t|\r\n| RelatedPriceModifierGuidFilter\t\t\t\t\t| Used to filter by the related price modifier GUID.\t\t\t\t\t\t\t\t\t\t\t\t|\r\n| RelatedCostGuidFilter\t\t\t\t\t\t\t\t| Used to filter by the related cost GUID.\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t|\r\n| AreaOfOriginListItem\t\t\t\t\t\t\t\t| The GUID and description of the area of origin associated to the site order.\t\t\t\t\t\t|\r\n| StandingJobs\t\t\t\t\t\t\t\t\t\t| The list of standing job template associated to the site order.\t\t\t\t\t\t\t\t\t|\r\n| StandingJobs[0].Guid\t\t\t\t\t\t\t\t| The GUID associated to the standing job template of site order.\t\t\t\t\t\t\t\t\t|\r\n| StandingJobs[0].ActionListItem\t\t\t\t\t| The GUID and description of the action associated to site order standing job\t\t\t\t\t\t|\r\n| StandingJobs[0].ContainerTypeListItem\t\t\t\t| The GUID and description of the containertype associated to site order standing job\t\t\t\t|\r\n| StandingJobs[0].EndOnJobCompletion\t\t\t\t| Is job completion on end for standing job\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t|\r\n| StandingJobs[0].ExcludeNoBinOnSite\t\t\t\t| Exclude no bin on site for standing job\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t|\r\n| StandingJobs[0].IsNoPlannedDay\t\t\t\t\t| Is on no planned day for standing job\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t|\r\n| StandingJobs[0].PickupIntervalListItem\t\t\t| The GUID and description of the pickup interval associated to site order standing job\t\t\t\t|\r\n| StandingJobs[0].StartDate\t\t\t\t\t\t\t| The start date associated to the standing job.\t\t\t\t\t\t\t\t\t\t\t\t\t|\r\n| StandingJobs[0].EndDate\t\t\t\t\t\t\t| The end date associated to the standing job.\t\t\t\t\t\t\t\t\t\t\t\t\t\t|\r\n| StandingJobs[0].CompanyOutletListItem\t\t\t\t| The GUID and description of the companyoutlet associated to site order standing job\t\t\t\t|\r\n| StandingJobs[0].RelatedSiteAreaGuid\t\t\t\t| The GUID associated to the customer site area of the site order standing job.\t\t\t\t\t\t|\r\n| StandingJobs[0].DayOfWeekListItem\t\t\t\t\t| The GUID and description of the day of week associated to site order standing job\t\t\t\t\t|\r\n| StandingJobs[0].RelatedSysUserDriverGuid\t\t\t| The GUID associated to the sriver sysuser of the site order standing job.\t\t\t\t\t\t\t|\r\n| StandingJobs[0].RelatedVehicleGuid\t\t\t\t| The GUID associated to the vehcile of the site order standing job.\t\t\t\t\t\t\t\t|\r\n| StandingJobs[0].RequestedBy\t\t\t\t\t\t| Requested by details of standing job.\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t|\r\n| StandingJobs[0].IsDeleted\t\t\t\t\t\t\t| Whether the standing job related to the siteorder\tis deleted.\t\t\t\t\t\t\t\t\t\t|\r\n| StandingJobsSiteAreaGuidFilter\t\t\t\t\t| Used to filter by the standing job site area guid.\t\t\t\t\t\t\t\t\t\t\t\t|\r\n| StandingJobsSysUserDriverGuidFilter\t\t\t\t| Used to filter by the standing job sysuser driver guid.\t\t\t\t\t\t\t\t\t\t\t|\r\n| StandingJobsVehicleGuidFilter\t\t\t\t\t\t| Used to filter by the standing job vehicle guid.\t\t\t\t\t\t\t\t\t\t\t\t\t|\r\n| StandingJobsStartDateFilter\t\t\t\t\t\t| Used to filter by the standing job start date.\t\t\t\t\t\t\t\t\t\t\t\t\t|\r\n| StandingJobsEndDateFilter\t\t\t\t\t\t\t| Used to filter by the standing job end date.\t\t\t\t\t\t\t\t\t\t\t\t\t\t|\r\n| InspectionTypeListItem\t\t\t\t\t\t\t| The GUID and description of the inspection type associated to the site order.\t\t\t\t\t\t|\r\n| ItemTimeStamp\t\t\t\t\t\t\t\t\t\t| The item timestamp of the site order.\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t|\r\n| RouteAssignments\t\t\t\t\t\t\t\t\t| The list of route assignments associated to the site order.\t\t\t\t\t\t\t\t\t\t|\r\n| RouteAssignments[0].Guid\t\t\t\t\t\t\t| The guid associated to the route assignment.\t\t\t\t\t\t\t\t\t\t\t\t\t\t|\r\n| RouteAssignments[0].ActionListItem\t\t\t\t| The GUID and description of the action associated to site order route assignment\t\t\t\t\t|\r\n| RouteAssignments[0].ContainerTypeListItem\t\t\t| The GUID and description of the containertype associated to site order route assignment\t\t\t|\r\n| RouteAssignments[0].PickupIntervalListItem\t\t| The GUID and description of the pickup interval associated to site order route assignment\t\t\t|\r\n| RouteAssignments[0].DayOfWeekListItem\t\t\t\t| The GUID and description of the day of week associated to site order route assignment\t\t\t\t|\r\n| RouteAssignments[0].DayOfOccurrenceInMonthListItem| The GUID and description of the day of occurrence in month associated to site order route assignment\t\t\t\t|\r\n| RouteAssignments[0].Position\t\t\t\t\t\t| The position associated to the routeAssignment.\t\t\t\t\t\t\t\t\t\t\t\t\t|\r\n| RouteAssignments[0].StartDate\t\t\t\t\t\t| The start date associated to the route assignment in ISO format (YYYY-MM-DD).\t\t\t\t\t\t|\r\n| RouteAssignments[0].EndDate\t\t\t\t\t\t| The end date associated to the route assignment in ISO format (YYYY-MM-DD).\t\t\t\t\t\t|\r\n| RouteAssignments[0].RequestedBy\t\t\t\t\t| Who is the routeAssignment requested by?\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t|\r\n| RouteAssignments[0].Notes\t\t\t\t\t\t\t| The notes associated to the routeAssignment.\t\t\t\t\t\t\t\t\t\t\t\t\t\t|\r\n| RouteAssignments[0].MaxLiftQuantity\t\t\t\t| The max lift quantity associated to the routeAssignment.\t\t\t\t\t\t\t\t\t\t\t|\r\n| RouteAssignments[0].MinLiftQuantity\t\t\t\t| The min lift quantity associated to the routeAssignment.\t\t\t\t\t\t\t\t\t\t\t|\r\n| RouteAssignments[0].RequiresQuantity\t\t\t\t| Does the routeAssignment require quantity?\t\t\t\t\t\t\t\t\t\t\t\t\t\t|\r\n| RouteAssignments[0].IsGpsAutoMatchingDisabled\t\t| Is the GPS auto matching disabled for the routeAssignment?\t\t\t\t\t\t\t\t\t\t|\r\n| RouteAssignments[0].IsNoPlannedDate\t\t\t\t| Is there no planned date for the routeAssignment?\t\t\t\t\t\t\t\t\t\t\t\t\t|\r\n| RouteAssignments[0].IsNoBinOnSiteExcluded\t\t\t| Is the bin on site excluded for the routeAssignment?\t\t \t\t\t\t\t\t\t\t\t\t|\r\n| RouteAssignments[0].RelatedRouteTemplateGuid\t\t| The guid associated to the route template  to the routeAssignment.\t\t\t\t\t\t\t\t|\r\n| RouteAssignments[0].RelatedSiteAreaGuid\t\t\t| The guid associated to the site area of the route assignment.\t\t\t\t\t\t\t\t\t\t|\r\n| RouteAssignments[0].IsDeleted\t\t\t\t\t\t| Whether the site order route assignment is deleted.\t\t\t\t\t\t\t\t\t\t\t\t|\r\n| RouteAssignments[0].Exclusions\t\t\t\t\t| The list of exclusions associated to the route assignment.\t\t\t\t\t\t\t\t\t\t|\r\n| RouteAssignments[0].Exclusions[0].Guid\t\t\t\t\t\t| The guid associated to the exclusion.\t\t\t\t\t\t\t\t\t\t\t\t\t|\r\n| RouteAssignments[0].Exclusions[0].ExcludeFrom\t\t\t\t\t| The exclude from date associated to the exclusion.\t\t\t\t\t\t\t\t\t|\r\n| RouteAssignments[0].Exclusions[0].ExcludeTo\t\t\t\t\t| The exclude to date associated to the exclusion.\t\t\t\t\t\t\t\t\t\t|\r\n| RouteAssignments[0].Exclusions[0].ExclusionTypeListItem\t\t| The guid and description of the exclusion type associated to the exclusion\t.\t\t|\r\n| RouteAssignments[0].Exclusions[0].ReasonListItem\t\t\t\t| The guid and description of the reason associated to the exclusion\t.\t\t\t\t|\r\n| RouteAssignments[0].Exclusions[0].Notes\t\t\t\t\t\t| The notes associated to the exclusion.\t\t\t\t\t\t\t\t\t\t\t\t|\r\n| RouteCalloutRequests\t\t\t\t\t\t\t\t| The list of route callout requests associated to the site order.\t\t\t\t\t\t\t\t\t|\r\n| RouteCalloutRequests[0].Guid\t\t\t\t\t\t| The guid associated to the route callout request.\t\t\t\t\t\t\t\t\t\t\t\t\t|\r\n| RouteCalloutRequests[0].ActionListItem\t\t\t| The GUID and description of the action associated to site order route callout request\t\t\t\t|\r\n| RouteCalloutRequests[0].OutletListItem \t\t\t| The GUID and description of the company outlet associated to site order route callout request\t\t|\r\n| RouteCalloutRequests[0].ContainerTypeListItem\t\t| The GUID and description of the containertype associated to site order route callout request\t\t|\r\n| RouteCalloutRequests[0].DateRequired\t\t\t\t| The date required of the route callout request\t\t\t\t\t\t\t\t\t\t\t\t\t|\r\n| RouteCalloutRequests[0].Notes\t\t\t\t\t\t| The notes of the route callout request\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t|\r\n| RouteCalloutRequests[0].RelatedRouteVisitGuid\t\t| The guid associated to the routevisit of the route callout request.\t\t\t\t\t\t\t\t|\r\n| RouteCalloutRequests[0].RequestedBy\t\t\t\t| Who requested the route callout request.\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t|\r\n| RouteCalloutRequests[0].MaxLiftQuantity\t\t\t| The max lift quantity of the route callout request.\t\t\t\t\t\t\t\t\t\t\t\t|\r\n| RouteCalloutRequests[0].IsDeleted\t\t\t\t\t| Whether the route callout request is deleted.\t\t\t\t\t\t\t\t\t\t\t\t\t\t|\r\n| RouteAssignmentSiteAreaGuidFilter\t\t\t\t\t| Used to filter by the related route assignment site area GUID. \t\t\t\t\t\t\t\t\t|\r\n| RouteAssignmentStartDateFilter \t\t\t\t\t| Used to filter by the related route assignment start date\t\t\t\t\t\t\t\t\t\t\t|\r\n| RouteAssignmentEndDateFilter \t\t\t\t\t\t| Used to filter by the related route assignment end date\t\t\t\t\t\t\t\t\t\t\t|\r\n| RelatedContainerGuidFilter\t\t\t\t\t\t| Used to filter by the related container GUID.\t\t\t\t\t\t\t\t\t\t\t\t\t\t|\r\n| RelatedOrderCombinationGroupingGuid\t\t\t\t| The GUID associated to the order combination grouping. Filterable\t\t\t\t\t\t\t\t\t|\r\n| ContainersGeoLocationLatFilter\t\t\t\t\t| Used to filter by the location latitude of the site order item\t\t\t\t\t\t\t\t\t|\r\n| ContainersGeoLocationLongFilter\t\t\t\t\t| Used to filter by the location longitude of the site order item\t\t\t\t\t\t\t\t\t|\r\n| RelatedRouteVisitGuidFilter\t\t\t\t\t\t| Used to filter by the related routevisit GUID.\t\t\t\t\t\t\t\t\t\t\t\t\t|\r\n| RouteCalloutRequestGuidFilter\t\t\t\t\t\t| Used to filter by the route callout request GUID\t\t\t\t\t\t\t\t\t\t\t\t\t|","operationId":"Order_GetCollection","consumes":["application/json"],"produces":["application/json"],"parameters":[{"name":"filter","in":"query","required":false,"type":"string"},{"name":"search","in":"query","required":false,"type":"string"},{"name":"order","in":"query","required":false,"type":"string"},{"name":"max","in":"query","required":false,"type":"integer","format":"int32"},{"name":"page","in":"query","required":false,"type":"integer","format":"int32"},{"name":"includeCount","in":"query","required":false,"type":"boolean"},{"name":"includeDeleted","in":"query","required":false,"type":"boolean"},{"name":"links","in":"query","required":false,"type":"string"},{"name":"udf","in":"query","required":false,"type":"string"}],"responses":{"200":{"description":"OK","schema":{"$ref":"#/definitions/ApiResourceResultCollection[ApiIntegratorOrderResource]"}}}},"post":{"tags":["Order"],"summary":"Create or update","description":"| Property\t\t\t\t\t\t\t\t\t\t\t| Description\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t| Required |\r\n| ------------------------------------------------- | --------------------------------------------------------------------------------------------------| -------- |\r\n| GUID\t\t\t\t\t\t\t\t\t\t\t\t| The GUID associated to the site order.\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t| No  |\r\n| RelatedSiteGuid\t\t\t\t\t\t\t\t\t| The GUID associated to the customer site of the site order.\t\t\t\t\t\t\t\t\t\t| Yes |\r\n| RelatedSiteAreaGuid\t\t\t\t\t\t\t\t| The GUID associated to the customer site area of the site order.\t\t\t\t\t\t\t\t\t| No  |\r\n| RelatedSupplierSiteForServiceGuid\t\t\t\t\t| The GUID associated to the supplier site for service of the site order.\t\t\t\t\t\t\t| No  |\r\n| RelatedSupplierSiteForTransportGuid\t\t\t\t| The GUID associated to the supplier site for transport of the site order.\t\t\t\t\t\t\t| No  |\r\n| RelatedUserSalesRepGuid\t\t\t\t\t\t\t| The GUID associated to the sales rep of the site order.\t\t\t\t\t\t\t\t\t\t\t| No  |  \r\n| RelatedServiceAgreementGuid\t\t\t\t\t\t| The GUID associated to the service agreement of the site order.\t\t\t\t\t\t\t\t\t| Yes |\r\n| OrderNumber\t\t\t\t\t\t\t\t\t\t| Used to filter the order number associated to the site order.\t\t\t\t\t\t\t\t\t\t| No  |\r\n| CustomerOrderNumber\t\t\t\t\t\t\t\t| The customer order number associated to the site order.\t\t\t\t\t\t\t\t\t\t\t| No  |\r\n| OrderedBy\t\t\t\t\t\t\t\t\t\t\t| The ordered by associated to the site order.\t\t\t\t\t\t\t\t\t\t\t\t\t\t| No  |\r\n| ProcessFrom\t\t\t\t\t\t\t\t\t\t| The process from date associated to the site order in ISO format (YYYY-MM-DD).\t\t\t\t\t| Yes |\r\n| ValidUntil\t\t\t\t\t\t\t\t\t\t| The valid until date associated to the site order in ISO format (YYYY-MM-DD).\t\t\t\t\t\t| No  |\r\n| Notes\t\t\t\t\t\t\t\t\t\t\t\t| The notes associated to the site order.\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t| No  |\r\n| DriverNotes\t\t\t\t\t\t\t\t\t\t| The driver notes associated to the site order.\t\t\t\t\t\t\t\t\t\t\t\t\t| No  |\r\n| IsCustomerOwnedEquipment\t\t\t\t\t\t\t| Is the equipment used in the site order customer owned?\t\t\t\t\t\t\t\t\t\t\t| Yes |\r\n| CompanyOutletListItem\t\t\t\t\t\t\t\t| The GUID and description of the company outlet associated to the site order.\t\t\t\t\t\t| Yes |\r\n| ServiceListItem\t\t\t\t\t\t\t\t\t| The GUID and description of the service associated to the site order.\t\t\t\t\t\t\t\t| Yes |\r\n| MaterialListItem\t\t\t\t\t\t\t\t\t| The GUID and description of the material associated to the site order.\t\t\t\t\t\t\t| Yes |\r\n| DefaultContainerTypeListItem\t\t\t\t\t\t| The GUID and description of the container type associated to the site order.\t\t\t\t\t\t| No |\r\n| PriorityListItem\t\t\t\t\t\t\t\t\t| The GUID and description of the priority associated to the site order.\t\t\t\t\t\t\t| Yes |\r\n| PaymentTypeListItem\t\t\t\t\t\t\t\t| The GUID and description of the payment type associated to the site order.\t\t\t\t\t\t| No  |\r\n| Containers[0]\t\t\t\t\t\t\t\t\t\t| The list of site order items associated to the site order.\t\t\t\t\t\t\t\t\t\t| No  |\r\n| Containers[0].Guid\t\t\t\t\t\t\t\t| The GUID associated to the site order item.\t\t\t\t\t\t\t\t\t\t\t\t\t\t| No  |\r\n| Containers[0].IsDeleted\t\t\t\t\t\t\t| Whether the site order item is deleted.\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t| No  |\r\n| Containers[0].Notes\t\t\t\t\t\t\t\t| The Notes associated to the site order item.\t\t\t\t\t\t\t\t\t\t\t\t\t\t| No  |\r\n| Containers[0].IsContainerAssignedWithoutJob \t\t| Whether the container is assigned without job.\t\t\t\t\t\t\t\t\t\t\t\t\t| Yes |\r\n| Containers[0].IsFromIncreasedOrder \t\t\t\t| Whether the container is from increased order.\t\t\t\t\t\t\t\t\t\t\t\t\t| Yes |\r\n| Containers[0].IsContainerRemovedWithoutJob \t\t| Whether the container is removed without job.\t\t\t\t\t\t\t\t\t\t\t\t\t\t| Yes |\r\n| Containers[0].IsFixLocation \t\t\t\t\t\t| Whether the container has a fixed location.\t\t\t\t\t\t\t\t\t\t\t\t\t\t| No  |\r\n| Containers[0].Geo \t\t\t\t\t\t\t\t| The Geo Location associated to the site order item.\t\t\t\t\t\t\t\t\t\t\t\t| No  |\r\n| Containers[0].Geo.Location.Lat\t\t\t\t\t| The latitude of Geo Location associated to the site order item.\t\t\t\t\t\t\t\t\t| No  |\r\n| Containers[0].Geo.Location.Long\t\t\t\t\t| The longitude of Geo Location associated to the site order item.\t\t\t\t\t\t\t\t\t| No  |\r\n| Containers[0].StartDate \t\t\t\t\t\t\t| The StartDate associated to the site order item.\t\t\t\t\t\t\t\t\t\t\t\t\t| No  |\r\n| Containers[0].EndDate\t\t\t\t\t\t\t\t| The EndDate associated to the site order item.\t\t\t\t\t\t\t\t\t\t\t\t\t| No  |\r\n| Containers[0].DateLinked\t\t\t\t\t\t    | The DateLinked associated to the site order item.\t\t\t\t\t\t\t\t\t\t\t\t\t| No  |\r\n| Containers[0].RelatedContainerGuid\t\t\t\t| The GUID associated to the container of the site order item.\t\t\t\t\t\t\t\t\t\t| No  |\r\n| Containers[0].ContainerTypeListItem\t\t\t\t| The GUID and description of the container type associated to site order item.\t\t\t\t\t\t| Yes |\r\n| Containers[0].ContainerStateListItem\t\t\t\t| The GUID and description of the site order item state associated to site order item.\t\t\t\t| Yes |\r\n| RelatedLocationDestinationGuid\t\t\t\t\t| The destination location associated to the site order. \t\t\t\t\t\t\t\t\t\t\t| Yes |\r\n| IsDeleted\t\t\t\t\t\t\t\t\t\t\t| Whether the site order is deleted.\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t| No  |\r\n| ItemRentals\t\t\t\t\t\t\t\t\t\t| The list of site order item rentals associated to the site order.\t\t\t\t\t\t\t\t\t| No  |\r\n| ItemRentals[0].RelatedPriceGuid\t\t\t\t\t| The GUID associated to the price of the site order item rental.\t\t\t\t\t\t\t\t\t| Yes |\r\n| ItemRentals[0].RelatedPriceModifierGuid\t\t\t| The GUID associated to the price modifier of the site order item rental.\t\t\t\t\t\t\t| No  |\r\n| ItemRentals[0].RelatedCostGuid\t\t\t\t\t| The GUID associated to the cost of the site order item rental.\t\t\t\t\t\t\t\t\t| No  |\r\n| ItemRentals[0].ContainerTypeListItem\t\t\t\t| The GUID and description of the container type associated to site order item rental.\t\t\t\t| Yes |\r\n| ItemRentals[0].ActionListItem\t\t\t\t\t\t| The GUID and description of the action associated to site order item rental.\t\t\t\t\t\t| Yes |\r\n| ItemRentals[0].StartDate\t\t\t\t\t\t\t| The start date associated to the site order item rental in ISO format (YYYY-MM-DD).\t\t\t\t| Yes |\r\n| ItemRentals[0].EndDate\t\t\t\t\t\t\t| The end date associated to the site order item rental in ISO format (YYYY-MM-DD).\t\t\t\t\t| No  |\r\n| ItemRentals[0].IsStartOnStartOfCycle\t\t\t\t| Start on start of cycle when site order item rental.\t\t\t\t\t\t\t\t\t\t\t\t| No  |\r\n| ItemRentals[0].IsEndOnEndOfCycle\t\t\t\t\t| End on start of cycle when site order item rental.\t\t\t\t\t\t\t\t\t\t\t\t| No  |\r\n| ItemRentals[0].Quantity\t\t\t\t\t\t\t| The quantity associated to the site order item rental.\t\t\t\t\t\t\t\t\t\t\t| No  |\r\n| ItemRentals[0].Notes\t\t\t\t\t\t\t\t| The notes associated to the site order item rental.\t\t\t\t\t\t\t\t\t\t\t\t| No  |\r\n| ItemRentals[0].IsArrears\t\t\t\t\t\t\t| Is the site order item rental in arrears?\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t| No  |\r\n| ItemRentals[0].RentalQuantityAttributeListItem\t| The GUID and description of the rental quantity attribute associated to site order item rental.\t| No  |\r\n| ItemRentals[0].IsBinOnSiteBasedOnQuantityNow\t\t| Is the bin on site are based on quantity for site order item rental?\t\t\t\t\t\t\t\t| No  |\r\n| ItemRentals[0].IsDiscount\t\t\t\t\t\t\t| Is the site order item rental discounted?\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t| No  |\r\n| ItemRentals[0].DiscountOverridePrice\t\t\t\t| The discount override price associated to the site order item rental.\t\t\t\t\t\t\t\t| No  |\r\n| ItemRentals[0].DiscountReasonListItem\t\t\t\t| The GUID and description of the discount reason associated to site order item rental.\t\t\t\t| No  |\r\n| ItemRentals[0].Guid\t\t\t\t\t\t\t\t| The GUID associated to the site order item rental.\t\t\t\t\t\t\t\t\t\t\t\t| No  |\r\n| ItemRentals[0].IsDeleted\t\t\t\t\t\t\t| Whether the site order item rental is deleted.\t\t\t\t\t\t\t\t\t\t\t\t\t| No  |\r\n| PermitRequired\t\t\t\t\t\t\t\t\t| Whether the site order has required permit.\t\t\t\t\t\t\t\t\t\t\t\t\t\t| No  |\r\n| RelatedPriceGuidFilter\t\t\t\t\t\t\t| Used to filter by the related price GUID.\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t| No  |\r\n| RelatedPriceModifierGuidFilter\t\t\t\t\t| Used to filter by the related price modifier GUID.\t\t\t\t\t\t\t\t\t\t\t\t| No  |\r\n| RelatedCostGuidFilter\t\t\t\t\t\t\t\t| Used to filter by the related cost GUID.\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t| No  |\r\n| AreaOfOriginListItem\t\t\t\t\t\t\t\t| The GUID and description of the area of origin associated to the site order.\t\t\t\t\t\t| No  |\r\n| StandingJobs\t\t\t\t\t\t\t\t\t\t| The list of standing job template associated to the site order.\t\t\t\t\t\t\t\t\t| No  |\r\n| StandingJobs[0].Guid\t\t\t\t\t\t\t\t| The GUID associated to the standing job template of site order.\t\t\t\t\t\t\t\t\t| No  |\r\n| StandingJobs[0].ActionListItem\t\t\t\t\t| The GUID and description of the action associated to site order standing job\t\t\t\t\t\t| Yes |\r\n| StandingJobs[0].ContainerTypeListItem\t\t\t\t| The GUID and description of the containertype associated to site order standing job\t\t\t\t| Yes |\r\n| StandingJobs[0].EndOnJobCompletion\t\t\t\t| Is job completion on end for standing job\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t| Yes |\r\n| StandingJobs[0].ExcludeNoBinOnSite\t\t\t\t| Exclude no bin on site for standing job\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t| Yes |\r\n| StandingJobs[0].IsNoPlannedDay\t\t\t\t\t| Is on no planned day for standing job\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t| Yes |\r\n| StandingJobs[0].PickupIntervalListItem\t\t\t| The GUID and description of the pickup interval associated to site order standing job\t\t\t\t| Yes |\r\n| StandingJobs[0].StartDate\t\t\t\t\t\t\t| The start date associated to the standing job.\t\t\t\t\t\t\t\t\t\t\t\t\t| Yes |\r\n| StandingJobs[0].EndDate\t\t\t\t\t\t\t| The end date associated to the standing job.\t\t\t\t\t\t\t\t\t\t\t\t\t\t| No  |\r\n| StandingJobs[0].CompanyOutletListItem\t\t\t\t| The GUID and description of the companyoutlet associated to site order standing job\t\t\t\t| No  |\r\n| StandingJobs[0].RelatedSiteAreaGuid\t\t\t\t| The GUID associated to the customer site area of the site order standing job.\t\t\t\t\t\t| No  |\r\n| StandingJobs[0].DayOfWeekListItem\t\t\t\t\t| The GUID and description of the day of week associated to site order standing job\t\t\t\t\t| No  |\r\n| StandingJobs[0].RelatedSysUserDriverGuid\t\t\t| The GUID associated to the sriver sysuser of the site order standing job.\t\t\t\t\t\t\t| No  |\r\n| StandingJobs[0].RelatedVehicleGuid\t\t\t\t| The GUID associated to the vehcile of the site order standing job.\t\t\t\t\t\t\t\t| No  |\r\n| StandingJobs[0].RequestedBy\t\t\t\t\t\t| Requested by details of standing job\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t| No  |\r\n| StandingJobs[0].IsDeleted\t\t\t\t\t\t\t| Whether the standing job related to the siteorder\tis deleted.\t\t\t\t\t\t\t\t\t\t| No  |\r\n| StandingJobsSiteAreaGuidFilter\t\t\t\t\t| Used to filter by the standing job site area guid.\t\t\t\t\t\t\t\t\t\t\t\t| No  |\r\n| StandingJobsSysUserDriverGuidFilter\t\t\t\t| Used to filter by the standing job sysuser driver guid.\t\t\t\t\t\t\t\t\t\t\t| No  |\r\n| StandingJobsVehicleGuidFilter\t\t\t\t\t\t| Used to filter by the standing job vehicle guid.\t\t\t\t\t\t\t\t\t\t\t\t\t| No  |\r\n| StandingJobsStartDateFilter\t\t\t\t\t\t| Used to filter by the standing job start date.\t\t\t\t\t\t\t\t\t\t\t\t\t| No  |\r\n| StandingJobsEndDateFilter\t\t\t\t\t\t\t| Used to filter by the standing job end date.\t\t\t\t\t\t\t\t\t\t\t\t\t\t| No  |\r\n| InspectionTypeListItem\t\t\t\t\t\t\t| The GUID and description of the inspection type associated to the site order.\t\t\t\t\t\t| No  |\r\n| ItemTimeStamp\t\t\t\t\t\t\t\t\t\t| The item timestamp of the site order.\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t| Yes |\r\n| RouteAssignments\t\t\t\t\t\t\t\t\t| The list of route assignments associated to the site order.\t\t\t\t\t\t\t\t\t\t| No  |\r\n| RouteAssignments[0].Guid\t\t\t\t\t\t\t| The guid associated to the route assignment.\t\t\t\t\t\t\t\t\t\t\t\t\t\t| No  |\r\n| RouteAssignments[0].ActionListItem\t\t\t\t| The GUID and description of the action associated to site order route assignment\t\t\t\t\t| Yes |\r\n| RouteAssignments[0].ContainerTypeListItem\t\t\t| The GUID and description of the containertype associated to site order route assignment\t\t\t| Yes |\r\n| RouteAssignments[0].PickupIntervalListItem\t\t| The GUID and description of the pickup interval associated to site order route assignment\t\t\t| Yes |\r\n| RouteAssignments[0].DayOfWeekListItem\t\t\t\t| The GUID and description of the day of week associated to site order route assignment\t\t\t\t| No  |\r\n| RouteAssignments[0].DayOfOccurrenceInMonthListItem| The GUID and description of the day of occurrence in month associated to site order route assignment\t| No  |\r\n| RouteAssignments[0].Position\t\t\t\t\t\t| The position associated to the routeAssignment.\t\t\t\t\t\t\t\t\t\t\t\t\t| No  |\r\n| RouteAssignments[0].StartDate\t\t\t\t\t\t| The start date associated to the route assignment in ISO format (YYYY-MM-DD).\t\t\t\t\t\t| No  |\r\n| RouteAssignments[0].EndDate\t\t\t\t\t\t| The end date associated to the route assignment in ISO format (YYYY-MM-DD).\t\t\t\t\t\t| No  |\r\n| RouteAssignments[0].RequestedBy\t\t\t\t\t| Who is the routeAssignment requested by?\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t| No  |\r\n| RouteAssignments[0].Notes\t\t\t\t\t\t\t| The notes associated to the routeAssignment.\t\t\t\t\t\t\t\t\t\t\t\t\t\t| No  |\r\n| RouteAssignments[0].MaxLiftQuantity\t\t\t\t| The max lift quantity associated to the routeAssignment.\t\t\t\t\t\t\t\t\t\t\t| No  |\r\n| RouteAssignments[0].MinLiftQuantity\t\t\t\t| The min lift quantity associated to the routeAssignment.\t\t\t\t\t\t\t\t\t\t\t| No  |\r\n| RouteAssignments[0].RequiresQuantity\t\t\t\t| Does the routeAssignment require quantity?\t\t\t\t\t\t\t\t\t\t\t\t\t\t| Yes |\r\n| RouteAssignments[0].IsGpsAutoMatchingDisabled\t\t| Is the GPS auto matching disabled for the routeAssignment?\t\t\t\t\t\t\t\t\t\t| Yes |\r\n| RouteAssignments[0].IsNoPlannedDate\t\t\t\t| Is there no planned date for the routeAssignment?\t\t\t\t\t\t\t\t\t\t\t\t\t| Yes |\r\n| RouteAssignments[0].IsNoBinOnSiteExcluded\t\t\t| Is the bin on site excluded for the routeAssignment?\t\t \t\t\t\t\t\t\t\t\t\t| Yes |\r\n| RouteAssignments[0].RelatedRouteTemplateGuid\t\t| The guid associated to the route template  to the routeAssignment.\t\t\t\t\t\t\t\t| No  |\r\n| RouteAssignments[0].RelatedSiteAreaGuid\t\t\t| The guid associated to the site area of the route assignment.\t\t\t\t\t\t\t\t\t\t| No  |\r\n| RouteAssignments[0].IsDeleted\t\t\t\t\t\t| Whether the site order route assignment is deleted.\t\t\t\t\t\t\t\t\t\t\t\t| No  |\r\n| RouteAssignments[0].Exclusions\t\t\t\t\t| The list of exclusions associated to the route assignment.\t\t\t\t\t\t\t\t\t\t| No  |\r\n| RouteAssignments[0].Exclusions[0].Guid\t\t\t\t\t\t| The guid associated to the exclusion.\t\t\t\t\t\t\t\t\t\t\t\t\t| No  |\r\n| RouteAssignments[0].Exclusions[0].ExcludeFrom\t\t\t\t\t| The exclude from date associated to the exclusion.\t\t\t\t\t\t\t\t\t| Yes |\r\n| RouteAssignments[0].Exclusions[0].ExcludeTo\t\t\t\t\t| The exclude to date associated to the exclusion.\t\t\t\t\t\t\t\t\t\t| Yes |\r\n| RouteAssignments[0].Exclusions[0].ExclusionTypeListItem\t\t| The guid and description of the exclusion type associated to the exclusion\t.\t\t| Yes |\r\n| RouteAssignments[0].Exclusions[0].ReasonListItem\t\t\t\t| The guid and description of the reason associated to the exclusion\t.\t\t\t\t| No  |\r\n| RouteAssignments[0].Exclusions[0].Notes\t\t\t\t\t\t| The notes associated to the exclusion.\t\t\t\t\t\t\t\t\t\t\t\t| No  |\r\n| RouteCalloutRequests\t\t\t\t\t\t\t\t| The list of route callout requests associated to the site order.\t\t\t\t\t\t\t\t\t| No  |\r\n| RouteCalloutRequests[0].Guid\t\t\t\t\t\t| The guid associated to the route callout request.\t\t\t\t\t\t\t\t\t\t\t\t\t| No  |\r\n| RouteCalloutRequests[0].ActionListItem\t\t\t| The GUID and description of the action associated to site order route callout request\t\t\t\t| Yes |\r\n| RouteCalloutRequests[0].OutletListItem \t\t\t| The GUID and description of the company outlet associated to site order route callout request\t\t| Yes |\r\n| RouteCalloutRequests[0].ContainerTypeListItem\t\t| The GUID and description of the containertype associated to site order route callout request\t\t| Yes |\r\n| RouteCalloutRequests[0].DateRequired\t\t\t\t| The date required of the route callout request\t\t\t\t\t\t\t\t\t\t\t\t\t| Yes |\r\n| RouteCalloutRequests[0].Notes\t\t\t\t\t\t| The notes of the route callout request\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t| No  |\r\n| RouteCalloutRequests[0].RelatedRouteVisitGuid\t\t| The guid associated to the routevisit of the route callout request.\t\t\t\t\t\t\t\t| No  |\r\n| RouteCalloutRequests[0].RequestedBy\t\t\t\t| Who requested the route callout request.\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t| Yes |\r\n| RouteCalloutRequests[0].MaxLiftQuantity\t\t\t| The max lift quantity of the route callout request.\t\t\t\t\t\t\t\t\t\t\t\t| Yes |\r\n| RouteCalloutRequests[0].IsDeleted\t\t\t\t\t| Whether the route callout request is deleted.\t\t\t\t\t\t\t\t\t\t\t\t\t\t| No  |\r\n| RouteAssignmentSiteAreaGuidFilter\t\t\t\t\t| Used to filter by the related route assignment site area GUID. \t\t\t\t\t\t\t\t\t| No  |\r\n| RouteAssignmentStartDateFilter \t\t\t\t\t| Used to filter by the related route assignment start date\t\t\t\t\t\t\t\t\t\t\t| No  |\r\n| RouteAssignmentEndDateFilter \t\t\t\t\t\t| Used to filter by the related route assignment end date\t\t\t\t\t\t\t\t\t\t\t| No  |\r\n| RelatedContainerGuidFilter\t\t\t\t\t\t| Used to filter by the related container GUID.\t\t\t\t\t\t\t\t\t\t\t\t\t\t| No  |\r\n| RelatedOrderCombinationGroupingGuid\t\t\t\t| The GUID associated to the order combination grouping. \t\t\t\t\t\t\t\t\t\t\t| No  |\r\n| ContainersGeoLocationLatFilter\t\t\t\t\t| Used to filter by the location latitude of the site order item\t\t\t\t\t\t\t\t\t| No  |\r\n| ContainersGeoLocationLongFilter\t\t\t\t\t| Used to filter by the location longitude of the site order item\t\t\t\t\t\t\t\t\t| No  |\r\n| RelatedRouteVisitGuidFilter\t\t\t\t\t\t| Used to filter by the related routevisit GUID.\t\t\t\t\t\t\t\t\t\t\t\t\t| No  |\r\n| RouteCalloutRequestGuidFilter\t\t\t\t\t\t| Used to filter by the route callout request GUID\t\t\t\t\t\t\t\t\t\t\t\t\t| No  |\r\n\r\n## Extra validations\r\n\r\n| Condition | Error message |\r\n| --------- | ------------- |\r\n| Quantity or RentalQuantityAttributeListItem are expected | Either Quantity or RentalQuantityAttributeListItem.Guid properties must be set. SiteOrderItemRental with Quantity cannot be set if RentalQuantityAttributeListItem.Guid has a value. |\r\n| Order number already exists | Failed to save/update Order because the site order that you are trying to save conflicts with an existing item. Each site order must be unique in terms of OrderNumber. |\r\n| If the given price is not in the service agreement and the actiontypes is not in rental or advance service  | Failed to save. SiteOrderItemRental with RelatedPriceGuid is not supported for SiteOrder |\r\n| If the GUID passed to AreaOfOriginListItem has a value that is not in the AreaOfOrigin table OR is deleted | Failed to save/update Order because The supplied AreaOfOrigin is not valid. The update has been rejected. Change the AreaOfOriginListItem to the Guid of a valid and undeleted AreaOfOrigin. |\r\n| If the given DefaultContainerTypeListItem is not in service | Failed to save. SiteOrder with DefaultContainerTypeListItem.GUID cannot be set if DefaultContainerType are not linked to Service. |\r\n| If related site area is deleted | Failed to save/update SiteOrder because the supplied CustomerSiteArea is not valid. The update has been rejected. Change the RelatedSiteAreaGuid to the Guid of a valid and undeleted CustomerSiteArea |\r\n| If RelatedSiteAreaGuid is not relevant | The site area and site do not match. The resource could not be created/updated. Ensure that RelatedSiteAreaGuid references an site area of RelatedSiteGuid |\r\n| If siteorder service is not IsScheduled and service is not IsCollection with IsStandingOrder. | StandingJobs is not supported. Primary service in ServiceAgreement should have IsScheduled or IsCollection set to true. If the service IsCollection set to true then IsStandingOrder also need to be set true. |\r\n| If Standing job Guid is set on order creation | StandingJobs has the property Guid with value of is not supported. The given StandingJobs.Guid is linked to another siteorder |\r\n| If site area is not linked with customer site | Failed to save. StandingJobs with RelatedSiteAreaGuid of guid is not supported for SiteOrder StandingJobs. The given customer site area is not linked to the customer site of site order. |\r\n| If site area is deleted | Failed to save/update SiteOrder because the supplied CustomerSiteArea is not valid. The update has been rejected. Change the StandingJobs.RelatedSiteAreaGuid to the Guid of a valid and undeleted CustomerSiteArea |\r\n| If Action List is not provided in the service agreement price, the action type not of CreateJobFrom, the action type not of CreateJobFrom,CreateContainerJobFrom when service IsCollection and action type in StartOfCycle,EndOfCycle| Failed to save. StandingJobs with ActionListItem.Guid of guid is not supported for SiteOrder StandingJobs. The given action is not linked to the service agreement price or the action does not belongs to action type of CreateJobFrom and CreateContainerJobFrom(when the service have IsCollection is enabled) or the actions action type should have enabled or disabled both StartOfCycle,EndOfCycle |\r\n| If ContainerType List is not provided in the service agreement price action| Failed to save. StandingJobs with ContainerTypeListItem.Guid of guid is not supported for SiteOrder StandingJobs. The given container type is not linked to the service agreement price |\r\n| If sysuser is not belong to order companyoutlet or standingjob companyoutlet and staff type is not driver | Failed to save. StandingJobs with RelatedSysUserDriverGuid of guid is not supported for SiteOrder StandingJobs. The given Sysuser must have staff type as Driver and  Sysuser must belongs to order companyoutlet or standingjob companyoutlet |\r\n| If vehicle is not belong to order companyoutlet or standingjob companyoutlet and vehicle containertype is not supported | Failed to save. StandingJobs with RelatedVehicleGuid of guid is not supported for SiteOrder StandingJobs. The vehicle must be linked with container type and vehicle must belongs to order companyoutlet or standingjob companyoutlet |\r\n| If DayOfWeekListItem is provided when IsNoPlannedDay set to true | Failed to save. StandingJobs with DayOfWeekListItem cannot be set if IsNoPlannedDay is set to true. |\r\n| If siteorder service is not IsCollection | RouteAssignments is not supported. Primary service in ServiceAgreement should have iscollection set to true. |\r\n| If RouteAssignment Guid is set on order creation | RouteAssignments has the property Guid with value of is not supported. The given RouteAssignments.Guid is linked to another siteorder |\r\n| If site area is not linked with customer site | Failed to save. RouteAssignments with RelatedSiteAreaGuid of guid is not supported for SiteOrder Route Assignment. The given customer site area is not linked to the customer site of site order. |\r\n| If site area is deleted | Failed to save/update SiteOrder because the supplied CustomerSiteArea is not valid. The update has been rejected. Change the RouteAssignments.RelatedSiteAreaGuid to the Guid of a valid and undeleted CustomerSiteArea |\r\n| If the given action does not have action type of Assign To Round | Failed to save. ActionListItem.Guid is not supported for Route Assignment.The given actions should be linked with action type AssignToRound. |\r\n| If the given container type is not priced in the service agreement | Failed to save. ContainerTypeListItem.Guid is not supported for Route Assignment.The given container type should be in service agreement price. |\r\n| If DayOfWeekListItem is set when IsNoPlannedDate is true | Failed to save. DayOfWeekListItem cannot be set when IsNoPlannedDate is set to true |\r\n| If startDate is set when IsNoPlannedDate is true | Failed to save. StartDate cannot be set when IsNoPlannedDate is set to true |\r\n| If DayOfWeekListItem is null or empty when IsNoPlannedDate is false | Failed to save. DayOfWeekListItem cannot be null when IsNoPlannedDate is set to false |\r\n| If startDate is null or empty when IsNoPlannedDate is false | Failed to save. StartDate cannot be null when IsNoPlannedDate is set to false |\r\n| If position is set to 0 and relatedRouteTemplateGuid has a value | Failed to save. Position cannot be set to zero when relatedRouteTemplateGuid has a value |\r\n| If position has a value and relatedRouteTemplateGuid is null | Failed to save. Position cannot have a value if relatedRouteTemplateGuid is set to null |\r\n| If the company outlet passed is not related to the customer site | The Company Outlet and Customer Site do not match. The resource could not be created/updated. Ensure that CompanyOutletListItem.Guid references a Company Outlet of RelatedSiteGuid |\r\n| If the RouteAssignment is deleted in an order | Failed to save/update SiteOrder because the supplied RouteAssignment is not valid. The update has been rejected. Change the RouteAssignments to the Guid of a valid undeleted RouteAssignment |\r\n| If Containers[0].Guid is not null on insert | Containers.Guid is a read-only property on insert |\r\n| If Containers[0].RelatedContainerGuid provided has a non-existent or deleted value | Failed to save/update SiteOrder because the supplied RelatedContainerGuid is not valid. The update has been rejected. Change the Containers[0].RelatedContainerGuid to the Guid of a valid and undeleted RelatedContainerGuid |\r\n| If Containers[0].ContainerTypeListItem.Guid is null | The mandatory property Containers[0].ContainerTypeListItem.Guid has a null value. The request could not be processed. Supply a value for the Containers[0].ContainerTypeListItem.Guid property of the submitted resource. |\r\n| If Containers[0].ContainerStateListItem.Guid provided is null | The mandatory property Containers[0].ContainerStateListItem.Guid has a null value. The request could not be processed. Supply a value for the Containers[0].ContainerStateListItem.Guid property of the submitted resource. |\r\n| If Containers[0].ContainerTypeListItem.Guid provided has a non-existent or deleted value | Failed to save/update SiteOrder because the supplied Containers[0].ContainerTypeListItem.Guid is not valid. The update has been rejected. Change the Containers[0].ContainerTypeListItem.Guid to the Guid of a valid and undeleted Containers[0].ContainerTypeListItem.Guid |\r\n| If Containers[0].ContainerStateListItem.Guid provided has a non-existent or deleted value | Failed to save/update SiteOrder because the supplied  Containers[0].ContainerStateListItem.Guid is not valid. The update has been rejected. Change the Containers[0].ContainerStateListItem.Guid to the Guid of a valid and undeleted Containers[0].ContainerStateListItem.Guid |\r\n| If Containers[0].ContainerStateListItem.Guid provided has an inactive value | Failed to save/update SiteOrder because the supplied  Containers[0].ContainerStateListItem.Guid is not valid. The update has been rejected. Change the Containers[0].ContainerStateListItem.Guid to the Guid of an active Containers[0].ContainerStateListItem.Guid |\r\n| If RouteAssignments[0].Exclusions[0].ExclusionTypeListItem.Guid provided with a mark as Deleted Exclusion Type | The provided  RouteAssignments[0].Exclusions[0].ExclusionTypeListItem is deleted. Could not update the resource. Please check the relevant list end point for the available options. |\r\n| If RouteAssignments[0].Exclusions[0].ReasonListItem.Guid provided with a mark as Deleted Reason | The provided  RouteAssignments[0].Exclusions[0].ReasonListItem is deleted. Could not update the resource. Please check the relevant list end point for the available options. |\r\n| If RouteAssignments[0].Exclusions[0].ReasonListItem is not in one of the following reason categories: Exclusions |  RouteAssignments[0].Exclusions[0].ReasonListItem must be in one of the following reason categories: Exclusions. |\r\n| If ValidUntil is not null while creating rental orders | Attempt to create Order in a closed state. Could not create the Order. Set the ValidUntil date to null when creating an order then make a separate call to close the Order by setting the ValidUntil date |\r\n| If Valid Until date is provided on update and rentals/invoice is not created | Issue closing the order. Could not update the order and close it - {message} |\r\n| If IsDeleted is true on insert | An attempt has been made to set IsDeleted. The request could not be processed. Ensure that IsDeleted has default value |\r\n| If the value for IsDeleted is changed on update | IsDeleted is a read-only property |\r\n| If Containers.IsDeleted is true on insert | An attempt has been made to set Containers.IsDeleted. The request could not be processed. Ensure that Containers.IsDeleted has default value |\r\n| If the value for Containers.IsDeleted is changed on update | Containers.IsDeleted is a read-only property |\r\n| If ItemRentals.IsDeleted is true on insert | An attempt has been made to set ItemRentals.IsDeleted. The request could not be processed. Ensure that ItemRentals.IsDeleted has default value |\r\n| If the value for ItemRentals.IsDeleted is changed on update | ItemRentals.IsDeleted is a read-only property |\r\n| If the GUID passed to InspectionTypeListItem has a value that is deleted | The provided InspectionTypeListItem is deleted. Could not update the resource. Please check the relevant list end point for the available options. |\r\n| If RouteCalloutRequests[0].MaxLiftQuantity is a negative number |  Failed to save/update MaxLiftQuantity because value must be non negative. |\r\n","operationId":"Order_Create","consumes":["application/json"],"produces":["application/json"],"parameters":[{"in":"body","required":true,"schema":{"$ref":"#/definitions/ApiResourceId"}}],"responses":{"200":{"description":"OK","schema":{"$ref":"#/definitions/ApiResourceId"}}}}},"/accounting/orderCombinationGroupings/changes":{"get":{"tags":["OrderCombinationGrouping"],"summary":"Retrieve changes","description":"| Property\t\t\t\t\t\t\t| Description\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t          |\r\n| --------------------------------- |-------------------------------------------------------------------------------- |\r\n| GUID\t\t\t\t\t\t\t\t| The guid associated to the order combination grouping.          \t      \t\t  |\r\n| RelatedOrderCombinationGroupGuid\t| The related site order combination group guid. Filterable\t\t\t\t\t\t  | \t \r\n| RelatedSiteGuid\t\t\t\t\t| The related site guid. Filterable\t\t\t\t\t\t\t\t\t\t\t\t  | \r\n| RelatedInvoiceBatchGuid\t\t\t| The related invoice batch guid. Filterable\t\t\t\t\t\t\t\t      | \r\n| RelatedPaymentGuid\t\t\t\t| The related payment guid. Filterable \t\t\t\t\t\t\t\t\t\t      |\r\n| IsDeleted\t\t\t\t\t\t\t| Whether the order combination grouping is deleted \t\t\t\t\t\t\t  |","operationId":"OrderCombinationGrouping_GetChanges","consumes":["application/json"],"produces":["application/json"],"parameters":[{"name":"since","in":"query","required":false,"type":"string"},{"name":"cursor","in":"query","required":false,"type":"string"},{"name":"links","in":"query","required":false,"type":"string"}],"responses":{"200":{"description":"OK","schema":{"$ref":"#/definitions/ApiResourceChanges[ApiIntegratorOrderCombinationGroupingResource]"}}}}},"/accounting/orderCombinationGroupings/{guid}":{"get":{"tags":["OrderCombinationGrouping"],"summary":"Find with GUID","description":"| Property\t\t\t\t\t\t\t| Description\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t          |\r\n| --------------------------------- |-------------------------------------------------------------------------------- |\r\n| GUID\t\t\t\t\t\t\t\t| The guid associated to the order combination grouping.          \t      \t\t  |\r\n| RelatedOrderCombinationGroupGuid\t| The related site order combination group guid. Filterable\t\t\t\t\t\t  | \t \r\n| RelatedSiteGuid\t\t\t\t\t| The related site guid. Filterable\t\t\t\t\t\t\t\t\t\t\t\t  | \r\n| RelatedInvoiceBatchGuid\t\t\t| The related invoice batch guid. Filterable\t\t\t\t\t\t\t\t      | \r\n| RelatedPaymentGuid\t\t\t\t| The related payment guid. Filterable \t\t\t\t\t\t\t\t\t\t      |\r\n| IsDeleted\t\t\t\t\t\t\t| Whether the order combination grouping is deleted \t\t\t\t\t\t\t  |","operationId":"OrderCombinationGrouping_Get","consumes":["application/json"],"produces":["application/json"],"parameters":[{"name":"guid","in":"path","required":true,"type":"string","format":"uuid"},{"name":"links","in":"query","required":false,"type":"string"},{"name":"include","in":"query","required":false,"type":"string"},{"name":"expand","in":"query","required":false,"type":"string"},{"name":"udf","in":"query","required":false,"type":"string"}],"responses":{"200":{"description":"OK","schema":{"$ref":"#/definitions/ApiResourceResultEntity[ApiIntegratorOrderCombinationGroupingResource]"}}}}},"/accounting/orderCombinationGroupings":{"get":{"tags":["OrderCombinationGrouping"],"summary":"Find with Filters","description":"| Property\t\t\t\t\t\t\t| Description\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t          |\r\n| --------------------------------- |-------------------------------------------------------------------------------- |\r\n| GUID\t\t\t\t\t\t\t\t| The guid associated to the order combination grouping.          \t      \t\t  |\r\n| RelatedOrderCombinationGroupGuid\t| The related site order combination group guid. Filterable\t\t\t\t\t\t  | \t \r\n| RelatedSiteGuid\t\t\t\t\t| The related site guid. Filterable\t\t\t\t\t\t\t\t\t\t\t\t  | \r\n| RelatedInvoiceBatchGuid\t\t\t| The related invoice batch guid. Filterable\t\t\t\t\t\t\t\t      | \r\n| RelatedPaymentGuid\t\t\t\t| The related payment guid. Filterable \t\t\t\t\t\t\t\t\t\t      |\r\n| IsDeleted\t\t\t\t\t\t\t| Whether the order combination grouping is deleted \t\t\t\t\t\t\t  |","operationId":"OrderCombinationGrouping_GetCollection","consumes":["application/json"],"produces":["application/json"],"parameters":[{"name":"filter","in":"query","required":false,"type":"string"},{"name":"search","in":"query","required":false,"type":"string"},{"name":"order","in":"query","required":false,"type":"string"},{"name":"max","in":"query","required":false,"type":"integer","format":"int32"},{"name":"page","in":"query","required":false,"type":"integer","format":"int32"},{"name":"includeCount","in":"query","required":false,"type":"boolean"},{"name":"includeDeleted","in":"query","required":false,"type":"boolean"},{"name":"links","in":"query","required":false,"type":"string"},{"name":"udf","in":"query","required":false,"type":"string"}],"responses":{"200":{"description":"OK","schema":{"$ref":"#/definitions/ApiResourceResultCollection[ApiIntegratorOrderCombinationGroupingResource]"}}}},"post":{"tags":["OrderCombinationGrouping"],"summary":"Create or update","description":"| Property\t\t\t\t\t\t\t| Description\t\t\t\t\t\t\t\t\t\t\t\t| Required |\r\n| --------------------------------- |-----------------------------------------------------------|--------- |\r\n| GUID\t\t\t\t\t\t\t\t| The guid associated to the order combination grouping.    |\tNo     |\r\n| RelatedOrderCombinationGroupGuid\t| The related site order combination group guid. Filterable\t|\tYes\t   |\r\n| RelatedSiteGuid\t\t\t\t\t| The related site guid. Filterable\t\t\t\t\t\t\t|\tYes\t   |\r\n| RelatedInvoiceBatchGuid\t\t\t| The related invoice batch guid. Filterable\t\t\t\t|\tNo\t   |\r\n| RelatedPaymentGuid\t\t\t\t| The related payment guid. Filterable \t\t\t\t\t\t|\tNo\t   |\r\n| IsDeleted\t\t\t\t\t\t\t| Whether the order combination grouping is deleted \t\t|\tNo\t   |\r\n\r\n## Extra validations\r\n\r\n| Condition | Error message |\r\n| --------- | ------------- |\r\n| If RelatedOrderCombinationGroupGuid is null | The mandatory property RelatedOrderCombinationGroupGuid has a null value. The request could not be processed. Supply a value for the RelatedOrderCombinationGroupGuid property of the submitted resource. |\r\n| If RelatedSiteGuid is null\t\t\t\t  | The mandatory property RelatedSiteGuid has a null value. The request could not be processed. Supply a value for the RelatedSiteGuid property of the submitted resource. |\r\n| If IsDeleted is true\t\t\t\t\t\t  | IsDeleted is TRUE. Could not process the request. Resources can not be deleted via the REST API. |","operationId":"OrderCombinationGrouping_Create","consumes":["application/json"],"produces":["application/json"],"parameters":[{"in":"body","required":true,"schema":{"$ref":"#/definitions/ApiResourceId"}}],"responses":{"200":{"description":"OK","schema":{"$ref":"#/definitions/ApiResourceId"}}}}},"/lists/outlets/{guid}":{"get":{"tags":["Outlet"],"summary":"Find with GUID","description":"| Property                  | Description                                                              |\r\n| ------------------------- | ------------------------------------------------------------------------ |\r\n| GUID                      | The GUID associated to the outlet                                        |\r\n| Description               | The description of the outlet                                            |\r\n| IsDeleted                 | Whether the outlet is deleted\t\t \t \t\t\t\t\t\t\t\t   |\r\n| AbbreviatedDescription    | The abbreviated description of the outlet                                |\r\n| AnalysisCode              | The analysis code of the outlet                                          |\r\n| CompanyListItem           | The GUID and description of the company                                  |\r\n| OutletTypeListItem        | The GUID and description of the outlet type (various values)             |\r\n| Address                   | The address object of the outlet                                         |\r\n| Address.HouseNumber       | The house number of the address object of the outlet                     |\r\n| Address.Address1          | The Address1 of the address object of the outlet                         |\r\n| Address.Address2          | The Address2 of the address object of the outlet                         |\r\n| Address.Address3          | The Address3 of the address object of the outlet                         |\r\n| Address.Address4          | The Address4 of the address object of the outlet                         |\r\n| Address.Address5          | The Address5 of the address object of the outlet                         |\r\n| Address.Postcode          | The Postcode of the address object of the outlet                         |    \r\n| DepartmentListItems\t\t| The GUID and description of departments associated to the outlet\t\t   |\r\n| VATRegistrationNumber     | The VAT Registration Number of the outlet\t\t\t\t\t\t\t       |\r\n| RelatedLocationGuid       | The RelatedLocationGuid of the outlet. Filterable\t\t\t\t\t\t   |\r\n| AcceptedMaterials[]\t\t\t\t\t| The materials accepted of the outlet\t\t\t\t\t\t\t\t|\r\n| AcceptedMaterials[].MaterialListItem\t| The materialListItem of the materials accepted for the outlet\t\t|\r\n| AcceptedMaterials[].WarnOnMinimumLoad\t| The WarnOnMinimumLoad of the materials accepted for the outlet\t|\r\n| AcceptedMaterials[].MinimumLoadWeight\t| The MinimumLoadWeight of the materials accepted for the outlet\t|\r\n| AcceptedMaterials[].IsDeleted\t     \t| Whether the materials accepted for the outlet is deleted\t\t\t|\r\n| AcceptedMaterials[].GUID\t\t     \t| The GUID of the materials accepted for the outlet\t\t\t\t\t|\r\n| AnalysisCodes\t\t\t\t| The list of company outlet analysis codes associated to the outlet.\t\t\t|\r\n| AnalysisCodes[0].Guid\t\t| The guid associated to the company outlet analysis code.\t\t\t\t\t\t|\r\n| AnalysisCodes[0].Description\t\t| The Description of the company outlet analysis code.\t\t\t\t\t|\r\n| AnalysisCodes[0].IsDeleted\t\t| Whether the company outlet analysis code is deleted.\t\t\t\t\t|","operationId":"Outlet_Get","consumes":["application/json"],"produces":["application/json"],"parameters":[{"name":"guid","in":"path","required":true,"type":"string","format":"uuid"},{"name":"links","in":"query","required":false,"type":"string"},{"name":"include","in":"query","required":false,"type":"string"},{"name":"expand","in":"query","required":false,"type":"string"},{"name":"udf","in":"query","required":false,"type":"string"}],"responses":{"200":{"description":"OK","schema":{"$ref":"#/definitions/ApiResourceResultEntity[ApiIntegratorCompanyOutletResource]"}}}}},"/lists/outlets":{"get":{"tags":["Outlet"],"summary":"Find with Filters","description":"| Property                  | Description                                                              |\r\n| ------------------------- | ------------------------------------------------------------------------ |\r\n| GUID                      | The GUID associated to the outlet                                        |\r\n| Description               | The description of the outlet                                            |\r\n| IsDeleted                 | Whether the outlet is deleted\t\t \t \t\t\t\t\t\t\t\t   |\r\n| AbbreviatedDescription    | The abbreviated description of the outlet                                |\r\n| AnalysisCode              | The analysis code of the outlet                                          |\r\n| CompanyListItem           | The GUID and description of the company                                  |\r\n| OutletTypeListItem        | The GUID and description of the outlet type (various values)             |\r\n| Address                   | The address object of the outlet                                         |\r\n| Address.HouseNumber       | The house number of the address object of the outlet                     |\r\n| Address.Address1          | The Address1 of the address object of the outlet                         |\r\n| Address.Address2          | The Address2 of the address object of the outlet                         |\r\n| Address.Address3          | The Address3 of the address object of the outlet                         |\r\n| Address.Address4          | The Address4 of the address object of the outlet                         |\r\n| Address.Address5          | The Address5 of the address object of the outlet                         |\r\n| Address.Postcode          | The Postcode of the address object of the outlet                         |    \r\n| DepartmentListItems\t\t| The GUID and description of departments associated to the outlet\t\t   |\r\n| VATRegistrationNumber     | The VAT Registration Number of the outlet\t\t\t\t\t\t\t       |\r\n| RelatedLocationGuid       | The RelatedLocationGuid of the outlet. Filterable\t\t\t\t\t\t   |\r\n| AcceptedMaterials[]\t\t\t\t\t| The materials accepted of the outlet\t\t\t\t\t\t\t\t|\r\n| AcceptedMaterials[].MaterialListItem\t| The materialListItem of the materials accepted for the outlet\t\t|\r\n| AcceptedMaterials[].WarnOnMinimumLoad\t| The WarnOnMinimumLoad of the materials accepted for the outlet\t|\r\n| AcceptedMaterials[].MinimumLoadWeight\t| The MinimumLoadWeight of the materials accepted for the outlet\t|\r\n| AcceptedMaterials[].IsDeleted\t     \t| Whether the materials accepted for the outlet is deleted\t\t\t|\r\n| AcceptedMaterials[].GUID\t\t     \t| The GUID of the materials accepted for the outlet\t\t\t\t\t|\r\n| AnalysisCodes\t\t\t\t| The list of company outlet analysis codes associated to the outlet.\t\t\t|\r\n| AnalysisCodes[0].Guid\t\t| The guid associated to the company outlet analysis code.\t\t\t\t\t\t|\r\n| AnalysisCodes[0].Description\t\t| The Description of the company outlet analysis code.\t\t\t\t\t|\r\n| AnalysisCodes[0].IsDeleted\t\t| Whether the company outlet analysis code is deleted.\t\t\t\t\t|","operationId":"Outlet_GetCollection","consumes":["application/json"],"produces":["application/json"],"parameters":[{"name":"filter","in":"query","required":false,"type":"string"},{"name":"search","in":"query","required":false,"type":"string"},{"name":"order","in":"query","required":false,"type":"string"},{"name":"max","in":"query","required":false,"type":"integer","format":"int32"},{"name":"page","in":"query","required":false,"type":"integer","format":"int32"},{"name":"includeCount","in":"query","required":false,"type":"boolean"},{"name":"includeDeleted","in":"query","required":false,"type":"boolean"},{"name":"links","in":"query","required":false,"type":"string"},{"name":"udf","in":"query","required":false,"type":"string"}],"responses":{"200":{"description":"OK","schema":{"$ref":"#/definitions/ApiResourceResultCollection[ApiIntegratorCompanyOutletResource]"}}}}},"/lists/outletTypes/{guid}":{"get":{"tags":["OutletType"],"summary":"Find with GUID","description":"| Property                  | Description                                                              |\r\n| ------------------------- | ------------------------------------------------------------------------ |\r\n| GUID                      | The GUID associated to the outlet type                              |\r\n| Description               | The description of the outlet type                                  |\r\n| IsDeleted                 | Whether the outlet type is deleted\t\t \t\t\t\t\t\t\t|","operationId":"OutletType_Get","consumes":["application/json"],"produces":["application/json"],"parameters":[{"name":"guid","in":"path","required":true,"type":"string","format":"uuid"},{"name":"links","in":"query","required":false,"type":"string"},{"name":"include","in":"query","required":false,"type":"string"},{"name":"expand","in":"query","required":false,"type":"string"},{"name":"udf","in":"query","required":false,"type":"string"}],"responses":{"200":{"description":"OK","schema":{"$ref":"#/definitions/ApiResourceResultEntity[ApiIntegratorOutletTypeResource]"}}}}},"/lists/outletTypes":{"get":{"tags":["OutletType"],"summary":"Find with Filters","description":"| Property                  | Description                                                              |\r\n| ------------------------- | ------------------------------------------------------------------------ |\r\n| GUID                      | The GUID associated to the outlet type                              |\r\n| Description               | The description of the outlet type                                  |\r\n| IsDeleted                 | Whether the outlet type is deleted\t\t \t\t\t\t\t\t\t|","operationId":"OutletType_GetCollection","consumes":["application/json"],"produces":["application/json"],"parameters":[{"name":"filter","in":"query","required":false,"type":"string"},{"name":"search","in":"query","required":false,"type":"string"},{"name":"order","in":"query","required":false,"type":"string"},{"name":"max","in":"query","required":false,"type":"integer","format":"int32"},{"name":"page","in":"query","required":false,"type":"integer","format":"int32"},{"name":"includeCount","in":"query","required":false,"type":"boolean"},{"name":"includeDeleted","in":"query","required":false,"type":"boolean"},{"name":"links","in":"query","required":false,"type":"string"},{"name":"udf","in":"query","required":false,"type":"string"}],"responses":{"200":{"description":"OK","schema":{"$ref":"#/definitions/ApiResourceResultCollection[ApiIntegratorOutletTypeResource]"}}}}},"/lists/parcelBoundaries/{guid}":{"get":{"tags":["ParcelBoundary"],"summary":"Find with GUID","description":"| Property                  | Description                                                                 |\r\n| ------------------------- | --------------------------------------------------------------------------- |\r\n| GUID                      | The GUID associated to the parcel boundary                                  |\r\n| ParcelNo\t                | The value associated to the parcel number                                   |\r\n| GeoJSON                   | A coordinates polygon which outlines the coordinates of the parcel boundary |","operationId":"ParcelBoundary_Get","consumes":["application/json"],"produces":["application/json"],"parameters":[{"name":"guid","in":"path","required":true,"type":"string","format":"uuid"},{"name":"links","in":"query","required":false,"type":"string"},{"name":"include","in":"query","required":false,"type":"string"},{"name":"expand","in":"query","required":false,"type":"string"},{"name":"udf","in":"query","required":false,"type":"string"}],"responses":{"200":{"description":"OK","schema":{"$ref":"#/definitions/ApiResourceResultEntity[ApiIntegratorParcelBoundaryResource]"}}}}},"/lists/parcelBoundaries":{"get":{"tags":["ParcelBoundary"],"summary":"Find with Filters","description":"| Property                  | Description                                                                 |\r\n| ------------------------- | --------------------------------------------------------------------------- |\r\n| GUID                      | The GUID associated to the parcel boundary                                  |\r\n| ParcelNo\t                | The value associated to the parcel number                                   |\r\n| GeoJSON                   | A coordinates polygon which outlines the coordinates of the parcel boundary |","operationId":"ParcelBoundary_GetCollection","consumes":["application/json"],"produces":["application/json"],"parameters":[{"name":"filter","in":"query","required":false,"type":"string"},{"name":"search","in":"query","required":false,"type":"string"},{"name":"order","in":"query","required":false,"type":"string"},{"name":"max","in":"query","required":false,"type":"integer","format":"int32"},{"name":"page","in":"query","required":false,"type":"integer","format":"int32"},{"name":"includeCount","in":"query","required":false,"type":"boolean"},{"name":"includeDeleted","in":"query","required":false,"type":"boolean"},{"name":"links","in":"query","required":false,"type":"string"},{"name":"udf","in":"query","required":false,"type":"string"}],"responses":{"200":{"description":"OK","schema":{"$ref":"#/definitions/ApiResourceResultCollection[ApiIntegratorParcelBoundaryResource]"}}}}},"/accounting/payments/changes":{"get":{"tags":["Payment"],"summary":"Retrieve changes","description":"| Property       | Description                                                  |\r\n| -------------- | ------------------------------------------------------------ |\r\n| GUID                 | The GUID associated to the payment. |\r\n| RelatedCustomerGuid  | The GUID associated to the customer of the payment. | \r\n| PaymentTypeListItem  | The GUID and description of the payment type.          |\r\n| PaymentPointListItem | The GUID and description of the payment point.         |\r\n| Amount               | The amount associated to the payment. |\r\n| Reference            | The reference associated to the payment. |\r\n| EndToEndReference    | The end to end reference associated to the payment. |\r\n| Notes\t\t\t\t   | The Notes associated to the payment. |\r\n| IsBad\t\t\t\t   | The IsBad associated to the payment. |\r\n| DateBad\t\t\t   | The bad date associated to the payment. |\r\n| DateBadExported      | The bad date exported associated to the payment. |\r\n| DateCleared\t\t   | The cleared date associated to the payment. |\r\n| DateExported\t\t   | The exported date associated to the payment. |\r\n| DateProcessed\t\t   | The processed date associated to the payment. |\r\n| DateInput\t\t\t   | The input date associated to the payment. |\r\n| DateReceived\t\t   | The received date associated to the payment. |\r\n| IsAutoAllocated\t   | Whether the payment is auto allocated, null by default. |\r\n| AccountingPeriodListItem | The GUID and description of the accounting period of the payment. |\r\n| Allocations\t\t   | The list of allocations associated to the payment. |\r\n| Allocations[0].Guid   | The GUID associated to the allocation. |\r\n| Allocations[0].Amount   | The Amount associated to the allocation. |\r\n| Allocations[0].DateInput   | The DateInput associated to the allocation. |\r\n| Allocations[0].AccountingPeriodListItem | The GUID and descriptopn of the accounting period associated to the allocation. |\r\n| Allocations[0].RelatedInvoiceGuid | The GUID associated to the invoice of the allocation. |\r\n| Deallocations\t\t   | The list of deallocations associated to the payment. |\r\n| Deallocations[0].Guid   | The GUID associated to the deallocation. |\r\n| Deallocations[0].Amount   | The amount associated to the deallocation. |\r\n| Deallocations[0].DateInput   | The date input associated to the deallocation. |\r\n| Deallocations[0].DateDeallocated   | The date deallocated associated to the deallocation. |\r\n| Deallocations[0].AllocationAccountingPeriodListItem | The GUID and descriptopn of the allocation accounting period associated to the deallocation. |\r\n| Deallocations[0].DeallocationAccountingPeriodListItem | The GUID and descriptopn of the deallocation accounting period associated to the deallocation. |\r\n| Deallocations[0].RelatedInvoiceGuid | The GUID associated to the invoice of the deallocation. |\r\n| Deallocations[0].RelatedUserDeallocatedByGuid | The GUID associated to the sysuser of the deallocation. |\r\n| RelatedInvoiceGuidFilter | Used to filter by the related invoice GUID. |\r\n| RelatedJobGuids\t\t   | The list of job GUIDs associated to the payment. |\r\n| RelatedJobGuids[0].RelatedJobGuid   | The GUID associated to the job. |\r\n| AccountingPeriodBadListItem | The GUID and description of the bad accounting period of the payment. |\r\n| ReasonBadListItem | The GUID and description of the bad reason of the payment. |\r\n| PaymentTransactions | The list of Payment Transactions associated to the payment. |\r\n| PaymentTransactions[0].Guid\t\t\t\t| The guid associated to the payment transaction. |\r\n| PaymentTransactions[0].IsDeleted\t\t\t| Whether the payment transaction is deleted. |\r\n| PaymentTransactions[0].CardType\t\t\t| The CardType associated to the payment transaction. |\r\n| PaymentTransactions[0].MaskedCardNumber\t| The MaskedCardNumber associated to the payment transaction. |\r\n| PaymentTransactions[0].DateReceived\t\t| The DateReceived associated to the payment transaction. |\r\n| PaymentTransactions[0].PaymentReference\t| The PaymentReference associated to the payment transaction. |\r\n| PaymentTransactions[0].Reference\t\t\t| The Reference associated to the payment transaction. |\r\n| PaymentTransactions[0].PaymentProvider\t| The PaymentProvider associated to the payment transaction. |\r\n| PaymentTransactions[0].ResultMessage\t\t| The ResultMessage associated to the payment transaction. |\r\n| PaymentTransactions[0].Notes\t\t\t\t| The Notes associated to the payment transaction. |\r\n| PaymentTransactions[0].ResponseCode\t\t| The ResponseCode associated to the payment transaction. |\r\n| PaymentTransactions[0].CurrencyCode\t\t| The CurrencyCode associated to the payment transaction. |\r\n| PaymentTransactions[0].Amount\t\t\t\t| The Amount associated to the payment transaction. |\r\n| PaymentTransactions[0].ContactGuid\t\t| The Guid associated to the contact of the payment transaction. |\r\n| PaymentTransactions[0].AmountRefundable   | The AmountRefundable associated to the payment transaction. |\r\n| PaymentTransactions[0].ReasonListItem     | The GUID and description of the reason of the payment transaction. |\r\n| PaymentTransactions[0].PaymentProviderListItem  | The GUID and description of the Payment Provider of the payment transaction. |\r\n| PaymentTransactions[0].PaymentPointListItem     | The GUID and description of the Payment Point of the payment transaction. |\r\n| PaymentTransactions[0].TransactionStatusListItem     | The GUID and description of the Transaction Status of the payment transaction. |\r\n| PaymentTransactions[0].PaymentTypeListItem     | The GUID and description of the Payment Type of the payment transaction. |\r\n| IsRefund\t\t\t\t   | The IsRefund associated to the payment. |\r\n| TransactionPaymentReferenceFilter | Used to filter by Payment Reference of the Payment Transaction. |\r\n| TransactionReferenceFilter | Used to filter by Reference of the Payment Transaction. |","operationId":"Payment_GetChanges","consumes":["application/json"],"produces":["application/json"],"parameters":[{"name":"since","in":"query","required":false,"type":"string"},{"name":"cursor","in":"query","required":false,"type":"string"},{"name":"links","in":"query","required":false,"type":"string"}],"responses":{"200":{"description":"OK","schema":{"$ref":"#/definitions/ApiResourceChanges[ApiIntegratorPaymentResource]"}}}}},"/accounting/payments/{guid}":{"get":{"tags":["Payment"],"summary":"Find with GUID","description":"| Property       | Description                                                  |\r\n| -------------- | ------------------------------------------------------------ |\r\n| GUID                 | The GUID associated to the payment. |\r\n| RelatedCustomerGuid  | The GUID associated to the customer of the payment. | \r\n| PaymentTypeListItem  | The GUID and description of the payment type.          |\r\n| PaymentPointListItem | The GUID and description of the payment point.         |\r\n| Amount               | The amount associated to the payment. |\r\n| Reference            | The reference associated to the payment. |\r\n| EndToEndReference    | The end to end reference associated to the payment. |\r\n| Notes\t\t\t\t   | The Notes associated to the payment. |\r\n| IsBad\t\t\t\t   | The IsBad associated to the payment. |\r\n| DateBad\t\t\t   | The bad date associated to the payment. |\r\n| DateBadExported      | The bad date exported associated to the payment. |\r\n| DateCleared\t\t   | The cleared date associated to the payment. |\r\n| DateExported\t\t   | The exported date associated to the payment. |\r\n| DateProcessed\t\t   | The processed date associated to the payment. |\r\n| DateInput\t\t\t   | The input date associated to the payment. |\r\n| DateReceived\t\t   | The received date associated to the payment. |\r\n| IsAutoAllocated\t   | Whether the payment is auto allocated, null by default. |\r\n| AccountingPeriodListItem | The GUID and description of the accounting period of the payment. |\r\n| Allocations\t\t   | The list of allocations associated to the payment. |\r\n| Allocations[0].Guid   | The GUID associated to the allocation. |\r\n| Allocations[0].Amount   | The Amount associated to the allocation. |\r\n| Allocations[0].DateInput   | The DateInput associated to the allocation. |\r\n| Allocations[0].AccountingPeriodListItem | The GUID and descriptopn of the accounting period associated to the allocation. |\r\n| Allocations[0].RelatedInvoiceGuid | The GUID associated to the invoice of the allocation. |\r\n| Deallocations\t\t   | The list of deallocations associated to the payment. |\r\n| Deallocations[0].Guid   | The GUID associated to the deallocation. |\r\n| Deallocations[0].Amount   | The amount associated to the deallocation. |\r\n| Deallocations[0].DateInput   | The date input associated to the deallocation. |\r\n| Deallocations[0].DateDeallocated   | The date deallocated associated to the deallocation. |\r\n| Deallocations[0].AllocationAccountingPeriodListItem | The GUID and descriptopn of the allocation accounting period associated to the deallocation. |\r\n| Deallocations[0].DeallocationAccountingPeriodListItem | The GUID and descriptopn of the deallocation accounting period associated to the deallocation. |\r\n| Deallocations[0].RelatedInvoiceGuid | The GUID associated to the invoice of the deallocation. |\r\n| Deallocations[0].RelatedUserDeallocatedByGuid | The GUID associated to the sysuser of the deallocation. |\r\n| RelatedInvoiceGuidFilter | Used to filter by the related invoice GUID. |\r\n| RelatedJobGuids\t\t   | The list of job GUIDs associated to the payment. |\r\n| RelatedJobGuids[0].RelatedJobGuid   | The GUID associated to the job. |\r\n| AccountingPeriodBadListItem | The GUID and description of the bad accounting period of the payment. |\r\n| ReasonBadListItem | The GUID and description of the bad reason of the payment. |\r\n| PaymentTransactions | The list of Payment Transactions associated to the payment. |\r\n| PaymentTransactions[0].Guid\t\t\t\t| The guid associated to the payment transaction. |\r\n| PaymentTransactions[0].IsDeleted\t\t\t| Whether the payment transaction is deleted. |\r\n| PaymentTransactions[0].CardType\t\t\t| The CardType associated to the payment transaction. |\r\n| PaymentTransactions[0].MaskedCardNumber\t| The MaskedCardNumber associated to the payment transaction. |\r\n| PaymentTransactions[0].DateReceived\t\t| The DateReceived associated to the payment transaction. |\r\n| PaymentTransactions[0].PaymentReference\t| The PaymentReference associated to the payment transaction. |\r\n| PaymentTransactions[0].Reference\t\t\t| The Reference associated to the payment transaction. |\r\n| PaymentTransactions[0].PaymentProvider\t| The PaymentProvider associated to the payment transaction. |\r\n| PaymentTransactions[0].ResultMessage\t\t| The ResultMessage associated to the payment transaction. |\r\n| PaymentTransactions[0].Notes\t\t\t\t| The Notes associated to the payment transaction. |\r\n| PaymentTransactions[0].ResponseCode\t\t| The ResponseCode associated to the payment transaction. |\r\n| PaymentTransactions[0].CurrencyCode\t\t| The CurrencyCode associated to the payment transaction. |\r\n| PaymentTransactions[0].Amount\t\t\t\t| The Amount associated to the payment transaction. |\r\n| PaymentTransactions[0].ContactGuid\t\t| The Guid associated to the contact of the payment transaction. |\r\n| PaymentTransactions[0].AmountRefundable   | The AmountRefundable associated to the payment transaction. |\r\n| PaymentTransactions[0].ReasonListItem     | The GUID and description of the reason of the payment transaction. |\r\n| PaymentTransactions[0].PaymentProviderListItem  | The GUID and description of the Payment Provider of the payment transaction. |\r\n| PaymentTransactions[0].PaymentPointListItem     | The GUID and description of the Payment Point of the payment transaction. |\r\n| PaymentTransactions[0].TransactionStatusListItem     | The GUID and description of the Transaction Status of the payment transaction. |\r\n| PaymentTransactions[0].PaymentTypeListItem     | The GUID and description of the Payment Type of the payment transaction. |\r\n| IsRefund\t\t\t\t   | The IsRefund associated to the payment. |\r\n| TransactionPaymentReferenceFilter | Used to filter by Payment Reference of the Payment Transaction. |\r\n| TransactionReferenceFilter | Used to filter by Reference of the Payment Transaction. |","operationId":"Payment_Get","consumes":["application/json"],"produces":["application/json"],"parameters":[{"name":"guid","in":"path","required":true,"type":"string","format":"uuid"},{"name":"links","in":"query","required":false,"type":"string"},{"name":"include","in":"query","required":false,"type":"string"},{"name":"expand","in":"query","required":false,"type":"string"},{"name":"udf","in":"query","required":false,"type":"string"}],"responses":{"200":{"description":"OK","schema":{"$ref":"#/definitions/ApiResourceResultEntity[ApiIntegratorPaymentResource]"}}}},"put":{"tags":["Payment"],"summary":"Partial update","description":"| Property       | Description                                                  | Required |\r\n| -------------- | ------------------------------------------------------------ | -------- |\r\n| GUID                 | The GUID associated to the payment.                    | No |\r\n| RelatedCustomerGuid  | The GUID associated to the customer of to the payment. | Yes |\r\n| PaymentTypeListItem  | The GUID and description of the payment type.          | Yes |\r\n| PaymentPointListItem | The GUID and description of the payment point.         | Yes |\r\n| Amount               | The amount associated to the payment.                  | Yes |\r\n| Reference            | The reference associated to the payment.               | No |\r\n| EndToEndReference    | The end to end reference associated to the payment.    | No |\r\n| Notes\t\t\t\t   | The Notes associated to the payment. \t\t\t\t\t| No |\r\n| IsBad\t\t\t\t   | The IsBad associated to the payment. \t\t\t\t\t| No |\r\n| DateBad\t\t\t   | The bad date associated to the payment.\t\t\t\t| No |\r\n| DateBadExported      | The bad date exported associated to the payment.\t\t| No |\r\n| DateCleared\t\t   | The cleared date associated to the payment.\t\t\t| No |\r\n| DateExported\t\t   | The exported date associated to the payment.\t\t\t| No |\r\n| DateProcessed\t\t   | The processed date associated to the payment.\t\t\t| No |\r\n| DateInput\t\t\t   | The input date associated to the payment.\t\t\t\t| Yes |\r\n| DateReceived\t\t   | The received date associated to the payment.\t\t\t| Yes |\r\n| IsAutoAllocated\t   | Whether the payment is auto allocated, null by default. | No |\r\n| AccountingPeriodListItem | The GUID and description of the accounting period of the payment. | No |\r\n| Allocations\t\t   | The list of allocations associated to the payment. | No |\r\n| Allocations[0].Guid   | The GUID associated to the allocation. | No |\r\n| Allocations[0].Amount   | The Amount associated to the allocation. | Yes |\r\n| Allocations[0].DateInput   | The DateInput associated to the allocation. | No |\r\n| Allocations[0].AccountingPeriodListItem | The GUID and description of the accounting period associated to the allocation. | No |\r\n| Allocations[0].RelatedInvoiceGuid | The GUID associated to the invoice of the allocation. | Yes |\r\n| Deallocations\t\t   | The list of deallocations associated to the payment. | No |\r\n| Deallocations[0].Guid   | The GUID associated to the deallocation. | No |\r\n| Deallocations[0].Amount   | The amount associated to the deallocation. | Yes |\r\n| Deallocations[0].DateInput   | The date input associated to the deallocation. | No |\r\n| Deallocations[0].DateDeallocated   | The date deallocated associated to the deallocation. | No |\r\n| Deallocations[0].AllocationAccountingPeriodListItem | The GUID and descriptopn of the allocation accounting period associated to the deallocation. | No |\r\n| Deallocations[0].DeallocationAccountingPeriodListItem | The GUID and descriptopn of the deallocation accounting period associated to the deallocation. | No |\r\n| Deallocations[0].RelatedInvoiceGuid | The GUID associated to the invoice of the deallocation. | Yes |\r\n| Deallocations[0].RelatedUserDeallocatedByGuid | The GUID associated to the sysuser of the deallocation. | Yes |\r\n| RelatedInvoiceGuidFilter | Used to filter by the related invoice GUID. | No |\r\n| RelatedJobGuids\t\t   | The list of job GUIDs associated to the payment. | No |\r\n| RelatedJobGuids[0].RelatedJobGuid   | The GUID associated to the job. | No |\r\n| AccountingPeriodBadListItem | The GUID and description of the bad accounting period of the payment. | No |\r\n| ReasonBadListItem | The GUID and description of the bad reason of the payment. | No |\r\n| PaymentTransactions | The list of Payment Transactions associated to the payment. | No |\r\n| PaymentTransactions[0].Guid\t\t\t\t| The guid associated to the payment transaction. | No |\r\n| PaymentTransactions[0].IsDeleted\t\t\t| Whether the payment transaction is deleted. | No |\r\n| PaymentTransactions[0].CardType\t\t\t| The CardType associated to the payment transaction. | No |\r\n| PaymentTransactions[0].MaskedCardNumber\t| The MaskedCardNumber associated to the payment transaction. | No |\r\n| PaymentTransactions[0].DateReceived\t\t| The DateReceived associated to the payment transaction. | No |\r\n| PaymentTransactions[0].PaymentReference\t| The PaymentReference associated to the payment transaction. | No |\r\n| PaymentTransactions[0].Reference\t\t\t| The Reference associated to the payment transaction. | No |\r\n| PaymentTransactions[0].PaymentProvider\t| The PaymentProvider associated to the payment transaction. | No |\r\n| PaymentTransactions[0].ResultMessage\t\t| The ResultMessage associated to the payment transaction. | No |\r\n| PaymentTransactions[0].Notes\t\t\t\t| The Notes associated to the payment transaction. | No |\r\n| PaymentTransactions[0].ResponseCode\t\t| The ResponseCode associated to the payment transaction. | No |\r\n| PaymentTransactions[0].CurrencyCode\t\t| The CurrencyCode associated to the payment transaction. | No |\r\n| PaymentTransactions[0].Amount\t\t\t\t| The Amount associated to the payment transaction. | No |\r\n| PaymentTransactions[0].ContactGuid\t\t| The Guid associated to the contact of the payment transaction. | No |\r\n| PaymentTransactions[0].AmountRefundable   | The AmountRefundable associated to the payment transaction. | No |\r\n| PaymentTransactions[0].ReasonListItem     | The GUID and description of the reason of the payment transaction. | No |\r\n| PaymentTransactions[0].PaymentProviderListItem  | The GUID and description of the Payment Provider of the payment transaction. | No |\r\n| PaymentTransactions[0].PaymentPointListItem     | The GUID and description of the Payment Point of the payment transaction. | No |\r\n| PaymentTransactions[0].TransactionStatusListItem     | The GUID and description of the Transaction Status of the payment transaction. | No |\r\n| PaymentTransactions[0].PaymentTypeListItem     | The GUID and description of the Payment Type of the payment transaction. | No |\r\n| IsRefund\t\t\t\t   | The IsRefund associated to the payment. | No |\r\n\r\n\r\n## Extra validations\r\n\r\n| Condition | Error message |\r\n| --------- | ------------- |\r\n| Customer not found with value RelatedCustomerGuid | Failed to retrieve Customer with RelatedCustomerGuid of {value of RelatedCustomerGuid} |\r\n| PaymentType not found with value PaymentTypeListItem.Guid | Failed to retrieve PaymentType with PaymentTypeListItem.Guid of {value of PaymentTypeListItem.Guid} |\r\n| PaymentPoint not found with value PaymentPointListItem.Guid | Failed to retrieve PaymentPoint with PaymentPointListItem.Guid of {value of PaymentPointListItem.Guid} |\r\n| A new value for date received should not provided as part of an update | Request a payment update with an unchanged date received or make a PUT request leaving date received property out of the resource |\r\n| A new value for date input should not provided as part of an update | Request a payment update with an unchanged date input or make a PUT request leaving date input property out of the resource |\r\n| Date cleared must be on or after date received | Request a payment update with date cleared are null or after the date received |\r\n| Date processed must be on or after date received | Request a payment update with date processed are null or after the date received |\r\n| Date bad must be on or after date received | Request a payment update with date bad are null or after the date received |\r\n| Date bad must be provided | Request a payment update with date bad to mark bad export |\r\n| Date bad exported must be on or after date bad | Request a payment update with date bad exported are null or after the date bad |\r\n| Date exported must be on or after date received | Request a payment update with date exported are null or after the date received |\r\n| The accounting period is closed | Failed to save. Payment with AccountingPeriodListItem.GUID of xxxxxx-xxxxxxx is not a valid accounting period because it is closed |\r\n| Deallocations is a read-only property | Request a payment update with deallocations are null or empty |\r\n| Updating a bad payment | Payment is bad. Could not update the payment. Create a new payment rather than attempting to update the payment that has been marked as bad |\r\n| Updating a payment to make it bad if required fields DateBad, ReasonBadListItem, and Accounting PeriodBadListItem are not found | Details for marking a payment as bad missing. Could not update the payment. To mark a payment as bad set the DateBad, ReasonBadListItem, and Accounting PeriodBadListItem |\r\n| AccountingPeriodBadListItem for a closed accounting period | AccountingPeriodBad is closed. Could not mark the payment as bad. Set the AccountingPeriodBadListItem to an open accounting period |\r\n| ReasonBadListItem value from different reason category other than Bad Payment | ReasonListItem must be in one of the following reason categories: BadPayment. |\r\n| ReasonBadListItem with deleted reason value from Bad Payment reason category | The provided ReasonBadListItem is deleted. Could not update the resource. Please check the relevant list end point for the available options. |\r\n| If PaymentTransactions is not null on Update | PaymentTransactions is a read-only property. |\r\n| If the payment is already allocated and IsAutoAllocated is true on update | Failed to save/update Payment because the payment is already allocated. |","operationId":"Payment_Update","consumes":["application/json"],"produces":["application/json"],"parameters":[{"name":"guid","in":"path","required":true,"type":"string","format":"uuid"},{"in":"body","required":true,"schema":{"$ref":"#/definitions/ApiResourceId"}}],"responses":{"200":{"description":"OK","schema":{"$ref":"#/definitions/ApiResourceId"}}}}},"/accounting/payments":{"get":{"tags":["Payment"],"summary":"Find with Filters","description":"| Property       | Description                                                  |\r\n| -------------- | ------------------------------------------------------------ |\r\n| GUID                 | The GUID associated to the payment. |\r\n| RelatedCustomerGuid  | The GUID associated to the customer of the payment. | \r\n| PaymentTypeListItem  | The GUID and description of the payment type.          |\r\n| PaymentPointListItem | The GUID and description of the payment point.         |\r\n| Amount               | The amount associated to the payment. |\r\n| Reference            | The reference associated to the payment. |\r\n| EndToEndReference    | The end to end reference associated to the payment. |\r\n| Notes\t\t\t\t   | The Notes associated to the payment. |\r\n| IsBad\t\t\t\t   | The IsBad associated to the payment. |\r\n| DateBad\t\t\t   | The bad date associated to the payment. |\r\n| DateBadExported      | The bad date exported associated to the payment. |\r\n| DateCleared\t\t   | The cleared date associated to the payment. |\r\n| DateExported\t\t   | The exported date associated to the payment. |\r\n| DateProcessed\t\t   | The processed date associated to the payment. |\r\n| DateInput\t\t\t   | The input date associated to the payment. |\r\n| DateReceived\t\t   | The received date associated to the payment. |\r\n| IsAutoAllocated\t   | Whether the payment is auto allocated, null by default. |\r\n| AccountingPeriodListItem | The GUID and description of the accounting period of the payment. |\r\n| Allocations\t\t   | The list of allocations associated to the payment. |\r\n| Allocations[0].Guid   | The GUID associated to the allocation. |\r\n| Allocations[0].Amount   | The Amount associated to the allocation. |\r\n| Allocations[0].DateInput   | The DateInput associated to the allocation. |\r\n| Allocations[0].AccountingPeriodListItem | The GUID and descriptopn of the accounting period associated to the allocation. |\r\n| Allocations[0].RelatedInvoiceGuid | The GUID associated to the invoice of the allocation. |\r\n| Deallocations\t\t   | The list of deallocations associated to the payment. |\r\n| Deallocations[0].Guid   | The GUID associated to the deallocation. |\r\n| Deallocations[0].Amount   | The amount associated to the deallocation. |\r\n| Deallocations[0].DateInput   | The date input associated to the deallocation. |\r\n| Deallocations[0].DateDeallocated   | The date deallocated associated to the deallocation. |\r\n| Deallocations[0].AllocationAccountingPeriodListItem | The GUID and descriptopn of the allocation accounting period associated to the deallocation. |\r\n| Deallocations[0].DeallocationAccountingPeriodListItem | The GUID and descriptopn of the deallocation accounting period associated to the deallocation. |\r\n| Deallocations[0].RelatedInvoiceGuid | The GUID associated to the invoice of the deallocation. |\r\n| Deallocations[0].RelatedUserDeallocatedByGuid | The GUID associated to the sysuser of the deallocation. |\r\n| RelatedInvoiceGuidFilter | Used to filter by the related invoice GUID. |\r\n| RelatedJobGuids\t\t   | The list of job GUIDs associated to the payment. |\r\n| RelatedJobGuids[0].RelatedJobGuid   | The GUID associated to the job. |\r\n| AccountingPeriodBadListItem | The GUID and description of the bad accounting period of the payment. |\r\n| ReasonBadListItem | The GUID and description of the bad reason of the payment. |\r\n| PaymentTransactions | The list of Payment Transactions associated to the payment. |\r\n| PaymentTransactions[0].Guid\t\t\t\t| The guid associated to the payment transaction. |\r\n| PaymentTransactions[0].IsDeleted\t\t\t| Whether the payment transaction is deleted. |\r\n| PaymentTransactions[0].CardType\t\t\t| The CardType associated to the payment transaction. |\r\n| PaymentTransactions[0].MaskedCardNumber\t| The MaskedCardNumber associated to the payment transaction. |\r\n| PaymentTransactions[0].DateReceived\t\t| The DateReceived associated to the payment transaction. |\r\n| PaymentTransactions[0].PaymentReference\t| The PaymentReference associated to the payment transaction. |\r\n| PaymentTransactions[0].Reference\t\t\t| The Reference associated to the payment transaction. |\r\n| PaymentTransactions[0].PaymentProvider\t| The PaymentProvider associated to the payment transaction. |\r\n| PaymentTransactions[0].ResultMessage\t\t| The ResultMessage associated to the payment transaction. |\r\n| PaymentTransactions[0].Notes\t\t\t\t| The Notes associated to the payment transaction. |\r\n| PaymentTransactions[0].ResponseCode\t\t| The ResponseCode associated to the payment transaction. |\r\n| PaymentTransactions[0].CurrencyCode\t\t| The CurrencyCode associated to the payment transaction. |\r\n| PaymentTransactions[0].Amount\t\t\t\t| The Amount associated to the payment transaction. |\r\n| PaymentTransactions[0].ContactGuid\t\t| The Guid associated to the contact of the payment transaction. |\r\n| PaymentTransactions[0].AmountRefundable   | The AmountRefundable associated to the payment transaction. |\r\n| PaymentTransactions[0].ReasonListItem     | The GUID and description of the reason of the payment transaction. |\r\n| PaymentTransactions[0].PaymentProviderListItem  | The GUID and description of the Payment Provider of the payment transaction. |\r\n| PaymentTransactions[0].PaymentPointListItem     | The GUID and description of the Payment Point of the payment transaction. |\r\n| PaymentTransactions[0].TransactionStatusListItem     | The GUID and description of the Transaction Status of the payment transaction. |\r\n| PaymentTransactions[0].PaymentTypeListItem     | The GUID and description of the Payment Type of the payment transaction. |\r\n| IsRefund\t\t\t\t   | The IsRefund associated to the payment. |\r\n| TransactionPaymentReferenceFilter | Used to filter by Payment Reference of the Payment Transaction. |\r\n| TransactionReferenceFilter | Used to filter by Reference of the Payment Transaction. |","operationId":"Payment_GetCollection","consumes":["application/json"],"produces":["application/json"],"parameters":[{"name":"filter","in":"query","required":false,"type":"string"},{"name":"search","in":"query","required":false,"type":"string"},{"name":"order","in":"query","required":false,"type":"string"},{"name":"max","in":"query","required":false,"type":"integer","format":"int32"},{"name":"page","in":"query","required":false,"type":"integer","format":"int32"},{"name":"includeCount","in":"query","required":false,"type":"boolean"},{"name":"includeDeleted","in":"query","required":false,"type":"boolean"},{"name":"links","in":"query","required":false,"type":"string"},{"name":"udf","in":"query","required":false,"type":"string"}],"responses":{"200":{"description":"OK","schema":{"$ref":"#/definitions/ApiResourceResultCollection[ApiIntegratorPaymentResource]"}}}},"post":{"tags":["Payment"],"summary":"Create or update","description":"| Property       | Description                                                  | Required |\r\n| -------------- | ------------------------------------------------------------ | -------- |\r\n| GUID                 | The GUID associated to the payment.                    | No |\r\n| RelatedCustomerGuid  | The GUID associated to the customer of to the payment. | Yes |\r\n| PaymentTypeListItem  | The GUID and description of the payment type.          | Yes |\r\n| PaymentPointListItem | The GUID and description of the payment point.         | Yes |\r\n| Amount               | The amount associated to the payment.                  | Yes |\r\n| Reference            | The reference associated to the payment.               | No |\r\n| EndToEndReference    | The end to end reference associated to the payment.    | No |\r\n| Notes\t\t\t\t   | The Notes associated to the payment. \t\t\t\t\t| No |\r\n| IsBad\t\t\t\t   | The IsBad associated to the payment. \t\t\t\t\t| No |\r\n| DateBad\t\t\t   | The bad date associated to the payment.\t\t\t\t| No |\r\n| DateBadExported      | The bad date exported associated to the payment.\t\t| No |\r\n| DateCleared\t\t   | The cleared date associated to the payment.\t\t\t| No |\r\n| DateExported\t\t   | The exported date associated to the payment.\t\t\t| No |\r\n| DateProcessed\t\t   | The processed date associated to the payment.\t\t\t| No |\r\n| DateInput\t\t\t   | The input date associated to the payment.\t\t\t\t| Yes |\r\n| DateReceived\t\t   | The received date associated to the payment.\t\t\t| Yes |\r\n| IsAutoAllocated\t   | Whether the payment is auto allocated, null by default. | No |\r\n| AccountingPeriodListItem | The GUID and description of the accounting period of the payment. | No |\r\n| Allocations\t\t   | The list of allocations associated to the payment. | No |\r\n| Allocations[0].Guid   | The GUID associated to the allocation. | No |\r\n| Allocations[0].Amount   | The Amount associated to the allocation. | Yes |\r\n| Allocations[0].DateInput   | The DateInput associated to the allocation. | No |\r\n| Allocations[0].AccountingPeriodListItem | The GUID and description of the accounting period associated to the allocation. | No |\r\n| Allocations[0].RelatedInvoiceGuid | The GUID associated to the invoice of the allocation. | Yes |\r\n| Deallocations\t\t   | The list of deallocations associated to the payment. | No |\r\n| Deallocations[0].Guid   | The GUID associated to the deallocation. | No |\r\n| Deallocations[0].Amount   | The amount associated to the deallocation. | Yes |\r\n| Deallocations[0].DateInput   | The date input associated to the deallocation. | No |\r\n| Deallocations[0].DateDeallocated   | The date deallocated associated to the deallocation. | No |\r\n| Deallocations[0].AllocationAccountingPeriodListItem | The GUID and descriptopn of the allocation accounting period associated to the deallocation. | No |\r\n| Deallocations[0].DeallocationAccountingPeriodListItem | The GUID and descriptopn of the deallocation accounting period associated to the deallocation. | No |\r\n| Deallocations[0].RelatedInvoiceGuid | The GUID associated to the invoice of the deallocation. | Yes |\r\n| Deallocations[0].RelatedUserDeallocatedByGuid | The GUID associated to the sysuser of the deallocation. | Yes |\r\n| RelatedInvoiceGuidFilter | Used to filter by the related invoice GUID. | No |\r\n| RelatedJobGuids\t\t   | The list of job GUIDs associated to the payment. | No |\r\n| RelatedJobGuids[0].RelatedJobGuid   | The GUID associated to the job. | No |\r\n| AccountingPeriodBadListItem | The GUID and description of the bad accounting period of the payment. | No |\r\n| ReasonBadListItem | The GUID and description of the bad reason of the payment. | No |\r\n| PaymentTransactions | The list of Payment Transactions associated to the payment. | No |\r\n| PaymentTransactions[0].Guid\t\t\t\t| The guid associated to the payment transaction. | No |\r\n| PaymentTransactions[0].IsDeleted\t\t\t| Whether the payment transaction is deleted. | No |\r\n| PaymentTransactions[0].CardType\t\t\t| The CardType associated to the payment transaction. | No |\r\n| PaymentTransactions[0].MaskedCardNumber\t| The MaskedCardNumber associated to the payment transaction. | No |\r\n| PaymentTransactions[0].DateReceived\t\t| The DateReceived associated to the payment transaction. | No |\r\n| PaymentTransactions[0].PaymentReference\t| The PaymentReference associated to the payment transaction. | No |\r\n| PaymentTransactions[0].Reference\t\t\t| The Reference associated to the payment transaction. | No |\r\n| PaymentTransactions[0].PaymentProvider\t| The PaymentProvider associated to the payment transaction. | No |\r\n| PaymentTransactions[0].ResultMessage\t\t| The ResultMessage associated to the payment transaction. | No |\r\n| PaymentTransactions[0].Notes\t\t\t\t| The Notes associated to the payment transaction. | No |\r\n| PaymentTransactions[0].ResponseCode\t\t| The ResponseCode associated to the payment transaction. | No |\r\n| PaymentTransactions[0].CurrencyCode\t\t| The CurrencyCode associated to the payment transaction. | No |\r\n| PaymentTransactions[0].Amount\t\t\t\t| The Amount associated to the payment transaction. | No |\r\n| PaymentTransactions[0].ContactGuid\t\t| The Guid associated to the contact of the payment transaction. | No |\r\n| PaymentTransactions[0].AmountRefundable   | The AmountRefundable associated to the payment transaction. | No |\r\n| PaymentTransactions[0].ReasonListItem     | The GUID and description of the reason of the payment transaction. | No |\r\n| PaymentTransactions[0].PaymentProviderListItem  | The GUID and description of the Payment Provider of the payment transaction. | No |\r\n| PaymentTransactions[0].PaymentPointListItem     | The GUID and description of the Payment Point of the payment transaction. | No |\r\n| PaymentTransactions[0].TransactionStatusListItem     | The GUID and description of the Transaction Status of the payment transaction. | No |\r\n| PaymentTransactions[0].PaymentTypeListItem     | The GUID and description of the Payment Type of the payment transaction. | No |\r\n| IsRefund\t\t\t\t   | The IsRefund associated to the payment. | No |\r\n\r\n\r\n## Extra validations\r\n\r\n| Condition | Error message |\r\n| --------- | ------------- |\r\n| Customer not found with value RelatedCustomerGuid | Failed to retrieve Customer with RelatedCustomerGuid of {value of RelatedCustomerGuid} |\r\n| PaymentType not found with value PaymentTypeListItem.Guid | Failed to retrieve PaymentType with PaymentTypeListItem.Guid of {value of PaymentTypeListItem.Guid} |\r\n| PaymentPoint not found with value PaymentPointListItem.Guid | Failed to retrieve PaymentPoint with PaymentPointListItem.Guid of {value of PaymentPointListItem.Guid} |\r\n| BadAccountingPeriod not found with value AccountingPeriodBadListItem.Guid | Failed to retrieve BadAccountingPeriod with AccountingPeriodBadListItem.Guid of {value of AccountingPeriodBadListItem.Guid} |\r\n| BadReason not found with value ReasonBadListItem.Guid | Failed to retrieve BadReason with ReasonBadListItem.Guid of {value of ReasonBadListItem.Guid} |\r\n| DateInput is not today's date | Failed to save. Payment with DateInput of {value of DateInput} cannot be set if DateInput is not today's date |\r\n| A payment can not be marked as bad on creation |  Leave date bad as null when creating a payment |\r\n| A payment can not be marked as bad export on creation |  Leave date bad export as null when creating a payment |\r\n| A payment can not be marked as export on creation |  Leave date export as null when creating a payment |\r\n| A payment can not be marked as bad accounting period on creation |  Leave bad accounting period as null when creating a payment |\r\n| A payment can not be marked as bad reason on creation |  Leave bad reason as null when creating a payment |\r\n| Creating a bad payment is not allowed | Payment is bad. Could not create the payment. Set DateBad, ReasonBadListItem, AccountingPeriodBadListItem to null when creating a payment and then mark it as bad with a seperate call |\r\n| Date cleared must be on or after date received | Request creation of a resource where the date cleared are null or after the date received |\r\n| Date processed must be on or after date received | Request creation of a resource where the date processed are null or after the date received |\r\n| The accounting period is closed | Failed to save. Payment with AccountingPeriodListItem.GUID of xxxxxx-xxxxxxx is not a valid accounting period because it is closed |\r\n| Deallocations is a read-only property | Request a payment update with deallocations are null or empty |\r\n| If PaymentTransactions is not null on Insert | PaymentTransactions is a read-only property. |","operationId":"Payment_Create","consumes":["application/json"],"produces":["application/json"],"parameters":[{"in":"body","required":true,"schema":{"$ref":"#/definitions/ApiResourceId"}}],"responses":{"200":{"description":"OK","schema":{"$ref":"#/definitions/ApiResourceId"}}}}},"/lists/paymentHandlingCodes/{guid}":{"get":{"tags":["PaymentHandlingCode"],"summary":"Find with GUID","description":"| Property                  | Description                                                              |\r\n| ------------------------- | ------------------------------------------------------------------------ |\r\n| GUID                      | The GUID associated to the payment handling code                      |\r\n| Description               | The description of payment handling code                              |","operationId":"PaymentHandlingCode_Get","consumes":["application/json"],"produces":["application/json"],"parameters":[{"name":"guid","in":"path","required":true,"type":"string","format":"uuid"},{"name":"links","in":"query","required":false,"type":"string"},{"name":"include","in":"query","required":false,"type":"string"},{"name":"expand","in":"query","required":false,"type":"string"},{"name":"udf","in":"query","required":false,"type":"string"}],"responses":{"200":{"description":"OK","schema":{"$ref":"#/definitions/ApiResourceResultEntity[ApiIntegratorPaymentHandlingCodeResource]"}}}}},"/lists/paymentHandlingCodes":{"get":{"tags":["PaymentHandlingCode"],"summary":"Find with Filters","description":"| Property                  | Description                                                              |\r\n| ------------------------- | ------------------------------------------------------------------------ |\r\n| GUID                      | The GUID associated to the payment handling code                      |\r\n| Description               | The description of payment handling code                              |","operationId":"PaymentHandlingCode_GetCollection","consumes":["application/json"],"produces":["application/json"],"parameters":[{"name":"filter","in":"query","required":false,"type":"string"},{"name":"search","in":"query","required":false,"type":"string"},{"name":"order","in":"query","required":false,"type":"string"},{"name":"max","in":"query","required":false,"type":"integer","format":"int32"},{"name":"page","in":"query","required":false,"type":"integer","format":"int32"},{"name":"includeCount","in":"query","required":false,"type":"boolean"},{"name":"includeDeleted","in":"query","required":false,"type":"boolean"},{"name":"links","in":"query","required":false,"type":"string"},{"name":"udf","in":"query","required":false,"type":"string"}],"responses":{"200":{"description":"OK","schema":{"$ref":"#/definitions/ApiResourceResultCollection[ApiIntegratorPaymentHandlingCodeResource]"}}}}},"/lists/paymentPoints/{guid}":{"get":{"tags":["PaymentPoint"],"summary":"Find with GUID","description":"| Property                  | Description                                                              |\r\n| ------------------------- | ------------------------------------------------------------------------ |\r\n| GUID                      | The GUID associated to the payment point                              |\r\n| Description               | The description of the payment point                                  |","operationId":"PaymentPoint_Get","consumes":["application/json"],"produces":["application/json"],"parameters":[{"name":"guid","in":"path","required":true,"type":"string","format":"uuid"},{"name":"links","in":"query","required":false,"type":"string"},{"name":"include","in":"query","required":false,"type":"string"},{"name":"expand","in":"query","required":false,"type":"string"},{"name":"udf","in":"query","required":false,"type":"string"}],"responses":{"200":{"description":"OK","schema":{"$ref":"#/definitions/ApiResourceResultEntity[ApiIntegratorPaymentPointResource]"}}}}},"/lists/paymentPoints":{"get":{"tags":["PaymentPoint"],"summary":"Find with Filters","description":"| Property                  | Description                                                              |\r\n| ------------------------- | ------------------------------------------------------------------------ |\r\n| GUID                      | The GUID associated to the payment point                              |\r\n| Description               | The description of the payment point                                  |","operationId":"PaymentPoint_GetCollection","consumes":["application/json"],"produces":["application/json"],"parameters":[{"name":"filter","in":"query","required":false,"type":"string"},{"name":"search","in":"query","required":false,"type":"string"},{"name":"order","in":"query","required":false,"type":"string"},{"name":"max","in":"query","required":false,"type":"integer","format":"int32"},{"name":"page","in":"query","required":false,"type":"integer","format":"int32"},{"name":"includeCount","in":"query","required":false,"type":"boolean"},{"name":"includeDeleted","in":"query","required":false,"type":"boolean"},{"name":"links","in":"query","required":false,"type":"string"},{"name":"udf","in":"query","required":false,"type":"string"}],"responses":{"200":{"description":"OK","schema":{"$ref":"#/definitions/ApiResourceResultCollection[ApiIntegratorPaymentPointResource]"}}}}},"/lists/paymentTerms/{guid}":{"get":{"tags":["PaymentTerm"],"summary":"Find with GUID","description":"| Property                  | Description                                                              |\r\n| ------------------------- | ------------------------------------------------------------------------ |\r\n| GUID                      | The GUID associated to the payment term                              |\r\n| Description               | The description of the payment term                                  |\r\n| ShortCode\t\t\t\t\t| The Short code of the payment term\t\t\t\t\t\t\t\t   |\r\n| IsDeleted                 | Whether the payment term is deleted\t\t \t\t\t\t\t\t   |  ","operationId":"PaymentTerm_Get","consumes":["application/json"],"produces":["application/json"],"parameters":[{"name":"guid","in":"path","required":true,"type":"string","format":"uuid"},{"name":"links","in":"query","required":false,"type":"string"},{"name":"include","in":"query","required":false,"type":"string"},{"name":"expand","in":"query","required":false,"type":"string"},{"name":"udf","in":"query","required":false,"type":"string"}],"responses":{"200":{"description":"OK","schema":{"$ref":"#/definitions/ApiResourceResultEntity[ApiIntegratorPaymentTermResource]"}}}}},"/lists/paymentTerms":{"get":{"tags":["PaymentTerm"],"summary":"Find with Filters","description":"| Property                  | Description                                                              |\r\n| ------------------------- | ------------------------------------------------------------------------ |\r\n| GUID                      | The GUID associated to the payment term                              |\r\n| Description               | The description of the payment term                                  |\r\n| ShortCode\t\t\t\t\t| The Short code of the payment term\t\t\t\t\t\t\t\t   |\r\n| IsDeleted                 | Whether the payment term is deleted\t\t \t\t\t\t\t\t   |  ","operationId":"PaymentTerm_GetCollection","consumes":["application/json"],"produces":["application/json"],"parameters":[{"name":"filter","in":"query","required":false,"type":"string"},{"name":"search","in":"query","required":false,"type":"string"},{"name":"order","in":"query","required":false,"type":"string"},{"name":"max","in":"query","required":false,"type":"integer","format":"int32"},{"name":"page","in":"query","required":false,"type":"integer","format":"int32"},{"name":"includeCount","in":"query","required":false,"type":"boolean"},{"name":"includeDeleted","in":"query","required":false,"type":"boolean"},{"name":"links","in":"query","required":false,"type":"string"},{"name":"udf","in":"query","required":false,"type":"string"}],"responses":{"200":{"description":"OK","schema":{"$ref":"#/definitions/ApiResourceResultCollection[ApiIntegratorPaymentTermResource]"}}}}},"/lists/paymentTypes/{guid}":{"get":{"tags":["PaymentType"],"summary":"Find with GUID","description":"| Property                  | Description                                                              |\r\n| ------------------------- | ------------------------------------------------------------------------ |\r\n| GUID                      | The GUID associated to the payment type                                  |\r\n| Description               | The description of the payment type                                      |\r\n| IsDirectDebit             | Whether the payment type is direct debit                                 |    \r\n| IsCash                    | Whether the payment type is cash                                         |    \r\n| IsAutoPay                 | Whether the payment type is auto pay\t\t\t\t\t\t\t\t\t   |    \r\n| IsCard                    | Whether the payment type is card\t\t\t\t\t\t\t\t\t\t   |    \r\n| IsElectronic              | Whether the payment type is electronic\t\t\t\t\t\t\t\t   |    \r\n| IsCheque                  | Whether the payment type is cheque    \t\t\t\t\t\t\t\t   |    \r\n| AcceptLowValue            | Whether the payment type accepts a low value\t\t\t\t\t\t\t   |    \r\n| IsSystemPayment           | Whether the payment type is a system payment\t\t\t\t\t\t\t   |    \r\n| CanMarkAsBad              | Whether the payment type can be marked as bad\t\t\t\t\t\t\t   |    \r\n| IsNegative                | Whether the payment type is negative  \t\t\t\t\t\t\t\t   |    \r\n| IsForLodgement            | Whether the payment type is for lodgement\t\t\t\t\t\t\t\t   |    \r\n| ShortCode                 | The payment type short code   \t\t\t\t\t\t\t        \t   |    \r\n| IsDeleted                 | Whether the payment type is deleted\t    \t\t\t\t\t\t\t   |    \r\n","operationId":"PaymentType_Get","consumes":["application/json"],"produces":["application/json"],"parameters":[{"name":"guid","in":"path","required":true,"type":"string","format":"uuid"},{"name":"links","in":"query","required":false,"type":"string"},{"name":"include","in":"query","required":false,"type":"string"},{"name":"expand","in":"query","required":false,"type":"string"},{"name":"udf","in":"query","required":false,"type":"string"}],"responses":{"200":{"description":"OK","schema":{"$ref":"#/definitions/ApiResourceResultEntity[ApiIntegratorPaymentTypeResource]"}}}}},"/lists/paymentTypes":{"get":{"tags":["PaymentType"],"summary":"Find with Filters","description":"| Property                  | Description                                                              |\r\n| ------------------------- | ------------------------------------------------------------------------ |\r\n| GUID                      | The GUID associated to the payment type                                  |\r\n| Description               | The description of the payment type                                      |\r\n| IsDirectDebit             | Whether the payment type is direct debit                                 |    \r\n| IsCash                    | Whether the payment type is cash                                         |    \r\n| IsAutoPay                 | Whether the payment type is auto pay\t\t\t\t\t\t\t\t\t   |    \r\n| IsCard                    | Whether the payment type is card\t\t\t\t\t\t\t\t\t\t   |    \r\n| IsElectronic              | Whether the payment type is electronic\t\t\t\t\t\t\t\t   |    \r\n| IsCheque                  | Whether the payment type is cheque    \t\t\t\t\t\t\t\t   |    \r\n| AcceptLowValue            | Whether the payment type accepts a low value\t\t\t\t\t\t\t   |    \r\n| IsSystemPayment           | Whether the payment type is a system payment\t\t\t\t\t\t\t   |    \r\n| CanMarkAsBad              | Whether the payment type can be marked as bad\t\t\t\t\t\t\t   |    \r\n| IsNegative                | Whether the payment type is negative  \t\t\t\t\t\t\t\t   |    \r\n| IsForLodgement            | Whether the payment type is for lodgement\t\t\t\t\t\t\t\t   |    \r\n| ShortCode                 | The payment type short code   \t\t\t\t\t\t\t        \t   |    \r\n| IsDeleted                 | Whether the payment type is deleted\t    \t\t\t\t\t\t\t   |    \r\n","operationId":"PaymentType_GetCollection","consumes":["application/json"],"produces":["application/json"],"parameters":[{"name":"filter","in":"query","required":false,"type":"string"},{"name":"search","in":"query","required":false,"type":"string"},{"name":"order","in":"query","required":false,"type":"string"},{"name":"max","in":"query","required":false,"type":"integer","format":"int32"},{"name":"page","in":"query","required":false,"type":"integer","format":"int32"},{"name":"includeCount","in":"query","required":false,"type":"boolean"},{"name":"includeDeleted","in":"query","required":false,"type":"boolean"},{"name":"links","in":"query","required":false,"type":"string"},{"name":"udf","in":"query","required":false,"type":"string"}],"responses":{"200":{"description":"OK","schema":{"$ref":"#/definitions/ApiResourceResultCollection[ApiIntegratorPaymentTypeResource]"}}}}},"/lists/pickupIntervals/{guid}":{"get":{"tags":["PickupInterval"],"summary":"Find with GUID","description":"| Property                  | Description                                                              |\r\n| ------------------------- | ------------------------------------------------------------------------ |\r\n| GUID                      | The GUID associated to the pickup interval\t\t\t\t\t\t\t   |\r\n| Description               | The description of the pickup interval\t\t\t\t\t\t\t\t   |","operationId":"PickupInterval_Get","consumes":["application/json"],"produces":["application/json"],"parameters":[{"name":"guid","in":"path","required":true,"type":"string","format":"uuid"},{"name":"links","in":"query","required":false,"type":"string"},{"name":"include","in":"query","required":false,"type":"string"},{"name":"expand","in":"query","required":false,"type":"string"},{"name":"udf","in":"query","required":false,"type":"string"}],"responses":{"200":{"description":"OK","schema":{"$ref":"#/definitions/ApiResourceResultEntity[ApiIntegratorPickupIntervalResource]"}}}}},"/lists/pickupIntervals":{"get":{"tags":["PickupInterval"],"summary":"Find with Filters","description":"| Property                  | Description                                                              |\r\n| ------------------------- | ------------------------------------------------------------------------ |\r\n| GUID                      | The GUID associated to the pickup interval\t\t\t\t\t\t\t   |\r\n| Description               | The description of the pickup interval\t\t\t\t\t\t\t\t   |","operationId":"PickupInterval_GetCollection","consumes":["application/json"],"produces":["application/json"],"parameters":[{"name":"filter","in":"query","required":false,"type":"string"},{"name":"search","in":"query","required":false,"type":"string"},{"name":"order","in":"query","required":false,"type":"string"},{"name":"max","in":"query","required":false,"type":"integer","format":"int32"},{"name":"page","in":"query","required":false,"type":"integer","format":"int32"},{"name":"includeCount","in":"query","required":false,"type":"boolean"},{"name":"includeDeleted","in":"query","required":false,"type":"boolean"},{"name":"links","in":"query","required":false,"type":"string"},{"name":"udf","in":"query","required":false,"type":"string"}],"responses":{"200":{"description":"OK","schema":{"$ref":"#/definitions/ApiResourceResultCollection[ApiIntegratorPickupIntervalResource]"}}}}},"/lists/postTowns/{guid}":{"get":{"tags":["PostTown"],"summary":"Find with GUID","description":"| Property                  | Description                                                              |\r\n| ------------------------- | ------------------------------------------------------------------------ |\r\n| GUID                      | The GUID associated to the post town                              |\r\n| Description               | The description of the post town                                  |","operationId":"PostTown_Get","consumes":["application/json"],"produces":["application/json"],"parameters":[{"name":"guid","in":"path","required":true,"type":"string","format":"uuid"},{"name":"links","in":"query","required":false,"type":"string"},{"name":"include","in":"query","required":false,"type":"string"},{"name":"expand","in":"query","required":false,"type":"string"},{"name":"udf","in":"query","required":false,"type":"string"}],"responses":{"200":{"description":"OK","schema":{"$ref":"#/definitions/ApiResourceResultEntity[ApiIntegratorPostTownResource]"}}}}},"/lists/postTowns":{"get":{"tags":["PostTown"],"summary":"Find with Filters","description":"| Property                  | Description                                                              |\r\n| ------------------------- | ------------------------------------------------------------------------ |\r\n| GUID                      | The GUID associated to the post town                              |\r\n| Description               | The description of the post town                                  |","operationId":"PostTown_GetCollection","consumes":["application/json"],"produces":["application/json"],"parameters":[{"name":"filter","in":"query","required":false,"type":"string"},{"name":"search","in":"query","required":false,"type":"string"},{"name":"order","in":"query","required":false,"type":"string"},{"name":"max","in":"query","required":false,"type":"integer","format":"int32"},{"name":"page","in":"query","required":false,"type":"integer","format":"int32"},{"name":"includeCount","in":"query","required":false,"type":"boolean"},{"name":"includeDeleted","in":"query","required":false,"type":"boolean"},{"name":"links","in":"query","required":false,"type":"string"},{"name":"udf","in":"query","required":false,"type":"string"}],"responses":{"200":{"description":"OK","schema":{"$ref":"#/definitions/ApiResourceResultCollection[ApiIntegratorPostTownResource]"}}}}},"/lists/priceModifiers/{guid}":{"get":{"tags":["PriceModifier"],"summary":"Find with GUID","description":"| Property                  | Description                                                       |\r\n| ------------------------- | ----------------------------------------------------------------- |\r\n| GUID                      | The GUID associated to the pricemodifier                          |\r\n| Description               | The description of the pricemodifier                              |","operationId":"PriceModifier_Get","consumes":["application/json"],"produces":["application/json"],"parameters":[{"name":"guid","in":"path","required":true,"type":"string","format":"uuid"},{"name":"links","in":"query","required":false,"type":"string"},{"name":"include","in":"query","required":false,"type":"string"},{"name":"expand","in":"query","required":false,"type":"string"},{"name":"udf","in":"query","required":false,"type":"string"}],"responses":{"200":{"description":"OK","schema":{"$ref":"#/definitions/ApiResourceResultEntity[ApiIntegratorPriceModifierResource]"}}}}},"/lists/priceModifiers":{"get":{"tags":["PriceModifier"],"summary":"Find with Filters","description":"| Property                  | Description                                                       |\r\n| ------------------------- | ----------------------------------------------------------------- |\r\n| GUID                      | The GUID associated to the pricemodifier                          |\r\n| Description               | The description of the pricemodifier                              |","operationId":"PriceModifier_GetCollection","consumes":["application/json"],"produces":["application/json"],"parameters":[{"name":"filter","in":"query","required":false,"type":"string"},{"name":"search","in":"query","required":false,"type":"string"},{"name":"order","in":"query","required":false,"type":"string"},{"name":"max","in":"query","required":false,"type":"integer","format":"int32"},{"name":"page","in":"query","required":false,"type":"integer","format":"int32"},{"name":"includeCount","in":"query","required":false,"type":"boolean"},{"name":"includeDeleted","in":"query","required":false,"type":"boolean"},{"name":"links","in":"query","required":false,"type":"string"},{"name":"udf","in":"query","required":false,"type":"string"}],"responses":{"200":{"description":"OK","schema":{"$ref":"#/definitions/ApiResourceResultCollection[ApiIntegratorPriceModifierResource]"}}}}},"/lists/pricingBases/{guid}":{"get":{"tags":["PricingBasis"],"summary":"Find with GUID","description":"| Property                  | Description                                                              |\r\n| ------------------------- | ------------------------------------------------------------------------ |\r\n| GUID                      | The GUID associated to the pricing basis                              |\r\n| Description               | The description of the pricing basis                                  |","operationId":"PricingBasis_Get","consumes":["application/json"],"produces":["application/json"],"parameters":[{"name":"guid","in":"path","required":true,"type":"string","format":"uuid"},{"name":"links","in":"query","required":false,"type":"string"},{"name":"include","in":"query","required":false,"type":"string"},{"name":"expand","in":"query","required":false,"type":"string"},{"name":"udf","in":"query","required":false,"type":"string"}],"responses":{"200":{"description":"OK","schema":{"$ref":"#/definitions/ApiResourceResultEntity[ApiIntegratorPricingBasisResource]"}}}}},"/lists/pricingBases":{"get":{"tags":["PricingBasis"],"summary":"Find with Filters","description":"| Property                  | Description                                                              |\r\n| ------------------------- | ------------------------------------------------------------------------ |\r\n| GUID                      | The GUID associated to the pricing basis                              |\r\n| Description               | The description of the pricing basis                                  |","operationId":"PricingBasis_GetCollection","consumes":["application/json"],"produces":["application/json"],"parameters":[{"name":"filter","in":"query","required":false,"type":"string"},{"name":"search","in":"query","required":false,"type":"string"},{"name":"order","in":"query","required":false,"type":"string"},{"name":"max","in":"query","required":false,"type":"integer","format":"int32"},{"name":"page","in":"query","required":false,"type":"integer","format":"int32"},{"name":"includeCount","in":"query","required":false,"type":"boolean"},{"name":"includeDeleted","in":"query","required":false,"type":"boolean"},{"name":"links","in":"query","required":false,"type":"string"},{"name":"udf","in":"query","required":false,"type":"string"}],"responses":{"200":{"description":"OK","schema":{"$ref":"#/definitions/ApiResourceResultCollection[ApiIntegratorPricingBasisResource]"}}}}},"/lists/priorities/{guid}":{"get":{"tags":["Priority"],"summary":"Find with GUID","description":"| Property                  | Description                                   |\r\n| ------------------------- | --------------------------------------------- |\r\n| GUID                      | The GUID associated to the priority\t\t\t|\r\n| Description               | The description of the priority\t\t\t\t|\r\n| IsDeleted                 | Whether the priority is deleted\t            |\r\n\t\t\t\t   ","operationId":"Priority_Get","consumes":["application/json"],"produces":["application/json"],"parameters":[{"name":"guid","in":"path","required":true,"type":"string","format":"uuid"},{"name":"links","in":"query","required":false,"type":"string"},{"name":"include","in":"query","required":false,"type":"string"},{"name":"expand","in":"query","required":false,"type":"string"},{"name":"udf","in":"query","required":false,"type":"string"}],"responses":{"200":{"description":"OK","schema":{"$ref":"#/definitions/ApiResourceResultEntity[ApiIntegratorPriorityResource]"}}}}},"/lists/priorities":{"get":{"tags":["Priority"],"summary":"Find with Filters","description":"| Property                  | Description                                   |\r\n| ------------------------- | --------------------------------------------- |\r\n| GUID                      | The GUID associated to the priority\t\t\t|\r\n| Description               | The description of the priority\t\t\t\t|\r\n| IsDeleted                 | Whether the priority is deleted\t            |\r\n\t\t\t\t   ","operationId":"Priority_GetCollection","consumes":["application/json"],"produces":["application/json"],"parameters":[{"name":"filter","in":"query","required":false,"type":"string"},{"name":"search","in":"query","required":false,"type":"string"},{"name":"order","in":"query","required":false,"type":"string"},{"name":"max","in":"query","required":false,"type":"integer","format":"int32"},{"name":"page","in":"query","required":false,"type":"integer","format":"int32"},{"name":"includeCount","in":"query","required":false,"type":"boolean"},{"name":"includeDeleted","in":"query","required":false,"type":"boolean"},{"name":"links","in":"query","required":false,"type":"string"},{"name":"udf","in":"query","required":false,"type":"string"}],"responses":{"200":{"description":"OK","schema":{"$ref":"#/definitions/ApiResourceResultCollection[ApiIntegratorPriorityResource]"}}}}},"/lists/purchaseOrderAmountTypes/{guid}":{"get":{"tags":["PurchaseOrderAmountType"],"summary":"Find with GUID","description":"| Property                  | Description                                                              |\r\n| ------------------------- | ------------------------------------------------------------------------ |\r\n| GUID                      | The GUID associated to the purchase order amount type\t\t\t\t\t   |\r\n| Description               | The description of the purchase order amount type\t\t\t\t\t\t   |\r\n| IsDeleted                 | Whether the purchase order amount type is deleted\t         \t \t\t   |","operationId":"PurchaseOrderAmountType_Get","consumes":["application/json"],"produces":["application/json"],"parameters":[{"name":"guid","in":"path","required":true,"type":"string","format":"uuid"},{"name":"links","in":"query","required":false,"type":"string"},{"name":"include","in":"query","required":false,"type":"string"},{"name":"expand","in":"query","required":false,"type":"string"},{"name":"udf","in":"query","required":false,"type":"string"}],"responses":{"200":{"description":"OK","schema":{"$ref":"#/definitions/ApiResourceResultEntity[ApiIntegratorPurchaseOrderAmountTypeResource]"}}}}},"/lists/purchaseOrderAmountTypes":{"get":{"tags":["PurchaseOrderAmountType"],"summary":"Find with Filters","description":"| Property                  | Description                                                              |\r\n| ------------------------- | ------------------------------------------------------------------------ |\r\n| GUID                      | The GUID associated to the purchase order amount type\t\t\t\t\t   |\r\n| Description               | The description of the purchase order amount type\t\t\t\t\t\t   |\r\n| IsDeleted                 | Whether the purchase order amount type is deleted\t         \t \t\t   |","operationId":"PurchaseOrderAmountType_GetCollection","consumes":["application/json"],"produces":["application/json"],"parameters":[{"name":"filter","in":"query","required":false,"type":"string"},{"name":"search","in":"query","required":false,"type":"string"},{"name":"order","in":"query","required":false,"type":"string"},{"name":"max","in":"query","required":false,"type":"integer","format":"int32"},{"name":"page","in":"query","required":false,"type":"integer","format":"int32"},{"name":"includeCount","in":"query","required":false,"type":"boolean"},{"name":"includeDeleted","in":"query","required":false,"type":"boolean"},{"name":"links","in":"query","required":false,"type":"string"},{"name":"udf","in":"query","required":false,"type":"string"}],"responses":{"200":{"description":"OK","schema":{"$ref":"#/definitions/ApiResourceResultCollection[ApiIntegratorPurchaseOrderAmountTypeResource]"}}}}},"/accounting/purchaseOrderNumberChains/changes":{"get":{"tags":["PurchaseOrderNumberChain"],"summary":"Retrieve changes","description":"| Property\t\t\t\t\t\t\t| Description\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t|\r\n| --------------------------------- | ------------------------------------------------------------------------------------- |\r\n| GUID\t\t\t\t\t\t\t\t| The GUID associated to the purchase order number chain.\t\t\t\t\t\t\t\t|\r\n| RelatedCustomerGuid\t\t\t\t| The GUID associated to the customer of the purchase order number chain. Filterable.\t| \r\n| Description\t\t\t\t\t\t| The description of the purchase order number chain. Filterable.\t\t\t\t\t\t|\r\n| StartDate\t\t\t\t\t\t\t| The start date of the purchase order number chain.\t\t\t\t\t\t\t\t\t|\r\n| EndDate\t\t\t\t\t\t\t| The end date of the purchase order number chain.\t\t\t\t\t\t\t\t\t\t|\r\n| IsDeleted\t\t\t\t\t\t\t| Whether the purchase order number chain is deleted.\t\t\t\t\t\t\t\t\t|\r\n| PONumbers\t\t\t\t\t\t\t| The list of purchase order numbers associated to the purchase order number chain.\t\t|\r\n| PONumbers[0].Guid\t\t\t\t\t| The GUID associated to the purchase order number.\t\t\t\t\t\t\t\t\t\t|\r\n| PONumbers[0].PONumber \t\t\t| The purchase order number associated to the purchase order number.\t\t\t\t\t|\r\n| PONumbers[0].StartDate\t\t\t| The start date associated to the purchase order number.\t\t\t\t\t\t\t\t|\r\n| PONumbers[0].EndDate\t\t\t\t| The end date associated to the purchase order number.\t\t\t\t\t\t\t\t\t|\r\n| PONumbers[0].Amount\t\t\t\t| The amount associated to the purchase order number.\t\t\t\t\t\t\t\t\t|\r\n| PONumbers[0].AmountTypeListItem \t| The GUID and description of the amount type associated to the purchase order number.\t|\r\n| PONumbers[0].IsDeleted\t\t\t| Whether the purchase order number is deleted.\t\t\t\t\t\t\t\t\t\t\t|\r\n| RelatedPONumberGuidFilter\t\t\t| Used to filter on the related purchase order number GUID.\t\t\t\t\t\t\t\t|\r\n| RelatedPONumberFilter\t\t\t\t| Used to filter on the related purchase order number.\t\t\t\t\t\t\t\t\t| ","operationId":"PurchaseOrderNumberChain_GetChanges","consumes":["application/json"],"produces":["application/json"],"parameters":[{"name":"since","in":"query","required":false,"type":"string"},{"name":"cursor","in":"query","required":false,"type":"string"},{"name":"links","in":"query","required":false,"type":"string"}],"responses":{"200":{"description":"OK","schema":{"$ref":"#/definitions/ApiResourceChanges[ApiIntegratorPurchaseOrderNumberChainResource]"}}}}},"/accounting/purchaseOrderNumberChains/{guid}":{"get":{"tags":["PurchaseOrderNumberChain"],"summary":"Find with GUID","description":"| Property\t\t\t\t\t\t\t| Description\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t|\r\n| --------------------------------- | ------------------------------------------------------------------------------------- |\r\n| GUID\t\t\t\t\t\t\t\t| The GUID associated to the purchase order number chain.\t\t\t\t\t\t\t\t|\r\n| RelatedCustomerGuid\t\t\t\t| The GUID associated to the customer of the purchase order number chain. Filterable.\t| \r\n| Description\t\t\t\t\t\t| The description of the purchase order number chain. Filterable.\t\t\t\t\t\t|\r\n| StartDate\t\t\t\t\t\t\t| The start date of the purchase order number chain.\t\t\t\t\t\t\t\t\t|\r\n| EndDate\t\t\t\t\t\t\t| The end date of the purchase order number chain.\t\t\t\t\t\t\t\t\t\t|\r\n| IsDeleted\t\t\t\t\t\t\t| Whether the purchase order number chain is deleted.\t\t\t\t\t\t\t\t\t|\r\n| PONumbers\t\t\t\t\t\t\t| The list of purchase order numbers associated to the purchase order number chain.\t\t|\r\n| PONumbers[0].Guid\t\t\t\t\t| The GUID associated to the purchase order number.\t\t\t\t\t\t\t\t\t\t|\r\n| PONumbers[0].PONumber \t\t\t| The purchase order number associated to the purchase order number.\t\t\t\t\t|\r\n| PONumbers[0].StartDate\t\t\t| The start date associated to the purchase order number.\t\t\t\t\t\t\t\t|\r\n| PONumbers[0].EndDate\t\t\t\t| The end date associated to the purchase order number.\t\t\t\t\t\t\t\t\t|\r\n| PONumbers[0].Amount\t\t\t\t| The amount associated to the purchase order number.\t\t\t\t\t\t\t\t\t|\r\n| PONumbers[0].AmountTypeListItem \t| The GUID and description of the amount type associated to the purchase order number.\t|\r\n| PONumbers[0].IsDeleted\t\t\t| Whether the purchase order number is deleted.\t\t\t\t\t\t\t\t\t\t\t|\r\n| RelatedPONumberGuidFilter\t\t\t| Used to filter on the related purchase order number GUID.\t\t\t\t\t\t\t\t|\r\n| RelatedPONumberFilter\t\t\t\t| Used to filter on the related purchase order number.\t\t\t\t\t\t\t\t\t| ","operationId":"PurchaseOrderNumberChain_Get","consumes":["application/json"],"produces":["application/json"],"parameters":[{"name":"guid","in":"path","required":true,"type":"string","format":"uuid"},{"name":"links","in":"query","required":false,"type":"string"},{"name":"include","in":"query","required":false,"type":"string"},{"name":"expand","in":"query","required":false,"type":"string"},{"name":"udf","in":"query","required":false,"type":"string"}],"responses":{"200":{"description":"OK","schema":{"$ref":"#/definitions/ApiResourceResultEntity[ApiIntegratorPurchaseOrderNumberChainResource]"}}}},"put":{"tags":["PurchaseOrderNumberChain"],"summary":"Partial update","description":"| Property\t\t\t\t\t\t\t| Description\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t| Required |\r\n| --------------------------------- | ------------------------------------------------------------------------------------- | -------- |\r\n| GUID\t\t\t\t\t\t\t\t| The GUID associated to the purchase order number chain.\t\t\t\t\t\t\t\t| No |\r\n| RelatedCustomerGuid\t\t\t\t| The GUID associated to the customer of the purchase order number chain.\t\t\t\t| Yes |\r\n| Description\t\t\t\t\t\t| The description of the purchase order number chain.\t\t\t\t\t\t\t\t\t| Yes |\r\n| StartDate\t\t\t\t\t\t\t| The start date of the purchase order number chain.\t\t\t\t\t\t\t\t\t| Yes |\r\n| EndDate\t\t\t\t\t\t\t| The end date of the purchase order number chain.\t\t\t\t\t\t\t\t\t\t| Yes |\r\n| IsDeleted\t\t\t\t\t\t\t| Whether the purchase order number chain is deleted.\t\t\t\t\t\t\t\t\t| No |\r\n| PONumbers\t\t\t\t\t\t\t| The list of purchase order numbers associated to the purchase order number chain.\t\t| No |\r\n| PONumbers[0].Guid\t\t\t\t\t| The GUID associated to the purchase order number.\t\t\t\t\t\t\t\t\t\t| No |\r\n| PONumbers[0].PONumber \t\t\t| The purchase order number associated to the purchase order number.\t\t\t\t\t| No |\r\n| PONumbers[0].StartDate\t\t\t| The start date associated to the purchase order number.\t\t\t\t\t\t\t\t| Yes |\r\n| PONumbers[0].EndDate\t\t\t\t| The end date associated to the purchase order number.\t\t\t\t\t\t\t\t\t| Yes |\r\n| PONumbers[0].Amount\t\t\t\t| The amount associated to the purchase order number.\t\t\t\t\t\t\t\t\t| Yes |\r\n| PONumbers[0].AmountTypeListItem \t| The GUID and description of the amount type associated to the purchase order number.\t| Yes |\r\n| PONumbers[0].IsDeleted\t\t\t| Whether the purchase order number is deleted.\t\t\t\t\t\t\t\t\t\t\t| No |\r\n| RelatedPONumberGuidFilter\t\t\t| Used to filter on the related purchase order number GUID.\t\t\t\t\t\t\t\t| No |\r\n| RelatedPONumberFilter\t\t\t\t| Used to filter on the related purchase order number.\t\t\t\t\t\t\t\t\t| No |\r\n\r\n## Extra validations\r\n\r\n| Condition | Error message |\r\n| --------- | ------------- |\r\n| If RelatedCustomerGuid is changed. | Relationship between PONumberChain and Customer cannot be updated |\r\n| Unique description for PONumberChain | Failed to save/update PONumberChain because the PO Number Chain that you are trying to save conflicts with an existing item. Each PO Number Chain must be unique in terms of Description. |\r\n| PONumbers date out of range. | Start and end dates are outside the PO number chain dates. |\r\n| PONumbers date overlap. | Start and end dates overlap an existing PO number. |\r\n| PONumbers.Guid should link with PONumberChain | Failed to save. PONumberChain with PONumbers.Guid of [value] cannot be set if PONumbers.Guid is not related to PONumberChain. |\r\n| If IsDeleted is changed. | IsDeleted is a read-only property. | \r\n| If PONumber.IsDeleted is changed. | PONumber.IsDeleted is a read-only property. | ","operationId":"PurchaseOrderNumberChain_Update","consumes":["application/json"],"produces":["application/json"],"parameters":[{"name":"guid","in":"path","required":true,"type":"string","format":"uuid"},{"in":"body","required":true,"schema":{"$ref":"#/definitions/ApiResourceId"}}],"responses":{"200":{"description":"OK","schema":{"$ref":"#/definitions/ApiResourceId"}}}}},"/accounting/purchaseOrderNumberChains":{"get":{"tags":["PurchaseOrderNumberChain"],"summary":"Find with Filters","description":"| Property\t\t\t\t\t\t\t| Description\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t|\r\n| --------------------------------- | ------------------------------------------------------------------------------------- |\r\n| GUID\t\t\t\t\t\t\t\t| The GUID associated to the purchase order number chain.\t\t\t\t\t\t\t\t|\r\n| RelatedCustomerGuid\t\t\t\t| The GUID associated to the customer of the purchase order number chain. Filterable.\t| \r\n| Description\t\t\t\t\t\t| The description of the purchase order number chain. Filterable.\t\t\t\t\t\t|\r\n| StartDate\t\t\t\t\t\t\t| The start date of the purchase order number chain.\t\t\t\t\t\t\t\t\t|\r\n| EndDate\t\t\t\t\t\t\t| The end date of the purchase order number chain.\t\t\t\t\t\t\t\t\t\t|\r\n| IsDeleted\t\t\t\t\t\t\t| Whether the purchase order number chain is deleted.\t\t\t\t\t\t\t\t\t|\r\n| PONumbers\t\t\t\t\t\t\t| The list of purchase order numbers associated to the purchase order number chain.\t\t|\r\n| PONumbers[0].Guid\t\t\t\t\t| The GUID associated to the purchase order number.\t\t\t\t\t\t\t\t\t\t|\r\n| PONumbers[0].PONumber \t\t\t| The purchase order number associated to the purchase order number.\t\t\t\t\t|\r\n| PONumbers[0].StartDate\t\t\t| The start date associated to the purchase order number.\t\t\t\t\t\t\t\t|\r\n| PONumbers[0].EndDate\t\t\t\t| The end date associated to the purchase order number.\t\t\t\t\t\t\t\t\t|\r\n| PONumbers[0].Amount\t\t\t\t| The amount associated to the purchase order number.\t\t\t\t\t\t\t\t\t|\r\n| PONumbers[0].AmountTypeListItem \t| The GUID and description of the amount type associated to the purchase order number.\t|\r\n| PONumbers[0].IsDeleted\t\t\t| Whether the purchase order number is deleted.\t\t\t\t\t\t\t\t\t\t\t|\r\n| RelatedPONumberGuidFilter\t\t\t| Used to filter on the related purchase order number GUID.\t\t\t\t\t\t\t\t|\r\n| RelatedPONumberFilter\t\t\t\t| Used to filter on the related purchase order number.\t\t\t\t\t\t\t\t\t| ","operationId":"PurchaseOrderNumberChain_GetCollection","consumes":["application/json"],"produces":["application/json"],"parameters":[{"name":"filter","in":"query","required":false,"type":"string"},{"name":"search","in":"query","required":false,"type":"string"},{"name":"order","in":"query","required":false,"type":"string"},{"name":"max","in":"query","required":false,"type":"integer","format":"int32"},{"name":"page","in":"query","required":false,"type":"integer","format":"int32"},{"name":"includeCount","in":"query","required":false,"type":"boolean"},{"name":"includeDeleted","in":"query","required":false,"type":"boolean"},{"name":"links","in":"query","required":false,"type":"string"},{"name":"udf","in":"query","required":false,"type":"string"}],"responses":{"200":{"description":"OK","schema":{"$ref":"#/definitions/ApiResourceResultCollection[ApiIntegratorPurchaseOrderNumberChainResource]"}}}},"post":{"tags":["PurchaseOrderNumberChain"],"summary":"Create or update","description":"| Property\t\t\t\t\t\t\t| Description\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t| Required |\r\n| --------------------------------- | ------------------------------------------------------------------------------------- | -------- |\r\n| GUID\t\t\t\t\t\t\t\t| The GUID associated to the purchase order number chain.\t\t\t\t\t\t\t\t| No |\r\n| RelatedCustomerGuid\t\t\t\t| The GUID associated to the customer of the purchase order number chain.\t\t\t\t| Yes |\r\n| Description\t\t\t\t\t\t| The description of the purchase order number chain.\t\t\t\t\t\t\t\t\t| Yes |\r\n| StartDate\t\t\t\t\t\t\t| The start date of the purchase order number chain.\t\t\t\t\t\t\t\t\t| Yes |\r\n| EndDate\t\t\t\t\t\t\t| The end date of the purchase order number chain.\t\t\t\t\t\t\t\t\t\t| Yes |\r\n| IsDeleted\t\t\t\t\t\t\t| Whether the purchase order number chain is deleted.\t\t\t\t\t\t\t\t\t| No |\r\n| PONumbers\t\t\t\t\t\t\t| The list of purchase order numbers associated to the purchase order number chain.\t\t| No |\r\n| PONumbers[0].Guid\t\t\t\t\t| The GUID associated to the purchase order number.\t\t\t\t\t\t\t\t\t\t| No |\r\n| PONumbers[0].PONumber \t\t\t| The purchase order number associated to the purchase order number.\t\t\t\t\t| No |\r\n| PONumbers[0].StartDate\t\t\t| The start date associated to the purchase order number.\t\t\t\t\t\t\t\t| Yes |\r\n| PONumbers[0].EndDate\t\t\t\t| The end date associated to the purchase order number.\t\t\t\t\t\t\t\t\t| Yes |\r\n| PONumbers[0].Amount\t\t\t\t| The amount associated to the purchase order number.\t\t\t\t\t\t\t\t\t| Yes |\r\n| PONumbers[0].AmountTypeListItem \t| The GUID and description of the amount type associated to the purchase order number.\t| Yes |\r\n| PONumbers[0].IsDeleted\t\t\t| Whether the purchase order number is deleted.\t\t\t\t\t\t\t\t\t\t\t| No |\r\n| RelatedPONumberGuidFilter\t\t\t| Used to filter on the related purchase order number GUID.\t\t\t\t\t\t\t\t| No |\r\n| RelatedPONumberFilter\t\t\t\t| Used to filter on the related purchase order number.\t\t\t\t\t\t\t\t\t| No |\r\n\r\n## Extra validations\r\n\r\n| Condition | Error message |\r\n| --------- | ------------- |\r\n| If RelatedCustomerGuid is changed. | Relationship between PONumberChain and Customer cannot be updated |\r\n| Unique description for PONumberChain | Failed to save/update PONumberChain because the PO Number Chain that you are trying to save conflicts with an existing item. Each PO Number Chain must be unique in terms of Description. |\r\n| IsDeleted should be null on POST PONumberChain | Failed to save. PONumberChain with IsDeleted cannot be set if IsDeleted is not null on PONumberChain creation.\r\n| PONumbers date out of range. | Start and end dates are outside the PO number chain dates. |\r\n| PONumbers date overlap. | Start and end dates overlap an existing PO number. |\r\n| PONumbers.Guid should be null on POST PONumberChain | Failed to save. PONumberChain with PONumbers.Guid cannot be set if PONumbers.Guid is not null on PONumberChain creation.\r\n| PONumbers.IsDeleted should be null on POST PONumberChain | Failed to save. PONumberChain with PONumbers.IsDeleted cannot be set if PONumbers.IsDeleted is not null on PONumberChain creation.\r\n| If IsDeleted is changed. | IsDeleted is a read-only property. | \r\n| If PONumber.IsDeleted is changed. | PONumber.IsDeleted is a read-only property. | ","operationId":"PurchaseOrderNumberChain_Create","consumes":["application/json"],"produces":["application/json"],"parameters":[{"in":"body","required":true,"schema":{"$ref":"#/definitions/ApiResourceId"}}],"responses":{"200":{"description":"OK","schema":{"$ref":"#/definitions/ApiResourceId"}}}}},"/lists/reasons/{guid}":{"get":{"tags":["Reason"],"summary":"Find with GUID","description":"| Property                  | Description                                                              |\r\n| ------------------------- | ------------------------------------------------------------------------ |\r\n| GUID                      | The GUID associated to the reason\t\t\t                               |\r\n| Description               | The description of the reason\t\t\t\t\t\t\t                   |\r\n| FullDescription           | The full description of the reason\t                                   |\r\n| AnalysisCode              | The analysis code of the reason\t\t\t\t\t                       |\r\n| ReasonCategoryListItem    | The GUID and reason category of the reason (various values)              |\r\n| IsDeleted                 | Whether the reason is deleted\t \t\t\t\t\t\t\t\t\t\t  |","operationId":"Reason_Get","consumes":["application/json"],"produces":["application/json"],"parameters":[{"name":"guid","in":"path","required":true,"type":"string","format":"uuid"},{"name":"links","in":"query","required":false,"type":"string"},{"name":"include","in":"query","required":false,"type":"string"},{"name":"expand","in":"query","required":false,"type":"string"},{"name":"udf","in":"query","required":false,"type":"string"}],"responses":{"200":{"description":"OK","schema":{"$ref":"#/definitions/ApiResourceResultEntity[ApiIntegratorReasonResource]"}}}}},"/lists/reasons":{"get":{"tags":["Reason"],"summary":"Find with Filters","description":"| Property                  | Description                                                              |\r\n| ------------------------- | ------------------------------------------------------------------------ |\r\n| GUID                      | The GUID associated to the reason\t\t\t                               |\r\n| Description               | The description of the reason\t\t\t\t\t\t\t                   |\r\n| FullDescription           | The full description of the reason\t                                   |\r\n| AnalysisCode              | The analysis code of the reason\t\t\t\t\t                       |\r\n| ReasonCategoryListItem    | The GUID and reason category of the reason (various values)              |\r\n| IsDeleted                 | Whether the reason is deleted\t \t\t\t\t\t\t\t\t\t\t  |","operationId":"Reason_GetCollection","consumes":["application/json"],"produces":["application/json"],"parameters":[{"name":"filter","in":"query","required":false,"type":"string"},{"name":"search","in":"query","required":false,"type":"string"},{"name":"order","in":"query","required":false,"type":"string"},{"name":"max","in":"query","required":false,"type":"integer","format":"int32"},{"name":"page","in":"query","required":false,"type":"integer","format":"int32"},{"name":"includeCount","in":"query","required":false,"type":"boolean"},{"name":"includeDeleted","in":"query","required":false,"type":"boolean"},{"name":"links","in":"query","required":false,"type":"string"},{"name":"udf","in":"query","required":false,"type":"string"}],"responses":{"200":{"description":"OK","schema":{"$ref":"#/definitions/ApiResourceResultCollection[ApiIntegratorReasonResource]"}}}}},"/lists/reasonCategories/{guid}":{"get":{"tags":["ReasonCategory"],"summary":"Find with GUID","description":"| Property                  | Description                                                              |\r\n| ------------------------- | ------------------------------------------------------------------------ |\r\n| GUID                      | The GUID associated to the reason category                              |\r\n| Description               | The description of the reason category                                  |\r\n| IsDeleted                 | Whether the reason category is deleted\t \t\t\t\t\t\t\t  |","operationId":"ReasonCategory_Get","consumes":["application/json"],"produces":["application/json"],"parameters":[{"name":"guid","in":"path","required":true,"type":"string","format":"uuid"},{"name":"links","in":"query","required":false,"type":"string"},{"name":"include","in":"query","required":false,"type":"string"},{"name":"expand","in":"query","required":false,"type":"string"},{"name":"udf","in":"query","required":false,"type":"string"}],"responses":{"200":{"description":"OK","schema":{"$ref":"#/definitions/ApiResourceResultEntity[ApiIntegratorReasonCategoryResource]"}}}}},"/lists/reasonCategories":{"get":{"tags":["ReasonCategory"],"summary":"Find with Filters","description":"| Property                  | Description                                                              |\r\n| ------------------------- | ------------------------------------------------------------------------ |\r\n| GUID                      | The GUID associated to the reason category                              |\r\n| Description               | The description of the reason category                                  |\r\n| IsDeleted                 | Whether the reason category is deleted\t \t\t\t\t\t\t\t  |","operationId":"ReasonCategory_GetCollection","consumes":["application/json"],"produces":["application/json"],"parameters":[{"name":"filter","in":"query","required":false,"type":"string"},{"name":"search","in":"query","required":false,"type":"string"},{"name":"order","in":"query","required":false,"type":"string"},{"name":"max","in":"query","required":false,"type":"integer","format":"int32"},{"name":"page","in":"query","required":false,"type":"integer","format":"int32"},{"name":"includeCount","in":"query","required":false,"type":"boolean"},{"name":"includeDeleted","in":"query","required":false,"type":"boolean"},{"name":"links","in":"query","required":false,"type":"string"},{"name":"udf","in":"query","required":false,"type":"string"}],"responses":{"200":{"description":"OK","schema":{"$ref":"#/definitions/ApiResourceResultCollection[ApiIntegratorReasonCategoryResource]"}}}}},"/lists/regions/{guid}":{"get":{"tags":["Region"],"summary":"Find with GUID","description":"| Property                  | Description                                                              |\r\n| ------------------------- | ------------------------------------------------------------------------ |\r\n| GUID                      | The GUID associated to the region\t\t\t                               |\r\n| Description               | The description of the region\t\t\t\t\t\t\t                   |\r\n| Abbreviation\t\t\t\t| The abbreviation of the region    \t                                   |\r\n| StateListItem             | The GUID and description of the state\t\t\t\t                       |\r\n| CompanyOutletListItem     | The GUID and description of the Company Outlet\t\t\t\t           |\r\n| IsNonSpecific             | Whether the region is non specific   \t\t\t\t\t\t\t\t\t   |\r\n| IsDeleted                 | Whether the region is deleted\t \t\t\t\t\t\t\t\t\t\t   |\r\n","operationId":"Region_Get","consumes":["application/json"],"produces":["application/json"],"parameters":[{"name":"guid","in":"path","required":true,"type":"string","format":"uuid"},{"name":"links","in":"query","required":false,"type":"string"},{"name":"include","in":"query","required":false,"type":"string"},{"name":"expand","in":"query","required":false,"type":"string"},{"name":"udf","in":"query","required":false,"type":"string"}],"responses":{"200":{"description":"OK","schema":{"$ref":"#/definitions/ApiResourceResultEntity[ApiIntegratorRegionResource]"}}}}},"/lists/regions":{"get":{"tags":["Region"],"summary":"Find with Filters","description":"| Property                  | Description                                                              |\r\n| ------------------------- | ------------------------------------------------------------------------ |\r\n| GUID                      | The GUID associated to the region\t\t\t                               |\r\n| Description               | The description of the region\t\t\t\t\t\t\t                   |\r\n| Abbreviation\t\t\t\t| The abbreviation of the region    \t                                   |\r\n| StateListItem             | The GUID and description of the state\t\t\t\t                       |\r\n| CompanyOutletListItem     | The GUID and description of the Company Outlet\t\t\t\t           |\r\n| IsNonSpecific             | Whether the region is non specific   \t\t\t\t\t\t\t\t\t   |\r\n| IsDeleted                 | Whether the region is deleted\t \t\t\t\t\t\t\t\t\t\t   |\r\n","operationId":"Region_GetCollection","consumes":["application/json"],"produces":["application/json"],"parameters":[{"name":"filter","in":"query","required":false,"type":"string"},{"name":"search","in":"query","required":false,"type":"string"},{"name":"order","in":"query","required":false,"type":"string"},{"name":"max","in":"query","required":false,"type":"integer","format":"int32"},{"name":"page","in":"query","required":false,"type":"integer","format":"int32"},{"name":"includeCount","in":"query","required":false,"type":"boolean"},{"name":"includeDeleted","in":"query","required":false,"type":"boolean"},{"name":"links","in":"query","required":false,"type":"string"},{"name":"udf","in":"query","required":false,"type":"string"}],"responses":{"200":{"description":"OK","schema":{"$ref":"#/definitions/ApiResourceResultCollection[ApiIntegratorRegionResource]"}}}}},"/lists/regionCodes/{guid}":{"get":{"tags":["RegionCode"],"summary":"Find with GUID","description":"| Property                  | Description                                                              |\r\n| ------------------------- | ------------------------------------------------------------------------ |\r\n| GUID                      | The GUID associated to the regioncode \t\t\t                       |\r\n| Region\t                | The region of the regioncode \t\t\t\t\t\t\t\t\t\t\t   |\r\n| RegionCode\t            | The code associated to the regioncode \t                               |","operationId":"RegionCode_Get","consumes":["application/json"],"produces":["application/json"],"parameters":[{"name":"guid","in":"path","required":true,"type":"string","format":"uuid"},{"name":"links","in":"query","required":false,"type":"string"},{"name":"include","in":"query","required":false,"type":"string"},{"name":"expand","in":"query","required":false,"type":"string"},{"name":"udf","in":"query","required":false,"type":"string"}],"responses":{"200":{"description":"OK","schema":{"$ref":"#/definitions/ApiResourceResultEntity[ApiIntegratorRegionCodeResource]"}}}}},"/lists/regionCodes":{"get":{"tags":["RegionCode"],"summary":"Find with Filters","description":"| Property                  | Description                                                              |\r\n| ------------------------- | ------------------------------------------------------------------------ |\r\n| GUID                      | The GUID associated to the regioncode \t\t\t                       |\r\n| Region\t                | The region of the regioncode \t\t\t\t\t\t\t\t\t\t\t   |\r\n| RegionCode\t            | The code associated to the regioncode \t                               |","operationId":"RegionCode_GetCollection","consumes":["application/json"],"produces":["application/json"],"parameters":[{"name":"filter","in":"query","required":false,"type":"string"},{"name":"search","in":"query","required":false,"type":"string"},{"name":"order","in":"query","required":false,"type":"string"},{"name":"max","in":"query","required":false,"type":"integer","format":"int32"},{"name":"page","in":"query","required":false,"type":"integer","format":"int32"},{"name":"includeCount","in":"query","required":false,"type":"boolean"},{"name":"includeDeleted","in":"query","required":false,"type":"boolean"},{"name":"links","in":"query","required":false,"type":"string"},{"name":"udf","in":"query","required":false,"type":"string"}],"responses":{"200":{"description":"OK","schema":{"$ref":"#/definitions/ApiResourceResultCollection[ApiIntegratorRegionCodeResource]"}}}}},"/lists/reminderLetterPolicies/{guid}":{"get":{"tags":["ReminderLetterPolicy"],"summary":"Find with GUID","description":"| Property\t\t\t\t\t\t\t| Description                                                               |\r\n| --------------------------------\t| ------------------------------------------------------------------------  |\r\n| GUID\t\t\t\t\t\t\t\t| The GUID associated to the reminder letter policy                         |\r\n| Description\t\t\t\t\t\t| The description of the reminder letter policy                             |\r\n| IsDeleted\t\t\t\t\t\t\t| Whether the reminder letter policy is deleted\t\t \t\t\t\t\t\t|\r\n| CustomerCategoryListItem\t\t\t| The GUID and description of the customer category                         |\r\n| GracePeriod\t\t\t\t\t\t| The grace period of the reminder letter policy                            |\r\n| PaymentTypeListItem\t\t\t\t| The GUID and description of the payment type                              |\r\n| PrintThirdReminderLetterLocally   | The PrintThirdReminderLetterLocally of the reminder letter policy         |\r\n| SecondReminderLetterInterval      | The SecondReminderLetterInterval of the reminder letter policy            |                           |\r\n| ThirdReminderLetterInterval       | The ThirdReminderLetterInterval of the reminder letter policy             |\r\n| MinimumOverdueAmount\t\t\t\t| The MinimumOverdueAmount of the reminder letter policy                    |\r\n| ShortCode\t\t\t\t\t\t\t| The short code of the reminder letter policy\t\t\t\t\t\t\t\t|","operationId":"ReminderLetterPolicy_Get","consumes":["application/json"],"produces":["application/json"],"parameters":[{"name":"guid","in":"path","required":true,"type":"string","format":"uuid"},{"name":"links","in":"query","required":false,"type":"string"},{"name":"include","in":"query","required":false,"type":"string"},{"name":"expand","in":"query","required":false,"type":"string"},{"name":"udf","in":"query","required":false,"type":"string"}],"responses":{"200":{"description":"OK","schema":{"$ref":"#/definitions/ApiResourceResultEntity[ApiIntegratorReminderLetterPolicyResource]"}}}}},"/lists/reminderLetterPolicies":{"get":{"tags":["ReminderLetterPolicy"],"summary":"Find with Filters","description":"| Property\t\t\t\t\t\t\t| Description                                                               |\r\n| --------------------------------\t| ------------------------------------------------------------------------  |\r\n| GUID\t\t\t\t\t\t\t\t| The GUID associated to the reminder letter policy                         |\r\n| Description\t\t\t\t\t\t| The description of the reminder letter policy                             |\r\n| IsDeleted\t\t\t\t\t\t\t| Whether the reminder letter policy is deleted\t\t \t\t\t\t\t\t|\r\n| CustomerCategoryListItem\t\t\t| The GUID and description of the customer category                         |\r\n| GracePeriod\t\t\t\t\t\t| The grace period of the reminder letter policy                            |\r\n| PaymentTypeListItem\t\t\t\t| The GUID and description of the payment type                              |\r\n| PrintThirdReminderLetterLocally   | The PrintThirdReminderLetterLocally of the reminder letter policy         |\r\n| SecondReminderLetterInterval      | The SecondReminderLetterInterval of the reminder letter policy            |                           |\r\n| ThirdReminderLetterInterval       | The ThirdReminderLetterInterval of the reminder letter policy             |\r\n| MinimumOverdueAmount\t\t\t\t| The MinimumOverdueAmount of the reminder letter policy                    |\r\n| ShortCode\t\t\t\t\t\t\t| The short code of the reminder letter policy\t\t\t\t\t\t\t\t|","operationId":"ReminderLetterPolicy_GetCollection","consumes":["application/json"],"produces":["application/json"],"parameters":[{"name":"filter","in":"query","required":false,"type":"string"},{"name":"search","in":"query","required":false,"type":"string"},{"name":"order","in":"query","required":false,"type":"string"},{"name":"max","in":"query","required":false,"type":"integer","format":"int32"},{"name":"page","in":"query","required":false,"type":"integer","format":"int32"},{"name":"includeCount","in":"query","required":false,"type":"boolean"},{"name":"includeDeleted","in":"query","required":false,"type":"boolean"},{"name":"links","in":"query","required":false,"type":"string"},{"name":"udf","in":"query","required":false,"type":"string"}],"responses":{"200":{"description":"OK","schema":{"$ref":"#/definitions/ApiResourceResultCollection[ApiIntegratorReminderLetterPolicyResource]"}}}}},"/lists/rentalQuantityAttributes/{guid}":{"get":{"tags":["RentalQuantityAttribute"],"summary":"Find with GUID","description":"| Property                  | Description                                                              |\r\n| ------------------------- | ------------------------------------------------------------------------ |\r\n| GUID                      | The GUID associated to the rental quantity attribute                       |\r\n| Description               | The description of the rental quantity attribute                           |","operationId":"RentalQuantityAttribute_Get","consumes":["application/json"],"produces":["application/json"],"parameters":[{"name":"guid","in":"path","required":true,"type":"string","format":"uuid"},{"name":"links","in":"query","required":false,"type":"string"},{"name":"include","in":"query","required":false,"type":"string"},{"name":"expand","in":"query","required":false,"type":"string"},{"name":"udf","in":"query","required":false,"type":"string"}],"responses":{"200":{"description":"OK","schema":{"$ref":"#/definitions/ApiResourceResultEntity[ApiIntegratorRentalQuantityAttributeResource]"}}}}},"/lists/rentalQuantityAttributes":{"get":{"tags":["RentalQuantityAttribute"],"summary":"Find with Filters","description":"| Property                  | Description                                                              |\r\n| ------------------------- | ------------------------------------------------------------------------ |\r\n| GUID                      | The GUID associated to the rental quantity attribute                       |\r\n| Description               | The description of the rental quantity attribute                           |","operationId":"RentalQuantityAttribute_GetCollection","consumes":["application/json"],"produces":["application/json"],"parameters":[{"name":"filter","in":"query","required":false,"type":"string"},{"name":"search","in":"query","required":false,"type":"string"},{"name":"order","in":"query","required":false,"type":"string"},{"name":"max","in":"query","required":false,"type":"integer","format":"int32"},{"name":"page","in":"query","required":false,"type":"integer","format":"int32"},{"name":"includeCount","in":"query","required":false,"type":"boolean"},{"name":"includeDeleted","in":"query","required":false,"type":"boolean"},{"name":"links","in":"query","required":false,"type":"string"},{"name":"udf","in":"query","required":false,"type":"string"}],"responses":{"200":{"description":"OK","schema":{"$ref":"#/definitions/ApiResourceResultCollection[ApiIntegratorRentalQuantityAttributeResource]"}}}}},"/lists/rentTerms/{guid}":{"get":{"tags":["RentTerm"],"summary":"Find with GUID","description":"| Property                  | Description                                                              |\r\n| ------------------------- | ------------------------------------------------------------------------ |\r\n| GUID                      | The GUID associated to the rent term.                            |\r\n| Description\t\t\t\t| The description of the rent term.\t\t     \t\t\t\t\t   |\r\n","operationId":"RentTerm_Get","consumes":["application/json"],"produces":["application/json"],"parameters":[{"name":"guid","in":"path","required":true,"type":"string","format":"uuid"},{"name":"links","in":"query","required":false,"type":"string"},{"name":"include","in":"query","required":false,"type":"string"},{"name":"expand","in":"query","required":false,"type":"string"},{"name":"udf","in":"query","required":false,"type":"string"}],"responses":{"200":{"description":"OK","schema":{"$ref":"#/definitions/ApiResourceResultEntity[ApiIntegratorRentTermResource]"}}}}},"/lists/rentTerms":{"get":{"tags":["RentTerm"],"summary":"Find with Filters","description":"| Property                  | Description                                                              |\r\n| ------------------------- | ------------------------------------------------------------------------ |\r\n| GUID                      | The GUID associated to the rent term.                            |\r\n| Description\t\t\t\t| The description of the rent term.\t\t     \t\t\t\t\t   |\r\n","operationId":"RentTerm_GetCollection","consumes":["application/json"],"produces":["application/json"],"parameters":[{"name":"filter","in":"query","required":false,"type":"string"},{"name":"search","in":"query","required":false,"type":"string"},{"name":"order","in":"query","required":false,"type":"string"},{"name":"max","in":"query","required":false,"type":"integer","format":"int32"},{"name":"page","in":"query","required":false,"type":"integer","format":"int32"},{"name":"includeCount","in":"query","required":false,"type":"boolean"},{"name":"includeDeleted","in":"query","required":false,"type":"boolean"},{"name":"links","in":"query","required":false,"type":"string"},{"name":"udf","in":"query","required":false,"type":"string"}],"responses":{"200":{"description":"OK","schema":{"$ref":"#/definitions/ApiResourceResultCollection[ApiIntegratorRentTermResource]"}}}}},"/transport/routes/changes":{"get":{"tags":["Route"],"summary":"Retrieve changes","description":"| Property\t\t\t\t\t\t\t\t\t\t| Description                                                                   |\r\n| --------------------------------------------- | ----------------------------------------------------------------------------- |\r\n| GUID\t\t\t\t\t\t\t\t\t\t\t| The GUID associated to the route.\t\t\t\t\t\t\t\t\t\t\t\t|\r\n| RouteManagementTypeListItem\t\t\t\t\t| The GUID and description of the RouteManagementType associated to the route. \t|\t\r\n| AreaOfOriginListItem\t\t\t\t\t\t\t| The GUID and description of the AreaOfOrigin associated to the route. \t\t|\r\n| VehicleTypeListItem\t\t\t\t\t\t\t| The GUID and description of the VehicleType associated to the route. \t\t\t|\t\r\n| MaterialListItem\t\t\t\t\t\t\t\t| The GUID and description of the Material associated to the route. \t\t\t|\t\r\n| CompanyOutletListItem\t\t\t\t\t\t\t| The GUID and description of the CompanyOutlet associated to the route.\t\t|\t\r\n| DefaultTipMaterialListItem\t\t\t\t\t| The GUID and description of the DefaultTipMaterial associated to the route.\t|\r\n| IsDiffReasonRequired\t\t\t\t\t\t\t| Does the route need a Diff Reason?\t\t\t\t\t\t\t\t\t\t\t|\r\n| IsWeighingsComplete\t\t\t\t\t\t\t| Are the route weighings complete?\t\t\t\t\t\t\t\t\t\t\t\t|\r\n| IsCompleted\t\t\t\t\t\t\t\t\t| Is the route completed?\t\t\t\t\t\t\t\t\t\t\t\t\t\t|\r\n| IsDeleted\t\t\t\t\t\t\t\t\t\t| Whether the route is deleted.\t\t\t\t\t\t\t\t                    |\r\n| IsMissedReasonRequired\t\t\t\t\t\t| Is the route missed reason required?\t\t\t\t\t\t\t\t\t\t\t|\r\n| IsPromptForLiftsOnVisitCompletion\t\t\t\t| Prompt for lifts on visit completion?\t\t\t\t\t\t\t\t\t\t\t|\r\n| IsOrderSupplierUsedForCostGeneration\t\t\t| Is the order supplier used for cost generation?\t\t\t\t\t\t\t\t|\r\n| RelatedRouteTemplateGuid\t\t\t\t\t\t| The GUID of the RouteTemplate associated to the route\t\t\t\t\t\t\t|\r\n| IsNoTagStopEnabled\t\t\t\t\t\t\t| Is no tag stop enabled?\t\t\t\t\t\t\t\t\t\t\t\t\t\t|\r\n| IsSubContracted\t\t\t\t\t\t\t\t| Is the route sub contracted?\t\t\t\t\t\t\t\t\t\t\t\t\t|\r\n| RelatedLocationDestinationGuid\t\t\t\t| Used to filter on the related destination location GUID.\t\t\t\t\t\t|\r\n| RelatedVehicleGuid\t\t\t\t\t\t\t| Used to filter on the related vehicle GUID.\t\t\t\t\t\t\t\t\t|\r\n| RelatedMasterRouteGuid\t\t\t\t\t\t| Used to filter on the related master route GUID.\t\t\t\t\t\t\t\t|\r\n| RelatedSupplierSiteGuid\t\t\t\t\t\t| Used to filter on the related supplier site GUID.\t\t\t\t\t\t\t\t|\r\n| RelatedSupplierSiteTransportGuid\t\t\t\t| Used to filter on the related supplier site transport GUID.\t\t\t\t\t|\r\n| RelatedUserStartDefectCheckGuid\t\t\t\t| Used to filter on the related start defect check user GUID.\t\t\t\t\t|\r\n| RelatedUserEndDefectCheckGuid\t\t\t\t\t| Used to filter on the related end defect check user GUID.\t\t\t\t\t\t|\r\n| StartLeaveYardTime\t\t\t\t\t\t\t| The leave yard time associated to the route.\t\t\t\t\t\t\t\t\t|\r\n| EndYardLeaveTime\t\t\t\t\t\t\t\t| The return yard time associated to the route.\t\t\t\t\t\t\t\t\t|\r\n| StartPlannedTime\t\t\t\t\t\t\t\t| The planned start time associated to the route.\t\t\t\t\t\t\t\t|\r\n| EndPlannedTime\t\t\t\t\t\t\t\t| The planned end time associated to the route.\t\t\t\t\t\t\t\t\t|\r\n| StartRouteTime\t\t\t\t\t\t\t\t| The start route time associated to the route.\t\t\t\t\t\t\t\t\t|\r\n| EndRouteTime\t\t\t\t\t\t\t\t\t| The end route time associated to the route.\t\t\t\t\t\t\t\t\t|\r\n| RouteDate\t\t\t\t\t\t\t\t\t\t| The date associated to the route.\tFilterable.\t\t\t\t\t\t\t\t\t|\r\n| Description\t\t\t\t\t\t\t\t\t| The description associated to the route.\t\t\t\t\t\t\t\t\t\t|\r\n| RouteNo\t\t\t\t\t\t\t\t\t\t| The route no associated to the route.\tFilterable.\t\t\t\t\t\t\t\t|\r\n| DistanceTravelled\t\t\t\t\t\t\t\t| The distance travelled associated to the route.\t\t\t\t\t\t\t\t|\r\n| FuelUsed\t\t\t\t\t\t\t\t\t\t| The fuel used associated to the route.\t\t\t\t\t\t\t\t\t\t|\r\n| FuelCost\t\t\t\t\t\t\t\t\t\t| The fuel cost associated to the route.\t\t\t\t\t\t\t\t\t\t|\r\n| FleetPlannerTripNo\t\t\t\t\t\t\t| The fleet planner trip no associated to the route.\t\t\t\t\t\t\t|\r\n| AcceptedMaterials\t\t\t\t\t\t\t\t| An array of accepted materials.\t\t\t\t\t\t\t\t\t\t\t\t|\r\n| AcceptedMaterials[0].Guid\t\t\t\t\t\t| The GUID of accepted material.\t\t\t\t\t\t\t\t\t\t\t\t|\r\n| AcceptedMaterials[0].IsDeleted\t\t\t\t| Whether accepted material is deleted.\t\t\t\t\t\t\t\t\t\t\t|\r\n| AcceptedMaterials[0].MaterialClassListItem\t| The GUID and description of material class\t\t\t\t\t\t\t\t\t|\r\n| Driver\t\t\t\t\t\t\t\t\t\t| The driver object.\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t|\t\t\r\n| Driver.RelatedUserDriverGuid\t\t\t\t\t| Guid of the Related user driver.\t\t\t\t\t\t\t\t\t\t\t\t|\r\n| Driver.ClockOnTime\t\t\t\t\t\t\t| The clock on time associated to the route.\t\t\t\t\t\t\t\t\t|\r\n| Driver.ClockOffTime\t\t\t\t\t\t\t| The clock off time associated to the route.\t\t\t\t\t\t\t\t\t|\r\n| Driver.CrewNumber\t\t\t\t\t\t\t\t| The crew number associated to the route.\t\t\t\t\t\t\t\t\t\t|\r\n| VehicleChecks\t\t\t\t\t\t\t\t\t| The vehicle checks object.\t\t\t\t\t\t\t\t\t\t\t\t\t|\t\t\r\n| VehicleChecks.StartMileage\t\t\t\t\t| The start mileage associated to the route.\t\t\t\t\t\t\t\t\t|\r\n| VehicleChecks.StartHubometerTime\t\t\t\t| The hubometer start time associated to the route.\t\t\t\t\t\t\t\t|\r\n| VehicleChecks.EndHubometerTime\t\t\t\t| The hubometer end time associated to the route.\t\t\t\t\t\t\t\t|\r\n| VehicleChecks.EndMileage\t\t\t\t\t\t| The end mileage associated to the route.\t\t\t\t\t\t\t\t\t\t|\r\n| VehicleChecks.Notes\t\t\t\t\t\t\t| The notes associated to the route.\t\t\t\t\t\t\t\t\t\t\t|\r\n| VehicleChecks.StartSafetyCheck\t\t\t\t| The start safety check associated to the route.\t\t\t\t\t\t\t\t|\r\n| VehicleChecks.StartDefectTicketNo\t\t\t\t| The start defect ticket number associated to the route.\t\t\t\t\t\t|\r\n| VehicleChecks.StartNotes\t\t\t\t\t\t| The start notes associated to the route.\t\t\t\t\t\t\t\t\t\t|\r\n| VehicleChecks.EndSafetyCheck\t\t\t\t\t| The end safety check associated to the route.\t\t\t\t\t\t\t\t\t|\r\n| VehicleChecks.EndDefectTicketNo\t\t\t\t| The end defect ticket number associated to the route.\t\t\t\t\t\t\t|\r\n| VehicleChecks.EndNotes\t\t\t\t\t\t| The end notes associated to the route.\t\t\t\t\t\t\t\t\t\t|\r\n| VehicleChecks.StartHubometerDistance\t\t\t| The hubometer start distance associated to the route.\t\t\t\t\t\t\t|\r\n| VehicleChecks.EndHubometerDistance\t\t\t| The hubometer end distance associated to the route.\t\t\t\t\t\t\t|\r\n| RelatedUserDriverGuidFilter\t\t\t\t\t| Used to filter on the related driver GUID.\t\t\t\t\t\t\t\t\t|\r\n","operationId":"Route_GetChanges","consumes":["application/json"],"produces":["application/json"],"parameters":[{"name":"since","in":"query","required":false,"type":"string"},{"name":"cursor","in":"query","required":false,"type":"string"},{"name":"links","in":"query","required":false,"type":"string"}],"responses":{"200":{"description":"OK","schema":{"$ref":"#/definitions/ApiResourceChanges[ApiIntegratorRouteResource]"}}}}},"/transport/routes/{guid}":{"get":{"tags":["Route"],"summary":"Find with GUID","description":"| Property\t\t\t\t\t\t\t\t\t\t| Description                                                                   |\r\n| --------------------------------------------- | ----------------------------------------------------------------------------- |\r\n| GUID\t\t\t\t\t\t\t\t\t\t\t| The GUID associated to the route.\t\t\t\t\t\t\t\t\t\t\t\t|\r\n| RouteManagementTypeListItem\t\t\t\t\t| The GUID and description of the RouteManagementType associated to the route. \t|\t\r\n| AreaOfOriginListItem\t\t\t\t\t\t\t| The GUID and description of the AreaOfOrigin associated to the route. \t\t|\r\n| VehicleTypeListItem\t\t\t\t\t\t\t| The GUID and description of the VehicleType associated to the route. \t\t\t|\t\r\n| MaterialListItem\t\t\t\t\t\t\t\t| The GUID and description of the Material associated to the route. \t\t\t|\t\r\n| CompanyOutletListItem\t\t\t\t\t\t\t| The GUID and description of the CompanyOutlet associated to the route.\t\t|\t\r\n| DefaultTipMaterialListItem\t\t\t\t\t| The GUID and description of the DefaultTipMaterial associated to the route.\t|\r\n| IsDiffReasonRequired\t\t\t\t\t\t\t| Does the route need a Diff Reason?\t\t\t\t\t\t\t\t\t\t\t|\r\n| IsWeighingsComplete\t\t\t\t\t\t\t| Are the route weighings complete?\t\t\t\t\t\t\t\t\t\t\t\t|\r\n| IsCompleted\t\t\t\t\t\t\t\t\t| Is the route completed?\t\t\t\t\t\t\t\t\t\t\t\t\t\t|\r\n| IsDeleted\t\t\t\t\t\t\t\t\t\t| Whether the route is deleted.\t\t\t\t\t\t\t\t                    |\r\n| IsMissedReasonRequired\t\t\t\t\t\t| Is the route missed reason required?\t\t\t\t\t\t\t\t\t\t\t|\r\n| IsPromptForLiftsOnVisitCompletion\t\t\t\t| Prompt for lifts on visit completion?\t\t\t\t\t\t\t\t\t\t\t|\r\n| IsOrderSupplierUsedForCostGeneration\t\t\t| Is the order supplier used for cost generation?\t\t\t\t\t\t\t\t|\r\n| RelatedRouteTemplateGuid\t\t\t\t\t\t| The GUID of the RouteTemplate associated to the route\t\t\t\t\t\t\t|\r\n| IsNoTagStopEnabled\t\t\t\t\t\t\t| Is no tag stop enabled?\t\t\t\t\t\t\t\t\t\t\t\t\t\t|\r\n| IsSubContracted\t\t\t\t\t\t\t\t| Is the route sub contracted?\t\t\t\t\t\t\t\t\t\t\t\t\t|\r\n| RelatedLocationDestinationGuid\t\t\t\t| Used to filter on the related destination location GUID.\t\t\t\t\t\t|\r\n| RelatedVehicleGuid\t\t\t\t\t\t\t| Used to filter on the related vehicle GUID.\t\t\t\t\t\t\t\t\t|\r\n| RelatedMasterRouteGuid\t\t\t\t\t\t| Used to filter on the related master route GUID.\t\t\t\t\t\t\t\t|\r\n| RelatedSupplierSiteGuid\t\t\t\t\t\t| Used to filter on the related supplier site GUID.\t\t\t\t\t\t\t\t|\r\n| RelatedSupplierSiteTransportGuid\t\t\t\t| Used to filter on the related supplier site transport GUID.\t\t\t\t\t|\r\n| RelatedUserStartDefectCheckGuid\t\t\t\t| Used to filter on the related start defect check user GUID.\t\t\t\t\t|\r\n| RelatedUserEndDefectCheckGuid\t\t\t\t\t| Used to filter on the related end defect check user GUID.\t\t\t\t\t\t|\r\n| StartLeaveYardTime\t\t\t\t\t\t\t| The leave yard time associated to the route.\t\t\t\t\t\t\t\t\t|\r\n| EndYardLeaveTime\t\t\t\t\t\t\t\t| The return yard time associated to the route.\t\t\t\t\t\t\t\t\t|\r\n| StartPlannedTime\t\t\t\t\t\t\t\t| The planned start time associated to the route.\t\t\t\t\t\t\t\t|\r\n| EndPlannedTime\t\t\t\t\t\t\t\t| The planned end time associated to the route.\t\t\t\t\t\t\t\t\t|\r\n| StartRouteTime\t\t\t\t\t\t\t\t| The start route time associated to the route.\t\t\t\t\t\t\t\t\t|\r\n| EndRouteTime\t\t\t\t\t\t\t\t\t| The end route time associated to the route.\t\t\t\t\t\t\t\t\t|\r\n| RouteDate\t\t\t\t\t\t\t\t\t\t| The date associated to the route.\tFilterable.\t\t\t\t\t\t\t\t\t|\r\n| Description\t\t\t\t\t\t\t\t\t| The description associated to the route.\t\t\t\t\t\t\t\t\t\t|\r\n| RouteNo\t\t\t\t\t\t\t\t\t\t| The route no associated to the route.\tFilterable.\t\t\t\t\t\t\t\t|\r\n| DistanceTravelled\t\t\t\t\t\t\t\t| The distance travelled associated to the route.\t\t\t\t\t\t\t\t|\r\n| FuelUsed\t\t\t\t\t\t\t\t\t\t| The fuel used associated to the route.\t\t\t\t\t\t\t\t\t\t|\r\n| FuelCost\t\t\t\t\t\t\t\t\t\t| The fuel cost associated to the route.\t\t\t\t\t\t\t\t\t\t|\r\n| FleetPlannerTripNo\t\t\t\t\t\t\t| The fleet planner trip no associated to the route.\t\t\t\t\t\t\t|\r\n| AcceptedMaterials\t\t\t\t\t\t\t\t| An array of accepted materials.\t\t\t\t\t\t\t\t\t\t\t\t|\r\n| AcceptedMaterials[0].Guid\t\t\t\t\t\t| The GUID of accepted material.\t\t\t\t\t\t\t\t\t\t\t\t|\r\n| AcceptedMaterials[0].IsDeleted\t\t\t\t| Whether accepted material is deleted.\t\t\t\t\t\t\t\t\t\t\t|\r\n| AcceptedMaterials[0].MaterialClassListItem\t| The GUID and description of material class\t\t\t\t\t\t\t\t\t|\r\n| Driver\t\t\t\t\t\t\t\t\t\t| The driver object.\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t|\t\t\r\n| Driver.RelatedUserDriverGuid\t\t\t\t\t| Guid of the Related user driver.\t\t\t\t\t\t\t\t\t\t\t\t|\r\n| Driver.ClockOnTime\t\t\t\t\t\t\t| The clock on time associated to the route.\t\t\t\t\t\t\t\t\t|\r\n| Driver.ClockOffTime\t\t\t\t\t\t\t| The clock off time associated to the route.\t\t\t\t\t\t\t\t\t|\r\n| Driver.CrewNumber\t\t\t\t\t\t\t\t| The crew number associated to the route.\t\t\t\t\t\t\t\t\t\t|\r\n| VehicleChecks\t\t\t\t\t\t\t\t\t| The vehicle checks object.\t\t\t\t\t\t\t\t\t\t\t\t\t|\t\t\r\n| VehicleChecks.StartMileage\t\t\t\t\t| The start mileage associated to the route.\t\t\t\t\t\t\t\t\t|\r\n| VehicleChecks.StartHubometerTime\t\t\t\t| The hubometer start time associated to the route.\t\t\t\t\t\t\t\t|\r\n| VehicleChecks.EndHubometerTime\t\t\t\t| The hubometer end time associated to the route.\t\t\t\t\t\t\t\t|\r\n| VehicleChecks.EndMileage\t\t\t\t\t\t| The end mileage associated to the route.\t\t\t\t\t\t\t\t\t\t|\r\n| VehicleChecks.Notes\t\t\t\t\t\t\t| The notes associated to the route.\t\t\t\t\t\t\t\t\t\t\t|\r\n| VehicleChecks.StartSafetyCheck\t\t\t\t| The start safety check associated to the route.\t\t\t\t\t\t\t\t|\r\n| VehicleChecks.StartDefectTicketNo\t\t\t\t| The start defect ticket number associated to the route.\t\t\t\t\t\t|\r\n| VehicleChecks.StartNotes\t\t\t\t\t\t| The start notes associated to the route.\t\t\t\t\t\t\t\t\t\t|\r\n| VehicleChecks.EndSafetyCheck\t\t\t\t\t| The end safety check associated to the route.\t\t\t\t\t\t\t\t\t|\r\n| VehicleChecks.EndDefectTicketNo\t\t\t\t| The end defect ticket number associated to the route.\t\t\t\t\t\t\t|\r\n| VehicleChecks.EndNotes\t\t\t\t\t\t| The end notes associated to the route.\t\t\t\t\t\t\t\t\t\t|\r\n| VehicleChecks.StartHubometerDistance\t\t\t| The hubometer start distance associated to the route.\t\t\t\t\t\t\t|\r\n| VehicleChecks.EndHubometerDistance\t\t\t| The hubometer end distance associated to the route.\t\t\t\t\t\t\t|\r\n| RelatedUserDriverGuidFilter\t\t\t\t\t| Used to filter on the related driver GUID.\t\t\t\t\t\t\t\t\t|\r\n","operationId":"Route_Get","consumes":["application/json"],"produces":["application/json"],"parameters":[{"name":"guid","in":"path","required":true,"type":"string","format":"uuid"},{"name":"links","in":"query","required":false,"type":"string"},{"name":"include","in":"query","required":false,"type":"string"},{"name":"expand","in":"query","required":false,"type":"string"},{"name":"udf","in":"query","required":false,"type":"string"}],"responses":{"200":{"description":"OK","schema":{"$ref":"#/definitions/ApiResourceResultEntity[ApiIntegratorRouteResource]"}}}},"put":{"tags":["Route"],"summary":"Partial update","description":"| Property                              | Description                                                                   | Required |\r\n| ------------------------------------- | ----------------------------------------------------------------------------- | -------- |\r\n| GUID\t\t\t\t\t\t\t\t\t| The GUID associated to the route.\t\t\t\t\t\t\t\t\t\t\t\t| No |\r\n| RouteManagementTypeListItem\t\t\t| The GUID and description of the RouteManagementType associated to the route. \t| Yes |\r\n| AreaOfOriginListItem\t\t\t\t\t| The GUID and description of the AreaOfOrigin associated to the route. \t\t| No |\r\n| VehicleTypeListItem\t\t\t\t\t| The GUID and description of the VehicleType associated to the route. \t\t\t| No |\r\n| MaterialListItem\t\t\t\t\t    | The GUID and description of the Material associated to the route. \t\t\t| No |\r\n| CompanyOutletListItem\t\t\t\t\t| The GUID and description of the CompanyOutlet associated to the route.\t\t| No |\r\n| DefaultTipMaterialListItem\t\t\t| The GUID and description of the DefaultTipMaterial associated to the route.\t| No |\r\n| IsDiffReasonRequired\t\t\t\t\t| Does the route need a Diff Reason?\t\t\t\t\t\t\t\t\t\t\t| No |\r\n| IsWeighingsComplete\t\t\t\t\t| Are the route weighings complete?\t\t\t\t\t\t\t\t\t\t\t\t| No |\r\n| IsCompleted\t\t\t\t\t\t\t| Is the route completed?\t\t\t\t\t\t\t\t\t\t\t\t\t\t| No |\r\n| IsDeleted\t\t\t\t\t\t\t\t| Whether the route is deleted.\t\t\t\t\t\t\t\t\t\t\t\t\t| No |\r\n| IsMissedReasonRequired\t\t\t\t| Is the route missed reason required?\t\t\t\t\t\t\t\t\t\t\t| No |\r\n| IsPromptForLiftsOnVisitCompletion\t\t| Prompt for lifts on visit completion?\t\t\t\t\t\t\t\t\t\t\t| No |\r\n| IsOrderSupplierUsedForCostGeneration\t| Is the order supplier used for cost generation?\t\t\t\t\t\t\t\t| No |\r\n| RelatedRouteTemplateGuid\t\t\t\t| The GUID of the RouteTemplate associated to the route\t\t\t\t\t\t\t| Yes |\r\n| IsNoTagStopEnabled\t\t\t\t\t| Is no tag stop enabled?\t\t\t\t\t\t\t\t\t\t\t\t\t\t| No |\r\n| IsSubContracted\t\t\t\t\t\t| Is the route sub contracted?\t\t\t\t\t\t\t\t\t\t\t\t\t| No |\r\n| RelatedLocationDestinationGuid\t\t| Used to filter on the related destination location GUID.\t\t\t\t\t\t| No |\r\n| RelatedVehicleGuid\t\t\t\t\t| Used to filter on the related vehicle GUID.\t\t\t\t\t\t\t\t\t| No |\r\n| RelatedMasterRouteGuid\t\t\t\t| Used to filter on the related master route GUID.\t\t\t\t\t\t\t\t| No |\r\n| RelatedSupplierSiteGuid\t\t\t\t| Used to filter on the related supplier site GUID.\t\t\t\t\t\t\t\t| No |\r\n| RelatedSupplierSiteTransportGuid\t\t| Used to filter on the related supplier site transport GUID.\t\t\t\t\t| No |\r\n| RelatedUserStartDefectCheckGuid\t\t| Used to filter on the related start defect check user GUID.\t\t\t\t\t| No |\r\n| RelatedUserEndDefectCheckGuid\t\t\t| Used to filter on the related end defect check user GUID.\t\t\t\t\t\t| No |\r\n| StartLeaveYardTime\t\t\t\t\t| The leave yard time associated to the route.\t\t\t\t\t\t\t\t\t| No |\r\n| EndYardLeaveTime\t\t\t\t\t\t| The return yard time associated to the route.\t\t\t\t\t\t\t\t\t| No |\r\n| StartPlannedTime\t\t\t\t\t\t| The planned start time associated to the route.\t\t\t\t\t\t\t\t| No |\r\n| EndPlannedTime\t\t\t\t\t\t| The planned end time associated to the route.\t\t\t\t\t\t\t\t\t| No |\r\n| StartRouteTime\t\t\t\t\t\t| The start route time associated to the route.\t\t\t\t\t\t\t\t\t| No |\r\n| EndRouteTime\t\t\t\t\t\t\t| The end route time associated to the route.\t\t\t\t\t\t\t\t\t| No |\r\n| RouteDate\t\t\t\t\t\t\t\t| The date associated to the route.\t\t\t\t\t\t\t\t\t\t\t\t| No |\r\n| Description\t\t\t\t\t\t\t| The description associated to the route.\t\t\t\t\t\t\t\t\t\t| Yes |\r\n| RouteNo\t\t\t\t\t\t\t\t| The route no associated to the route.\t\t\t\t\t\t\t\t\t\t\t| No |\r\n| DistanceTravelled\t\t\t\t\t\t| The distance travelled associated to the route.\t\t\t\t\t\t\t\t| No |\r\n| FuelUsed\t\t\t\t\t\t\t\t| The fuel used associated to the route.\t\t\t\t\t\t\t\t\t\t| No |\r\n| FuelCost\t\t\t\t\t\t\t\t| The fuel cost associated to the route.\t\t\t\t\t\t\t\t\t\t| No |\r\n| FleetPlannerTripNo\t\t\t\t\t| The fleet planner trip no associated to the route.\t\t\t\t\t\t\t| No |\r\n| AcceptedMaterials\t\t\t\t\t\t| An array of accepted materials.\t\t\t\t\t\t\t\t\t\t\t\t| No |\t\r\n| AcceptedMaterials.Guid\t\t\t\t| Guid of accepted material.\t\t\t\t\t\t\t\t\t\t\t\t\t| No |\t\r\n| AcceptedMaterials.IsDeleted\t\t\t| Whether the accepted material is deleted.\t\t\t\t\t\t\t\t\t\t| Yes |\r\n| AcceptedMaterials.MaterialClassItem\t| Guid and description of material class.\t\t\t\t\t\t\t\t\t\t| Yes |\r\n| Driver\t\t\t\t\t\t\t\t| The driver object.\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t| No |\r\n| Driver.RelatedUserDriverGuid\t\t\t| Guid of the Related user driver.\t\t\t\t\t\t\t\t\t\t\t\t| No |\r\n| Driver.ClockOnTime\t\t\t\t\t| The clock on time associated to the route.\t\t\t\t\t\t\t\t\t| No |\r\n| Driver.ClockOffTime\t\t\t\t\t| The clock off time associated to the route.\t\t\t\t\t\t\t\t\t| No |\r\n| Driver.CrewNumber\t\t\t\t\t\t| The crew number associated to the route.\t\t\t\t\t\t\t\t\t\t| No |\r\n| VehicleChecks\t\t\t\t\t\t\t| The vehicle checks object.\t\t\t\t\t\t\t\t\t\t\t\t\t| No |\r\n| VehicleChecks.StartMileage\t\t\t| The start mileage associated to the route.\t\t\t\t\t\t\t\t\t| No |\r\n| VehicleChecks.StartHubometerTime\t\t| The hubometer start time associated to the route.\t\t\t\t\t\t\t\t| No |\r\n| VehicleChecks.EndHubometerTime\t\t| The hubometer end time associated to the route.\t\t\t\t\t\t\t\t| No |\r\n| VehicleChecks.EndMileage\t\t\t\t| The end mileage associated to the route.\t\t\t\t\t\t\t\t\t\t| No |\r\n| VehicleChecks.Notes\t\t\t\t\t| The notes associated to the route.\t\t\t\t\t\t\t\t\t\t\t| No |\r\n| VehicleChecks.StartSafetyCheck\t\t| The start safety check associated to the route.\t\t\t\t\t\t\t\t| No |\r\n| VehicleChecks.StartDefectTicketNo\t\t| The start defect ticket number associated to the route.\t\t\t\t\t\t| No |\r\n| VehicleChecks.StartNotes\t\t\t\t| The start notes associated to the route.\t\t\t\t\t\t\t\t\t\t| No |\r\n| VehicleChecks.EndSafetyCheck\t\t\t| The end safety check associated to the route.\t\t\t\t\t\t\t\t\t| No |\r\n| VehicleChecks.EndDefectTicketNo\t\t| The end defect ticket number associated to the route.\t\t\t\t\t\t\t| No |\r\n| VehicleChecks.EndNotes\t\t\t\t| The end notes associated to the route.\t\t\t\t\t\t\t\t\t\t| No |\r\n| VehicleChecks.StartHubometerDistance\t| The hubometer start distance associated to the route.\t\t\t\t\t\t\t| No |\r\n| VehicleChecks.EndHubometerDistance\t| The hubometer end distance associated to the route.\t\t\t\t\t\t\t| No |\r\n| RelatedUserDriverGuidFilter\t\t\t| Used to filter on the related driver GUID.\t\t\t\t\t\t\t\t\t| No |\r\n\r\n\r\n## Extra validations\r\n\r\n| Condition | Error message |\r\n| --------- | ------------- |\r\n| RouteManagementTypeListItem is being edited | RouteManagementTypeListItem.Guid is a read-only property. |\r\n| RelatedMasterRouteGuid is being edited | RelatedMasterRouteGuid is a read-only property. |\r\n| Description is being edited | Description is a read-only property. |\r\n| IsDiffReasonRequired is being edited | IsDiffReasonRequired is a read-only property. |\r\n| IsMissedReasonRequired is being edited | IsMissedReasonRequired is a read-only property. |\r\n| IsPromptForLiftsOnVisitCompletion is being edited | IsPromptForLiftsOnVisitCompletion is a read-only property. |\r\n| IsOrderSupplierUsedForCostGeneration is being edited | IsOrderSupplierUsedForCostGeneration is a read-only property. |\r\n| RouteNo is being edited | RouteNo is a read-only property. |\r\n| DistanceTravelled is being edited | DistanceTravelled is a read-only property. |\r\n| FuelUsed is being edited | FuelUsed is a read-only property. |\r\n| FuelCost is being edited | FuelCost is a read-only property. |\r\n| IsNoTagStopEnabled is being edited | IsNoTagStopEnabled is a read-only property. |\r\n| FleetPlannerTripNo is being edited | FleetPlannerTripNo is a read-only property. |\r\n| RouteDate is being edited | RouteDate is a read-only property. |\r\n| StartLeaveYardTime is being edited | StartLeaveYardTime is a read-only property. |\r\n| EndYardLeaveTime is being edited | EndYardLeaveTime is a read-only property. |\r\n| StartPlannedTime is being edited | StartPlannedTime is a read-only property. |\r\n| EndPlannedTime is being edited | EndPlannedTime is a read-only property. |\r\n| Driver.CrewNumber is being edited | Driver.CrewNumber is a read-only property. |\r\n| Driver.ClockOnTime is being edited | Driver.ClockOnTime is a read-only property. |\r\n| Driver.ClockOffTime is being edited | Driver.ClockOffTime is a read-only property. |\r\n| VehicleChecks.RelatedUserStartDefectCheckGuid is being edited | VehicleChecks.RelatedUserStartDefectCheckGuid is a read-only property. |\r\n| VehicleChecks.RelatedUserEndDefectCheckGuid is being edited | VehicleChecks.RelatedUserEndDefectCheckGuid is a read-only property. |\r\n| VehicleChecks.Notes is being edited | VehicleChecks.Notes is a read-only property. |\r\n| VehicleChecks.StartSafetyCheck is being edited | VehicleChecks.StartSafetyCheck is a read-only property. |\r\n| VehicleChecks.StartDefectTicketNo is being edited | VehicleChecks.StartDefectTicketNo is a read-only property. |\r\n| VehicleChecks.StartNotes is being edited | VehicleChecks.StartNotes is a read-only property. |\r\n| VehicleChecks.EndSafetyCheck is being edited | VehicleChecks.EndSafetyCheck is a read-only property. |\r\n| VehicleChecks.EndDefectTicketNo is being edited | VehicleChecks.EndDefectTicketNo is a read-only property. |\r\n| VehicleChecks.EndNotes is being edited | VehicleChecks.EndNotes is a read-only property. |\r\n| VehicleChecks.StartHubometerDistance is being edited | VehicleChecks.StartHubometerDistance is a read-only property. |\r\n| VehicleChecks.EndHubometerDistance is being edited | VehicleChecks.EndHubometerDistance is a read-only property. |\r\n| If IsCompleted true and IsWeighingsComplete false |  Attempt to complete a route with incomplete weighings. Could not process the update. Ensure the weighings are complete and set the IsWeighingsComplete to true in the request. |\r\n| If IsCompleted updated from true to false and update any property | Attempt to update the properties of a completed route. Could not process the update. Set IsComplete to false individually to uncomplate the route before requesting an update. |\r\n| If IsDeleted is true | IsDeleted is TRUE. Could not process the request. Resources can not be deleted via the REST API. |\r\n| Updating a deleted Route | Failed to save/update Route because attempt to update a deleted Route is not allowed. Could not process the request. |\r\n| AcceptedMaterials.MaterialClassListItem is being edited | AcceptedMaterials.MaterialClassListItem is a read-only property. |\r\n| AcceptedMaterials.MaterialClassListItem.Guid is duplicate | The MaterialClassListItem must be unique per AcceptedMaterials |\r\n| If AreaOfOriginListItem.Guid is null and RelatedSupplierSiteTransportGuid is null | The mandatory property AreaOfOriginListItem.Guid has a null value. The request could not be processed. Supply a value for the AreaOfOriginListItem.Guid property of the submitted resource. |","operationId":"Route_Update","consumes":["application/json"],"produces":["application/json"],"parameters":[{"name":"guid","in":"path","required":true,"type":"string","format":"uuid"},{"in":"body","required":true,"schema":{"$ref":"#/definitions/ApiResourceId"}}],"responses":{"200":{"description":"OK","schema":{"$ref":"#/definitions/ApiResourceId"}}}}},"/transport/routes":{"get":{"tags":["Route"],"summary":"Find with Filters","description":"| Property\t\t\t\t\t\t\t\t\t\t| Description                                                                   |\r\n| --------------------------------------------- | ----------------------------------------------------------------------------- |\r\n| GUID\t\t\t\t\t\t\t\t\t\t\t| The GUID associated to the route.\t\t\t\t\t\t\t\t\t\t\t\t|\r\n| RouteManagementTypeListItem\t\t\t\t\t| The GUID and description of the RouteManagementType associated to the route. \t|\t\r\n| AreaOfOriginListItem\t\t\t\t\t\t\t| The GUID and description of the AreaOfOrigin associated to the route. \t\t|\r\n| VehicleTypeListItem\t\t\t\t\t\t\t| The GUID and description of the VehicleType associated to the route. \t\t\t|\t\r\n| MaterialListItem\t\t\t\t\t\t\t\t| The GUID and description of the Material associated to the route. \t\t\t|\t\r\n| CompanyOutletListItem\t\t\t\t\t\t\t| The GUID and description of the CompanyOutlet associated to the route.\t\t|\t\r\n| DefaultTipMaterialListItem\t\t\t\t\t| The GUID and description of the DefaultTipMaterial associated to the route.\t|\r\n| IsDiffReasonRequired\t\t\t\t\t\t\t| Does the route need a Diff Reason?\t\t\t\t\t\t\t\t\t\t\t|\r\n| IsWeighingsComplete\t\t\t\t\t\t\t| Are the route weighings complete?\t\t\t\t\t\t\t\t\t\t\t\t|\r\n| IsCompleted\t\t\t\t\t\t\t\t\t| Is the route completed?\t\t\t\t\t\t\t\t\t\t\t\t\t\t|\r\n| IsDeleted\t\t\t\t\t\t\t\t\t\t| Whether the route is deleted.\t\t\t\t\t\t\t\t                    |\r\n| IsMissedReasonRequired\t\t\t\t\t\t| Is the route missed reason required?\t\t\t\t\t\t\t\t\t\t\t|\r\n| IsPromptForLiftsOnVisitCompletion\t\t\t\t| Prompt for lifts on visit completion?\t\t\t\t\t\t\t\t\t\t\t|\r\n| IsOrderSupplierUsedForCostGeneration\t\t\t| Is the order supplier used for cost generation?\t\t\t\t\t\t\t\t|\r\n| RelatedRouteTemplateGuid\t\t\t\t\t\t| The GUID of the RouteTemplate associated to the route\t\t\t\t\t\t\t|\r\n| IsNoTagStopEnabled\t\t\t\t\t\t\t| Is no tag stop enabled?\t\t\t\t\t\t\t\t\t\t\t\t\t\t|\r\n| IsSubContracted\t\t\t\t\t\t\t\t| Is the route sub contracted?\t\t\t\t\t\t\t\t\t\t\t\t\t|\r\n| RelatedLocationDestinationGuid\t\t\t\t| Used to filter on the related destination location GUID.\t\t\t\t\t\t|\r\n| RelatedVehicleGuid\t\t\t\t\t\t\t| Used to filter on the related vehicle GUID.\t\t\t\t\t\t\t\t\t|\r\n| RelatedMasterRouteGuid\t\t\t\t\t\t| Used to filter on the related master route GUID.\t\t\t\t\t\t\t\t|\r\n| RelatedSupplierSiteGuid\t\t\t\t\t\t| Used to filter on the related supplier site GUID.\t\t\t\t\t\t\t\t|\r\n| RelatedSupplierSiteTransportGuid\t\t\t\t| Used to filter on the related supplier site transport GUID.\t\t\t\t\t|\r\n| RelatedUserStartDefectCheckGuid\t\t\t\t| Used to filter on the related start defect check user GUID.\t\t\t\t\t|\r\n| RelatedUserEndDefectCheckGuid\t\t\t\t\t| Used to filter on the related end defect check user GUID.\t\t\t\t\t\t|\r\n| StartLeaveYardTime\t\t\t\t\t\t\t| The leave yard time associated to the route.\t\t\t\t\t\t\t\t\t|\r\n| EndYardLeaveTime\t\t\t\t\t\t\t\t| The return yard time associated to the route.\t\t\t\t\t\t\t\t\t|\r\n| StartPlannedTime\t\t\t\t\t\t\t\t| The planned start time associated to the route.\t\t\t\t\t\t\t\t|\r\n| EndPlannedTime\t\t\t\t\t\t\t\t| The planned end time associated to the route.\t\t\t\t\t\t\t\t\t|\r\n| StartRouteTime\t\t\t\t\t\t\t\t| The start route time associated to the route.\t\t\t\t\t\t\t\t\t|\r\n| EndRouteTime\t\t\t\t\t\t\t\t\t| The end route time associated to the route.\t\t\t\t\t\t\t\t\t|\r\n| RouteDate\t\t\t\t\t\t\t\t\t\t| The date associated to the route.\tFilterable.\t\t\t\t\t\t\t\t\t|\r\n| Description\t\t\t\t\t\t\t\t\t| The description associated to the route.\t\t\t\t\t\t\t\t\t\t|\r\n| RouteNo\t\t\t\t\t\t\t\t\t\t| The route no associated to the route.\tFilterable.\t\t\t\t\t\t\t\t|\r\n| DistanceTravelled\t\t\t\t\t\t\t\t| The distance travelled associated to the route.\t\t\t\t\t\t\t\t|\r\n| FuelUsed\t\t\t\t\t\t\t\t\t\t| The fuel used associated to the route.\t\t\t\t\t\t\t\t\t\t|\r\n| FuelCost\t\t\t\t\t\t\t\t\t\t| The fuel cost associated to the route.\t\t\t\t\t\t\t\t\t\t|\r\n| FleetPlannerTripNo\t\t\t\t\t\t\t| The fleet planner trip no associated to the route.\t\t\t\t\t\t\t|\r\n| AcceptedMaterials\t\t\t\t\t\t\t\t| An array of accepted materials.\t\t\t\t\t\t\t\t\t\t\t\t|\r\n| AcceptedMaterials[0].Guid\t\t\t\t\t\t| The GUID of accepted material.\t\t\t\t\t\t\t\t\t\t\t\t|\r\n| AcceptedMaterials[0].IsDeleted\t\t\t\t| Whether accepted material is deleted.\t\t\t\t\t\t\t\t\t\t\t|\r\n| AcceptedMaterials[0].MaterialClassListItem\t| The GUID and description of material class\t\t\t\t\t\t\t\t\t|\r\n| Driver\t\t\t\t\t\t\t\t\t\t| The driver object.\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t|\t\t\r\n| Driver.RelatedUserDriverGuid\t\t\t\t\t| Guid of the Related user driver.\t\t\t\t\t\t\t\t\t\t\t\t|\r\n| Driver.ClockOnTime\t\t\t\t\t\t\t| The clock on time associated to the route.\t\t\t\t\t\t\t\t\t|\r\n| Driver.ClockOffTime\t\t\t\t\t\t\t| The clock off time associated to the route.\t\t\t\t\t\t\t\t\t|\r\n| Driver.CrewNumber\t\t\t\t\t\t\t\t| The crew number associated to the route.\t\t\t\t\t\t\t\t\t\t|\r\n| VehicleChecks\t\t\t\t\t\t\t\t\t| The vehicle checks object.\t\t\t\t\t\t\t\t\t\t\t\t\t|\t\t\r\n| VehicleChecks.StartMileage\t\t\t\t\t| The start mileage associated to the route.\t\t\t\t\t\t\t\t\t|\r\n| VehicleChecks.StartHubometerTime\t\t\t\t| The hubometer start time associated to the route.\t\t\t\t\t\t\t\t|\r\n| VehicleChecks.EndHubometerTime\t\t\t\t| The hubometer end time associated to the route.\t\t\t\t\t\t\t\t|\r\n| VehicleChecks.EndMileage\t\t\t\t\t\t| The end mileage associated to the route.\t\t\t\t\t\t\t\t\t\t|\r\n| VehicleChecks.Notes\t\t\t\t\t\t\t| The notes associated to the route.\t\t\t\t\t\t\t\t\t\t\t|\r\n| VehicleChecks.StartSafetyCheck\t\t\t\t| The start safety check associated to the route.\t\t\t\t\t\t\t\t|\r\n| VehicleChecks.StartDefectTicketNo\t\t\t\t| The start defect ticket number associated to the route.\t\t\t\t\t\t|\r\n| VehicleChecks.StartNotes\t\t\t\t\t\t| The start notes associated to the route.\t\t\t\t\t\t\t\t\t\t|\r\n| VehicleChecks.EndSafetyCheck\t\t\t\t\t| The end safety check associated to the route.\t\t\t\t\t\t\t\t\t|\r\n| VehicleChecks.EndDefectTicketNo\t\t\t\t| The end defect ticket number associated to the route.\t\t\t\t\t\t\t|\r\n| VehicleChecks.EndNotes\t\t\t\t\t\t| The end notes associated to the route.\t\t\t\t\t\t\t\t\t\t|\r\n| VehicleChecks.StartHubometerDistance\t\t\t| The hubometer start distance associated to the route.\t\t\t\t\t\t\t|\r\n| VehicleChecks.EndHubometerDistance\t\t\t| The hubometer end distance associated to the route.\t\t\t\t\t\t\t|\r\n| RelatedUserDriverGuidFilter\t\t\t\t\t| Used to filter on the related driver GUID.\t\t\t\t\t\t\t\t\t|\r\n","operationId":"Route_GetCollection","consumes":["application/json"],"produces":["application/json"],"parameters":[{"name":"filter","in":"query","required":false,"type":"string"},{"name":"search","in":"query","required":false,"type":"string"},{"name":"order","in":"query","required":false,"type":"string"},{"name":"max","in":"query","required":false,"type":"integer","format":"int32"},{"name":"page","in":"query","required":false,"type":"integer","format":"int32"},{"name":"includeCount","in":"query","required":false,"type":"boolean"},{"name":"includeDeleted","in":"query","required":false,"type":"boolean"},{"name":"links","in":"query","required":false,"type":"string"},{"name":"udf","in":"query","required":false,"type":"string"}],"responses":{"200":{"description":"OK","schema":{"$ref":"#/definitions/ApiResourceResultCollection[ApiIntegratorRouteResource]"}}}},"post":{"tags":["Route"],"summary":"Create or update","description":"| Property                              | Description                                                                   | Required |\r\n| ------------------------------------- | ----------------------------------------------------------------------------- | -------- |\r\n| GUID\t\t\t\t\t\t\t\t\t| The GUID associated to the route.\t\t\t\t\t\t\t\t\t\t\t\t| No |\r\n| RouteManagementTypeListItem\t\t\t| The GUID and description of the RouteManagementType associated to the route. \t| Yes |\r\n| AreaOfOriginListItem\t\t\t\t\t| The GUID and description of the AreaOfOrigin associated to the route. \t\t| No |\r\n| VehicleTypeListItem\t\t\t\t\t| The GUID and description of the VehicleType associated to the route. \t\t\t| No |\r\n| MaterialListItem\t\t\t\t\t    | The GUID and description of the Material associated to the route. \t\t\t| No |\r\n| CompanyOutletListItem\t\t\t\t\t| The GUID and description of the CompanyOutlet associated to the route.\t\t| No |\r\n| DefaultTipMaterialListItem\t\t\t| The GUID and description of the DefaultTipMaterial associated to the route.\t| No |\r\n| IsDiffReasonRequired\t\t\t\t\t| Does the route need a Diff Reason?\t\t\t\t\t\t\t\t\t\t\t| No |\r\n| IsWeighingsComplete\t\t\t\t\t| Are the route weighings complete?\t\t\t\t\t\t\t\t\t\t\t\t| No |\r\n| IsCompleted\t\t\t\t\t\t\t| Is the route completed?\t\t\t\t\t\t\t\t\t\t\t\t\t\t| No |\r\n| IsDeleted\t\t\t\t\t\t\t\t| Whether the route is deleted.\t\t\t\t\t\t\t\t\t\t            | No |\r\n| IsMissedReasonRequired\t\t\t\t| Is the route missed reason required?\t\t\t\t\t\t\t\t\t\t\t| No |\r\n| IsPromptForLiftsOnVisitCompletion\t\t| Prompt for lifts on visit completion?\t\t\t\t\t\t\t\t\t\t\t| No |\r\n| IsOrderSupplierUsedForCostGeneration\t| Is the order supplier used for cost generation?\t\t\t\t\t\t\t\t| No |\r\n| RelatedRouteTemplateGuid\t\t\t\t| The GUID of the RouteTemplate associated to the route\t\t\t\t\t\t\t| Yes |\r\n| IsNoTagStopEnabled\t\t\t\t\t| Is no tag stop enabled?\t\t\t\t\t\t\t\t\t\t\t\t\t\t| No |\r\n| IsSubContracted\t\t\t\t\t\t| Is the route sub contracted?\t\t\t\t\t\t\t\t\t\t\t\t\t| No |\r\n| RelatedLocationDestinationGuid\t\t| Used to filter on the related destination location GUID.\t\t\t\t\t\t| No |\r\n| RelatedVehicleGuid\t\t\t\t\t| Used to filter on the related vehicle GUID.\t\t\t\t\t\t\t\t\t| No |\r\n| RelatedMasterRouteGuid\t\t\t\t| Used to filter on the related master route GUID.\t\t\t\t\t\t\t\t| No |\r\n| RelatedSupplierSiteGuid\t\t\t\t| Used to filter on the related supplier site GUID.\t\t\t\t\t\t\t\t| No |\r\n| RelatedSupplierSiteTransportGuid\t\t| Used to filter on the related supplier site transport GUID.\t\t\t\t\t| No |\r\n| RelatedUserStartDefectCheckGuid\t\t| Used to filter on the related start defect check user GUID.\t\t\t\t\t| No |\r\n| RelatedUserEndDefectCheckGuid\t\t\t| Used to filter on the related end defect check user GUID.\t\t\t\t\t\t| No |\r\n| StartLeaveYardTime\t\t\t\t\t| The leave yard time associated to the route.\t\t\t\t\t\t\t\t\t| No |\r\n| EndYardLeaveTime\t\t\t\t\t\t| The return yard time associated to the route.\t\t\t\t\t\t\t\t\t| No |\r\n| StartPlannedTime\t\t\t\t\t\t| The planned start time associated to the route.\t\t\t\t\t\t\t\t| No |\r\n| EndPlannedTime\t\t\t\t\t\t| The planned end time associated to the route.\t\t\t\t\t\t\t\t\t| No |\r\n| StartRouteTime\t\t\t\t\t\t| The start route time associated to the route.\t\t\t\t\t\t\t\t\t| No |\r\n| EndRouteTime\t\t\t\t\t\t\t| The end route time associated to the route.\t\t\t\t\t\t\t\t\t| No |\r\n| RouteDate\t\t\t\t\t\t\t\t| The date associated to the route.\t\t\t\t \t\t\t\t\t\t\t\t| Yes |\r\n| Description\t\t\t\t\t\t\t| The description associated to the route.\t\t\t\t\t\t\t\t\t\t| Yes |\r\n| RouteNo\t\t\t\t\t\t\t\t| The route no associated to the route.\t\t\t\t\t\t\t\t\t\t\t| Yes |\r\n| DistanceTravelled\t\t\t\t\t\t| The distance travelled associated to the route.\t\t\t\t\t\t\t\t| No |\r\n| FuelUsed\t\t\t\t\t\t\t\t| The fuel used associated to the route.\t\t\t\t\t\t\t\t\t\t| No |\r\n| FuelCost\t\t\t\t\t\t\t\t| The fuel cost associated to the route.\t\t\t\t\t\t\t\t\t\t| No |\r\n| FleetPlannerTripNo\t\t\t\t\t| The fleet planner trip no associated to the route.\t\t\t\t\t\t\t| No |\r\n| AcceptedMaterials\t\t\t\t\t\t| An array of accepted materials.\t\t\t\t\t\t\t\t\t\t\t\t| No |\t\r\n| AcceptedMaterials.Guid\t\t\t\t| Guid of accepted material.\t\t\t\t\t\t\t\t\t\t\t\t\t| No |\t\r\n| AcceptedMaterials.IsDeleted\t\t\t| Whether the accepted material is deleted.\t\t\t\t\t\t\t\t\t\t| Yes |\r\n| AcceptedMaterials.MaterialClassItem\t| Guid and description of material class.\t\t\t\t\t\t\t\t\t\t| Yes |\r\n| Driver\t\t\t\t\t\t\t\t| The driver object.\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t| No |\r\n| Driver.RelatedUserDriverGuid\t\t\t| Guid of the Related user driver.\t\t\t\t\t\t\t\t\t\t\t\t| No |\r\n| Driver.ClockOnTime\t\t\t\t\t| The clock on time associated to the route.\t\t\t\t\t\t\t\t\t| No |\r\n| Driver.ClockOffTime\t\t\t\t\t| The clock off time associated to the route.\t\t\t\t\t\t\t\t\t| No |\r\n| Driver.CrewNumber\t\t\t\t\t\t| The crew number associated to the route.\t\t\t\t\t\t\t\t\t\t| No |\r\n| VehicleChecks\t\t\t\t\t\t\t| The vehicle checks object.\t\t\t\t\t\t\t\t\t\t\t\t\t| No |\r\n| VehicleChecks.StartMileage\t\t\t| The start mileage associated to the route.\t\t\t\t\t\t\t\t\t| No |\r\n| VehicleChecks.StartHubometerTime\t\t| The hubometer start time associated to the route.\t\t\t\t\t\t\t\t| No |\r\n| VehicleChecks.EndHubometerTime\t\t| The hubometer end time associated to the route.\t\t\t\t\t\t\t\t| No |\r\n| VehicleChecks.EndMileage\t\t\t\t| The end mileage associated to the route.\t\t\t\t\t\t\t\t\t\t| No |\r\n| VehicleChecks.Notes\t\t\t\t\t| The notes associated to the route.\t\t\t\t\t\t\t\t\t\t\t| No |\r\n| VehicleChecks.StartSafetyCheck\t\t| The start safety check associated to the route.\t\t\t\t\t\t\t\t| No |\r\n| VehicleChecks.StartDefectTicketNo\t\t| The start defect ticket number associated to the route.\t\t\t\t\t\t| No |\r\n| VehicleChecks.StartNotes\t\t\t\t| The start notes associated to the route.\t\t\t\t\t\t\t\t\t\t| No |\r\n| VehicleChecks.EndSafetyCheck\t\t\t| The end safety check associated to the route.\t\t\t\t\t\t\t\t\t| No |\r\n| VehicleChecks.EndDefectTicketNo\t\t| The end defect ticket number associated to the route.\t\t\t\t\t\t\t| No |\r\n| VehicleChecks.EndNotes\t\t\t\t| The end notes associated to the route.\t\t\t\t\t\t\t\t\t\t| No |\r\n| VehicleChecks.StartHubometerDistance\t| The hubometer start distance associated to the route.\t\t\t\t\t\t\t| No |\r\n| VehicleChecks.EndHubometerDistance\t| The hubometer end distance associated to the route.\t\t\t\t\t\t\t| No |\r\n| RelatedUserDriverGuidFilter\t\t\t| Used to filter on the related driver GUID.\t\t\t\t\t\t\t\t\t| No |\r\n\r\n\r\n## Extra validations\r\n\r\n| Condition | Error message |\r\n| --------- | ------------- |\r\n| RouteManagementTypeListItem is being edited | RouteManagementTypeListItem.Guid is a read-only property. |\r\n| RelatedMasterRouteGuid is being edited | RelatedMasterRouteGuid is a read-only property. |\r\n| Description is being edited | Description is a read-only property. |\r\n| IsDiffReasonRequired is being edited | IsDiffReasonRequired is a read-only property. |\r\n| IsMissedReasonRequired is being edited | IsMissedReasonRequired is a read-only property. |\r\n| IsPromptForLiftsOnVisitCompletion is being edited | IsPromptForLiftsOnVisitCompletion is a read-only property. |\r\n| IsOrderSupplierUsedForCostGeneration is being edited | IsOrderSupplierUsedForCostGeneration is a read-only property. |\r\n| RouteNo is being edited | RouteNo is a read-only property. |\r\n| DistanceTravelled is being edited | DistanceTravelled is a read-only property. |\r\n| FuelUsed is being edited | FuelUsed is a read-only property. |\r\n| FuelCost is being edited | FuelCost is a read-only property. |\r\n| IsNoTagStopEnabled is being edited | IsNoTagStopEnabled is a read-only property. |\r\n| FleetPlannerTripNo is being edited | FleetPlannerTripNo is a read-only property. |\r\n| RouteDate is being edited | RouteDate is a read-only property. |\r\n| StartLeaveYardTime is being edited | StartLeaveYardTime is a read-only property. |\r\n| EndYardLeaveTime is being edited | EndYardLeaveTime is a read-only property. |\r\n| StartPlannedTime is being edited | StartPlannedTime is a read-only property. |\r\n| EndPlannedTime is being edited | EndPlannedTime is a read-only property. |\r\n| Driver.CrewNumber is being edited | Driver.CrewNumber is a read-only property. |\r\n| Driver.ClockOnTime is being edited | Driver.ClockOnTime is a read-only property. |\r\n| Driver.ClockOffTime is being edited | Driver.ClockOffTime is a read-only property. |\r\n| VehicleChecks.RelatedUserStartDefectCheckGuid is being edited | VehicleChecks.RelatedUserStartDefectCheckGuid is a read-only property. |\r\n| VehicleChecks.RelatedUserEndDefectCheckGuid is being edited | VehicleChecks.RelatedUserEndDefectCheckGuid is a read-only property. |\r\n| VehicleChecks.Notes is being edited | VehicleChecks.Notes is a read-only property. |\r\n| VehicleChecks.StartSafetyCheck is being edited | VehicleChecks.StartSafetyCheck is a read-only property. |\r\n| VehicleChecks.StartDefectTicketNo is being edited | VehicleChecks.StartDefectTicketNo is a read-only property. |\r\n| VehicleChecks.StartNotes is being edited | VehicleChecks.StartNotes is a read-only property. |\r\n| VehicleChecks.EndSafetyCheck is being edited | VehicleChecks.EndSafetyCheck is a read-only property. |\r\n| VehicleChecks.EndDefectTicketNo is being edited | VehicleChecks.EndDefectTicketNo is a read-only property. |\r\n| VehicleChecks.EndNotes is being edited | VehicleChecks.EndNotes is a read-only property. |\r\n| VehicleChecks.StartHubometerDistance is being edited | VehicleChecks.StartHubometerDistance is a read-only property. |\r\n| VehicleChecks.EndHubometerDistance is being edited | VehicleChecks.EndHubometerDistance is a read-only property. |\r\n| If IsCompleted true and IsWeighingsComplete false |  Attempt to complete a route with incomplete weighings. Could not process the update. Ensure the weighings are complete and set the IsWeighingsComplete to true in the request. |\r\n| If IsCompleted updated from true to false and update any property | Attempt to update the properties of a completed route. Could not process the update. Set IsComplete to false individually to uncomplate the route before requesting an update. |\r\n| If IsDeleted is true | IsDeleted is TRUE. Could not process the request. Resources can not be deleted via the REST API. |\r\n| Updating a deleted Route | Failed to save/update Route because attempt to update a deleted Route is not allowed. Could not process the request. |\r\n| AcceptedMaterials.MaterialClassListItem is being edited | AcceptedMaterials.MaterialClassListItem is a read-only property. |\r\n| AcceptedMaterials.MaterialClassListItem.Guid is duplicate | The MaterialClassListItem must be unique per AcceptedMaterials |\r\n| If AreaOfOriginListItem.Guid is null and RelatedSupplierSiteTransportGuid is null | The mandatory property AreaOfOriginListItem.Guid has a null value. The request could not be processed. Supply a value for the AreaOfOriginListItem.Guid property of the submitted resource. |\r\n| If IsWeighingsComplete is true on insert | Failed to save/update Route because IsWeighingsComplete property cannot be set to true upon creation. |\r\n| If IsCompleted is true on insert | Failed to save/update Route because IsCompleted property cannot be set to true upon creation. |\r\n| If DefaultTipMaterialListItem.Guid is null and RouteManagementTypeListItem is Handheld or On Vehicle on insert| Failed to save/update Route because DefaultTipMaterialListItem is required if RouteManagementType is Handheld or On Vehicle. |\r\n| If Driver.ClockOffTime is before the Driver.ClockOnTime on insert | Failed to save/update Route because Driver.ClockOffTime cannot be before Driver.ClockOnTime. |\r\n| If VehicleChecks.StartDefectTicketNo is more than 20 characters long on insert | Failed to save/update Route because VehicleChecks.StartDefectTicketNo must be no more than 20 characters long. |\r\n| If VehicleChecks.EndDefectTicketNo is more than 20 characters long on insert | Failed to save/update Route because VehicleChecks.EndDefectTicketNo must be no more than 20 characters long. |\r\n","operationId":"Route_Create","consumes":["application/json"],"produces":["application/json"],"parameters":[{"in":"body","required":true,"schema":{"$ref":"#/definitions/ApiResourceId"}}],"responses":{"200":{"description":"OK","schema":{"$ref":"#/definitions/ApiResourceId"}}}}},"/transport/routeAssignments/{guid}":{"get":{"tags":["RouteAssignment"],"summary":"Find with GUID","description":"| Property                          | Description\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t|\r\n| --------------------------------- | -------------------------------------------------------------------------\t\t\t|\r\n| GUID\t\t\t\t\t\t\t\t| The GUID associated to the routeAssignment.\t\t\t\t\t\t\t\t\t\t|\r\n| RelatedOrderGuid\t\t\t\t\t| The GUID of the RelatedOrder associated to the routeAssignment.\t\t\t\t\t|\r\n| ActionListItem\t\t\t\t\t| The GUID and description of the Action associated to the routeAssignment.\t\t\t|\r\n| ContainerTypeListItem\t\t\t\t| The GUID and description of the ContainerType associated to the routeAssignment.\t|\r\n| PickupIntervalListItem\t\t\t| The GUID and description of the PickupInterval associated to the routeAssignment.\t|\r\n| DayOfWeekListItem\t\t\t\t\t| The GUID and description of the DayOfWeek associated to the routeAssignment.\t\t|\r\n| DayOfOccurrenceInMonthListItem\t| The GUID and description of the Day of Occurrence in month associated to the routeAssignment.\t|\r\n| RelatedRouteTemplateGuid\t\t\t| The GUID of the RelatedRouteTemplate associated to the routeAssignment.\t\t\t|\r\n| Position\t\t\t\t\t\t\t| The position associated to the routeAssignment.\t\t\t\t\t\t\t\t\t|\r\n| StartDate\t\t\t\t\t\t\t| The start date associated to the routeAssignment.\t\t \t\t\t\t\t\t\t|\r\n| EndDate\t\t\t\t\t\t\t| The end date associated to the routeAssignment.\t\t\t\t\t\t\t\t\t|\r\n| RequestedBy\t\t\t\t\t\t| Who is the routeAssignment requested by?\t\t\t\t\t\t\t\t\t\t\t|\r\n| Notes\t\t\t\t\t\t\t\t| The notes associated to the routeAssignment.\t\t\t\t\t\t\t\t\t\t|\r\n| MaxLiftQuantity\t\t\t\t\t| The max lift quantity associated to the routeAssignment.\t\t\t\t\t\t\t|\r\n| MinLiftQuantity\t\t\t\t\t| The min lift quantity associated to the routeAssignment.\t\t\t\t\t\t\t|\r\n| RequiresQuantity\t\t\t\t\t| Does the routeAssignment require quantity?\t\t\t\t\t\t\t\t\t\t|\r\n| IsGpsAutoMatchingDisabled\t\t\t| Is the GPS auto matching disabled for the routeAssignment?\t\t\t\t\t\t|\r\n| IsNoPlannedDate\t\t\t\t\t| Is there no planned date for the routeAssignment?\t\t\t\t\t\t\t\t\t|\r\n| IsNoBinOnSiteExcluded\t\t\t\t| Is the bin on site excluded for the routeAssignment?\t\t \t\t\t\t\t\t|\r\n| RelatedContainerGuid\t\t\t\t| The RelatedContainerGuid associated to the routeAssignment.\t\t\t\t\t\t|\r\n| AccessTimes[0]\t\t\t\t\t| A list of objects containing route assignment access time.\t\t\t\t\t\t|\r\n| AccessTimes[0].Guid\t\t\t\t  | The GUID associated to the route assignment access time.\t\t\t\t\t\t|\r\n| AccessTimes[0].AccessContact        | The access contact name to associated route assignment.\t\t\t\t\t\t\t|\r\n| AccessTimes[0].AccessNotes          | The access notes to associated route assignment.\t\t\t\t\t\t\t\t|\r\n| AccessTimes[0].FromExclusion        | The exclusion of access to associated route assignment.\t\t\t\t\t\t\t|\t\t\t\t\r\n| AccessTimes[0].AccessStartTime      | The access start time to associated route assignment.\t\t\t\t\t\t\t|\r\n| AccessTimes[0].AccessEndTime\t\t  | The access end time to associated route assignment.\t\t\t\t\t\t\t\t|\r\n| AccessTimes[0].DayOfWeekListItem    | The GUID and description of the day of week to access.\t\t\t\t\t\t\t|\r\n| Details[0]\t\t\t\t\t\t  | A list of objects containing route assignment details.\t\t\t\t\t\t\t|\r\n| Details[0].Guid\t\t\t\t\t  | The GUID associated to the route assignment details.\t\t\t\t\t\t\t|\r\n| Details[0].PlannedQuantity\t\t  | The planned quantity associated to the routeAssignment.\t\t\t\t\t\t\t|\r\n| Details[0].ContainerTypeListItem\t  | The GUID and description of the ContainerType associated to the routeAssignment detail.\t\t\t|\r\n","operationId":"RouteAssignment_Get","consumes":["application/json"],"produces":["application/json"],"parameters":[{"name":"guid","in":"path","required":true,"type":"string","format":"uuid"},{"name":"links","in":"query","required":false,"type":"string"},{"name":"include","in":"query","required":false,"type":"string"},{"name":"expand","in":"query","required":false,"type":"string"},{"name":"udf","in":"query","required":false,"type":"string"}],"responses":{"200":{"description":"OK","schema":{"$ref":"#/definitions/ApiResourceResultEntity[ApiIntegratorRouteAssignmentResource]"}}}},"put":{"tags":["RouteAssignment"],"summary":"Partial update","description":"| Property                          | Description\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t| Required |\r\n| --------------------------------- | ---------------------------------------------------------------------------------------------\t| -------- |\r\n| GUID\t\t\t\t\t\t\t\t| The GUID associated to the routeAssignment.\t\t\t\t\t\t\t\t\t\t\t\t\t| No\t   |\r\n| RelatedOrderGuid\t\t\t\t\t| The GUID of the RelatedOrder associated to the routeAssignment.\t\t\t\t\t\t\t\t| Yes\t   |\r\n| ActionListItem\t\t\t\t\t| The GUID and description of the Action associated to the routeAssignment.\t\t\t\t\t\t| Yes\t   |\r\n| ContainerTypeListItem\t\t\t\t| The GUID and description of the ContainerType associated to the routeAssignment.\t\t\t\t| Yes\t   |\r\n| PickupIntervalListItem\t\t\t| The GUID and description of the PickupInterval associated to the routeAssignment.\t\t\t\t| Yes\t   |\r\n| DayOfWeekListItem\t\t\t\t\t| The GUID and description of the DayOfWeek associated to the routeAssignment.\t\t\t\t\t| No\t   |\r\n| DayOfOccurrenceInMonthListItem\t| The GUID and description of the Day of Occurrence in month associated to the routeAssignment.\t| No\t   |\r\n| RelatedRouteTemplateGuid\t\t\t| The GUID of the RelatedRouteTemplate associated to the routeAssignment.\t\t\t\t\t\t| No\t   |\r\n| Position\t\t\t\t\t\t\t| The position associated to the routeAssignment.\t\t\t\t\t\t\t\t\t\t\t\t| No\t   |\r\n| StartDate\t\t\t\t\t\t\t| The start date associated to the routeAssignment.\t\t \t\t\t\t\t\t\t\t\t\t| No\t   |\r\n| EndDate\t\t\t\t\t\t\t| The end date associated to the routeAssignment.\t\t\t\t\t\t\t\t\t\t\t\t| No\t   |\r\n| RequestedBy\t\t\t\t\t\t| Who is the routeAssignment requested by?\t\t\t\t\t\t\t\t\t\t\t\t\t\t| No\t   |\r\n| Notes\t\t\t\t\t\t\t\t| The notes associated to the routeAssignment.\t\t\t\t\t\t\t\t\t\t\t\t\t| No\t   |\r\n| MaxLiftQuantity\t\t\t\t\t| The max lift quantity associated to the routeAssignment.\t\t\t\t\t\t\t\t\t\t| No\t   |\r\n| MinLiftQuantity\t\t\t\t\t| The min lift quantity associated to the routeAssignment.\t\t\t\t\t\t\t\t\t\t| No\t   |\r\n| RequiresQuantity\t\t\t\t\t| Does the routeAssignment require quantity?\t\t\t\t\t\t\t\t\t\t\t\t\t| No\t   |\r\n| IsGpsAutoMatchingDisabled\t\t\t| Is the GPS auto matching disabled for the routeAssignment?\t\t\t\t\t\t\t\t\t| No\t   |\r\n| IsNoPlannedDate\t\t\t\t\t| Is there no planned date for the routeAssignment?\t\t\t\t\t\t\t\t\t\t\t\t| No\t   |\r\n| IsNoBinOnSiteExcluded\t\t\t\t| Is the bin on site excluded for the routeAssignment?\t\t \t\t\t\t\t\t\t\t\t| No\t   |\r\n| RelatedContainerGuid\t\t\t\t| The RelatedContainerGuid associated to the routeAssignment.\t\t\t\t\t\t\t\t\t| No\t   |\r\n| AccessTimes[0]\t\t\t\t\t| A list of objects containing route assignment access time.\t\t\t\t\t\t\t\t\t| No\t   |\r\n| AccessTimes[0].Guid\t\t\t\t  | The GUID associated to the route assignment access time.\t\t\t\t\t\t\t\t\t| No\t   |\r\n| AccessTimes[0].AccessContact        | The access contact name to associated route assignment.\t\t\t\t\t\t\t\t\t\t| No\t   |\r\n| AccessTimes[0].AccessNotes          | The access notes to associated route assignment.\t\t\t\t\t\t\t\t\t\t\t| No\t   |\r\n| AccessTimes[0].FromExclusion        | The exclusion fo access to associated route assignment.\t\t\t\t\t\t\t\t\t\t| Yes\t   |\r\n| AccessTimes[0].AccessStartTime      | The access start time to associated route assignment.\t\t\t\t\t\t\t\t\t\t| Yes\t   |\r\n| AccessTimes[0].AccessEndTime\t\t  | The access end time to associated route assignment.\t\t\t\t\t\t\t\t\t\t\t| Yes\t   |\r\n| AccessTimes[0].DayOfWeekListItem    | The GUID and description of the day of week to access.\t\t\t\t\t\t\t\t\t\t| Yes\t   |\r\n| Details[0]\t\t\t\t\t\t  | A list of objects containing route assignment details.\t\t\t\t\t\t\t\t\t\t| No\t   |\r\n| Details[0].Guid\t\t\t\t\t  | The GUID associated to the route assignment details.\t\t\t\t\t\t\t\t\t\t| No\t   |\r\n| Details[0].PlannedQuantity\t\t  | The planned quantity associated to the routeAssignment.\t\t\t\t\t\t\t\t\t\t| Yes\t   |\r\n| Details[0].ContainerTypeListItem\t  | The GUID and description of the ContainerType associated to the routeAssignment detail.\t\t| Yes\t   |\r\n\r\n## Extra validations\r\n\r\n| Condition | Error message |\r\n| --------- | ------------- |\r\n| If the DayOfOccurrenceInMonthListItem is not equal to the week of month of the StartDate | Failed to save Route Assignment. Start date must be associated to the correct DayOfOccurenceInMonthId |\r\n| If startDate and DayOfWeekListItem  are set when IsNoPlannedDate is true | Failed to save Route Assignment. Start date and DayOfWeekListItem cannot be set when IsNoPlannedDate is true |\r\n| If the DayOfOccurrenceInMonthListItem has a value and PickUpInterval is Weekly/ Fortnightly/ Every Three Weeks or Every Four Weeks. | Failed to save Route Assignment. DayOfOccurrenceInMonthListItem cannot be set when PickupIntervalId is Weekly/ Fortnightly/ Every Three Weeks or Every Four Weeks | \r\n| If position is set to 0 and relatedRouteTemplateGuid has a value | Failed to save Route Assignment. Position cannot be set to zero when relatedRouteTemplateGuid has a value |\r\n| If position has a value and relatedRouteTemplateGuid is null | Failed to save Route Assignment. Position cannot have a value if relatedRouteTemplateGuid is set to null |\r\n| If the given action does not have primary action type of Assign To Round | Failed to save Route Assignment. ActionListItem.Guid is not supported for Route Assignment |\r\n| If the given container type is not priced in the service agreement | Failed to save Route Assignment. ContainerTypeListItem.Guid is not supported for Route Assignment |\r\n| If the given container type is not associated with Route Assignment container type | Failed to save Route Assignment. Details.ContainerTypeListItem.Guid is not supported for Route Assignment Detail |","operationId":"RouteAssignment_Update","consumes":["application/json"],"produces":["application/json"],"parameters":[{"name":"guid","in":"path","required":true,"type":"string","format":"uuid"},{"in":"body","required":true,"schema":{"$ref":"#/definitions/ApiResourceId"}}],"responses":{"200":{"description":"OK","schema":{"$ref":"#/definitions/ApiResourceId"}}}}},"/transport/routeAssignments":{"get":{"tags":["RouteAssignment"],"summary":"Find with Filters","description":"| Property                          | Description\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t|\r\n| --------------------------------- | -------------------------------------------------------------------------\t\t\t|\r\n| GUID\t\t\t\t\t\t\t\t| The GUID associated to the routeAssignment.\t\t\t\t\t\t\t\t\t\t|\r\n| RelatedOrderGuid\t\t\t\t\t| The GUID of the RelatedOrder associated to the routeAssignment.\t\t\t\t\t|\r\n| ActionListItem\t\t\t\t\t| The GUID and description of the Action associated to the routeAssignment.\t\t\t|\r\n| ContainerTypeListItem\t\t\t\t| The GUID and description of the ContainerType associated to the routeAssignment.\t|\r\n| PickupIntervalListItem\t\t\t| The GUID and description of the PickupInterval associated to the routeAssignment.\t|\r\n| DayOfWeekListItem\t\t\t\t\t| The GUID and description of the DayOfWeek associated to the routeAssignment.\t\t|\r\n| DayOfOccurrenceInMonthListItem\t| The GUID and description of the Day of Occurrence in month associated to the routeAssignment.\t|\r\n| RelatedRouteTemplateGuid\t\t\t| The GUID of the RelatedRouteTemplate associated to the routeAssignment.\t\t\t|\r\n| Position\t\t\t\t\t\t\t| The position associated to the routeAssignment.\t\t\t\t\t\t\t\t\t|\r\n| StartDate\t\t\t\t\t\t\t| The start date associated to the routeAssignment.\t\t \t\t\t\t\t\t\t|\r\n| EndDate\t\t\t\t\t\t\t| The end date associated to the routeAssignment.\t\t\t\t\t\t\t\t\t|\r\n| RequestedBy\t\t\t\t\t\t| Who is the routeAssignment requested by?\t\t\t\t\t\t\t\t\t\t\t|\r\n| Notes\t\t\t\t\t\t\t\t| The notes associated to the routeAssignment.\t\t\t\t\t\t\t\t\t\t|\r\n| MaxLiftQuantity\t\t\t\t\t| The max lift quantity associated to the routeAssignment.\t\t\t\t\t\t\t|\r\n| MinLiftQuantity\t\t\t\t\t| The min lift quantity associated to the routeAssignment.\t\t\t\t\t\t\t|\r\n| RequiresQuantity\t\t\t\t\t| Does the routeAssignment require quantity?\t\t\t\t\t\t\t\t\t\t|\r\n| IsGpsAutoMatchingDisabled\t\t\t| Is the GPS auto matching disabled for the routeAssignment?\t\t\t\t\t\t|\r\n| IsNoPlannedDate\t\t\t\t\t| Is there no planned date for the routeAssignment?\t\t\t\t\t\t\t\t\t|\r\n| IsNoBinOnSiteExcluded\t\t\t\t| Is the bin on site excluded for the routeAssignment?\t\t \t\t\t\t\t\t|\r\n| RelatedContainerGuid\t\t\t\t| The RelatedContainerGuid associated to the routeAssignment.\t\t\t\t\t\t|\r\n| AccessTimes[0]\t\t\t\t\t| A list of objects containing route assignment access time.\t\t\t\t\t\t|\r\n| AccessTimes[0].Guid\t\t\t\t  | The GUID associated to the route assignment access time.\t\t\t\t\t\t|\r\n| AccessTimes[0].AccessContact        | The access contact name to associated route assignment.\t\t\t\t\t\t\t|\r\n| AccessTimes[0].AccessNotes          | The access notes to associated route assignment.\t\t\t\t\t\t\t\t|\r\n| AccessTimes[0].FromExclusion        | The exclusion of access to associated route assignment.\t\t\t\t\t\t\t|\t\t\t\t\r\n| AccessTimes[0].AccessStartTime      | The access start time to associated route assignment.\t\t\t\t\t\t\t|\r\n| AccessTimes[0].AccessEndTime\t\t  | The access end time to associated route assignment.\t\t\t\t\t\t\t\t|\r\n| AccessTimes[0].DayOfWeekListItem    | The GUID and description of the day of week to access.\t\t\t\t\t\t\t|\r\n| Details[0]\t\t\t\t\t\t  | A list of objects containing route assignment details.\t\t\t\t\t\t\t|\r\n| Details[0].Guid\t\t\t\t\t  | The GUID associated to the route assignment details.\t\t\t\t\t\t\t|\r\n| Details[0].PlannedQuantity\t\t  | The planned quantity associated to the routeAssignment.\t\t\t\t\t\t\t|\r\n| Details[0].ContainerTypeListItem\t  | The GUID and description of the ContainerType associated to the routeAssignment detail.\t\t\t|\r\n","operationId":"RouteAssignment_GetCollection","consumes":["application/json"],"produces":["application/json"],"parameters":[{"name":"filter","in":"query","required":false,"type":"string"},{"name":"search","in":"query","required":false,"type":"string"},{"name":"order","in":"query","required":false,"type":"string"},{"name":"max","in":"query","required":false,"type":"integer","format":"int32"},{"name":"page","in":"query","required":false,"type":"integer","format":"int32"},{"name":"includeCount","in":"query","required":false,"type":"boolean"},{"name":"includeDeleted","in":"query","required":false,"type":"boolean"},{"name":"links","in":"query","required":false,"type":"string"},{"name":"udf","in":"query","required":false,"type":"string"}],"responses":{"200":{"description":"OK","schema":{"$ref":"#/definitions/ApiResourceResultCollection[ApiIntegratorRouteAssignmentResource]"}}}},"post":{"tags":["RouteAssignment"],"summary":"Create or update","description":"| Property                          | Description\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t| Required |\r\n| --------------------------------- | ---------------------------------------------------------------------------------------------\t| -------- |\r\n| GUID\t\t\t\t\t\t\t\t| The GUID associated to the routeAssignment.\t\t\t\t\t\t\t\t\t\t\t\t\t| No\t   |\r\n| RelatedOrderGuid\t\t\t\t\t| The GUID of the RelatedOrder associated to the routeAssignment.\t\t\t\t\t\t\t\t| Yes\t   |\r\n| ActionListItem\t\t\t\t\t| The GUID and description of the Action associated to the routeAssignment.\t\t\t\t\t\t| Yes\t   |\r\n| ContainerTypeListItem\t\t\t\t| The GUID and description of the ContainerType associated to the routeAssignment.\t\t\t\t| Yes\t   |\r\n| PickupIntervalListItem\t\t\t| The GUID and description of the PickupInterval associated to the routeAssignment.\t\t\t\t| Yes\t   |\r\n| DayOfWeekListItem\t\t\t\t\t| The GUID and description of the DayOfWeek associated to the routeAssignment.\t\t\t\t\t| No\t   |\r\n| DayOfOccurrenceInMonthListItem\t| The GUID and description of the Day of Occurrence in month associated to the routeAssignment.\t| No\t   |\r\n| RelatedRouteTemplateGuid\t\t\t| The GUID of the RelatedRouteTemplate associated to the routeAssignment.\t\t\t\t\t\t| No\t   |\r\n| Position\t\t\t\t\t\t\t| The position associated to the routeAssignment.\t\t\t\t\t\t\t\t\t\t\t\t| No\t   |\r\n| StartDate\t\t\t\t\t\t\t| The start date associated to the routeAssignment.\t\t \t\t\t\t\t\t\t\t\t\t| No\t   |\r\n| EndDate\t\t\t\t\t\t\t| The end date associated to the routeAssignment.\t\t\t\t\t\t\t\t\t\t\t\t| No\t   |\r\n| RequestedBy\t\t\t\t\t\t| Who is the routeAssignment requested by?\t\t\t\t\t\t\t\t\t\t\t\t\t\t| No\t   |\r\n| Notes\t\t\t\t\t\t\t\t| The notes associated to the routeAssignment.\t\t\t\t\t\t\t\t\t\t\t\t\t| No\t   |\r\n| MaxLiftQuantity\t\t\t\t\t| The max lift quantity associated to the routeAssignment.\t\t\t\t\t\t\t\t\t\t| No\t   |\r\n| MinLiftQuantity\t\t\t\t\t| The min lift quantity associated to the routeAssignment.\t\t\t\t\t\t\t\t\t\t| No\t   |\r\n| RequiresQuantity\t\t\t\t\t| Does the routeAssignment require quantity?\t\t\t\t\t\t\t\t\t\t\t\t\t| No\t   |\r\n| IsGpsAutoMatchingDisabled\t\t\t| Is the GPS auto matching disabled for the routeAssignment?\t\t\t\t\t\t\t\t\t| No\t   |\r\n| IsNoPlannedDate\t\t\t\t\t| Is there no planned date for the routeAssignment?\t\t\t\t\t\t\t\t\t\t\t\t| No\t   |\r\n| IsNoBinOnSiteExcluded\t\t\t\t| Is the bin on site excluded for the routeAssignment?\t\t \t\t\t\t\t\t\t\t\t| No\t   |\r\n| RelatedContainerGuid\t\t\t\t| The RelatedContainerGuid associated to the routeAssignment.\t\t\t\t\t\t\t\t\t| No\t   |\r\n| AccessTimes[0]\t\t\t\t\t| A list of objects containing route assignment access time.\t\t\t\t\t\t\t\t\t| No\t   |\r\n| AccessTimes[0].Guid\t\t\t\t  | The GUID associated to the route assignment access time.\t\t\t\t\t\t\t\t\t| No\t   |\r\n| AccessTimes[0].AccessContact        | The access contact name to associated route assignment.\t\t\t\t\t\t\t\t\t\t| No\t   |\r\n| AccessTimes[0].AccessNotes          | The access notes to associated route assignment.\t\t\t\t\t\t\t\t\t\t\t| No\t   |\r\n| AccessTimes[0].FromExclusion        | The exclusion of access to associated route assignment.\t\t\t\t\t\t\t\t\t\t| Yes\t   |\t\r\n| AccessTimes[0].AccessStartTime      | The access start time to associated route assignment.\t\t\t\t\t\t\t\t\t\t| Yes\t   |\r\n| AccessTimes[0].AccessEndTime\t\t  | The access end time to associated route assignment.\t\t\t\t\t\t\t\t\t\t\t| Yes\t   |\r\n| AccessTimes[0].DayOfWeekListItem    | The GUID and description of the day of week to access.\t\t\t\t\t\t\t\t\t\t| Yes\t   |\r\n| Details[0]\t\t\t\t\t\t  | A list of objects containing route assignment details.\t\t\t\t\t\t\t\t\t\t| No\t   |\r\n| Details[0].Guid\t\t\t\t\t  | The GUID associated to the route assignment details.\t\t\t\t\t\t\t\t\t\t| No\t   |\r\n| Details[0].PlannedQuantity\t\t  | The planned quantity associated to the routeAssignment.\t\t\t\t\t\t\t\t\t\t| Yes\t   |\r\n| Details[0].ContainerTypeListItem\t  | The GUID and description of the ContainerType associated to the routeAssignment detail.\t\t| Yes\t   |\r\n\r\n## Extra validations\r\n\r\n| Condition | Error message |\r\n| --------- | ------------- |\r\n| If the DayOfOccurrenceInMonthListItem is not equal to the week of month of the StartDate | Failed to save Route Assignment. Start date must be associated to the correct DayOfOccurenceInMonthId |\r\n| If startDate and DayOfWeekListItem  are set when IsNoPlannedDate is true | Failed to save Route Assignment. Start date and DayOfWeekListItem cannot be set when IsNoPlannedDate is true |\r\n| If the DayOfOccurrenceInMonthListItem has a value and PickUpInterval is Weekly/ Fortnightly/ Every Three Weeks or Every Four Weeks. | Failed to save Route Assignment. DayOfOccurrenceInMonthListItem cannot be set when PickupIntervalId is Weekly/ Fortnightly/ Every Three Weeks or Every Four Weeks | \r\n| If position is set to 0 and relatedRouteTemplateGuid has a value | Failed to save Route Assignment. Position cannot be set to zero when relatedRouteTemplateGuid has a value |\r\n| If position has a value and relatedRouteTemplateGuid is null | Failed to save Route Assignment. Position cannot have a value if relatedRouteTemplateGuid is set to null |\r\n| If the given action does not have primary action type of Assign To Round | Failed to save Route Assignment. ActionListItem.Guid is not supported for Route Assignment |\r\n| If the given container type is not priced in the service agreement | Failed to save Route Assignment. ContainerTypeListItem.Guid is not supported for Route Assignment |\r\n| If the given container type is not associated with Route Assignment container type | Failed to save Route Assignment. Details.ContainerTypeListItem.Guid is not supported for Route Assignment Detail |\r\n","operationId":"RouteAssignment_Create","consumes":["application/json"],"produces":["application/json"],"parameters":[{"in":"body","required":true,"schema":{"$ref":"#/definitions/ApiResourceId"}}],"responses":{"200":{"description":"OK","schema":{"$ref":"#/definitions/ApiResourceId"}}}}},"/transport/routeBuildScheduleLogs/changes":{"get":{"tags":["RouteBuildScheduleLog"],"summary":"Retrieve changes","description":"| Property\t\t\t\t\t\t\t| Description\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t|\r\n| ----------------------------------| ------------------------------------------------------------------------------------------|\r\n| GUID\t\t\t\t\t\t\t\t| The GUID associated to the routebuildschedulelog.\t\t\t\t\t\t\t\t\t\t\t|\r\n| BuildStart\t\t\t\t\t\t| The Build Start  date associated to the routebuildschedulelogs.\t\t\t \t\t\t\t|\t\r\n| BuildEnd\t\t\t\t\t\t\t| The Build End  date associated to the routebuildschedulelogs. \t\t\t\t\t\t\t|\t\r\n| IsSuccess\t\t\t\t\t\t\t| Whether the routebuildschedulelogs is success. \t\t\t\t\t\t\t\t\t\t\t|\t\r\n| RouteTemplateGuid\t\t\t\t\t| The GUID of the Route Template associated to the routebuildschedulelog. Filterable\t\t|\t\r\n| IsDeleted\t\t\t\t\t\t\t| Whether the routebuildschedulelogs is deleted.\t\t\t\t\t\t\t\t\t\t\t|\r\n","operationId":"RouteBuildScheduleLog_GetChanges","consumes":["application/json"],"produces":["application/json"],"parameters":[{"name":"since","in":"query","required":false,"type":"string"},{"name":"cursor","in":"query","required":false,"type":"string"},{"name":"links","in":"query","required":false,"type":"string"}],"responses":{"200":{"description":"OK","schema":{"$ref":"#/definitions/ApiResourceChanges[ApiIntegratorRouteBuildScheduleLogResource]"}}}}},"/transport/routeBuildScheduleLogs/{guid}":{"get":{"tags":["RouteBuildScheduleLog"],"summary":"Find with GUID","description":"| Property\t\t\t\t\t\t\t| Description\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t|\r\n| ----------------------------------| ------------------------------------------------------------------------------------------|\r\n| GUID\t\t\t\t\t\t\t\t| The GUID associated to the routebuildschedulelog.\t\t\t\t\t\t\t\t\t\t\t|\r\n| BuildStart\t\t\t\t\t\t| The Build Start  date associated to the routebuildschedulelogs.\t\t\t \t\t\t\t|\t\r\n| BuildEnd\t\t\t\t\t\t\t| The Build End  date associated to the routebuildschedulelogs. \t\t\t\t\t\t\t|\t\r\n| IsSuccess\t\t\t\t\t\t\t| Whether the routebuildschedulelogs is success. \t\t\t\t\t\t\t\t\t\t\t|\t\r\n| RouteTemplateGuid\t\t\t\t\t| The GUID of the Route Template associated to the routebuildschedulelog. Filterable\t\t|\t\r\n| IsDeleted\t\t\t\t\t\t\t| Whether the routebuildschedulelogs is deleted.\t\t\t\t\t\t\t\t\t\t\t|\r\n","operationId":"RouteBuildScheduleLog_Get","consumes":["application/json"],"produces":["application/json"],"parameters":[{"name":"guid","in":"path","required":true,"type":"string","format":"uuid"},{"name":"links","in":"query","required":false,"type":"string"},{"name":"include","in":"query","required":false,"type":"string"},{"name":"expand","in":"query","required":false,"type":"string"},{"name":"udf","in":"query","required":false,"type":"string"}],"responses":{"200":{"description":"OK","schema":{"$ref":"#/definitions/ApiResourceResultEntity[ApiIntegratorRouteBuildScheduleLogResource]"}}}}},"/transport/routeBuildScheduleLogs":{"get":{"tags":["RouteBuildScheduleLog"],"summary":"Find with Filters","description":"| Property\t\t\t\t\t\t\t| Description\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t|\r\n| ----------------------------------| ------------------------------------------------------------------------------------------|\r\n| GUID\t\t\t\t\t\t\t\t| The GUID associated to the routebuildschedulelog.\t\t\t\t\t\t\t\t\t\t\t|\r\n| BuildStart\t\t\t\t\t\t| The Build Start  date associated to the routebuildschedulelogs.\t\t\t \t\t\t\t|\t\r\n| BuildEnd\t\t\t\t\t\t\t| The Build End  date associated to the routebuildschedulelogs. \t\t\t\t\t\t\t|\t\r\n| IsSuccess\t\t\t\t\t\t\t| Whether the routebuildschedulelogs is success. \t\t\t\t\t\t\t\t\t\t\t|\t\r\n| RouteTemplateGuid\t\t\t\t\t| The GUID of the Route Template associated to the routebuildschedulelog. Filterable\t\t|\t\r\n| IsDeleted\t\t\t\t\t\t\t| Whether the routebuildschedulelogs is deleted.\t\t\t\t\t\t\t\t\t\t\t|\r\n","operationId":"RouteBuildScheduleLog_GetCollection","consumes":["application/json"],"produces":["application/json"],"parameters":[{"name":"filter","in":"query","required":false,"type":"string"},{"name":"search","in":"query","required":false,"type":"string"},{"name":"order","in":"query","required":false,"type":"string"},{"name":"max","in":"query","required":false,"type":"integer","format":"int32"},{"name":"page","in":"query","required":false,"type":"integer","format":"int32"},{"name":"includeCount","in":"query","required":false,"type":"boolean"},{"name":"includeDeleted","in":"query","required":false,"type":"boolean"},{"name":"links","in":"query","required":false,"type":"string"},{"name":"udf","in":"query","required":false,"type":"string"}],"responses":{"200":{"description":"OK","schema":{"$ref":"#/definitions/ApiResourceResultCollection[ApiIntegratorRouteBuildScheduleLogResource]"}}}}},"/lists/routeManagementTypes/{guid}":{"get":{"tags":["RouteManagementType"],"summary":"Find with GUID","description":"| Property                  | Description\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t|\r\n| ------------------------- | -------------------------------------------------------------------------\t|\r\n| GUID                      | The GUID associated to the route management type.\t\t\t\t\t\t\t|\r\n| Description               | The description of the route management type.\t\t\t\t\t\t\t\t|\r\n| IsDeleted                 | Whether the route management type is deleted.\t         \t \t\t\t\t|","operationId":"RouteManagementType_Get","consumes":["application/json"],"produces":["application/json"],"parameters":[{"name":"guid","in":"path","required":true,"type":"string","format":"uuid"},{"name":"links","in":"query","required":false,"type":"string"},{"name":"include","in":"query","required":false,"type":"string"},{"name":"expand","in":"query","required":false,"type":"string"},{"name":"udf","in":"query","required":false,"type":"string"}],"responses":{"200":{"description":"OK","schema":{"$ref":"#/definitions/ApiResourceResultEntity[ApiIntegratorRouteManagementTypeResource]"}}}}},"/lists/routeManagementTypes":{"get":{"tags":["RouteManagementType"],"summary":"Find with Filters","description":"| Property                  | Description\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t|\r\n| ------------------------- | -------------------------------------------------------------------------\t|\r\n| GUID                      | The GUID associated to the route management type.\t\t\t\t\t\t\t|\r\n| Description               | The description of the route management type.\t\t\t\t\t\t\t\t|\r\n| IsDeleted                 | Whether the route management type is deleted.\t         \t \t\t\t\t|","operationId":"RouteManagementType_GetCollection","consumes":["application/json"],"produces":["application/json"],"parameters":[{"name":"filter","in":"query","required":false,"type":"string"},{"name":"search","in":"query","required":false,"type":"string"},{"name":"order","in":"query","required":false,"type":"string"},{"name":"max","in":"query","required":false,"type":"integer","format":"int32"},{"name":"page","in":"query","required":false,"type":"integer","format":"int32"},{"name":"includeCount","in":"query","required":false,"type":"boolean"},{"name":"includeDeleted","in":"query","required":false,"type":"boolean"},{"name":"links","in":"query","required":false,"type":"string"},{"name":"udf","in":"query","required":false,"type":"string"}],"responses":{"200":{"description":"OK","schema":{"$ref":"#/definitions/ApiResourceResultCollection[ApiIntegratorRouteManagementTypeResource]"}}}}},"/transport/routeTemplates/changes":{"get":{"tags":["RouteTemplate"],"summary":"Retrieve changes","description":"| Property\t\t\t\t\t\t\t\t\t\t| Description\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t|\r\n| --------------------------------------------- | ----------------------------------------------------------------------------------------------------- |\r\n| GUID\t\t\t\t\t\t\t\t\t\t\t| The GUID associated to the route.\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t|\r\n| AcceptedMaterials\t\t\t\t\t\t\t\t| An array of accepted materials.\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t|\r\n| AcceptedMaterials[0].Guid\t\t\t\t\t\t| The GUID of accepted material.\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t|\r\n| AcceptedMaterials[0].IsDeleted\t\t\t\t| Whether accepted material is deleted.\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t|\r\n| AcceptedMaterials[0].MaterialClassListItem\t| The GUID and Description of material class\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t|\r\n| ArchiveMissedRouteVisitReasonListItem\t\t\t| The GUID and description of the archive missed route visit reason associated to the route template. \t|\r\n| ArchiveRouteVisitDays\t\t\t\t\t\t\t| The archive route visit days associated to the route template.\t\t\t\t\t\t\t\t\t\t|\r\n| AreaOfOriginListItem\t\t\t\t\t\t\t| The GUID and description of the area of origin associated to the route template. \t\t\t\t\t\t|\r\n| AuditDays\t\t\t\t\t\t\t\t\t\t| The audit days associated to the route template.\t\t\t\t\t\t\t\t\t\t\t\t\t\t|\r\n| AuditStartDate\t\t\t\t\t\t\t\t| The audit start date associated to the route template.\t\t\t\t\t\t\t\t\t\t\t\t|\r\n| AutoCompleteVisits\t\t\t\t\t\t\t| Whether auto complete visits associated to the route template.\t\t\t\t\t\t\t\t\t\t| \r\n| AutoSend\t\t\t\t\t\t\t\t\t\t| Whether auto send associated to the route template.\t\t\t\t\t\t\t\t\t\t\t\t\t| \r\n| BuildDaysBeforeNextPlannedDate\t\t\t\t| The build days before next planned date associated to the route template.\t\t\t\t\t\t\t\t| \r\n| BuildSimpleRouteInstance\t\t\t\t\t\t| Whether build simple route instance associated to the route template.\t\t\t\t\t\t\t\t\t| \r\n| CanRunOnSchedule\t\t\t\t\t\t\t\t| Whether can run on schedule associated to the route template.\t\t\t\t\t\t\t\t\t\t\t| \r\n| CompanyOutletListItem\t\t\t\t\t\t\t| The GUID and description of the company outlet associated to the route template. \t\t\t\t\t\t|\r\n| DayOccurrenceInMonthListItem\t\t\t\t\t| The GUID and description of the day occurrence in month associated to the route template. \t\t\t|\r\n| DayOfWeekListItem\t\t\t\t\t\t\t\t| The GUID and description of the day of week associated to the route template. \t\t\t\t\t\t|\r\n| DaysBeforeExpiry\t\t\t\t\t\t\t\t| The days before expiry associated to the route template.\t\t\t\t\t\t\t\t\t\t\t\t| \r\n| DefaultTipMaterialListItem\t\t\t\t\t| The GUID and description of the material associated to the route template. \t\t\t\t\t\t\t|\r\n| Description\t\t\t\t\t\t\t\t\t| The description associated to the route.\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t|\r\n| DiffReasonRequired\t\t\t\t\t\t\t| Whether different reason required associated to the route template.\t\t\t\t\t\t\t\t\t|\r\n| DoubleDumpTimeInSeconds\t\t\t\t\t\t| The double dump time in seconds associated to the route template.\t\t\t\t\t\t\t\t\t\t|\r\n| ExcludeMunicipalCustomerFromHandheld\t\t\t| Whether exclude municipal customer from handheld associated to the route template.\t\t\t\t\t|\r\n| ExcludeMunicipalCustomerFromRouteConfirmation\t| Whether exclude municipal customer from route confirmation associated to the route template.\t\t\t|\r\n| ExcludeMunicipalCustomerFromRouteWorksheet\t| Whether exclude municipal customer from route worksheet associated to the route template.\t\t\t\t|\r\n| ForceWeightsOnRouteCompletion\t\t\t\t\t| Whether force weights on route completion associated to the route template.\t\t\t\t\t\t\t|\r\n| GPSMatchingEnabled\t\t\t\t\t\t\t| Whether GPS matching enabled associated to the route template.\t\t\t\t\t\t\t\t\t\t|\r\n| GpsMatchingMaxRange\t\t\t\t\t\t\t| The Gps matching max range associated to the route.\t\t\t\t\t\t\t\t\t\t\t\t\t|\r\n| GpsmatchingMinProximity\t\t\t\t\t\t| The Gps matching min proximity associated to the route.\t\t\t\t\t\t\t\t\t\t\t\t|\r\n| GuidedNavigationPassword\t\t\t\t\t\t| The guided navigation password associated to the route.\t\t\t\t\t\t\t\t\t\t\t\t|\r\n| GuidedNavigationUsername\t\t\t\t\t\t| The guided navigation username associated to the route.\t\t\t\t\t\t\t\t\t\t\t\t|\r\n| GuideVersion\t\t\t\t\t\t\t\t\t| The guide version associated to the route.\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t|\r\n| HideTipLocationMapMarkers\t\t\t\t\t\t| Whether hide tip location map markers associated to the route template.\t\t\t\t\t\t\t\t|\r\n| IsAutoCompleteOnBuild\t\t\t\t\t\t\t| Whether the route template is auto complete on build.\t\t\t\t\t\t\t\t\t\t\t\t\t|\r\n| IsDeleted\t\t\t\t\t\t\t\t\t\t| Whether the route template is deleted.\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t|\r\n| IsNightRoute\t\t\t\t\t\t\t\t\t| Whether the route template is for night route.\t\t\t\t\t\t\t\t\t\t\t\t\t\t|\r\n| IsProximityOrderedVisits\t\t\t\t\t\t| Whether the route template is proximity ordered visits.\t\t\t\t\t\t\t\t\t\t\t\t|\r\n| IsRouteNavigationEnabled\t\t\t\t\t\t| Whether the route template has route navigation enabled.\t\t\t\t\t\t\t\t\t\t\t\t|\r\n| IsRouteStatisticGenerationOn\t\t\t\t\t| Whether the route template is route statistic generation is On.\t\t\t\t\t\t\t\t\t\t|\r\n| IsSubContracted\t\t\t\t\t\t\t\t| Whether the route template is sub contracted.\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t|\r\n| MarketListItem\t\t\t\t\t\t\t\t| The GUID and description of the market associated to the route template. \t\t\t\t\t\t\t\t|\r\n| MissedReasonRequired\t\t\t\t\t\t\t| Whether the missed reason is required for route template.\t\t\t\t\t\t\t\t\t\t\t\t|\r\n| MobileForceManualLiftMatching\t\t\t\t\t| Whether the mobile force manual lift matching for route template.\t\t\t\t\t\t\t\t\t\t|\r\n| MobileSettingsProfileListItem\t\t\t\t\t| The GUID and description of the mobile settings profile associated to the route template.\t\t\t\t|\r\n| NextPlannedDate\t\t\t\t\t\t\t\t| The next planned date associated to the route template.\t\t\t\t\t\t\t\t\t\t\t\t|\r\n| NoMatchAlertThreshold\t\t\t\t\t\t\t| The No match alert threshold to the route template.\t\t\t\t\t\t\t\t\t\t\t\t\t|\r\n| NoTagStopEnabled\t\t\t\t\t\t\t\t| Whether the route template has no tag stop enabled.\t\t\t\t\t\t\t\t\t\t\t\t\t|\r\n| Notes\t\t\t\t\t\t\t\t\t\t\t| The notes associated to the route template.\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t|\r\n| PickupIntervalListItem\t\t\t\t\t\t| The GUID and description of the pick up interval associated to the route template.\t\t\t\t\t|\r\n| PlannedEndTime\t\t\t\t\t\t\t\t| The planned end time associated to the route template.\t\t\t\t\t\t\t\t\t\t\t\t|\r\n| PlannedStartTime\t\t\t\t\t\t\t\t| The planned start time associated to the route template.\t\t\t\t\t\t\t\t\t\t\t\t|\r\n| PrintExceptionsOnly\t\t\t\t\t\t\t| Whether the route template should print exceptions only.\t\t\t\t\t\t\t\t\t\t\t\t|\r\n| PromptForLiftsOnVisitCompletion\t\t\t\t| Whether the route template should prompt for lifts on visit completion.\t\t\t\t\t\t\t\t|\r\n| RelatedCompanyOutletGuidFilter\t\t\t\t| Used to filter by the related company outlet GUID.\t\t\t\t\t\t\t\t\t\t\t\t\t|\r\n| RelatedLocationDestinationGuid\t\t\t\t| The GUID of location destination associated to the route template. Filterable.\t\t\t\t\t\t|\r\n| RelatedMasterRouteGuid\t\t\t\t\t\t| The GUID of master route associated to the route template. Filterable.\t\t\t\t\t\t\t\t|\r\n| RelatedRouteGroupGuid\t\t\t\t\t\t\t| The GUID of route group associated to the route template.\t\t\t\t\t\t\t\t\t\t\t\t|\r\n| RelatedSupplierSiteGuid\t\t\t\t\t\t| The GUID of supplier site associated to the route template. Filterable.\t\t\t\t\t\t\t\t|\r\n| RelatedSupplierSiteTransportGuid\t\t\t\t| The GUID of supplier site transport associated to the route template. Filterable.\t\t\t\t\t\t|\r\n| RelatedVehicleDefaultExternalGuid\t\t\t\t| The GUID of external vehicle associated to the route template. Filterable.\t\t\t\t\t\t\t|\r\n| RelatedVehicleDefaultGuid\t\t\t\t\t\t| The GUID of vehicle associated to the route template. Filterable.\t\t\t\t\t\t\t\t\t\t|\r\n| RelatedUserDefaultDriverGuid\t\t\t\t\t| The GUID of driver user associated to the route template. Filterable.\t\t\t\t\t\t\t\t\t|\r\n| RFIDAlertThreshold\t\t\t\t\t\t\t| The RFID alert threshold associated to the route template.\t\t\t\t\t\t\t\t\t\t\t|\r\n| RouteManagementTypeListItem\t\t\t\t\t| The GUID and description of the route management type associated to the route template.\t\t\t\t|\r\n| RouteNo\t\t\t\t\t\t\t\t\t\t| The route number associated to the route template.\t\t\t\t\t\t\t\t\t\t\t\t\t|\r\n| RouteVisitProximityRadius\t\t\t\t\t\t| The route visit proximity radius associated to the route template.\t\t\t\t\t\t\t\t\t|\r\n| StoplistPollingRate\t\t\t\t\t\t\t| The stoplist polling rate associated to the route template.\t\t\t\t\t\t\t\t\t\t\t|\r\n| SupplierEmailAddress\t\t\t\t\t\t\t| The supplier email address associated to the route template.\t\t\t\t\t\t\t\t\t\t\t|\r\n| UseOrderSupplierForCostGeneration\t\t\t\t| Whether the route template can use order supplier for cost generation.\t\t\t\t\t\t\t\t|\r\n| UseSystemGPSMatchingSettings\t\t\t\t\t| Whether the route template can use system GPS matching settings.\t\t\t\t\t\t\t\t\t\t|\r\n| VehicleTypeListItem\t\t\t\t\t\t\t| The GUID and description of the vehicle type associated to the route template.\t\t\t\t\t\t|\r\n| ZeroWeightAlertThreshold\t\t\t\t\t\t| The zero weight alert threshold associated to the route template.\t\t\t\t\t\t\t\t\t\t|\r\n","operationId":"RouteTemplate_GetChanges","consumes":["application/json"],"produces":["application/json"],"parameters":[{"name":"since","in":"query","required":false,"type":"string"},{"name":"cursor","in":"query","required":false,"type":"string"},{"name":"links","in":"query","required":false,"type":"string"}],"responses":{"200":{"description":"OK","schema":{"$ref":"#/definitions/ApiResourceChanges[ApiIntegratorRouteTemplateResource]"}}}}},"/transport/routeTemplates/{guid}":{"get":{"tags":["RouteTemplate"],"summary":"Find with GUID","description":"| Property\t\t\t\t\t\t\t\t\t\t| Description\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t|\r\n| --------------------------------------------- | ----------------------------------------------------------------------------------------------------- |\r\n| GUID\t\t\t\t\t\t\t\t\t\t\t| The GUID associated to the route.\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t|\r\n| AcceptedMaterials\t\t\t\t\t\t\t\t| An array of accepted materials.\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t|\r\n| AcceptedMaterials[0].Guid\t\t\t\t\t\t| The GUID of accepted material.\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t|\r\n| AcceptedMaterials[0].IsDeleted\t\t\t\t| Whether accepted material is deleted.\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t|\r\n| AcceptedMaterials[0].MaterialClassListItem\t| The GUID and Description of material class\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t|\r\n| ArchiveMissedRouteVisitReasonListItem\t\t\t| The GUID and description of the archive missed route visit reason associated to the route template. \t|\r\n| ArchiveRouteVisitDays\t\t\t\t\t\t\t| The archive route visit days associated to the route template.\t\t\t\t\t\t\t\t\t\t|\r\n| AreaOfOriginListItem\t\t\t\t\t\t\t| The GUID and description of the area of origin associated to the route template. \t\t\t\t\t\t|\r\n| AuditDays\t\t\t\t\t\t\t\t\t\t| The audit days associated to the route template.\t\t\t\t\t\t\t\t\t\t\t\t\t\t|\r\n| AuditStartDate\t\t\t\t\t\t\t\t| The audit start date associated to the route template.\t\t\t\t\t\t\t\t\t\t\t\t|\r\n| AutoCompleteVisits\t\t\t\t\t\t\t| Whether auto complete visits associated to the route template.\t\t\t\t\t\t\t\t\t\t| \r\n| AutoSend\t\t\t\t\t\t\t\t\t\t| Whether auto send associated to the route template.\t\t\t\t\t\t\t\t\t\t\t\t\t| \r\n| BuildDaysBeforeNextPlannedDate\t\t\t\t| The build days before next planned date associated to the route template.\t\t\t\t\t\t\t\t| \r\n| BuildSimpleRouteInstance\t\t\t\t\t\t| Whether build simple route instance associated to the route template.\t\t\t\t\t\t\t\t\t| \r\n| CanRunOnSchedule\t\t\t\t\t\t\t\t| Whether can run on schedule associated to the route template.\t\t\t\t\t\t\t\t\t\t\t| \r\n| CompanyOutletListItem\t\t\t\t\t\t\t| The GUID and description of the company outlet associated to the route template. \t\t\t\t\t\t|\r\n| DayOccurrenceInMonthListItem\t\t\t\t\t| The GUID and description of the day occurrence in month associated to the route template. \t\t\t|\r\n| DayOfWeekListItem\t\t\t\t\t\t\t\t| The GUID and description of the day of week associated to the route template. \t\t\t\t\t\t|\r\n| DaysBeforeExpiry\t\t\t\t\t\t\t\t| The days before expiry associated to the route template.\t\t\t\t\t\t\t\t\t\t\t\t| \r\n| DefaultTipMaterialListItem\t\t\t\t\t| The GUID and description of the material associated to the route template. \t\t\t\t\t\t\t|\r\n| Description\t\t\t\t\t\t\t\t\t| The description associated to the route.\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t|\r\n| DiffReasonRequired\t\t\t\t\t\t\t| Whether different reason required associated to the route template.\t\t\t\t\t\t\t\t\t|\r\n| DoubleDumpTimeInSeconds\t\t\t\t\t\t| The double dump time in seconds associated to the route template.\t\t\t\t\t\t\t\t\t\t|\r\n| ExcludeMunicipalCustomerFromHandheld\t\t\t| Whether exclude municipal customer from handheld associated to the route template.\t\t\t\t\t|\r\n| ExcludeMunicipalCustomerFromRouteConfirmation\t| Whether exclude municipal customer from route confirmation associated to the route template.\t\t\t|\r\n| ExcludeMunicipalCustomerFromRouteWorksheet\t| Whether exclude municipal customer from route worksheet associated to the route template.\t\t\t\t|\r\n| ForceWeightsOnRouteCompletion\t\t\t\t\t| Whether force weights on route completion associated to the route template.\t\t\t\t\t\t\t|\r\n| GPSMatchingEnabled\t\t\t\t\t\t\t| Whether GPS matching enabled associated to the route template.\t\t\t\t\t\t\t\t\t\t|\r\n| GpsMatchingMaxRange\t\t\t\t\t\t\t| The Gps matching max range associated to the route.\t\t\t\t\t\t\t\t\t\t\t\t\t|\r\n| GpsmatchingMinProximity\t\t\t\t\t\t| The Gps matching min proximity associated to the route.\t\t\t\t\t\t\t\t\t\t\t\t|\r\n| GuidedNavigationPassword\t\t\t\t\t\t| The guided navigation password associated to the route.\t\t\t\t\t\t\t\t\t\t\t\t|\r\n| GuidedNavigationUsername\t\t\t\t\t\t| The guided navigation username associated to the route.\t\t\t\t\t\t\t\t\t\t\t\t|\r\n| GuideVersion\t\t\t\t\t\t\t\t\t| The guide version associated to the route.\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t|\r\n| HideTipLocationMapMarkers\t\t\t\t\t\t| Whether hide tip location map markers associated to the route template.\t\t\t\t\t\t\t\t|\r\n| IsAutoCompleteOnBuild\t\t\t\t\t\t\t| Whether the route template is auto complete on build.\t\t\t\t\t\t\t\t\t\t\t\t\t|\r\n| IsDeleted\t\t\t\t\t\t\t\t\t\t| Whether the route template is deleted.\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t|\r\n| IsNightRoute\t\t\t\t\t\t\t\t\t| Whether the route template is for night route.\t\t\t\t\t\t\t\t\t\t\t\t\t\t|\r\n| IsProximityOrderedVisits\t\t\t\t\t\t| Whether the route template is proximity ordered visits.\t\t\t\t\t\t\t\t\t\t\t\t|\r\n| IsRouteNavigationEnabled\t\t\t\t\t\t| Whether the route template has route navigation enabled.\t\t\t\t\t\t\t\t\t\t\t\t|\r\n| IsRouteStatisticGenerationOn\t\t\t\t\t| Whether the route template is route statistic generation is On.\t\t\t\t\t\t\t\t\t\t|\r\n| IsSubContracted\t\t\t\t\t\t\t\t| Whether the route template is sub contracted.\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t|\r\n| MarketListItem\t\t\t\t\t\t\t\t| The GUID and description of the market associated to the route template. \t\t\t\t\t\t\t\t|\r\n| MissedReasonRequired\t\t\t\t\t\t\t| Whether the missed reason is required for route template.\t\t\t\t\t\t\t\t\t\t\t\t|\r\n| MobileForceManualLiftMatching\t\t\t\t\t| Whether the mobile force manual lift matching for route template.\t\t\t\t\t\t\t\t\t\t|\r\n| MobileSettingsProfileListItem\t\t\t\t\t| The GUID and description of the mobile settings profile associated to the route template.\t\t\t\t|\r\n| NextPlannedDate\t\t\t\t\t\t\t\t| The next planned date associated to the route template.\t\t\t\t\t\t\t\t\t\t\t\t|\r\n| NoMatchAlertThreshold\t\t\t\t\t\t\t| The No match alert threshold to the route template.\t\t\t\t\t\t\t\t\t\t\t\t\t|\r\n| NoTagStopEnabled\t\t\t\t\t\t\t\t| Whether the route template has no tag stop enabled.\t\t\t\t\t\t\t\t\t\t\t\t\t|\r\n| Notes\t\t\t\t\t\t\t\t\t\t\t| The notes associated to the route template.\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t|\r\n| PickupIntervalListItem\t\t\t\t\t\t| The GUID and description of the pick up interval associated to the route template.\t\t\t\t\t|\r\n| PlannedEndTime\t\t\t\t\t\t\t\t| The planned end time associated to the route template.\t\t\t\t\t\t\t\t\t\t\t\t|\r\n| PlannedStartTime\t\t\t\t\t\t\t\t| The planned start time associated to the route template.\t\t\t\t\t\t\t\t\t\t\t\t|\r\n| PrintExceptionsOnly\t\t\t\t\t\t\t| Whether the route template should print exceptions only.\t\t\t\t\t\t\t\t\t\t\t\t|\r\n| PromptForLiftsOnVisitCompletion\t\t\t\t| Whether the route template should prompt for lifts on visit completion.\t\t\t\t\t\t\t\t|\r\n| RelatedCompanyOutletGuidFilter\t\t\t\t| Used to filter by the related company outlet GUID.\t\t\t\t\t\t\t\t\t\t\t\t\t|\r\n| RelatedLocationDestinationGuid\t\t\t\t| The GUID of location destination associated to the route template. Filterable.\t\t\t\t\t\t|\r\n| RelatedMasterRouteGuid\t\t\t\t\t\t| The GUID of master route associated to the route template. Filterable.\t\t\t\t\t\t\t\t|\r\n| RelatedRouteGroupGuid\t\t\t\t\t\t\t| The GUID of route group associated to the route template.\t\t\t\t\t\t\t\t\t\t\t\t|\r\n| RelatedSupplierSiteGuid\t\t\t\t\t\t| The GUID of supplier site associated to the route template. Filterable.\t\t\t\t\t\t\t\t|\r\n| RelatedSupplierSiteTransportGuid\t\t\t\t| The GUID of supplier site transport associated to the route template. Filterable.\t\t\t\t\t\t|\r\n| RelatedVehicleDefaultExternalGuid\t\t\t\t| The GUID of external vehicle associated to the route template. Filterable.\t\t\t\t\t\t\t|\r\n| RelatedVehicleDefaultGuid\t\t\t\t\t\t| The GUID of vehicle associated to the route template. Filterable.\t\t\t\t\t\t\t\t\t\t|\r\n| RelatedUserDefaultDriverGuid\t\t\t\t\t| The GUID of driver user associated to the route template. Filterable.\t\t\t\t\t\t\t\t\t|\r\n| RFIDAlertThreshold\t\t\t\t\t\t\t| The RFID alert threshold associated to the route template.\t\t\t\t\t\t\t\t\t\t\t|\r\n| RouteManagementTypeListItem\t\t\t\t\t| The GUID and description of the route management type associated to the route template.\t\t\t\t|\r\n| RouteNo\t\t\t\t\t\t\t\t\t\t| The route number associated to the route template.\t\t\t\t\t\t\t\t\t\t\t\t\t|\r\n| RouteVisitProximityRadius\t\t\t\t\t\t| The route visit proximity radius associated to the route template.\t\t\t\t\t\t\t\t\t|\r\n| StoplistPollingRate\t\t\t\t\t\t\t| The stoplist polling rate associated to the route template.\t\t\t\t\t\t\t\t\t\t\t|\r\n| SupplierEmailAddress\t\t\t\t\t\t\t| The supplier email address associated to the route template.\t\t\t\t\t\t\t\t\t\t\t|\r\n| UseOrderSupplierForCostGeneration\t\t\t\t| Whether the route template can use order supplier for cost generation.\t\t\t\t\t\t\t\t|\r\n| UseSystemGPSMatchingSettings\t\t\t\t\t| Whether the route template can use system GPS matching settings.\t\t\t\t\t\t\t\t\t\t|\r\n| VehicleTypeListItem\t\t\t\t\t\t\t| The GUID and description of the vehicle type associated to the route template.\t\t\t\t\t\t|\r\n| ZeroWeightAlertThreshold\t\t\t\t\t\t| The zero weight alert threshold associated to the route template.\t\t\t\t\t\t\t\t\t\t|\r\n","operationId":"RouteTemplate_Get","consumes":["application/json"],"produces":["application/json"],"parameters":[{"name":"guid","in":"path","required":true,"type":"string","format":"uuid"},{"name":"links","in":"query","required":false,"type":"string"},{"name":"include","in":"query","required":false,"type":"string"},{"name":"expand","in":"query","required":false,"type":"string"},{"name":"udf","in":"query","required":false,"type":"string"}],"responses":{"200":{"description":"OK","schema":{"$ref":"#/definitions/ApiResourceResultEntity[ApiIntegratorRouteTemplateResource]"}}}},"put":{"tags":["RouteTemplate"],"summary":"Create or update","description":"| Property\t\t\t\t\t\t\t\t\t\t| Description\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t| Required |\r\n| --------------------------------------------- | ----------------------------------------------------------------------------------------------------- | -------- |\r\n| GUID\t\t\t\t\t\t\t\t\t\t\t| The GUID associated to the route.\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t| No |\r\n| AcceptedMaterials\t\t\t\t\t\t\t\t| An array of accepted materials.\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t| No |\r\n| AcceptedMaterials.Guid\t\t\t\t\t\t| Guid of accepted material.\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t| No |\t\r\n| AcceptedMaterials.IsDeleted\t\t\t\t\t| Whether the accepted material is deleted.\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t| Yes |\r\n| AcceptedMaterials.MaterialClassItem\t\t\t| Guid and description of material class.\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t| Yes |\r\n| ArchiveMissedRouteVisitReasonListItem\t\t\t| The GUID and description of the archive missed route visit reason associated to the route template. \t| No |\r\n| ArchiveRouteVisitDays\t\t\t\t\t\t\t| The archive route visit days associated to the route template.\t\t\t\t\t\t\t\t\t\t| No |\r\n| AreaOfOriginListItem\t\t\t\t\t\t\t| The GUID and description of the area of origin associated to the route template. \t\t\t\t\t\t| Yes |\r\n| AuditDays\t\t\t\t\t\t\t\t\t\t| The audit days associated to the route template.\t\t\t\t\t\t\t\t\t\t\t\t\t\t| No |\r\n| AuditStartDate\t\t\t\t\t\t\t\t| The audit start date associated to the route template.\t\t\t\t\t\t\t\t\t\t\t\t| No |\r\n| AutoSend\t\t\t\t\t\t\t\t\t\t| Whether auto send associated to the route template.\t\t\t\t\t\t\t\t\t\t\t\t\t| No |\r\n| BuildDaysBeforeNextPlannedDate\t\t\t\t| The build days before next planned date associated to the route template.\t\t\t\t\t\t\t\t| No |\r\n| BuildSimpleRouteInstance\t\t\t\t\t\t| Whether build simple route instance associated to the route template.\t\t\t\t\t\t\t\t\t| No | \r\n| CanRunOnSchedule\t\t\t\t\t\t\t\t| Whether can run on schedule associated to the route template.\t\t\t\t\t\t\t\t\t\t\t| Yes |\r\n| CompanyOutletListItem\t\t\t\t\t\t\t| The GUID and description of the company outlet associated to the route template. \t\t\t\t\t\t| Yes |\r\n| DayOccurrenceInMonthListItem\t\t\t\t\t| The GUID and description of the day occurrence in month associated to the route template. \t\t\t| No |\r\n| DayOfWeekListItem\t\t\t\t\t\t\t\t| The GUID and description of the day of week associated to the route template. \t\t\t\t\t\t| Yes |\r\n| DaysBeforeExpiry\t\t\t\t\t\t\t\t| The days before expiry associated to the route template.\t\t\t\t\t\t\t\t\t\t\t\t| No | \r\n| DefaultTipMaterialListItem\t\t\t\t\t| The GUID and description of the material associated to the route template. \t\t\t\t\t\t\t| No |\r\n| Description\t\t\t\t\t\t\t\t\t| The description associated to the route.\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t| Yes |\r\n| DiffReasonRequired\t\t\t\t\t\t\t| Whether different reason required associated to the route template.\t\t\t\t\t\t\t\t\t| No |\r\n| ExcludeMunicipalCustomerFromHandheld\t\t\t| Whether exclude municipal customer from handheld associated to the route template.\t\t\t\t\t| No |\r\n| ExcludeMunicipalCustomerFromRouteConfirmation\t| Whether exclude municipal customer from route confirmation associated to the route template.\t\t\t| No |\r\n| ExcludeMunicipalCustomerFromRouteWorksheet\t| Whether exclude municipal customer from route worksheet associated to the route template.\t\t\t\t| No |\r\n| ForceWeightsOnRouteCompletion\t\t\t\t\t| Whether force weights on route completion associated to the route template.\t\t\t\t\t\t\t| No |\r\n| GuidedNavigationPassword\t\t\t\t\t\t| The guided navigation password associated to the route.\t\t\t\t\t\t\t\t\t\t\t\t| No |\r\n| GuidedNavigationUsername\t\t\t\t\t\t| The guided navigation username associated to the route.\t\t\t\t\t\t\t\t\t\t\t\t| No |\r\n| GuideVersion\t\t\t\t\t\t\t\t\t| The guide version associated to the route.\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t| No |\r\n| IsAutoCompleteOnBuild\t\t\t\t\t\t\t| Whether the route template is auto complete on build.\t\t\t\t\t\t\t\t\t\t\t\t\t| No |\r\n| IsDeleted\t\t\t\t\t\t\t\t\t\t| Whether the route template is deleted.\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t| No |\r\n| IsNightRoute\t\t\t\t\t\t\t\t\t| Whether the route template is for night route.\t\t\t\t\t\t\t\t\t\t\t\t\t\t| No |\r\n| IsRouteNavigationEnabled\t\t\t\t\t\t| Whether the route template has route navigation enabled.\t\t\t\t\t\t\t\t\t\t\t\t| No |\r\n| IsRouteStatisticGenerationOn\t\t\t\t\t| Whether the route template is route statistic generation is On.\t\t\t\t\t\t\t\t\t\t| No |\r\n| MarketListItem\t\t\t\t\t\t\t\t| The GUID and description of the market associated to the route template. \t\t\t\t\t\t\t\t| No |\r\n| MissedReasonRequired\t\t\t\t\t\t\t| Whether the missed reason is required for route template.\t\t\t\t\t\t\t\t\t\t\t\t| No |\r\n| MobileSettingsProfileListItem\t\t\t\t\t| The GUID and description of the mobile settings profile associated to the route template.\t\t\t\t| Yes |\r\n| NextPlannedDate\t\t\t\t\t\t\t\t| The next planned date associated to the route template.\t\t\t\t\t\t\t\t\t\t\t\t| Yes |\r\n| Notes\t\t\t\t\t\t\t\t\t\t\t| The notes associated to the route template.\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t| No |\r\n| PickupIntervalListItem\t\t\t\t\t\t| The GUID and description of the pick up interval associated to the route template.\t\t\t\t\t| Yes |\r\n| PlannedEndTime\t\t\t\t\t\t\t\t| The planned end time associated to the route template.\t\t\t\t\t\t\t\t\t\t\t\t| No |\r\n| PlannedStartTime\t\t\t\t\t\t\t\t| The planned start time associated to the route template.\t\t\t\t\t\t\t\t\t\t\t\t| No |\r\n| PrintExceptionsOnly\t\t\t\t\t\t\t| Whether the route template should print exceptions only.\t\t\t\t\t\t\t\t\t\t\t\t| No |\r\n| RelatedCompanyOutletGuidFilter\t\t\t\t| Used to filter by the related company outlet GUID.\t\t\t\t\t\t\t\t\t\t\t\t\t| No |\r\n| RelatedLocationDestinationGuid\t\t\t\t| The GUID of location destination associated to the route template. Filterable.\t\t\t\t\t\t| No |\r\n| RelatedMasterRouteGuid\t\t\t\t\t\t| The GUID of master route associated to the route template. Filterable.\t\t\t\t\t\t\t\t| No |\r\n| RelatedSupplierSiteGuid\t\t\t\t\t\t| The GUID of supplier site associated to the route template. Filterable.\t\t\t\t\t\t\t\t| No |\r\n| RelatedSupplierSiteTransportGuid\t\t\t\t| The GUID of supplier site transport associated to the route template. Filterable.\t\t\t\t\t\t| No |\r\n| RelatedVehicleDefaultExternalGuid\t\t\t\t| The GUID of external vehicle associated to the route template. Filterable.\t\t\t\t\t\t\t| No |\r\n| RelatedVehicleDefaultGuid\t\t\t\t\t\t| The GUID of vehicle associated to the route template. Filterable.\t\t\t\t\t\t\t\t\t\t| No |\r\n| RelatedUserDefaultDriverGuid\t\t\t\t\t| The GUID of driver user associated to the route template. Filterable.\t\t\t\t\t\t\t\t\t| No |\r\n| RouteManagementTypeListItem\t\t\t\t\t| The GUID and description of the route management type associated to the route template.\t\t\t\t| Yes |\r\n| RouteNo\t\t\t\t\t\t\t\t\t\t| The route number associated to the route template.\t\t\t\t\t\t\t\t\t\t\t\t\t| Yes |\r\n| SupplierEmailAddress\t\t\t\t\t\t\t| The supplier email address associated to the route template.\t\t\t\t\t\t\t\t\t\t\t| Yes |\r\n| UseOrderSupplierForCostGeneration\t\t\t\t| Whether the route template can use order supplier for cost generation.\t\t\t\t\t\t\t\t| No |\r\n| VehicleTypeListItem\t\t\t\t\t\t\t| The GUID and description of the vehicle type associated to the route template.\t\t\t\t\t\t| Yes |\r\n\r\n\r\n## Extra validations\r\n\r\n| Condition | Error message |\r\n| --------- | ------------- |\r\n| If IsDeleted is true | IsDeleted is TRUE. Could not process the request. Resources can not be deleted via the REST API. |\r\n| Updating a deleted RouteTemplate | Failed to save/update RouteTemplate because attempt to update a deleted RouteTemplate is not allowed. Could not process the request. |\r\n| AcceptedMaterials.MaterialClassListItem is being edited | AcceptedMaterials.MaterialClassListItem is a read-only property. |\r\n| AcceptedMaterials.MaterialClassListItem.Guid is duplicate | The MaterialClassListItem must be unique per AcceptedMaterials |","operationId":"RouteTemplate_Update","consumes":["application/json"],"produces":["application/json"],"parameters":[{"name":"guid","in":"path","required":true,"type":"string","format":"uuid"},{"in":"body","required":true,"schema":{"$ref":"#/definitions/ApiResourceId"}}],"responses":{"200":{"description":"OK","schema":{"$ref":"#/definitions/ApiResourceId"}}}}},"/transport/routeTemplates":{"get":{"tags":["RouteTemplate"],"summary":"Find with Filters","description":"| Property\t\t\t\t\t\t\t\t\t\t| Description\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t|\r\n| --------------------------------------------- | ----------------------------------------------------------------------------------------------------- |\r\n| GUID\t\t\t\t\t\t\t\t\t\t\t| The GUID associated to the route.\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t|\r\n| AcceptedMaterials\t\t\t\t\t\t\t\t| An array of accepted materials.\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t|\r\n| AcceptedMaterials[0].Guid\t\t\t\t\t\t| The GUID of accepted material.\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t|\r\n| AcceptedMaterials[0].IsDeleted\t\t\t\t| Whether accepted material is deleted.\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t|\r\n| AcceptedMaterials[0].MaterialClassListItem\t| The GUID and Description of material class\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t|\r\n| ArchiveMissedRouteVisitReasonListItem\t\t\t| The GUID and description of the archive missed route visit reason associated to the route template. \t|\r\n| ArchiveRouteVisitDays\t\t\t\t\t\t\t| The archive route visit days associated to the route template.\t\t\t\t\t\t\t\t\t\t|\r\n| AreaOfOriginListItem\t\t\t\t\t\t\t| The GUID and description of the area of origin associated to the route template. \t\t\t\t\t\t|\r\n| AuditDays\t\t\t\t\t\t\t\t\t\t| The audit days associated to the route template.\t\t\t\t\t\t\t\t\t\t\t\t\t\t|\r\n| AuditStartDate\t\t\t\t\t\t\t\t| The audit start date associated to the route template.\t\t\t\t\t\t\t\t\t\t\t\t|\r\n| AutoCompleteVisits\t\t\t\t\t\t\t| Whether auto complete visits associated to the route template.\t\t\t\t\t\t\t\t\t\t| \r\n| AutoSend\t\t\t\t\t\t\t\t\t\t| Whether auto send associated to the route template.\t\t\t\t\t\t\t\t\t\t\t\t\t| \r\n| BuildDaysBeforeNextPlannedDate\t\t\t\t| The build days before next planned date associated to the route template.\t\t\t\t\t\t\t\t| \r\n| BuildSimpleRouteInstance\t\t\t\t\t\t| Whether build simple route instance associated to the route template.\t\t\t\t\t\t\t\t\t| \r\n| CanRunOnSchedule\t\t\t\t\t\t\t\t| Whether can run on schedule associated to the route template.\t\t\t\t\t\t\t\t\t\t\t| \r\n| CompanyOutletListItem\t\t\t\t\t\t\t| The GUID and description of the company outlet associated to the route template. \t\t\t\t\t\t|\r\n| DayOccurrenceInMonthListItem\t\t\t\t\t| The GUID and description of the day occurrence in month associated to the route template. \t\t\t|\r\n| DayOfWeekListItem\t\t\t\t\t\t\t\t| The GUID and description of the day of week associated to the route template. \t\t\t\t\t\t|\r\n| DaysBeforeExpiry\t\t\t\t\t\t\t\t| The days before expiry associated to the route template.\t\t\t\t\t\t\t\t\t\t\t\t| \r\n| DefaultTipMaterialListItem\t\t\t\t\t| The GUID and description of the material associated to the route template. \t\t\t\t\t\t\t|\r\n| Description\t\t\t\t\t\t\t\t\t| The description associated to the route.\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t|\r\n| DiffReasonRequired\t\t\t\t\t\t\t| Whether different reason required associated to the route template.\t\t\t\t\t\t\t\t\t|\r\n| DoubleDumpTimeInSeconds\t\t\t\t\t\t| The double dump time in seconds associated to the route template.\t\t\t\t\t\t\t\t\t\t|\r\n| ExcludeMunicipalCustomerFromHandheld\t\t\t| Whether exclude municipal customer from handheld associated to the route template.\t\t\t\t\t|\r\n| ExcludeMunicipalCustomerFromRouteConfirmation\t| Whether exclude municipal customer from route confirmation associated to the route template.\t\t\t|\r\n| ExcludeMunicipalCustomerFromRouteWorksheet\t| Whether exclude municipal customer from route worksheet associated to the route template.\t\t\t\t|\r\n| ForceWeightsOnRouteCompletion\t\t\t\t\t| Whether force weights on route completion associated to the route template.\t\t\t\t\t\t\t|\r\n| GPSMatchingEnabled\t\t\t\t\t\t\t| Whether GPS matching enabled associated to the route template.\t\t\t\t\t\t\t\t\t\t|\r\n| GpsMatchingMaxRange\t\t\t\t\t\t\t| The Gps matching max range associated to the route.\t\t\t\t\t\t\t\t\t\t\t\t\t|\r\n| GpsmatchingMinProximity\t\t\t\t\t\t| The Gps matching min proximity associated to the route.\t\t\t\t\t\t\t\t\t\t\t\t|\r\n| GuidedNavigationPassword\t\t\t\t\t\t| The guided navigation password associated to the route.\t\t\t\t\t\t\t\t\t\t\t\t|\r\n| GuidedNavigationUsername\t\t\t\t\t\t| The guided navigation username associated to the route.\t\t\t\t\t\t\t\t\t\t\t\t|\r\n| GuideVersion\t\t\t\t\t\t\t\t\t| The guide version associated to the route.\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t|\r\n| HideTipLocationMapMarkers\t\t\t\t\t\t| Whether hide tip location map markers associated to the route template.\t\t\t\t\t\t\t\t|\r\n| IsAutoCompleteOnBuild\t\t\t\t\t\t\t| Whether the route template is auto complete on build.\t\t\t\t\t\t\t\t\t\t\t\t\t|\r\n| IsDeleted\t\t\t\t\t\t\t\t\t\t| Whether the route template is deleted.\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t|\r\n| IsNightRoute\t\t\t\t\t\t\t\t\t| Whether the route template is for night route.\t\t\t\t\t\t\t\t\t\t\t\t\t\t|\r\n| IsProximityOrderedVisits\t\t\t\t\t\t| Whether the route template is proximity ordered visits.\t\t\t\t\t\t\t\t\t\t\t\t|\r\n| IsRouteNavigationEnabled\t\t\t\t\t\t| Whether the route template has route navigation enabled.\t\t\t\t\t\t\t\t\t\t\t\t|\r\n| IsRouteStatisticGenerationOn\t\t\t\t\t| Whether the route template is route statistic generation is On.\t\t\t\t\t\t\t\t\t\t|\r\n| IsSubContracted\t\t\t\t\t\t\t\t| Whether the route template is sub contracted.\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t|\r\n| MarketListItem\t\t\t\t\t\t\t\t| The GUID and description of the market associated to the route template. \t\t\t\t\t\t\t\t|\r\n| MissedReasonRequired\t\t\t\t\t\t\t| Whether the missed reason is required for route template.\t\t\t\t\t\t\t\t\t\t\t\t|\r\n| MobileForceManualLiftMatching\t\t\t\t\t| Whether the mobile force manual lift matching for route template.\t\t\t\t\t\t\t\t\t\t|\r\n| MobileSettingsProfileListItem\t\t\t\t\t| The GUID and description of the mobile settings profile associated to the route template.\t\t\t\t|\r\n| NextPlannedDate\t\t\t\t\t\t\t\t| The next planned date associated to the route template.\t\t\t\t\t\t\t\t\t\t\t\t|\r\n| NoMatchAlertThreshold\t\t\t\t\t\t\t| The No match alert threshold to the route template.\t\t\t\t\t\t\t\t\t\t\t\t\t|\r\n| NoTagStopEnabled\t\t\t\t\t\t\t\t| Whether the route template has no tag stop enabled.\t\t\t\t\t\t\t\t\t\t\t\t\t|\r\n| Notes\t\t\t\t\t\t\t\t\t\t\t| The notes associated to the route template.\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t|\r\n| PickupIntervalListItem\t\t\t\t\t\t| The GUID and description of the pick up interval associated to the route template.\t\t\t\t\t|\r\n| PlannedEndTime\t\t\t\t\t\t\t\t| The planned end time associated to the route template.\t\t\t\t\t\t\t\t\t\t\t\t|\r\n| PlannedStartTime\t\t\t\t\t\t\t\t| The planned start time associated to the route template.\t\t\t\t\t\t\t\t\t\t\t\t|\r\n| PrintExceptionsOnly\t\t\t\t\t\t\t| Whether the route template should print exceptions only.\t\t\t\t\t\t\t\t\t\t\t\t|\r\n| PromptForLiftsOnVisitCompletion\t\t\t\t| Whether the route template should prompt for lifts on visit completion.\t\t\t\t\t\t\t\t|\r\n| RelatedCompanyOutletGuidFilter\t\t\t\t| Used to filter by the related company outlet GUID.\t\t\t\t\t\t\t\t\t\t\t\t\t|\r\n| RelatedLocationDestinationGuid\t\t\t\t| The GUID of location destination associated to the route template. Filterable.\t\t\t\t\t\t|\r\n| RelatedMasterRouteGuid\t\t\t\t\t\t| The GUID of master route associated to the route template. Filterable.\t\t\t\t\t\t\t\t|\r\n| RelatedRouteGroupGuid\t\t\t\t\t\t\t| The GUID of route group associated to the route template.\t\t\t\t\t\t\t\t\t\t\t\t|\r\n| RelatedSupplierSiteGuid\t\t\t\t\t\t| The GUID of supplier site associated to the route template. Filterable.\t\t\t\t\t\t\t\t|\r\n| RelatedSupplierSiteTransportGuid\t\t\t\t| The GUID of supplier site transport associated to the route template. Filterable.\t\t\t\t\t\t|\r\n| RelatedVehicleDefaultExternalGuid\t\t\t\t| The GUID of external vehicle associated to the route template. Filterable.\t\t\t\t\t\t\t|\r\n| RelatedVehicleDefaultGuid\t\t\t\t\t\t| The GUID of vehicle associated to the route template. Filterable.\t\t\t\t\t\t\t\t\t\t|\r\n| RelatedUserDefaultDriverGuid\t\t\t\t\t| The GUID of driver user associated to the route template. Filterable.\t\t\t\t\t\t\t\t\t|\r\n| RFIDAlertThreshold\t\t\t\t\t\t\t| The RFID alert threshold associated to the route template.\t\t\t\t\t\t\t\t\t\t\t|\r\n| RouteManagementTypeListItem\t\t\t\t\t| The GUID and description of the route management type associated to the route template.\t\t\t\t|\r\n| RouteNo\t\t\t\t\t\t\t\t\t\t| The route number associated to the route template.\t\t\t\t\t\t\t\t\t\t\t\t\t|\r\n| RouteVisitProximityRadius\t\t\t\t\t\t| The route visit proximity radius associated to the route template.\t\t\t\t\t\t\t\t\t|\r\n| StoplistPollingRate\t\t\t\t\t\t\t| The stoplist polling rate associated to the route template.\t\t\t\t\t\t\t\t\t\t\t|\r\n| SupplierEmailAddress\t\t\t\t\t\t\t| The supplier email address associated to the route template.\t\t\t\t\t\t\t\t\t\t\t|\r\n| UseOrderSupplierForCostGeneration\t\t\t\t| Whether the route template can use order supplier for cost generation.\t\t\t\t\t\t\t\t|\r\n| UseSystemGPSMatchingSettings\t\t\t\t\t| Whether the route template can use system GPS matching settings.\t\t\t\t\t\t\t\t\t\t|\r\n| VehicleTypeListItem\t\t\t\t\t\t\t| The GUID and description of the vehicle type associated to the route template.\t\t\t\t\t\t|\r\n| ZeroWeightAlertThreshold\t\t\t\t\t\t| The zero weight alert threshold associated to the route template.\t\t\t\t\t\t\t\t\t\t|\r\n","operationId":"RouteTemplate_GetCollection","consumes":["application/json"],"produces":["application/json"],"parameters":[{"name":"filter","in":"query","required":false,"type":"string"},{"name":"search","in":"query","required":false,"type":"string"},{"name":"order","in":"query","required":false,"type":"string"},{"name":"max","in":"query","required":false,"type":"integer","format":"int32"},{"name":"page","in":"query","required":false,"type":"integer","format":"int32"},{"name":"includeCount","in":"query","required":false,"type":"boolean"},{"name":"includeDeleted","in":"query","required":false,"type":"boolean"},{"name":"links","in":"query","required":false,"type":"string"},{"name":"udf","in":"query","required":false,"type":"string"}],"responses":{"200":{"description":"OK","schema":{"$ref":"#/definitions/ApiResourceResultCollection[ApiIntegratorRouteTemplateResource]"}}}},"post":{"tags":["RouteTemplate"],"summary":"Create or update","description":"| Property\t\t\t\t\t\t\t\t\t\t| Description\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t| Required |\r\n| --------------------------------------------- | ----------------------------------------------------------------------------------------------------- | -------- |\r\n| GUID\t\t\t\t\t\t\t\t\t\t\t| The GUID associated to the route.\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t| No |\r\n| AcceptedMaterials\t\t\t\t\t\t\t\t| An array of accepted materials.\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t| No |\r\n| AcceptedMaterials.Guid\t\t\t\t\t\t| Guid of accepted material.\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t| No |\t\r\n| AcceptedMaterials.IsDeleted\t\t\t\t\t| Whether the accepted material is deleted.\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t| Yes |\r\n| AcceptedMaterials.MaterialClassItem\t\t\t| Guid and description of material class.\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t| Yes |\r\n| ArchiveMissedRouteVisitReasonListItem\t\t\t| The GUID and description of the archive missed route visit reason associated to the route template. \t| No |\r\n| ArchiveRouteVisitDays\t\t\t\t\t\t\t| The archive route visit days associated to the route template.\t\t\t\t\t\t\t\t\t\t| No |\r\n| AreaOfOriginListItem\t\t\t\t\t\t\t| The GUID and description of the area of origin associated to the route template. \t\t\t\t\t\t| Yes |\r\n| AuditDays\t\t\t\t\t\t\t\t\t\t| The audit days associated to the route template.\t\t\t\t\t\t\t\t\t\t\t\t\t\t| No |\r\n| AuditStartDate\t\t\t\t\t\t\t\t| The audit start date associated to the route template.\t\t\t\t\t\t\t\t\t\t\t\t| No |\r\n| AutoSend\t\t\t\t\t\t\t\t\t\t| Whether auto send associated to the route template.\t\t\t\t\t\t\t\t\t\t\t\t\t| No |\r\n| BuildDaysBeforeNextPlannedDate\t\t\t\t| The build days before next planned date associated to the route template.\t\t\t\t\t\t\t\t| No |\r\n| BuildSimpleRouteInstance\t\t\t\t\t\t| Whether build simple route instance associated to the route template.\t\t\t\t\t\t\t\t\t| No | \r\n| CanRunOnSchedule\t\t\t\t\t\t\t\t| Whether can run on schedule associated to the route template.\t\t\t\t\t\t\t\t\t\t\t| Yes |\r\n| CompanyOutletListItem\t\t\t\t\t\t\t| The GUID and description of the company outlet associated to the route template. \t\t\t\t\t\t| Yes |\r\n| DayOccurrenceInMonthListItem\t\t\t\t\t| The GUID and description of the day occurrence in month associated to the route template. \t\t\t| No |\r\n| DayOfWeekListItem\t\t\t\t\t\t\t\t| The GUID and description of the day of week associated to the route template. \t\t\t\t\t\t| Yes |\r\n| DaysBeforeExpiry\t\t\t\t\t\t\t\t| The days before expiry associated to the route template.\t\t\t\t\t\t\t\t\t\t\t\t| No | \r\n| DefaultTipMaterialListItem\t\t\t\t\t| The GUID and description of the material associated to the route template. \t\t\t\t\t\t\t| No |\r\n| Description\t\t\t\t\t\t\t\t\t| The description associated to the route.\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t| Yes |\r\n| DiffReasonRequired\t\t\t\t\t\t\t| Whether different reason required associated to the route template.\t\t\t\t\t\t\t\t\t| No |\r\n| ExcludeMunicipalCustomerFromHandheld\t\t\t| Whether exclude municipal customer from handheld associated to the route template.\t\t\t\t\t| No |\r\n| ExcludeMunicipalCustomerFromRouteConfirmation\t| Whether exclude municipal customer from route confirmation associated to the route template.\t\t\t| No |\r\n| ExcludeMunicipalCustomerFromRouteWorksheet\t| Whether exclude municipal customer from route worksheet associated to the route template.\t\t\t\t| No |\r\n| ForceWeightsOnRouteCompletion\t\t\t\t\t| Whether force weights on route completion associated to the route template.\t\t\t\t\t\t\t| No |\r\n| GuidedNavigationPassword\t\t\t\t\t\t| The guided navigation password associated to the route.\t\t\t\t\t\t\t\t\t\t\t\t| No |\r\n| GuidedNavigationUsername\t\t\t\t\t\t| The guided navigation username associated to the route.\t\t\t\t\t\t\t\t\t\t\t\t| No |\r\n| GuideVersion\t\t\t\t\t\t\t\t\t| The guide version associated to the route.\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t| No |\r\n| IsAutoCompleteOnBuild\t\t\t\t\t\t\t| Whether the route template is auto complete on build.\t\t\t\t\t\t\t\t\t\t\t\t\t| No |\r\n| IsDeleted\t\t\t\t\t\t\t\t\t\t| Whether the route template is deleted.\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t| No |\r\n| IsNightRoute\t\t\t\t\t\t\t\t\t| Whether the route template is for night route.\t\t\t\t\t\t\t\t\t\t\t\t\t\t| No |\r\n| IsRouteNavigationEnabled\t\t\t\t\t\t| Whether the route template has route navigation enabled.\t\t\t\t\t\t\t\t\t\t\t\t| No |\r\n| IsRouteStatisticGenerationOn\t\t\t\t\t| Whether the route template is route statistic generation is On.\t\t\t\t\t\t\t\t\t\t| No |\r\n| MarketListItem\t\t\t\t\t\t\t\t| The GUID and description of the market associated to the route template. \t\t\t\t\t\t\t\t| No |\r\n| MissedReasonRequired\t\t\t\t\t\t\t| Whether the missed reason is required for route template.\t\t\t\t\t\t\t\t\t\t\t\t| No |\r\n| MobileSettingsProfileListItem\t\t\t\t\t| The GUID and description of the mobile settings profile associated to the route template.\t\t\t\t| Yes |\r\n| NextPlannedDate\t\t\t\t\t\t\t\t| The next planned date associated to the route template.\t\t\t\t\t\t\t\t\t\t\t\t| Yes |\r\n| Notes\t\t\t\t\t\t\t\t\t\t\t| The notes associated to the route template.\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t| No |\r\n| PickupIntervalListItem\t\t\t\t\t\t| The GUID and description of the pick up interval associated to the route template.\t\t\t\t\t| Yes |\r\n| PlannedEndTime\t\t\t\t\t\t\t\t| The planned end time associated to the route template.\t\t\t\t\t\t\t\t\t\t\t\t| No |\r\n| PlannedStartTime\t\t\t\t\t\t\t\t| The planned start time associated to the route template.\t\t\t\t\t\t\t\t\t\t\t\t| No |\r\n| PrintExceptionsOnly\t\t\t\t\t\t\t| Whether the route template should print exceptions only.\t\t\t\t\t\t\t\t\t\t\t\t| No |\r\n| RelatedCompanyOutletGuidFilter\t\t\t\t| Used to filter by the related company outlet GUID.\t\t\t\t\t\t\t\t\t\t\t\t\t| No |\r\n| RelatedLocationDestinationGuid\t\t\t\t| The GUID of location destination associated to the route template. Filterable.\t\t\t\t\t\t| No |\r\n| RelatedMasterRouteGuid\t\t\t\t\t\t| The GUID of master route associated to the route template. Filterable.\t\t\t\t\t\t\t\t| No |\r\n| RelatedSupplierSiteGuid\t\t\t\t\t\t| The GUID of supplier site associated to the route template. Filterable.\t\t\t\t\t\t\t\t| No |\r\n| RelatedSupplierSiteTransportGuid\t\t\t\t| The GUID of supplier site transport associated to the route template. Filterable.\t\t\t\t\t\t| No |\r\n| RelatedVehicleDefaultExternalGuid\t\t\t\t| The GUID of external vehicle associated to the route template. Filterable.\t\t\t\t\t\t\t| No |\r\n| RelatedVehicleDefaultGuid\t\t\t\t\t\t| The GUID of vehicle associated to the route template. Filterable.\t\t\t\t\t\t\t\t\t\t| No |\r\n| RelatedUserDefaultDriverGuid\t\t\t\t\t| The GUID of driver user associated to the route template. Filterable.\t\t\t\t\t\t\t\t\t| No |\r\n| RouteManagementTypeListItem\t\t\t\t\t| The GUID and description of the route management type associated to the route template.\t\t\t\t| Yes |\r\n| RouteNo\t\t\t\t\t\t\t\t\t\t| The route number associated to the route template.\t\t\t\t\t\t\t\t\t\t\t\t\t| Yes |\r\n| SupplierEmailAddress\t\t\t\t\t\t\t| The supplier email address associated to the route template.\t\t\t\t\t\t\t\t\t\t\t| Yes |\r\n| UseOrderSupplierForCostGeneration\t\t\t\t| Whether the route template can use order supplier for cost generation.\t\t\t\t\t\t\t\t| No |\r\n| VehicleTypeListItem\t\t\t\t\t\t\t| The GUID and description of the vehicle type associated to the route template.\t\t\t\t\t\t| Yes |\r\n\r\n\r\n## Extra validations\r\n\r\n| Condition | Error message |\r\n| --------- | ------------- |\r\n| No RouteTemplates should have the same values of CompanyOutlet.GUID, RouteNo and DayOfWeek.GUID | Failed to save. RouteTemplate already exists with CompanyOutlet.GUID of <> and RouteNo of <> and DayOfWeek.GUID of <> |\r\n| If IsDeleted is true | IsDeleted is TRUE. Could not process the request. Resources can not be deleted via the REST API. |\r\n| Updating a deleted RouteTemplate | Failed to save/update RouteTemplate because attempt to update a deleted RouteTemplate is not allowed. Could not process the request. |\r\n| AcceptedMaterials.MaterialClassListItem is being edited | AcceptedMaterials.MaterialClassListItem is a read-only property. |\r\n| AcceptedMaterials.MaterialClassListItem.Guid is duplicate | The MaterialClassListItem must be unique per AcceptedMaterials |\r\n\r\n","operationId":"RouteTemplate_Create","consumes":["application/json"],"produces":["application/json"],"parameters":[{"in":"body","required":true,"schema":{"$ref":"#/definitions/ApiResourceId"}}],"responses":{"200":{"description":"OK","schema":{"$ref":"#/definitions/ApiResourceId"}}}}},"/transport/routeVisits/changes":{"get":{"tags":["RouteVisit"],"summary":"Retrieve changes","description":"| Property                              | Description                                                                   |\r\n| ------------------------------------- | ----------------------------------------------------------------------------- |\r\n| Guid\t\t\t\t\t\t\t\t\t| The GUID associated to the route visit.\t\t\t\t\t\t\t\t\t\t|\r\n| RelatedSiteOrderGuid\t\t\t\t\t| Used to filter on the related siter order GUID.\t\t\t\t\t\t\t\t|\r\n| RelatedRouteGuid\t\t\t\t\t\t| Used to filter on the related route GUID.\t\t\t\t\t\t\t\t\t\t|\r\n| ActionListItem\t\t\t\t\t\t| The GUID and description of the action associated to the route visit.\t\t\t|\r\n| ContainerTypeListItem\t\t\t\t\t| The GUID and description of the container type associated to the route visit.\t|\r\n| ExclusionTypeListItem\t\t\t\t\t| The GUID and description of the exclusion type associated to the route visit.\t|\r\n| RelatedSiteOrderRouteAssignmentGuid\t| Used to filter on the related site order route assignment GUID.\t\t\t\t|\r\n| TicketNo\t\t\t\t\t\t\t\t| Used to filter on the ticket no.\t\t\t\t\t\t\t\t\t\t\t\t|\r\n| ManualTicketNo\t\t\t\t\t\t| Used to filter on the manual ticket no.\t\t\t\t\t\t\t\t\t\t|\r\n| Position\t\t\t\t\t\t\t\t| The position associated to the route visit.\t\t\t\t\t\t\t\t\t|\r\n| IntendedPrice\t\t\t\t\t\t\t| The intended price associated to the route visit.\t\t\t\t\t\t\t\t|\r\n| IntendedVatListItem\t\t\t\t\t| The GUID and description of the intended VAT associated to the route visit.\t|\r\n| DriverNotes\t\t\t\t\t\t\t| The driver notes associated to the route visit.\t\t\t\t\t\t\t\t|\r\n| Notes\t\t\t\t\t\t\t\t\t| The notes associated to the route visit.\t\t\t\t\t\t\t\t\t\t|\r\n| Access[0].GUID\t\t\t\t\t\t| The Guid associated to the route visit access time.\t\t\t\t\t\t\t|\r\n| Access[0].AccessNotes\t\t\t\t\t| The access notes associated to the route visit access time.\t\t\t\t\t|\r\n| Access[0].AccessContact\t\t\t\t| The access contact associated to the route visit access time.\t\t\t\t\t|\r\n| Access[0].StartTimeAccess\t\t\t    | The access start time associated to the route visit access time.\t\t\t\t|\r\n| Access[0].EndTimeAccess\t\t\t    | The access end time associated to the route visit access time.\t\t\t\t|\r\n| Access[0].DayOfWeekId  \t\t\t    | The day of the week associated to the route visit access time.\t\t\t\t|\r\n| RejectedReasonListItem\t\t\t\t| The GUID and description of the Rejected Reason associated to the route visit.|\r\n| RejectReasonAdditionalNotes\t\t\t| The reject reason additional notes associated to the route visit.\t\t\t\t|\r\n| VisitStatusListItem\t\t\t\t\t| The GUID and description of the visit status associated to the route visit.\t|\r\n| IsAcknowledgementRequired\t\t\t\t| Is acknowledgement required?\t\t\t\t\t\t\t\t\t\t\t\t\t|\r\n| MaxLiftQuantity\t\t\t\t\t\t| The max lift quantity associated to the route visit.\t\t\t\t\t\t\t|\r\n| MinLiftQuantity\t\t\t\t\t\t| The min lift quantity associated to the route visit.\t\t\t\t\t\t\t|\r\n| IsQuantityRequired\t\t\t\t\t| Is the quantity required?\t\t\t\t\t\t\t\t\t\t\t\t\t\t|\r\n| QuantityPlanned\t\t\t\t\t\t| The planned quantity associated to the route visit.\t\t\t\t\t\t\t|\r\n| QuantityOverride\t\t\t\t\t\t| The quantity associated to the route visit.\t\t\t\t\t\t\t\t\t|\r\n| Weight\t\t\t\t\t\t\t\t| The weight associated to the route visit.\t\t\t\t\t\t\t\t\t\t|\r\n| QuantityNotPlannedReasonListItem\t\t| The GUID and description of the quantity not planned reason associated to the route visit. |\r\n| QuantityConfirmed\t\t\t\t\t\t| The quantity confirmed associated to the route visit.\t\t\t\t\t\t\t|\r\n| QuantityProblem\t\t\t\t\t\t| The quantity problem associated to the route visit.\t\t\t\t\t\t\t|\r\n| MinBillLevelShortfall\t\t\t\t\t| The min bill level shortfall associated to the route visit.\t\t\t\t\t|\r\n| StartTimeActual\t\t\t\t\t\t| The actual start time associated to the route visit.\t\t\t\t\t\t\t|\r\n| EndTimeActual\t\t\t\t\t\t\t| The actual end time associated to the route visit.\t\t\t\t\t\t\t|\r\n| IsFinanciallyConfirmed\t\t\t\t| Is the route visit financially confirmed?\t\t\t\t\t\t\t\t\t\t|\r\n| RelatedUserFinanciallyConfirmedGuid\t| Used to filter on the related financially confirmed by user.\t\t\t\t\t|\r\n| IsFleetPlannerCompleted\t\t\t\t| If fleet planner completed?\t\t\t\t\t\t\t\t\t\t\t\t\t|\r\n| PONumber\t\t\t\t\t\t\t\t| The PO number associated to the route visit.\t\t\t\t\t\t\t\t\t|\r\n| OriginalDate\t\t\t\t\t\t\t| The original date associated to the route visit.\t\t\t\t\t\t\t\t|\r\n","operationId":"RouteVisit_GetChanges","consumes":["application/json"],"produces":["application/json"],"parameters":[{"name":"since","in":"query","required":false,"type":"string"},{"name":"cursor","in":"query","required":false,"type":"string"},{"name":"links","in":"query","required":false,"type":"string"}],"responses":{"200":{"description":"OK","schema":{"$ref":"#/definitions/ApiResourceChanges[ApiIntegratorRouteVisitResource]"}}}}},"/transport/routeVisits/{guid}":{"get":{"tags":["RouteVisit"],"summary":"Find with GUID","description":"| Property                              | Description                                                                   |\r\n| ------------------------------------- | ----------------------------------------------------------------------------- |\r\n| Guid\t\t\t\t\t\t\t\t\t| The GUID associated to the route visit.\t\t\t\t\t\t\t\t\t\t|\r\n| RelatedSiteOrderGuid\t\t\t\t\t| Used to filter on the related siter order GUID.\t\t\t\t\t\t\t\t|\r\n| RelatedRouteGuid\t\t\t\t\t\t| Used to filter on the related route GUID.\t\t\t\t\t\t\t\t\t\t|\r\n| ActionListItem\t\t\t\t\t\t| The GUID and description of the action associated to the route visit.\t\t\t|\r\n| ContainerTypeListItem\t\t\t\t\t| The GUID and description of the container type associated to the route visit.\t|\r\n| ExclusionTypeListItem\t\t\t\t\t| The GUID and description of the exclusion type associated to the route visit.\t|\r\n| RelatedSiteOrderRouteAssignmentGuid\t| Used to filter on the related site order route assignment GUID.\t\t\t\t|\r\n| TicketNo\t\t\t\t\t\t\t\t| Used to filter on the ticket no.\t\t\t\t\t\t\t\t\t\t\t\t|\r\n| ManualTicketNo\t\t\t\t\t\t| Used to filter on the manual ticket no.\t\t\t\t\t\t\t\t\t\t|\r\n| Position\t\t\t\t\t\t\t\t| The position associated to the route visit.\t\t\t\t\t\t\t\t\t|\r\n| IntendedPrice\t\t\t\t\t\t\t| The intended price associated to the route visit.\t\t\t\t\t\t\t\t|\r\n| IntendedVatListItem\t\t\t\t\t| The GUID and description of the intended VAT associated to the route visit.\t|\r\n| DriverNotes\t\t\t\t\t\t\t| The driver notes associated to the route visit.\t\t\t\t\t\t\t\t|\r\n| Notes\t\t\t\t\t\t\t\t\t| The notes associated to the route visit.\t\t\t\t\t\t\t\t\t\t|\r\n| Access[0].GUID\t\t\t\t\t\t| The Guid associated to the route visit access time.\t\t\t\t\t\t\t|\r\n| Access[0].AccessNotes\t\t\t\t\t| The access notes associated to the route visit access time.\t\t\t\t\t|\r\n| Access[0].AccessContact\t\t\t\t| The access contact associated to the route visit access time.\t\t\t\t\t|\r\n| Access[0].StartTimeAccess\t\t\t    | The access start time associated to the route visit access time.\t\t\t\t|\r\n| Access[0].EndTimeAccess\t\t\t    | The access end time associated to the route visit access time.\t\t\t\t|\r\n| Access[0].DayOfWeekId  \t\t\t    | The day of the week associated to the route visit access time.\t\t\t\t|\r\n| RejectedReasonListItem\t\t\t\t| The GUID and description of the Rejected Reason associated to the route visit.|\r\n| RejectReasonAdditionalNotes\t\t\t| The reject reason additional notes associated to the route visit.\t\t\t\t|\r\n| VisitStatusListItem\t\t\t\t\t| The GUID and description of the visit status associated to the route visit.\t|\r\n| IsAcknowledgementRequired\t\t\t\t| Is acknowledgement required?\t\t\t\t\t\t\t\t\t\t\t\t\t|\r\n| MaxLiftQuantity\t\t\t\t\t\t| The max lift quantity associated to the route visit.\t\t\t\t\t\t\t|\r\n| MinLiftQuantity\t\t\t\t\t\t| The min lift quantity associated to the route visit.\t\t\t\t\t\t\t|\r\n| IsQuantityRequired\t\t\t\t\t| Is the quantity required?\t\t\t\t\t\t\t\t\t\t\t\t\t\t|\r\n| QuantityPlanned\t\t\t\t\t\t| The planned quantity associated to the route visit.\t\t\t\t\t\t\t|\r\n| QuantityOverride\t\t\t\t\t\t| The quantity associated to the route visit.\t\t\t\t\t\t\t\t\t|\r\n| Weight\t\t\t\t\t\t\t\t| The weight associated to the route visit.\t\t\t\t\t\t\t\t\t\t|\r\n| QuantityNotPlannedReasonListItem\t\t| The GUID and description of the quantity not planned reason associated to the route visit. |\r\n| QuantityConfirmed\t\t\t\t\t\t| The quantity confirmed associated to the route visit.\t\t\t\t\t\t\t|\r\n| QuantityProblem\t\t\t\t\t\t| The quantity problem associated to the route visit.\t\t\t\t\t\t\t|\r\n| MinBillLevelShortfall\t\t\t\t\t| The min bill level shortfall associated to the route visit.\t\t\t\t\t|\r\n| StartTimeActual\t\t\t\t\t\t| The actual start time associated to the route visit.\t\t\t\t\t\t\t|\r\n| EndTimeActual\t\t\t\t\t\t\t| The actual end time associated to the route visit.\t\t\t\t\t\t\t|\r\n| IsFinanciallyConfirmed\t\t\t\t| Is the route visit financially confirmed?\t\t\t\t\t\t\t\t\t\t|\r\n| RelatedUserFinanciallyConfirmedGuid\t| Used to filter on the related financially confirmed by user.\t\t\t\t\t|\r\n| IsFleetPlannerCompleted\t\t\t\t| If fleet planner completed?\t\t\t\t\t\t\t\t\t\t\t\t\t|\r\n| PONumber\t\t\t\t\t\t\t\t| The PO number associated to the route visit.\t\t\t\t\t\t\t\t\t|\r\n| OriginalDate\t\t\t\t\t\t\t| The original date associated to the route visit.\t\t\t\t\t\t\t\t|\r\n","operationId":"RouteVisit_Get","consumes":["application/json"],"produces":["application/json"],"parameters":[{"name":"guid","in":"path","required":true,"type":"string","format":"uuid"},{"name":"links","in":"query","required":false,"type":"string"},{"name":"include","in":"query","required":false,"type":"string"},{"name":"expand","in":"query","required":false,"type":"string"},{"name":"udf","in":"query","required":false,"type":"string"}],"responses":{"200":{"description":"OK","schema":{"$ref":"#/definitions/ApiResourceResultEntity[ApiIntegratorRouteVisitResource]"}}}},"put":{"tags":["RouteVisit"],"summary":"Partial update","description":"| Property                              | Description                                                                   | Required |\r\n| -------------------------------------\t| ----------------------------------------------------------------------------- | -------- |\r\n| GUID\t\t\t\t\t\t\t\t\t| The GUID associated to the route visit job.\t\t\t\t\t\t\t\t\t| No |\r\n| ActionListItem\t\t\t\t\t\t| The GUID and description associated to the action type.\t\t\t\t\t\t| Yes |\r\n| ContainerTypeListItem\t\t\t\t\t| The GUID and description associated to the container type.\t\t\t\t\t| Yes |\r\n| ExclusionTypeListItem\t\t\t\t\t| The GUID and description associated to the exclusion type.\t\t\t\t\t| No |\r\n| IntendedVatListItem\t\t\t\t\t| The GUID and description associated to the intended vat.\t\t\t\t\t\t| No |\r\n| RejectedReasonListItem\t\t\t\t| The GUID and description associated to the rejected reason.\t\t\t\t\t| No |\r\n| VisitStatusListItem\t\t\t\t\t| The GUID and description associated to the visit status.\t \t\t\t\t\t| No |\r\n| QuantityNotPlannedReasonListItem\t\t| The GUID and description associated to the reason for quantity not planned\t| No |\r\n| RelatedSiteOrderGuid\t\t\t\t\t| The GUID related to the Site.\t\t\t\t\t\t\t\t\t\t\t\t\t| Yes |\r\n| RelatedRouteGuid \t\t\t\t\t\t| The GUID related to the Route.\t\t\t\t\t\t\t\t\t\t\t\t| Yes |\t\r\n| RelatedSiteOrderRouteAssignmentGuid\t| The GUID related to the Site Route Assignment. \t\t\t\t\t\t\t\t| No |\t\r\n| RelatedUserFinanciallyConfirmedGuid\t| The GUID relaed to the user financially confirmed.\t\t\t\t\t\t\t| No |\r\n| IsAcknowledgementRequired\t\t\t\t| Is the acknowledgement required?\t\t\t\t\t\t\t\t\t\t\t\t| Yes |\t\t\r\n| IsQuantityRequired\t\t\t\t\t| Is the quantity required?\t\t\t\t\t\t\t\t\t\t\t\t\t\t| No |\t\t\r\n| IsFleetPlannerCompleted\t\t\t\t| Is the fleet planner completed?\t\t\t\t\t\t\t\t\t\t\t\t| Yes |\r\n| IsFinanciallyConfirmed\t\t\t\t| Is the financials confirmed?\t\t\t\t\t\t\t\t\t\t\t\t\t| Yes |\r\n| TicketNo\t\t\t\t\t\t\t\t| The ticket number associated to the route visit job.\t\t\t\t\t\t\t| No |\t\t\r\n| Position\t\t\t\t\t\t\t\t| The position associated to the route visit job.\t\t\t\t\t\t\t\t| No |\t\t\r\n| IntendedPrice\t\t\t\t\t\t\t| The intended price associated to the route visit job.\t\t\t\t\t\t\t| No |\t\t\r\n| RejectReasonAdditionalNotes\t\t\t| The reject reason for additional notes associated to the route visit job.\t\t| No |\t\t\r\n| MaxLiftQuantity\t\t\t\t\t\t| The maximum lift quantity associated to the route visit job.\t\t\t\t\t| No |\t\t\r\n| MinLiftQuantity\t\t\t\t\t\t| The minimum lift quantity associated to the route visit job.\t\t\t\t\t| No |\r\n| QuantityPlanned\t\t\t\t\t\t| The quantity planned associated to the route visit job.\t\t\t\t\t\t| No |\t\t\r\n| QuantityOverride\t\t\t\t\t\t| The quantity associated to the route visit job.\t\t\t\t\t\t\t\t| No |\t\t\r\n| Weight\t\t\t\t\t\t\t    | The weight associated to the route visit job.\t\t\t\t\t\t\t\t\t| No |\t\t\r\n| QuantityConfirmed\t\t\t\t\t\t| The quantity confirmed associated to the route visit job.\t\t\t\t\t\t| No |\t\t\r\n| QuantityProblem\t\t\t\t\t\t| The quantuty problem associated to the route visit job.\t\t\t\t\t\t| No |\r\n| MinBillLevelShortfall\t\t\t\t\t| The minimum bill level shortfall associated to the route visit job.\t \t\t| No |\r\n| StartTimeActual\t\t\t\t\t\t| The actual start time associated to the route visit job.\t\t\t\t\t\t| No |\r\n| EndTimeActual\t\t\t\t\t\t\t| The actual end time associated to the route visit job.\t\t\t\t\t\t| No |\r\n| OriginalDate\t\t\t\t\t\t\t| The originial date associated to the route visit job.\t\t\t\t\t\t\t| No |\r\n| EndTimeActual\t\t\t\t\t\t\t| The actual end time associated to the route visit job.\t\t\t\t\t\t| No |\r\n| ManualTicketNo \t\t\t\t\t\t| The associated to the route visit job.\t\t\t\t\t\t\t\t\t\t| No |\r\n| DriverNotes\t\t\t\t\t\t\t| The manual ticket number associated to the route visit job.\t\t\t\t\t| No |\r\n| Notes\t\t\t\t\t\t\t\t\t| The driver notes associated to the route visit job.\t\t\t\t\t\t\t| No |\r\n| Access[0].GUID\t\t\t\t\t\t| The Guid associated to the route visit access time.\t\t\t\t\t\t\t| Yes |\r\n| Access[0].AccessNotes\t\t\t\t\t| The access notes associated to the route visit access time.\t\t\t\t\t| No |\r\n| Access[0].AccessContact\t\t\t\t| The access contact associated to the route visit access time.\t\t\t\t\t| No |\r\n| Access[0].StartTimeAccess\t\t\t    | The access start time associated to the route visit access time.\t\t\t\t| Yes |\r\n| Access[0].EndTimeAccess\t\t\t    | The access end time associated to the route visit access time.\t\t\t\t| Yes |\r\n| Access[0].DayOfWeekId  \t\t\t    | The day of the week associated to the route visit access time.\t\t\t\t| Yes |\r\n| PONumber\t\t\t\t\t\t\t\t| The PO number associated to the route visit job.\t\t\t\t\t\t\t\t| No |\r\n\r\n## Extra validations\r\n\r\n| Condition | Error message |\r\n| --------- | ------------- |\r\n| If the Access.StartTimeAccess is greater than Access.EndTimeAccess | Failed to save. RouteVisit with Access cannot be set if StartTimeAccess is greater than EndTimeAccess. |","operationId":"RouteVisit_Update","consumes":["application/json"],"produces":["application/json"],"parameters":[{"name":"guid","in":"path","required":true,"type":"string","format":"uuid"},{"in":"body","required":true,"schema":{"$ref":"#/definitions/ApiResourceId"}}],"responses":{"200":{"description":"OK","schema":{"$ref":"#/definitions/ApiResourceId"}}}}},"/transport/routeVisits":{"get":{"tags":["RouteVisit"],"summary":"Find with Filters","description":"| Property                              | Description                                                                   |\r\n| ------------------------------------- | ----------------------------------------------------------------------------- |\r\n| Guid\t\t\t\t\t\t\t\t\t| The GUID associated to the route visit.\t\t\t\t\t\t\t\t\t\t|\r\n| RelatedSiteOrderGuid\t\t\t\t\t| Used to filter on the related siter order GUID.\t\t\t\t\t\t\t\t|\r\n| RelatedRouteGuid\t\t\t\t\t\t| Used to filter on the related route GUID.\t\t\t\t\t\t\t\t\t\t|\r\n| ActionListItem\t\t\t\t\t\t| The GUID and description of the action associated to the route visit.\t\t\t|\r\n| ContainerTypeListItem\t\t\t\t\t| The GUID and description of the container type associated to the route visit.\t|\r\n| ExclusionTypeListItem\t\t\t\t\t| The GUID and description of the exclusion type associated to the route visit.\t|\r\n| RelatedSiteOrderRouteAssignmentGuid\t| Used to filter on the related site order route assignment GUID.\t\t\t\t|\r\n| TicketNo\t\t\t\t\t\t\t\t| Used to filter on the ticket no.\t\t\t\t\t\t\t\t\t\t\t\t|\r\n| ManualTicketNo\t\t\t\t\t\t| Used to filter on the manual ticket no.\t\t\t\t\t\t\t\t\t\t|\r\n| Position\t\t\t\t\t\t\t\t| The position associated to the route visit.\t\t\t\t\t\t\t\t\t|\r\n| IntendedPrice\t\t\t\t\t\t\t| The intended price associated to the route visit.\t\t\t\t\t\t\t\t|\r\n| IntendedVatListItem\t\t\t\t\t| The GUID and description of the intended VAT associated to the route visit.\t|\r\n| DriverNotes\t\t\t\t\t\t\t| The driver notes associated to the route visit.\t\t\t\t\t\t\t\t|\r\n| Notes\t\t\t\t\t\t\t\t\t| The notes associated to the route visit.\t\t\t\t\t\t\t\t\t\t|\r\n| Access[0].GUID\t\t\t\t\t\t| The Guid associated to the route visit access time.\t\t\t\t\t\t\t|\r\n| Access[0].AccessNotes\t\t\t\t\t| The access notes associated to the route visit access time.\t\t\t\t\t|\r\n| Access[0].AccessContact\t\t\t\t| The access contact associated to the route visit access time.\t\t\t\t\t|\r\n| Access[0].StartTimeAccess\t\t\t    | The access start time associated to the route visit access time.\t\t\t\t|\r\n| Access[0].EndTimeAccess\t\t\t    | The access end time associated to the route visit access time.\t\t\t\t|\r\n| Access[0].DayOfWeekId  \t\t\t    | The day of the week associated to the route visit access time.\t\t\t\t|\r\n| RejectedReasonListItem\t\t\t\t| The GUID and description of the Rejected Reason associated to the route visit.|\r\n| RejectReasonAdditionalNotes\t\t\t| The reject reason additional notes associated to the route visit.\t\t\t\t|\r\n| VisitStatusListItem\t\t\t\t\t| The GUID and description of the visit status associated to the route visit.\t|\r\n| IsAcknowledgementRequired\t\t\t\t| Is acknowledgement required?\t\t\t\t\t\t\t\t\t\t\t\t\t|\r\n| MaxLiftQuantity\t\t\t\t\t\t| The max lift quantity associated to the route visit.\t\t\t\t\t\t\t|\r\n| MinLiftQuantity\t\t\t\t\t\t| The min lift quantity associated to the route visit.\t\t\t\t\t\t\t|\r\n| IsQuantityRequired\t\t\t\t\t| Is the quantity required?\t\t\t\t\t\t\t\t\t\t\t\t\t\t|\r\n| QuantityPlanned\t\t\t\t\t\t| The planned quantity associated to the route visit.\t\t\t\t\t\t\t|\r\n| QuantityOverride\t\t\t\t\t\t| The quantity associated to the route visit.\t\t\t\t\t\t\t\t\t|\r\n| Weight\t\t\t\t\t\t\t\t| The weight associated to the route visit.\t\t\t\t\t\t\t\t\t\t|\r\n| QuantityNotPlannedReasonListItem\t\t| The GUID and description of the quantity not planned reason associated to the route visit. |\r\n| QuantityConfirmed\t\t\t\t\t\t| The quantity confirmed associated to the route visit.\t\t\t\t\t\t\t|\r\n| QuantityProblem\t\t\t\t\t\t| The quantity problem associated to the route visit.\t\t\t\t\t\t\t|\r\n| MinBillLevelShortfall\t\t\t\t\t| The min bill level shortfall associated to the route visit.\t\t\t\t\t|\r\n| StartTimeActual\t\t\t\t\t\t| The actual start time associated to the route visit.\t\t\t\t\t\t\t|\r\n| EndTimeActual\t\t\t\t\t\t\t| The actual end time associated to the route visit.\t\t\t\t\t\t\t|\r\n| IsFinanciallyConfirmed\t\t\t\t| Is the route visit financially confirmed?\t\t\t\t\t\t\t\t\t\t|\r\n| RelatedUserFinanciallyConfirmedGuid\t| Used to filter on the related financially confirmed by user.\t\t\t\t\t|\r\n| IsFleetPlannerCompleted\t\t\t\t| If fleet planner completed?\t\t\t\t\t\t\t\t\t\t\t\t\t|\r\n| PONumber\t\t\t\t\t\t\t\t| The PO number associated to the route visit.\t\t\t\t\t\t\t\t\t|\r\n| OriginalDate\t\t\t\t\t\t\t| The original date associated to the route visit.\t\t\t\t\t\t\t\t|\r\n","operationId":"RouteVisit_GetCollection","consumes":["application/json"],"produces":["application/json"],"parameters":[{"name":"filter","in":"query","required":false,"type":"string"},{"name":"search","in":"query","required":false,"type":"string"},{"name":"order","in":"query","required":false,"type":"string"},{"name":"max","in":"query","required":false,"type":"integer","format":"int32"},{"name":"page","in":"query","required":false,"type":"integer","format":"int32"},{"name":"includeCount","in":"query","required":false,"type":"boolean"},{"name":"includeDeleted","in":"query","required":false,"type":"boolean"},{"name":"links","in":"query","required":false,"type":"string"},{"name":"udf","in":"query","required":false,"type":"string"}],"responses":{"200":{"description":"OK","schema":{"$ref":"#/definitions/ApiResourceResultCollection[ApiIntegratorRouteVisitResource]"}}}},"post":{"tags":["RouteVisit"],"summary":"Create or update","description":"| Property                              | Description                                                                   | Required |\r\n| -------------------------------------\t| ----------------------------------------------------------------------------- | -------- |\r\n| GUID\t\t\t\t\t\t\t\t\t| The GUID associated to the route visit job.\t\t\t\t\t\t\t\t\t| No |\r\n| ActionListItem\t\t\t\t\t\t| The GUID and description associated to the action type.\t\t\t\t\t\t| Yes |\r\n| ContainerTypeListItem\t\t\t\t\t| The GUID and description associated to the container type.\t\t\t\t\t| Yes |\r\n| ExclusionTypeListItem\t\t\t\t\t| The GUID and description associated to the exclusion type.\t\t\t\t\t| No |\r\n| IntendedVatListItem\t\t\t\t\t| The GUID and description associated to the intended vat.\t\t\t\t\t\t| No |\r\n| RejectedReasonListItem\t\t\t\t| The GUID and description associated to the rejected reason.\t\t\t\t\t| No |\r\n| VisitStatusListItem\t\t\t\t\t| The GUID and description associated to the visit status.\t \t\t\t\t\t| No |\r\n| QuantityNotPlannedReasonListItem\t\t| The GUID and description associated to the reason for quantity not planned\t| No |\r\n| RelatedSiteOrderGuid\t\t\t\t\t| The GUID related to the Site.\t\t\t\t\t\t\t\t\t\t\t\t\t| Yes |\r\n| RelatedRouteGuid \t\t\t\t\t\t| The GUID related to the Route.\t\t\t\t\t\t\t\t\t\t\t\t| Yes |\t\r\n| RelatedSiteOrderRouteAssignmentGuid\t| The GUID related to the Site Route Assignment. \t\t\t\t\t\t\t\t| No |\t\r\n| RelatedUserFinanciallyConfirmedGuid\t| The GUID relaed to the user financially confirmed.\t\t\t\t\t\t\t| No |\r\n| IsAcknowledgementRequired\t\t\t\t| Is the acknowledgement required?\t\t\t\t\t\t\t\t\t\t\t\t| Yes |\t\t\r\n| IsQuantityRequired\t\t\t\t\t| Is the quantity required?\t\t\t\t\t\t\t\t\t\t\t\t\t\t| No |\t\t\r\n| IsFleetPlannerCompleted\t\t\t\t| Is the fleet planner completed?\t\t\t\t\t\t\t\t\t\t\t\t| Yes |\r\n| IsFinanciallyConfirmed\t\t\t\t| Is the financials confirmed?\t\t\t\t\t\t\t\t\t\t\t\t\t| Yes |\r\n| TicketNo\t\t\t\t\t\t\t\t| The ticket number associated to the route visit job.\t\t\t\t\t\t\t| No |\t\t\r\n| Position\t\t\t\t\t\t\t\t| The position associated to the route visit job.\t\t\t\t\t\t\t\t| No |\t\t\r\n| IntendedPrice\t\t\t\t\t\t\t| The intended price associated to the route visit job.\t\t\t\t\t\t\t| No |\t\t\r\n| RejectReasonAdditionalNotes\t\t\t| The reject reason for additional notes associated to the route visit job.\t\t| No |\t\t\r\n| MaxLiftQuantity\t\t\t\t\t\t| The maximum lift quantity associated to the route visit job.\t\t\t\t\t| No |\t\t\r\n| MinLiftQuantity\t\t\t\t\t\t| The minimum lift quantity associated to the route visit job.\t\t\t\t\t| No |\r\n| QuantityPlanned\t\t\t\t\t\t| The quantity planned associated to the route visit job.\t\t\t\t\t\t| No |\t\t\r\n| QuantityOverride\t\t\t\t\t\t| The quantity associated to the route visit job.\t\t\t\t\t\t\t\t| No |\t\t\r\n| Weight\t\t\t\t\t\t\t    | The weight associated to the route visit job.\t\t\t\t\t\t\t\t\t| No |\t\t\r\n| QuantityConfirmed\t\t\t\t\t\t| The quantity confirmed associated to the route visit job.\t\t\t\t\t\t| No |\t\t\r\n| QuantityProblem\t\t\t\t\t\t| The quantuty problem associated to the route visit job.\t\t\t\t\t\t| No |\r\n| MinBillLevelShortfall\t\t\t\t\t| The minimum bill level shortfall associated to the route visit job.\t \t\t| No |\r\n| StartTimeActual\t\t\t\t\t\t| The actual start time associated to the route visit job.\t\t\t\t\t\t| No |\r\n| EndTimeActual\t\t\t\t\t\t\t| The actual end time associated to the route visit job.\t\t\t\t\t\t| No |\r\n| OriginalDate\t\t\t\t\t\t\t| The originial date associated to the route visit job.\t\t\t\t\t\t\t| No |\r\n| EndTimeActual\t\t\t\t\t\t\t| The actual end time associated to the route visit job.\t\t\t\t\t\t| No |\r\n| ManualTicketNo \t\t\t\t\t\t| The associated to the route visit job.\t\t\t\t\t\t\t\t\t\t| No |\r\n| DriverNotes\t\t\t\t\t\t\t| The manual ticket number associated to the route visit job.\t\t\t\t\t| No |\r\n| Notes\t\t\t\t\t\t\t\t\t| The driver notes associated to the route visit job.\t\t\t\t\t\t\t| No |\r\n| Access[0].GUID\t\t\t\t\t\t| The Guid associated to the route visit access time.\t\t\t\t\t\t\t| No |\r\n| Access[0].AccessNotes\t\t\t\t\t| The access notes associated to the route visit access time.\t\t\t\t\t| No |\r\n| Access[0].AccessContact\t\t\t\t| The access contact associated to the route visit access time.\t\t\t\t\t| No |\r\n| Access[0].StartTimeAccess\t\t\t    | The access start time associated to the route visit access time.\t\t\t\t| Yes |\r\n| Access[0].EndTimeAccess\t\t\t    | The access end time associated to the route visit access time.\t\t\t\t| Yes |\r\n| Access[0].DayOfWeekId  \t\t\t    | The day of the week associated to the route visit access time.\t\t\t\t| Yes |\r\n| PONumber\t\t\t\t\t\t\t\t| The PO number associated to the route visit job.\t\t\t\t\t\t\t\t| No |\r\n\r\n## Extra validations\r\n\r\n| Condition | Error message |\r\n| --------- | ------------- |\r\n| If the Access.StartTimeAccess is greater than Access.EndTimeAccess | Failed to save. RouteVisit with Access cannot be set if StartTimeAccess is greater than EndTimeAccess. |\r\n| If Access.Guid is not null on insert | Access.Guid: is not supported. |","operationId":"RouteVisit_Create","consumes":["application/json"],"produces":["application/json"],"parameters":[{"in":"body","required":true,"schema":{"$ref":"#/definitions/ApiResourceId"}}],"responses":{"200":{"description":"OK","schema":{"$ref":"#/definitions/ApiResourceId"}}}}},"/transport/routeVisitJobs/changes":{"get":{"tags":["RouteVisitJob"],"summary":"Retrieve changes","description":"| Property                              | Description                                                                   |\r\n| -------------------------------------\t| ----------------------------------------------------------------------------- |\r\n| GUID\t\t\t\t\t\t\t\t\t| The GUID associated to the route visit job.\t\t\t\t\t\t\t\t\t|\r\n| ActionListItem\t\t\t\t\t\t| The GUID and description associated to the action type.\t\t\t\t\t\t|\r\n| RelatedRouteVisitGuid\t\t\t\t\t| The GUID related to the route visit.\t\t\t\t\t\t\t\t\t\t\t|\r\n| MaterialListItem\t\t\t\t\t\t| The GUID and description associated to the material.\t\t\t\t\t\t\t|\r\n| Quantity\t\t\t\t\t\t\t\t| The Quantity associated to the route visit job.\t\t\t\t\t\t\t\t|\r\n| Weight\t\t\t\t\t\t\t\t| The Weight associated to the route visit job.\t\t\t\t\t\t\t\t\t|\r\n| JobTimeStamp\t\t\t\t\t\t\t| The JobTimeStamp associated to the route visit job.\t\t\t\t\t\t\t|\r\n| QuantityNotPlannedListItem\t\t\t| The GUID and description associated to the quantity not planned.\t\t\t\t|\r\n| QuantityPlanned\t\t\t\t\t\t| The quantity planned associated to the route visit job.\t\t\t\t\t\t|\r\n| DeferredRevenueAccountingPeriodListItem | The GUID and description associated to the deferred revenue accounting period.\t|","operationId":"RouteVisitJob_GetChanges","consumes":["application/json"],"produces":["application/json"],"parameters":[{"name":"since","in":"query","required":false,"type":"string"},{"name":"cursor","in":"query","required":false,"type":"string"},{"name":"links","in":"query","required":false,"type":"string"}],"responses":{"200":{"description":"OK","schema":{"$ref":"#/definitions/ApiResourceChanges[ApiIntegratorRouteVisitJobResource]"}}}}},"/transport/routeVisitJobs/{guid}":{"get":{"tags":["RouteVisitJob"],"summary":"Find with GUID","description":"| Property                              | Description                                                                   |\r\n| -------------------------------------\t| ----------------------------------------------------------------------------- |\r\n| GUID\t\t\t\t\t\t\t\t\t| The GUID associated to the route visit job.\t\t\t\t\t\t\t\t\t|\r\n| ActionListItem\t\t\t\t\t\t| The GUID and description associated to the action type.\t\t\t\t\t\t|\r\n| RelatedRouteVisitGuid\t\t\t\t\t| The GUID related to the route visit.\t\t\t\t\t\t\t\t\t\t\t|\r\n| MaterialListItem\t\t\t\t\t\t| The GUID and description associated to the material.\t\t\t\t\t\t\t|\r\n| Quantity\t\t\t\t\t\t\t\t| The Quantity associated to the route visit job.\t\t\t\t\t\t\t\t|\r\n| Weight\t\t\t\t\t\t\t\t| The Weight associated to the route visit job.\t\t\t\t\t\t\t\t\t|\r\n| JobTimeStamp\t\t\t\t\t\t\t| The JobTimeStamp associated to the route visit job.\t\t\t\t\t\t\t|\r\n| QuantityNotPlannedListItem\t\t\t| The GUID and description associated to the quantity not planned.\t\t\t\t|\r\n| QuantityPlanned\t\t\t\t\t\t| The quantity planned associated to the route visit job.\t\t\t\t\t\t|\r\n| DeferredRevenueAccountingPeriodListItem | The GUID and description associated to the deferred revenue accounting period.\t|","operationId":"RouteVisitJob_Get","consumes":["application/json"],"produces":["application/json"],"parameters":[{"name":"guid","in":"path","required":true,"type":"string","format":"uuid"},{"name":"links","in":"query","required":false,"type":"string"},{"name":"include","in":"query","required":false,"type":"string"},{"name":"expand","in":"query","required":false,"type":"string"},{"name":"udf","in":"query","required":false,"type":"string"}],"responses":{"200":{"description":"OK","schema":{"$ref":"#/definitions/ApiResourceResultEntity[ApiIntegratorRouteVisitJobResource]"}}}},"put":{"tags":["RouteVisitJob"],"summary":"Partial update","description":"| Property\t\t\t\t\t\t\t\t| Description\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t| Required |\r\n| -------------------------------------\t| ----------------------------------------------------------------------------- | -------- |\r\n| GUID\t\t\t\t\t\t\t\t\t| The GUID associated to the route visit job.\t\t\t\t\t\t\t\t\t| No |\r\n| RelatedRouteVisitGuid\t\t\t\t\t| The GUID related to the route visit.\t\t\t\t\t\t\t\t\t\t\t| Yes |\r\n| MaterialListItem\t\t\t\t\t\t| The GUID and description associated to the material.\t\t\t\t\t\t\t| No |\r\n| ContainerTypeListItem\t\t\t\t\t| The GUID and description associated to the container type.\t\t\t\t\t| No |\r\n| Quantity\t\t\t\t\t\t\t\t| The Quantity associated to the route visit job.\t\t\t\t\t\t\t\t| No |\r\n| Weight\t\t\t\t\t\t\t\t| The Weight associated to the route visit job.\t\t\t\t\t\t\t\t\t| No |\r\n| JobTimeStamp\t\t\t\t\t\t\t| The JobTimeStamp associated to the route visit job.\t\t\t\t\t\t\t| No |\r\n| QuantityNotPlannedListItem\t\t\t| The GUID and description associated to the quantity not planned.\t\t\t\t| No |\r\n| QuantityPlanned\t\t\t\t\t\t| The quantity planned associated to the route visit job.\t\t\t\t\t\t| No |\r\n| DeferredRevenueAccountingPeriodListItem | The GUID and description associated to the deferred revenue accounting period. | No |\r\n\r\n## Extra validations\r\n\r\n| Condition | Error message |\r\n| --------- | ------------- |\r\n| If the DeferredRevenueAccountingPeriodListItem.Guid belongs to a closed accounting period | Accounting period is closed for this RouteVisitJob |\r\n| If an update is made to a RouteVisitJob that is already exported | A record that is already included in GL export cannot be edited |","operationId":"RouteVisitJob_Update","consumes":["application/json"],"produces":["application/json"],"parameters":[{"name":"guid","in":"path","required":true,"type":"string","format":"uuid"},{"in":"body","required":true,"schema":{"$ref":"#/definitions/ApiResourceId"}}],"responses":{"200":{"description":"OK","schema":{"$ref":"#/definitions/ApiResourceId"}}}}},"/transport/routeVisitJobs":{"get":{"tags":["RouteVisitJob"],"summary":"Find with Filters","description":"| Property                              | Description                                                                   |\r\n| -------------------------------------\t| ----------------------------------------------------------------------------- |\r\n| GUID\t\t\t\t\t\t\t\t\t| The GUID associated to the route visit job.\t\t\t\t\t\t\t\t\t|\r\n| ActionListItem\t\t\t\t\t\t| The GUID and description associated to the action type.\t\t\t\t\t\t|\r\n| RelatedRouteVisitGuid\t\t\t\t\t| The GUID related to the route visit.\t\t\t\t\t\t\t\t\t\t\t|\r\n| MaterialListItem\t\t\t\t\t\t| The GUID and description associated to the material.\t\t\t\t\t\t\t|\r\n| Quantity\t\t\t\t\t\t\t\t| The Quantity associated to the route visit job.\t\t\t\t\t\t\t\t|\r\n| Weight\t\t\t\t\t\t\t\t| The Weight associated to the route visit job.\t\t\t\t\t\t\t\t\t|\r\n| JobTimeStamp\t\t\t\t\t\t\t| The JobTimeStamp associated to the route visit job.\t\t\t\t\t\t\t|\r\n| QuantityNotPlannedListItem\t\t\t| The GUID and description associated to the quantity not planned.\t\t\t\t|\r\n| QuantityPlanned\t\t\t\t\t\t| The quantity planned associated to the route visit job.\t\t\t\t\t\t|\r\n| DeferredRevenueAccountingPeriodListItem | The GUID and description associated to the deferred revenue accounting period.\t|","operationId":"RouteVisitJob_GetCollection","consumes":["application/json"],"produces":["application/json"],"parameters":[{"name":"filter","in":"query","required":false,"type":"string"},{"name":"search","in":"query","required":false,"type":"string"},{"name":"order","in":"query","required":false,"type":"string"},{"name":"max","in":"query","required":false,"type":"integer","format":"int32"},{"name":"page","in":"query","required":false,"type":"integer","format":"int32"},{"name":"includeCount","in":"query","required":false,"type":"boolean"},{"name":"includeDeleted","in":"query","required":false,"type":"boolean"},{"name":"links","in":"query","required":false,"type":"string"},{"name":"udf","in":"query","required":false,"type":"string"}],"responses":{"200":{"description":"OK","schema":{"$ref":"#/definitions/ApiResourceResultCollection[ApiIntegratorRouteVisitJobResource]"}}}},"post":{"tags":["RouteVisitJob"],"summary":"Create or update","description":"| Property\t\t\t\t\t\t\t\t| Description\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t| Required |\r\n| -------------------------------------\t| ----------------------------------------------------------------------------- | -------- |\r\n| GUID\t\t\t\t\t\t\t\t\t| The GUID associated to the route visit job.\t\t\t\t\t\t\t\t\t| No |\r\n| RelatedRouteVisitGuid\t\t\t\t\t| The GUID related to the route visit.\t\t\t\t\t\t\t\t\t\t\t| Yes |\r\n| MaterialListItem\t\t\t\t\t\t| The GUID and description associated to the material.\t\t\t\t\t\t\t| No |\r\n| ContainerTypeListItem\t\t\t\t\t| The GUID and description associated to the container type.\t\t\t\t\t| No |\r\n| Quantity\t\t\t\t\t\t\t\t| The Quantity associated to the route visit job.\t\t\t\t\t\t\t\t| No |\r\n| Weight\t\t\t\t\t\t\t\t| The Weight associated to the route visit job.\t\t\t\t\t\t\t\t\t| No |\r\n| JobTimeStamp\t\t\t\t\t\t\t| The JobTimeStamp associated to the route visit job.\t\t\t\t\t\t\t| No |\r\n| QuantityNotPlannedListItem\t\t\t| The GUID and description associated to the quantity not planned.\t\t\t\t| No |\r\n| QuantityPlanned\t\t\t\t\t\t| The quantity planned associated to the route visit job.\t\t\t\t\t\t| No |\r\n| DeferredRevenueAccountingPeriodListItem | The GUID and description associated to the deferred revenue accounting period. | No |\r\n\r\n## Extra validations\r\n\r\n| Condition | Error message |\r\n| --------- | ------------- |\r\n| If the DeferredRevenueAccountingPeriodListItem.Guid belongs to a closed accounting period | Accounting period is closed for this RouteVisitJob |","operationId":"RouteVisitJob_Create","consumes":["application/json"],"produces":["application/json"],"parameters":[{"in":"body","required":true,"schema":{"$ref":"#/definitions/ApiResourceId"}}],"responses":{"200":{"description":"OK","schema":{"$ref":"#/definitions/ApiResourceId"}}}}},"/transport/schedules/changes":{"get":{"tags":["Schedule"],"summary":"Retrieve changes","description":"| Property\t\t\t\t\t\t\t\t\t| Description                                                                   |\r\n| -----------------------------------------\t| ----------------------------------------------------------------------------- |\r\n| GUID\t\t\t\t\t\t\t\t\t\t| The GUID associated to the schedule.                                          |\r\n| ScheduledDate\t\t\t\t\t\t\t\t| The date associated to the schedule.\t\t\t\t\t\t\t\t\t\t\t|\r\n| Description\t\t\t\t\t\t\t\t| The description associated to the schedule.\t\t\t\t\t\t\t\t\t|\r\n| IsContainerSchedule\t\t\t\t\t\t| Is the schedule a container.\t\t\t\t\t\t\t\t\t\t\t\t\t|\r\n| Notes\t\t\t\t\t\t\t\t\t\t| The notes associated to the schedule.\t\t\t\t\t\t\t\t\t\t\t|\r\n| LeaveYardTime\t\t\t\t\t\t\t\t| The leave yard time associated to the schedule.\t\t\t\t\t\t\t\t|\r\n| ReturnYardTime\t\t\t\t\t\t\t| The return yard time associated to the schedule.\t\t\t\t\t\t\t\t|\r\n| Driver.RelatedUserDriverGuid\t\t\t\t| The GUID associated to the related user driver.\t\t\t\t\t\t\t\t|\r\n| Driver.ClockOffDateTime\t\t\t\t\t| The clock off time associated to the driver.\t\t\t\t\t\t\t\t\t|\r\n| Driver.ClockOnDateTime\t\t\t\t\t| The clock on time associated to the driver.\t\t\t\t\t\t\t\t\t|\r\n| VehicleChecks.StartMileage\t\t\t\t| The start mileage associated to the vehicle.\t\t\t\t\t\t\t\t\t|\r\n| VehicleChecks.EndMileage\t\t\t\t\t| The end mileage associated to the vehicle.\t\t\t\t\t\t\t\t\t|\r\n| VehicleChecks.IsStartSafetyChecked\t\t| Is the start safety checked associated to the vehicle.\t\t\t\t\t\t|\r\n| VehicleChecks.StartNotes\t\t\t\t\t| The start notes associated to the vehicle.\t\t\t\t\t\t\t\t\t|\r\n| VehicleChecks.IsEndSafetyChecked\t\t\t| Is the end safety checked associated to the vehicle.\t\t\t\t\t\t\t|\r\n| VehicleChecks.EndNotes\t\t\t\t\t| The end notes associated to the vehicle.\t\t\t\t\t\t\t\t\t\t|\r\n| VehicleChecks.StartDefectTicketNo\t\t\t| The start defect ticket number associated to the vehicle.\t\t\t\t\t\t|\r\n| VehicleChecks.EndDefectTicketNo\t\t\t| The end defect ticket number for the vehicle.\t\t\t\t\t\t\t\t\t|\r\n| VehicleChecks.StartDefectCheckBySysUserId\t| The start defect check of the vehicle by user id.\t\t\t\t\t\t\t\t|\r\n| VehicleChecks.EndDefectCheckBySysUserId\t| The end defect check associated to the vehicle by user id.\t\t\t\t\t|\r\n| CompanyOutletListItem\t\t\t\t\t\t| The GUID and the description associated to the company outlet.\t\t\t\t|\r\n| IsCompleted\t\t\t\t\t\t\t\t| Is the schedule completed.\t\t\t\t\t\t\t\t\t\t\t\t\t|\r\n| IsForVehicle\t\t\t\t\t\t\t\t| Is the schedule for the vehicle.\t\t\t\t\t\t\t\t\t\t\t\t|\r\n| IsManifestCompleted\t\t\t\t\t\t| Is the manifest associated to the schedule completed.\t\t\t\t\t\t\t|\r\n| IsManifestExported\t\t\t\t\t\t| Is the manifest associated to the schedule exported.\t\t\t\t\t\t\t|\r\n| IsManifestExportedFailed\t\t\t\t\t| Is the manifest export associated to the schedule failed.\t\t\t\t\t\t|\r\n| IsManifestRequired\t\t\t\t\t\t| Is the manifest associated to the schedule required.\t\t\t\t\t\t\t|\r\n| IsThirdPartySchedule\t\t\t\t\t\t| Is the schedule a third party.\t\t\t\t\t\t\t\t\t\t\t\t|\r\n| FuelUsed\t\t\t\t\t\t\t\t\t| The fuel used associated to the schedule.\t\t\t\t\t\t\t\t\t\t|\r\n| FuelCost\t\t\t\t\t\t\t\t\t| The fuel cost associated to the schedule.\t\t\t\t\t\t\t\t\t\t|\r\n| Position\t\t\t\t\t\t\t\t\t| The position associated to the schedule.\t\t\t\t\t\t\t\t\t\t|\r\n| RelatedVehicleGuid\t\t\t\t\t\t| The GUID associated to the related vehicle. Filterable.\t\t\t\t\t\t|\r\n| RelatedUserDriverGuid\t\t\t\t\t\t| The GUID associated to the related user driver. Filterable.\t\t\t\t\t|\r\n| RelatedUserStartCheckByGuid\t\t\t\t| The GUID associated to the related user for start check. Filterable.\t\t\t|\r\n| RelatedUserEndCheckByGuid\t\t\t\t\t| The GUID associated to the related user for end check. Filterable.\t\t\t|","operationId":"Schedule_GetChanges","consumes":["application/json"],"produces":["application/json"],"parameters":[{"name":"since","in":"query","required":false,"type":"string"},{"name":"cursor","in":"query","required":false,"type":"string"},{"name":"links","in":"query","required":false,"type":"string"}],"responses":{"200":{"description":"OK","schema":{"$ref":"#/definitions/ApiResourceChanges[ApiIntegratorScheduleResource]"}}}}},"/transport/schedules/{guid}":{"get":{"tags":["Schedule"],"summary":"Find with GUID","description":"| Property\t\t\t\t\t\t\t\t\t| Description                                                                   |\r\n| -----------------------------------------\t| ----------------------------------------------------------------------------- |\r\n| GUID\t\t\t\t\t\t\t\t\t\t| The GUID associated to the schedule.                                          |\r\n| ScheduledDate\t\t\t\t\t\t\t\t| The date associated to the schedule.\t\t\t\t\t\t\t\t\t\t\t|\r\n| Description\t\t\t\t\t\t\t\t| The description associated to the schedule.\t\t\t\t\t\t\t\t\t|\r\n| IsContainerSchedule\t\t\t\t\t\t| Is the schedule a container.\t\t\t\t\t\t\t\t\t\t\t\t\t|\r\n| Notes\t\t\t\t\t\t\t\t\t\t| The notes associated to the schedule.\t\t\t\t\t\t\t\t\t\t\t|\r\n| LeaveYardTime\t\t\t\t\t\t\t\t| The leave yard time associated to the schedule.\t\t\t\t\t\t\t\t|\r\n| ReturnYardTime\t\t\t\t\t\t\t| The return yard time associated to the schedule.\t\t\t\t\t\t\t\t|\r\n| Driver.RelatedUserDriverGuid\t\t\t\t| The GUID associated to the related user driver.\t\t\t\t\t\t\t\t|\r\n| Driver.ClockOffDateTime\t\t\t\t\t| The clock off time associated to the driver.\t\t\t\t\t\t\t\t\t|\r\n| Driver.ClockOnDateTime\t\t\t\t\t| The clock on time associated to the driver.\t\t\t\t\t\t\t\t\t|\r\n| VehicleChecks.StartMileage\t\t\t\t| The start mileage associated to the vehicle.\t\t\t\t\t\t\t\t\t|\r\n| VehicleChecks.EndMileage\t\t\t\t\t| The end mileage associated to the vehicle.\t\t\t\t\t\t\t\t\t|\r\n| VehicleChecks.IsStartSafetyChecked\t\t| Is the start safety checked associated to the vehicle.\t\t\t\t\t\t|\r\n| VehicleChecks.StartNotes\t\t\t\t\t| The start notes associated to the vehicle.\t\t\t\t\t\t\t\t\t|\r\n| VehicleChecks.IsEndSafetyChecked\t\t\t| Is the end safety checked associated to the vehicle.\t\t\t\t\t\t\t|\r\n| VehicleChecks.EndNotes\t\t\t\t\t| The end notes associated to the vehicle.\t\t\t\t\t\t\t\t\t\t|\r\n| VehicleChecks.StartDefectTicketNo\t\t\t| The start defect ticket number associated to the vehicle.\t\t\t\t\t\t|\r\n| VehicleChecks.EndDefectTicketNo\t\t\t| The end defect ticket number for the vehicle.\t\t\t\t\t\t\t\t\t|\r\n| VehicleChecks.StartDefectCheckBySysUserId\t| The start defect check of the vehicle by user id.\t\t\t\t\t\t\t\t|\r\n| VehicleChecks.EndDefectCheckBySysUserId\t| The end defect check associated to the vehicle by user id.\t\t\t\t\t|\r\n| CompanyOutletListItem\t\t\t\t\t\t| The GUID and the description associated to the company outlet.\t\t\t\t|\r\n| IsCompleted\t\t\t\t\t\t\t\t| Is the schedule completed.\t\t\t\t\t\t\t\t\t\t\t\t\t|\r\n| IsForVehicle\t\t\t\t\t\t\t\t| Is the schedule for the vehicle.\t\t\t\t\t\t\t\t\t\t\t\t|\r\n| IsManifestCompleted\t\t\t\t\t\t| Is the manifest associated to the schedule completed.\t\t\t\t\t\t\t|\r\n| IsManifestExported\t\t\t\t\t\t| Is the manifest associated to the schedule exported.\t\t\t\t\t\t\t|\r\n| IsManifestExportedFailed\t\t\t\t\t| Is the manifest export associated to the schedule failed.\t\t\t\t\t\t|\r\n| IsManifestRequired\t\t\t\t\t\t| Is the manifest associated to the schedule required.\t\t\t\t\t\t\t|\r\n| IsThirdPartySchedule\t\t\t\t\t\t| Is the schedule a third party.\t\t\t\t\t\t\t\t\t\t\t\t|\r\n| FuelUsed\t\t\t\t\t\t\t\t\t| The fuel used associated to the schedule.\t\t\t\t\t\t\t\t\t\t|\r\n| FuelCost\t\t\t\t\t\t\t\t\t| The fuel cost associated to the schedule.\t\t\t\t\t\t\t\t\t\t|\r\n| Position\t\t\t\t\t\t\t\t\t| The position associated to the schedule.\t\t\t\t\t\t\t\t\t\t|\r\n| RelatedVehicleGuid\t\t\t\t\t\t| The GUID associated to the related vehicle. Filterable.\t\t\t\t\t\t|\r\n| RelatedUserDriverGuid\t\t\t\t\t\t| The GUID associated to the related user driver. Filterable.\t\t\t\t\t|\r\n| RelatedUserStartCheckByGuid\t\t\t\t| The GUID associated to the related user for start check. Filterable.\t\t\t|\r\n| RelatedUserEndCheckByGuid\t\t\t\t\t| The GUID associated to the related user for end check. Filterable.\t\t\t|","operationId":"Schedule_Get","consumes":["application/json"],"produces":["application/json"],"parameters":[{"name":"guid","in":"path","required":true,"type":"string","format":"uuid"},{"name":"links","in":"query","required":false,"type":"string"},{"name":"include","in":"query","required":false,"type":"string"},{"name":"expand","in":"query","required":false,"type":"string"},{"name":"udf","in":"query","required":false,"type":"string"}],"responses":{"200":{"description":"OK","schema":{"$ref":"#/definitions/ApiResourceResultEntity[ApiIntegratorScheduleResource]"}}}},"put":{"tags":["Schedule"],"summary":"Partial update","description":"| Property                              | Description\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t| Required |\r\n| ------------------------------------- | --------------------------------------------------------------------------------- | -------- |\r\n| GUID\t\t\t\t\t\t\t\t\t\t| The GUID associated to the schedule.                                          | No |\r\n| ScheduledDate\t\t\t\t\t\t\t\t| The date associated to the schedule.\t\t\t\t\t\t\t\t\t\t\t| Yes |\r\n| Description\t\t\t\t\t\t\t\t| The description associated to the schedule.\t\t\t\t\t\t\t\t\t| Yes |\r\n| IsContainerSchedule\t\t\t\t\t\t| Is the schedule a container.\t\t\t\t\t\t\t\t\t\t\t\t\t| No |\r\n| Notes\t\t\t\t\t\t\t\t\t\t| The notes associated to the schedule.\t\t\t\t\t\t\t\t\t\t\t| No |\r\n| LeaveYardTime\t\t\t\t\t\t\t\t| The leave yard time associated to the schedule.\t\t\t\t\t\t\t\t| No |\r\n| ReturnYardTime\t\t\t\t\t\t\t| The return yard time associated to the schedule.\t\t\t\t\t\t\t\t| No |\r\n| Driver.RelatedUserDriverGuid\t\t\t\t| The GUID associated to the related user driver.\t\t\t\t\t\t\t\t| No |\r\n| Driver.ClockOffDateTime\t\t\t\t\t| The clock off time associated to the driver.\t\t\t\t\t\t\t\t\t| No |\r\n| Driver.ClockOnDateTime\t\t\t\t\t| The clock on time associated to the driver.\t\t\t\t\t\t\t\t\t| No |\r\n| VehicleChecks.StartMileage\t\t\t\t| The start mileage associated to the vehicle.\t\t\t\t\t\t\t\t\t| No |\r\n| VehicleChecks.EndMileage\t\t\t\t\t| The end mileage associated to the vehicle.\t\t\t\t\t\t\t\t\t| No |\r\n| VehicleChecks.IsStartSafetyChecked\t\t| Is the start safety checked associated to the vehicle.\t\t\t\t\t\t| No |\r\n| VehicleChecks.StartNotes\t\t\t\t\t| The start notes associated to the vehicle.\t\t\t\t\t\t\t\t\t| No |\r\n| VehicleChecks.IsEndSafetyChecked\t\t\t| Is the end safety checked associated to the vehicle.\t\t\t\t\t\t\t| No |\r\n| VehicleChecks.EndNotes\t\t\t\t\t| The end notes associated to the vehicle.\t\t\t\t\t\t\t\t\t\t| No |\r\n| VehicleChecks.StartDefectTicketNo\t\t\t| The start defect ticket number associated to the vehicle.\t\t\t\t\t\t| No |\r\n| VehicleChecks.EndDefectTicketNo\t\t\t| The end defect ticket number for the vehicle.\t\t\t\t\t\t\t\t\t| No |\r\n| VehicleChecks.StartDefectCheckBySysUserId\t| The start defect check of the vehicle by user id.\t\t\t\t\t\t\t\t| No |\r\n| VehicleChecks.EndDefectCheckBySysUserId\t| The end defect check associated to the vehicle by user id.\t\t\t\t\t| No |\r\n| CompanyOutletListItem\t\t\t\t\t\t| The GUID and the description associated to the company outlet.\t\t\t\t| Yes |\r\n| IsCompleted\t\t\t\t\t\t\t\t| Is the schedule completed.\t\t\t\t\t\t\t\t\t\t\t\t\t| Yes |\r\n| IsForVehicle\t\t\t\t\t\t\t\t| Is the schedule for the vehicle.\t\t\t\t\t\t\t\t\t\t\t\t| Yes |\r\n| IsManifestCompleted\t\t\t\t\t\t| Is the manifest associated to the schedule completed.\t\t\t\t\t\t\t| Yes |\r\n| IsManifestExported\t\t\t\t\t\t| Is the manifest associated to the schedule exported.\t\t\t\t\t\t\t| Yes |\r\n| IsManifestExportedFailed\t\t\t\t\t| Is the manifest export associated to the schedule failed.\t\t\t\t\t\t| Yes |\r\n| IsManifestRequired\t\t\t\t\t\t| Is the manifest associated to the schedule required.\t\t\t\t\t\t\t| Yes |\r\n| IsThirdPartySchedule\t\t\t\t\t\t| Is the schedule a third party.\t\t\t\t\t\t\t\t\t\t\t\t| Yes |\r\n| FuelUsed\t\t\t\t\t\t\t\t\t| The fuel used associated to the schedule.\t\t\t\t\t\t\t\t\t\t| No |\r\n| FuelCost\t\t\t\t\t\t\t\t\t| The fuel cost associated to the schedule.\t\t\t\t\t\t\t\t\t\t| No |\r\n| Position\t\t\t\t\t\t\t\t\t| The position associated to the schedule.\t\t\t\t\t\t\t\t\t\t| No |\r\n| RelatedVehicleGuid\t\t\t\t\t\t| The GUID associated to the related vehicle.\t\t\t\t\t\t\t\t\t| Yes |\r\n| RelatedUserDriverGuid\t\t\t\t\t\t| The GUID associated to the related user driver.\t\t\t\t\t\t\t\t| No |\r\n| RelatedUserStartCheckByGuid\t\t\t\t| The GUID associated to the related user for start check.\t\t\t\t\t\t| No |\r\n| RelatedUserEndCheckByGuid\t\t\t\t\t| The GUID associated to the related user for end check.\t\t\t\t\t\t| No |\r\n\r\n## Extra validations\r\n\r\n| Condition | Error message |\r\n| --------- | ------------- |\r\n| RelatedVehicleGuid is being edited | RelatedVehicleGuid is a read-only property. |\r\n| CompanyOutletListItem is being edited | CompanyOutletListItem.Guid is a read-only property. |\r\n| ScheduledDate is being edited | ScheduledDate is a read-only property. |\r\n| Description is being edited | Description is a read-only property. |\r\n| Position is being edited | Position is a read-only property. |\r\n| IsContainerSchedule is being edited | IsContainerSchedule is a read-only property. |\r\n| IsManifestRequired is being edited | IsManifestRequired is a read-only property. |\r\n| IsManifestCompleted is being edited | IsManifestCompleted is a read-only property. |\r\n| IsManifestExported is being edited | IsManifestExported is a read-only property. |\r\n| IsManifestExportedFailed is being edited | IsManifestExportedFailed is a read-only property. |\r\n| IsForVehicle is being edited | IsForVehicle is a read-only property. |\r\n| RelatedUserDriverGuid is being edited when the schedule is completed | RelatedUserDriverGuid is a read-only property. |\r\n| Driver.ClockOnDateTime is being edited when the schedule is completed | ClockOnTime is a read-only property. |\r\n| Driver.ClockOffDateTime is being edited when the schedule is completed | ClockOffTime is a read-only property. |\r\n| VehicleChecks.IsStartSafetyChecked is being edited when the schedule is completed | StartSafetyCheck is a read-only property. |\r\n| VehicleChecks.StartNotes is being edited when the schedule is completed | StartNotes is a read-only property. |\r\n| VehicleChecks.StartDefectTicketNo is being edited when the schedule is completed | StartDefectTicketNo is a read-only property. |\r\n| VehicleChecks.RelatedUserStartCheckByGuid is being edited when the schedule is completed | StartDefectCheckBySysUserId is a read-only property. |\r\n| VehicleChecks.IsEndSafetyChecked is being edited when the schedule is completed | EndSafetyCheck is a read-only property. |\r\n| VehicleChecks.EndNotes is being edited when the schedule is completed | EndNotes is a read-only property. |\r\n| VehicleChecks.EndDefectTicketNo is being edited when the schedule is completed | EndDefectTicketNo is a read-only property. |\r\n| VehicleChecks.RelatedUserEndCheckByGuid is being edited when the schedule is completed | EndDefectCheckBySysUserId is a read-only property. |\r\n| LeaveYardTime is being edited when the schedule is completed | LeaveYardTime is a read-only property. |\r\n| ReturnYardTime is being edited when the schedule is completed | ReturnYardTime is a read-only property. |\r\n| FuelUsed is being edited when the schedule is completed | FuelUsed is a read-only property. |\r\n| FuelCost is being edited when the schedule is completed | FuelCost is a read-only property. |\r\n| Notes is being edited when the schedule is completed | Notes is a read-only property. |\r\n\r\n\r\n\r\n\r\n\r\n\r\n","operationId":"Schedule_Update","consumes":["application/json"],"produces":["application/json"],"parameters":[{"name":"guid","in":"path","required":true,"type":"string","format":"uuid"},{"in":"body","required":true,"schema":{"$ref":"#/definitions/ApiResourceId"}}],"responses":{"200":{"description":"OK","schema":{"$ref":"#/definitions/ApiResourceId"}}}}},"/transport/schedules":{"get":{"tags":["Schedule"],"summary":"Find with Filters","description":"| Property\t\t\t\t\t\t\t\t\t| Description                                                                   |\r\n| -----------------------------------------\t| ----------------------------------------------------------------------------- |\r\n| GUID\t\t\t\t\t\t\t\t\t\t| The GUID associated to the schedule.                                          |\r\n| ScheduledDate\t\t\t\t\t\t\t\t| The date associated to the schedule.\t\t\t\t\t\t\t\t\t\t\t|\r\n| Description\t\t\t\t\t\t\t\t| The description associated to the schedule.\t\t\t\t\t\t\t\t\t|\r\n| IsContainerSchedule\t\t\t\t\t\t| Is the schedule a container.\t\t\t\t\t\t\t\t\t\t\t\t\t|\r\n| Notes\t\t\t\t\t\t\t\t\t\t| The notes associated to the schedule.\t\t\t\t\t\t\t\t\t\t\t|\r\n| LeaveYardTime\t\t\t\t\t\t\t\t| The leave yard time associated to the schedule.\t\t\t\t\t\t\t\t|\r\n| ReturnYardTime\t\t\t\t\t\t\t| The return yard time associated to the schedule.\t\t\t\t\t\t\t\t|\r\n| Driver.RelatedUserDriverGuid\t\t\t\t| The GUID associated to the related user driver.\t\t\t\t\t\t\t\t|\r\n| Driver.ClockOffDateTime\t\t\t\t\t| The clock off time associated to the driver.\t\t\t\t\t\t\t\t\t|\r\n| Driver.ClockOnDateTime\t\t\t\t\t| The clock on time associated to the driver.\t\t\t\t\t\t\t\t\t|\r\n| VehicleChecks.StartMileage\t\t\t\t| The start mileage associated to the vehicle.\t\t\t\t\t\t\t\t\t|\r\n| VehicleChecks.EndMileage\t\t\t\t\t| The end mileage associated to the vehicle.\t\t\t\t\t\t\t\t\t|\r\n| VehicleChecks.IsStartSafetyChecked\t\t| Is the start safety checked associated to the vehicle.\t\t\t\t\t\t|\r\n| VehicleChecks.StartNotes\t\t\t\t\t| The start notes associated to the vehicle.\t\t\t\t\t\t\t\t\t|\r\n| VehicleChecks.IsEndSafetyChecked\t\t\t| Is the end safety checked associated to the vehicle.\t\t\t\t\t\t\t|\r\n| VehicleChecks.EndNotes\t\t\t\t\t| The end notes associated to the vehicle.\t\t\t\t\t\t\t\t\t\t|\r\n| VehicleChecks.StartDefectTicketNo\t\t\t| The start defect ticket number associated to the vehicle.\t\t\t\t\t\t|\r\n| VehicleChecks.EndDefectTicketNo\t\t\t| The end defect ticket number for the vehicle.\t\t\t\t\t\t\t\t\t|\r\n| VehicleChecks.StartDefectCheckBySysUserId\t| The start defect check of the vehicle by user id.\t\t\t\t\t\t\t\t|\r\n| VehicleChecks.EndDefectCheckBySysUserId\t| The end defect check associated to the vehicle by user id.\t\t\t\t\t|\r\n| CompanyOutletListItem\t\t\t\t\t\t| The GUID and the description associated to the company outlet.\t\t\t\t|\r\n| IsCompleted\t\t\t\t\t\t\t\t| Is the schedule completed.\t\t\t\t\t\t\t\t\t\t\t\t\t|\r\n| IsForVehicle\t\t\t\t\t\t\t\t| Is the schedule for the vehicle.\t\t\t\t\t\t\t\t\t\t\t\t|\r\n| IsManifestCompleted\t\t\t\t\t\t| Is the manifest associated to the schedule completed.\t\t\t\t\t\t\t|\r\n| IsManifestExported\t\t\t\t\t\t| Is the manifest associated to the schedule exported.\t\t\t\t\t\t\t|\r\n| IsManifestExportedFailed\t\t\t\t\t| Is the manifest export associated to the schedule failed.\t\t\t\t\t\t|\r\n| IsManifestRequired\t\t\t\t\t\t| Is the manifest associated to the schedule required.\t\t\t\t\t\t\t|\r\n| IsThirdPartySchedule\t\t\t\t\t\t| Is the schedule a third party.\t\t\t\t\t\t\t\t\t\t\t\t|\r\n| FuelUsed\t\t\t\t\t\t\t\t\t| The fuel used associated to the schedule.\t\t\t\t\t\t\t\t\t\t|\r\n| FuelCost\t\t\t\t\t\t\t\t\t| The fuel cost associated to the schedule.\t\t\t\t\t\t\t\t\t\t|\r\n| Position\t\t\t\t\t\t\t\t\t| The position associated to the schedule.\t\t\t\t\t\t\t\t\t\t|\r\n| RelatedVehicleGuid\t\t\t\t\t\t| The GUID associated to the related vehicle. Filterable.\t\t\t\t\t\t|\r\n| RelatedUserDriverGuid\t\t\t\t\t\t| The GUID associated to the related user driver. Filterable.\t\t\t\t\t|\r\n| RelatedUserStartCheckByGuid\t\t\t\t| The GUID associated to the related user for start check. Filterable.\t\t\t|\r\n| RelatedUserEndCheckByGuid\t\t\t\t\t| The GUID associated to the related user for end check. Filterable.\t\t\t|","operationId":"Schedule_GetCollection","consumes":["application/json"],"produces":["application/json"],"parameters":[{"name":"filter","in":"query","required":false,"type":"string"},{"name":"search","in":"query","required":false,"type":"string"},{"name":"order","in":"query","required":false,"type":"string"},{"name":"max","in":"query","required":false,"type":"integer","format":"int32"},{"name":"page","in":"query","required":false,"type":"integer","format":"int32"},{"name":"includeCount","in":"query","required":false,"type":"boolean"},{"name":"includeDeleted","in":"query","required":false,"type":"boolean"},{"name":"links","in":"query","required":false,"type":"string"},{"name":"udf","in":"query","required":false,"type":"string"}],"responses":{"200":{"description":"OK","schema":{"$ref":"#/definitions/ApiResourceResultCollection[ApiIntegratorScheduleResource]"}}}},"post":{"tags":["Schedule"],"summary":"Create or update","description":"| Property                              | Description\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t| Required |\r\n| ------------------------------------- | --------------------------------------------------------------------------------- | -------- |\r\n| GUID\t\t\t\t\t\t\t\t\t\t| The GUID associated to the schedule.                                          | No |\r\n| ScheduledDate\t\t\t\t\t\t\t\t| The date associated to the schedule.\t\t\t\t\t\t\t\t\t\t\t| Yes |\r\n| Description\t\t\t\t\t\t\t\t| The description associated to the schedule.\t\t\t\t\t\t\t\t\t| Yes |\r\n| IsContainerSchedule\t\t\t\t\t\t| Is the schedule a container.\t\t\t\t\t\t\t\t\t\t\t\t\t| No |\r\n| Notes\t\t\t\t\t\t\t\t\t\t| The notes associated to the schedule.\t\t\t\t\t\t\t\t\t\t\t| No |\r\n| LeaveYardTime\t\t\t\t\t\t\t\t| The leave yard time associated to the schedule.\t\t\t\t\t\t\t\t| No |\r\n| ReturnYardTime\t\t\t\t\t\t\t| The return yard time associated to the schedule.\t\t\t\t\t\t\t\t| No |\r\n| Driver.RelatedUserDriverGuid\t\t\t\t| The GUID associated to the related user driver.\t\t\t\t\t\t\t\t| No |\r\n| Driver.ClockOffDateTime\t\t\t\t\t| The clock off time associated to the driver.\t\t\t\t\t\t\t\t\t| No |\r\n| Driver.ClockOnDateTime\t\t\t\t\t| The clock on time associated to the driver.\t\t\t\t\t\t\t\t\t| No |\r\n| VehicleChecks.StartMileage\t\t\t\t| The start mileage associated to the vehicle.\t\t\t\t\t\t\t\t\t| No |\r\n| VehicleChecks.EndMileage\t\t\t\t\t| The end mileage associated to the vehicle.\t\t\t\t\t\t\t\t\t| No |\r\n| VehicleChecks.IsStartSafetyChecked\t\t| Is the start safety checked associated to the vehicle.\t\t\t\t\t\t| No |\r\n| VehicleChecks.StartNotes\t\t\t\t\t| The start notes associated to the vehicle.\t\t\t\t\t\t\t\t\t| No |\r\n| VehicleChecks.IsEndSafetyChecked\t\t\t| Is the end safety checked associated to the vehicle.\t\t\t\t\t\t\t| No |\r\n| VehicleChecks.EndNotes\t\t\t\t\t| The end notes associated to the vehicle.\t\t\t\t\t\t\t\t\t\t| No |\r\n| VehicleChecks.StartDefectTicketNo\t\t\t| The start defect ticket number associated to the vehicle.\t\t\t\t\t\t| No |\r\n| VehicleChecks.EndDefectTicketNo\t\t\t| The end defect ticket number for the vehicle.\t\t\t\t\t\t\t\t\t| No |\r\n| VehicleChecks.StartDefectCheckBySysUserId\t| The start defect check of the vehicle by user id.\t\t\t\t\t\t\t\t| No |\r\n| VehicleChecks.EndDefectCheckBySysUserId\t| The end defect check associated to the vehicle by user id.\t\t\t\t\t| No |\r\n| CompanyOutletListItem\t\t\t\t\t\t| The GUID and the description associated to the company outlet.\t\t\t\t| Yes |\r\n| IsCompleted\t\t\t\t\t\t\t\t| Is the schedule completed.\t\t\t\t\t\t\t\t\t\t\t\t\t| Yes |\r\n| IsForVehicle\t\t\t\t\t\t\t\t| Is the schedule for the vehicle.\t\t\t\t\t\t\t\t\t\t\t\t| Yes |\r\n| IsManifestCompleted\t\t\t\t\t\t| Is the manifest associated to the schedule completed.\t\t\t\t\t\t\t| Yes |\r\n| IsManifestExported\t\t\t\t\t\t| Is the manifest associated to the schedule exported.\t\t\t\t\t\t\t| Yes |\r\n| IsManifestExportedFailed\t\t\t\t\t| Is the manifest export associated to the schedule failed.\t\t\t\t\t\t| Yes |\r\n| IsManifestRequired\t\t\t\t\t\t| Is the manifest associated to the schedule required.\t\t\t\t\t\t\t| Yes |\r\n| IsThirdPartySchedule\t\t\t\t\t\t| Is the schedule a third party.\t\t\t\t\t\t\t\t\t\t\t\t| Yes |\r\n| FuelUsed\t\t\t\t\t\t\t\t\t| The fuel used associated to the schedule.\t\t\t\t\t\t\t\t\t\t| No |\r\n| FuelCost\t\t\t\t\t\t\t\t\t| The fuel cost associated to the schedule.\t\t\t\t\t\t\t\t\t\t| No |\r\n| Position\t\t\t\t\t\t\t\t\t| The position associated to the schedule.\t\t\t\t\t\t\t\t\t\t| No |\r\n| RelatedVehicleGuid\t\t\t\t\t\t| The GUID associated to the related vehicle.\t\t\t\t\t\t\t\t\t| Yes |\r\n| RelatedUserDriverGuid\t\t\t\t\t\t| The GUID associated to the related user driver.\t\t\t\t\t\t\t\t| No |\r\n| RelatedUserStartCheckByGuid\t\t\t\t| The GUID associated to the related user for start check.\t\t\t\t\t\t| No |\r\n| RelatedUserEndCheckByGuid\t\t\t\t\t| The GUID associated to the related user for end check.\t\t\t\t\t\t| No |\r\n\r\n## Extra validations\r\n\r\n| Condition | Error message |\r\n| --------- | ------------- |\r\n| RelatedVehicleGuid is being edited | RelatedVehicleGuid is a read-only property. |\r\n| CompanyOutletListItem is being edited | CompanyOutletListItem.Guid is a read-only property. |\r\n| ScheduledDate is being edited | ScheduledDate is a read-only property. |\r\n| Description is being edited | Description is a read-only property. |\r\n| Position is being edited | Position is a read-only property. |\r\n| IsContainerSchedule is being edited | IsContainerSchedule is a read-only property. |\r\n| IsManifestRequired is being edited | IsManifestRequired is a read-only property. |\r\n| IsManifestCompleted is being edited | IsManifestCompleted is a read-only property. |\r\n| IsManifestExported is being edited | IsManifestExported is a read-only property. |\r\n| IsManifestExportedFailed is being edited | IsManifestExportedFailed is a read-only property. |\r\n| IsForVehicle is being edited | IsForVehicle is a read-only property. |\r\n| RelatedUserDriverGuid is being edited when the schedule is completed | RelatedUserDriverGuid is a read-only property. |\r\n| Driver.ClockOnDateTime is being edited when the schedule is completed | ClockOnTime is a read-only property. |\r\n| Driver.ClockOffDateTime is being edited when the schedule is completed | ClockOffTime is a read-only property. |\r\n| VehicleChecks.IsStartSafetyChecked is being edited when the schedule is completed | StartSafetyCheck is a read-only property. |\r\n| VehicleChecks.StartNotes is being edited when the schedule is completed | StartNotes is a read-only property. |\r\n| VehicleChecks.StartDefectTicketNo is being edited when the schedule is completed | StartDefectTicketNo is a read-only property. |\r\n| VehicleChecks.RelatedUserStartCheckByGuid is being edited when the schedule is completed | StartDefectCheckBySysUserId is a read-only property. |\r\n| VehicleChecks.IsEndSafetyChecked is being edited when the schedule is completed | EndSafetyCheck is a read-only property. |\r\n| VehicleChecks.EndNotes is being edited when the schedule is completed | EndNotes is a read-only property. |\r\n| VehicleChecks.EndDefectTicketNo is being edited when the schedule is completed | EndDefectTicketNo is a read-only property. |\r\n| VehicleChecks.RelatedUserEndCheckByGuid is being edited when the schedule is completed | EndDefectCheckBySysUserId is a read-only property. |\r\n| LeaveYardTime is being edited when the schedule is completed | LeaveYardTime is a read-only property. |\r\n| ReturnYardTime is being edited when the schedule is completed | ReturnYardTime is a read-only property. |\r\n| FuelUsed is being edited when the schedule is completed | FuelUsed is a read-only property. |\r\n| FuelCost is being edited when the schedule is completed | FuelCost is a read-only property. |\r\n| Notes is being edited when the schedule is completed | Notes is a read-only property. |\r\n\r\n\r\n\r\n\r\n\r\n\r\n","operationId":"Schedule_Create","consumes":["application/json"],"produces":["application/json"],"parameters":[{"in":"body","required":true,"schema":{"$ref":"#/definitions/ApiResourceId"}}],"responses":{"200":{"description":"OK","schema":{"$ref":"#/definitions/ApiResourceId"}}}}},"/lists/services/{guid}":{"get":{"tags":["Service"],"summary":"Find with GUID","description":"| Property                  | Description                                                              |\r\n| ------------------------- | ------------------------------------------------------------------------ |\r\n| GUID                      | The GUID associated to the service\t\t                               |\r\n| Description               | The description of the service\t\t\t\t\t\t                   |\r\n| ExternalDescription       | The external description of the service                                  |\r\n| ShortName                 | The short name description of the service                                |\r\n| AnalysisCode              | The analysis code of the service\t\t\t\t\t                       |\r\n| IsDeleted                 | Whether the service is deleted\t\t \t \t\t\t\t\t\t\t\t|\r\n| AllowBarcodeScanningOnQuantityBasedBreakdown | Is barcode scanning on quantity based breakdown are allowable for this service? |\r\n| AllowBulkMovements        | Is bulk movements allowable for this service?\t\t\t\t\t\t\t\t|\r\n| AllowDriverResequence     | Is driver resequence allowable for this service?\t\t\t\t\t\t\t|\r\n| AllowManualBarcodeEntry\t| Is manual barcode entry allowable for this service?\t\t\t\t\t\t|\r\n| AllowQuantityBasedBreakdown | Is quantity based breakdown allowable for this service?\t\t\t\t\t|\r\n| AllowRecordBreakdownNotCollected | Is record breakdown not collected allowable for this service?\t\t|\r\n| AllowWasteTransferFormatSignatures | Is waste transfer format signatures allowable for this service?\t|\r\n| AllowZeroWeightsOnMobile\t| Is zero weight on mobile allowable for this service?\t\t\t\t\t\t|\r\n| CaptureFillLevelOnQuantityBasedBreakdown | The capture fill level on quantity based breakdown of this service |\r\n| CreditAccountRequired\t\t| Is credit account required for this service?\t\t\t\t\t\t\t\t|\r\n| DynamicOptimisationEnabled | Is dynamic optimisation enabled for this service?\t\t\t\t\t\t|\r\n| EnableChargeExcessWeightPerBin | Is charge excess weight per bin enabled for this service?\t\t\t|\r\n| ExcludeAssetTracking\t\t| Is asset tracking excluded for this service?\t\t\t\t\t\t\t\t|\r\n| FilterOrderActionsbyMaterialProfile | The Filter order actions by material profile of the service\t\t|\r\n| IsAccountsPayable\t\t\t| Is accounts payable for this service?\t\t\t\t\t\t\t\t\t\t|\r\n| IsBookable\t\t\t\t| Is this service bookable?\t\t\t\t\t\t\t\t\t\t\t\t\t|\r\n| IsBrokerageOnly\t\t\t| Is this service brokerage only?\t\t\t\t\t\t\t\t\t\t\t|\t\t\t\t\r\n| IsCollection\t\t\t\t| Is this service collection?\t\t\t\t\t\t\t\t\t\t\t\t|\r\n| IsDirectMovement\t\t\t| Is this service direct movement?\t\t\t\t\t\t\t\t\t\t\t|\r\n| IsDisposalMaterialChangeEnabled | Is disposal material change enabled for this service?\t\t\t\t|\r\n| IsExport\t\t\t\t\t| Is this service export?\t\t\t\t\t\t\t\t\t\t\t\t\t|\r\n| IsIncludedWhereDOCRequired | Is included where DOC Required for this service?\t\t\t\t\t\t\t|\t\t\t\t\t\t\r\n| IsManagement\t\t\t\t| Is this service management?\t\t\t\t\t\t\t\t\t\t\t\t|\r\n| IsManifest\t\t\t\t| Is this service manifest?\t\t\t\t\t\t\t\t\t\t\t\t\t|\t\t\t\t\t\t\t\t\t\t\t\r\n| IsMaterialOut\t\t\t\t| Is material out for this service?\t\t\t\t\t\t\t\t\t\t\t|\r\n| IsQuantityBased\t\t\t| Is this service quantity based?\t\t\t\t\t\t\t\t\t\t\t|\r\n| IsRouteWeighing\t\t\t| Is this service route weighing?\t\t\t\t\t\t\t\t\t\t\t|\r\n| IsScheduled\t\t\t\t| Is this service scheduled?\t\t\t\t\t\t\t\t\t\t\t\t|\r\n| IsScheduledBag\t\t\t| Is scheduled bag for this service?\t\t\t\t\t\t\t\t\t\t|\r\n| IsStandingOrder\t\t\t| Is standing order for this service?\t\t\t\t\t\t\t\t\t\t|\r\n| IsSupplierConfirmationRequired | Is supplier confirmation required for this service?\t\t\t\t\t|\r\n| IsTipper\t\t\t\t\t| Is this service tripper?\t\t\t\t\t\t\t\t\t\t\t\t\t|\r\n| IsTransferOut\t\t\t\t| Is this service transfer out?\t\t\t\t\t\t\t\t\t\t\t\t|\r\n| IsUnScheduledMaterial\t\t| Is this service unscheduled material?\t\t\t\t\t\t\t\t\t\t|\r\n| IsWeighingSignatureRequired | Is weighing signature required for this service?\t\t\t\t\t\t|\t\t\t\t\r\n| IsWorkOrder\t\t\t\t| Is work order for this service?\t\t\t\t\t\t\t\t\t\t\t|\r\n| OneInvoicePerJobDefault\t| The one invoice per job default of the service\t\t\t\t\t\t\t|\r\n| RecordSummaryQuantity\t\t| The record summary quantity of the service\t\t\t\t\t\t\t\t|\r\n| RequiresPeriodicDoC\t\t| The requires periodic DoC of the service\t\t\t\t\t\t\t\t\t|\r\n| ShowJobPaymentDetailsOnMobile | The show job payment details on mobile of the service\t\t\t\t\t|\r\n| ShowOrderDefaultsOnBaleCollection | The show order default on bale collection\t\t\t\t\t\t\t|\r\n| WarnOnOutOfCycle\t\t\t| The warn on out of cycle of the service\t\t\t\t\t\t\t\t\t|\r\n| JobStatusTrackingLevel\t| The job status tracking level of teh service\t\t\t\t\t\t\t\t|\r\n| PremiumHireDayThreshold\t| The premium hire day threshold of the service\t\t\t\t\t\t\t\t|\r\n| BusinessTypeListItem\t\t| The GUID and description of the business type of the service\t\t\t\t|\r\n| ServiceCategoryListItem\t| The GUID and description of the service category of the service\t\t\t|\r\n\r\n","operationId":"Service_Get","consumes":["application/json"],"produces":["application/json"],"parameters":[{"name":"guid","in":"path","required":true,"type":"string","format":"uuid"},{"name":"links","in":"query","required":false,"type":"string"},{"name":"include","in":"query","required":false,"type":"string"},{"name":"expand","in":"query","required":false,"type":"string"},{"name":"udf","in":"query","required":false,"type":"string"}],"responses":{"200":{"description":"OK","schema":{"$ref":"#/definitions/ApiResourceResultEntity[ApiIntegratorServiceResource]"}}}}},"/lists/services":{"get":{"tags":["Service"],"summary":"Find with Filters","description":"| Property                  | Description                                                              |\r\n| ------------------------- | ------------------------------------------------------------------------ |\r\n| GUID                      | The GUID associated to the service\t\t                               |\r\n| Description               | The description of the service\t\t\t\t\t\t                   |\r\n| ExternalDescription       | The external description of the service                                  |\r\n| ShortName                 | The short name description of the service                                |\r\n| AnalysisCode              | The analysis code of the service\t\t\t\t\t                       |\r\n| IsDeleted                 | Whether the service is deleted\t\t \t \t\t\t\t\t\t\t\t|\r\n| AllowBarcodeScanningOnQuantityBasedBreakdown | Is barcode scanning on quantity based breakdown are allowable for this service? |\r\n| AllowBulkMovements        | Is bulk movements allowable for this service?\t\t\t\t\t\t\t\t|\r\n| AllowDriverResequence     | Is driver resequence allowable for this service?\t\t\t\t\t\t\t|\r\n| AllowManualBarcodeEntry\t| Is manual barcode entry allowable for this service?\t\t\t\t\t\t|\r\n| AllowQuantityBasedBreakdown | Is quantity based breakdown allowable for this service?\t\t\t\t\t|\r\n| AllowRecordBreakdownNotCollected | Is record breakdown not collected allowable for this service?\t\t|\r\n| AllowWasteTransferFormatSignatures | Is waste transfer format signatures allowable for this service?\t|\r\n| AllowZeroWeightsOnMobile\t| Is zero weight on mobile allowable for this service?\t\t\t\t\t\t|\r\n| CaptureFillLevelOnQuantityBasedBreakdown | The capture fill level on quantity based breakdown of this service |\r\n| CreditAccountRequired\t\t| Is credit account required for this service?\t\t\t\t\t\t\t\t|\r\n| DynamicOptimisationEnabled | Is dynamic optimisation enabled for this service?\t\t\t\t\t\t|\r\n| EnableChargeExcessWeightPerBin | Is charge excess weight per bin enabled for this service?\t\t\t|\r\n| ExcludeAssetTracking\t\t| Is asset tracking excluded for this service?\t\t\t\t\t\t\t\t|\r\n| FilterOrderActionsbyMaterialProfile | The Filter order actions by material profile of the service\t\t|\r\n| IsAccountsPayable\t\t\t| Is accounts payable for this service?\t\t\t\t\t\t\t\t\t\t|\r\n| IsBookable\t\t\t\t| Is this service bookable?\t\t\t\t\t\t\t\t\t\t\t\t\t|\r\n| IsBrokerageOnly\t\t\t| Is this service brokerage only?\t\t\t\t\t\t\t\t\t\t\t|\t\t\t\t\r\n| IsCollection\t\t\t\t| Is this service collection?\t\t\t\t\t\t\t\t\t\t\t\t|\r\n| IsDirectMovement\t\t\t| Is this service direct movement?\t\t\t\t\t\t\t\t\t\t\t|\r\n| IsDisposalMaterialChangeEnabled | Is disposal material change enabled for this service?\t\t\t\t|\r\n| IsExport\t\t\t\t\t| Is this service export?\t\t\t\t\t\t\t\t\t\t\t\t\t|\r\n| IsIncludedWhereDOCRequired | Is included where DOC Required for this service?\t\t\t\t\t\t\t|\t\t\t\t\t\t\r\n| IsManagement\t\t\t\t| Is this service management?\t\t\t\t\t\t\t\t\t\t\t\t|\r\n| IsManifest\t\t\t\t| Is this service manifest?\t\t\t\t\t\t\t\t\t\t\t\t\t|\t\t\t\t\t\t\t\t\t\t\t\r\n| IsMaterialOut\t\t\t\t| Is material out for this service?\t\t\t\t\t\t\t\t\t\t\t|\r\n| IsQuantityBased\t\t\t| Is this service quantity based?\t\t\t\t\t\t\t\t\t\t\t|\r\n| IsRouteWeighing\t\t\t| Is this service route weighing?\t\t\t\t\t\t\t\t\t\t\t|\r\n| IsScheduled\t\t\t\t| Is this service scheduled?\t\t\t\t\t\t\t\t\t\t\t\t|\r\n| IsScheduledBag\t\t\t| Is scheduled bag for this service?\t\t\t\t\t\t\t\t\t\t|\r\n| IsStandingOrder\t\t\t| Is standing order for this service?\t\t\t\t\t\t\t\t\t\t|\r\n| IsSupplierConfirmationRequired | Is supplier confirmation required for this service?\t\t\t\t\t|\r\n| IsTipper\t\t\t\t\t| Is this service tripper?\t\t\t\t\t\t\t\t\t\t\t\t\t|\r\n| IsTransferOut\t\t\t\t| Is this service transfer out?\t\t\t\t\t\t\t\t\t\t\t\t|\r\n| IsUnScheduledMaterial\t\t| Is this service unscheduled material?\t\t\t\t\t\t\t\t\t\t|\r\n| IsWeighingSignatureRequired | Is weighing signature required for this service?\t\t\t\t\t\t|\t\t\t\t\r\n| IsWorkOrder\t\t\t\t| Is work order for this service?\t\t\t\t\t\t\t\t\t\t\t|\r\n| OneInvoicePerJobDefault\t| The one invoice per job default of the service\t\t\t\t\t\t\t|\r\n| RecordSummaryQuantity\t\t| The record summary quantity of the service\t\t\t\t\t\t\t\t|\r\n| RequiresPeriodicDoC\t\t| The requires periodic DoC of the service\t\t\t\t\t\t\t\t\t|\r\n| ShowJobPaymentDetailsOnMobile | The show job payment details on mobile of the service\t\t\t\t\t|\r\n| ShowOrderDefaultsOnBaleCollection | The show order default on bale collection\t\t\t\t\t\t\t|\r\n| WarnOnOutOfCycle\t\t\t| The warn on out of cycle of the service\t\t\t\t\t\t\t\t\t|\r\n| JobStatusTrackingLevel\t| The job status tracking level of teh service\t\t\t\t\t\t\t\t|\r\n| PremiumHireDayThreshold\t| The premium hire day threshold of the service\t\t\t\t\t\t\t\t|\r\n| BusinessTypeListItem\t\t| The GUID and description of the business type of the service\t\t\t\t|\r\n| ServiceCategoryListItem\t| The GUID and description of the service category of the service\t\t\t|\r\n\r\n","operationId":"Service_GetCollection","consumes":["application/json"],"produces":["application/json"],"parameters":[{"name":"filter","in":"query","required":false,"type":"string"},{"name":"search","in":"query","required":false,"type":"string"},{"name":"order","in":"query","required":false,"type":"string"},{"name":"max","in":"query","required":false,"type":"integer","format":"int32"},{"name":"page","in":"query","required":false,"type":"integer","format":"int32"},{"name":"includeCount","in":"query","required":false,"type":"boolean"},{"name":"includeDeleted","in":"query","required":false,"type":"boolean"},{"name":"links","in":"query","required":false,"type":"string"},{"name":"udf","in":"query","required":false,"type":"string"}],"responses":{"200":{"description":"OK","schema":{"$ref":"#/definitions/ApiResourceResultCollection[ApiIntegratorServiceResource]"}}}}},"/productCatalogue/serviceAgreements/changes":{"get":{"tags":["ServiceAgreement"],"summary":"Retrieve changes","description":"| Property       | Description                                                  |\r\n| -------------- | ------------------------------------------------------------ |\r\n| GUID\t\t\t\t\t\t\t\t\t| The GUID associated to the service agreement. |\r\n| Description\t\t\t\t\t\t\t| The description associated to the service agreement. |        \r\n| StartDate\t\t\t\t\t\t\t\t| The start date associated to the service agreement in ISO format (YYYY-MM-DD). |    \r\n| EndDate\t\t\t\t\t\t\t\t| The end date associated to the service agreement in ISO format (YYYY-MM-DD). |    \r\n| ReviewDate\t\t\t\t\t\t\t| The review date associated to the service agreement in ISO format (YYYY-MM-DD). |    \r\n| RelatedCustomerGuid\t\t\t\t\t| The GUID of the customer associated to the service agreement. Filterable. |\t \r\n| EndReasonListItem\t\t\t\t\t\t| The GUID and name of the end reason associated to the service agreement. |    \r\n| InvoiceFrequencyListItem\t\t\t\t| The GUID and name of the invoice frequency associated to the service agreement. |    \r\n| InvoiceCycleListItem\t\t\t\t\t| The GUID and name of the Invoice cycle associated to the service agreement. |    \r\n| OutletListItem\t\t\t\t\t\t| The GUID and name of the outlet associated to the service agreement. |    \r\n| PaymentTypeListItem\t\t\t\t\t| The GUID and name of the payment type associated to the service agreement. |    \r\n| PaymentTermListItem\t\t\t\t\t| The GUID and name of the payment term associated to the service agreement. |\r\n| DepartmentListItem\t\t\t\t\t| The GUID and name of the department associated to the service agreement. |\r\n| PrimaryServiceListItem\t\t\t\t| The GUID and name of the primary service  associated to the service agreement. |\r\n| IsDeleted\t\t\t\t\t\t\t\t| Whether the service agreement is deleted. |\r\n| Prices\t\t\t\t\t\t\t\t| The list of prices associated to the service agreement. |\r\n| Prices[0].PriceGuid\t\t\t\t\t| The GUID associated to the price related to the service agreement. |\r\n| Prices[0].ActionListItem\t\t\t\t| The GUID and name of the action associated to the price. |\r\n| Prices[0].ServiceListItem\t\t\t\t| The GUID and name of the service associated to the price. |\r\n| Prices[0].UnitOfMeasureListItem\t\t| The GUID and name of the unit of measurement associated to the price. |\r\n| Prices[0].DefaultActionExternalDescription | The default action external description of the price. |\r\n| Prices[0].SalesCode\t\t\t\t\t| The sales code of the price. |\r\n| Prices[0].CostCode\t\t\t\t\t| The cost code of the price. |\r\n| Prices[0].PurchaseCode\t\t\t\t| The purchase code of the price. |\r\n| Prices[0].ContainerTypeListItem\t\t| The GUID and name of the container type associated to the price. |\r\n| Prices[0].MaterialListItem\t\t\t| The GUID and name of the material associated to the price. |\r\n| Prices[0].MaterialClassListItem\t\t| The GUID and name of the material class associated to the price. |\r\n| Prices[0].PricingBasisListItem\t\t| The GUID and name of the pricing basis associated to the price. |\r\n| Prices[0].DateDeleted\t\t\t\t\t| The date deleted of the price. |\r\n| Prices[0].IsDeleted\t\t\t\t\t| Whether the price is deleted. |\r\n| Prices[0].Amount\t\t\t\t\t\t| The amount object associated to the price. |\r\n| Prices[0].Amount.Price\t\t\t\t| The price associated to the amount. |\r\n| Prices[0].Amount.Offset\t\t\t\t| The offset associated to the amount. |\r\n| Prices[0].Amount.Percentage\t\t\t| The percentage associated to the amount. |\r\n| Prices[0].Amount.FloorPrice\t\t\t| The floor price associated to the amount. |\r\n| Prices[0].Amount.CeilingPrice\t\t\t| The ceiling price associated to the amount. |\r\n| Prices[0].Amount.MinimumCharge\t\t| The minimum charge associated to the amount. |\r\n| Prices[0].Amount.Allowance\t\t\t| The allowance associated to the amount. |\r\n| Prices[0].Amount.VATListItem\t\t\t| The GUID and name of the VAT associated to the amount. |\r\n| Prices[0].Amount.IsRebate\t\t\t\t| Whether the price is rebate. |\r\n| Prices[0].LatePaymentFeeDefinition    | The late payment fee definition associated to the price. |\r\n| Prices[0].LatePaymentFeeDefinition.Description | The description associated to the late payment fee definition. |\r\n| Prices[0].LatePaymentFeeDefinition.CustomerCategoryListItem | The GUID and description of the customer category associated to the late payment fee definition. |\r\n| Prices[0].LatePaymentFeeDefinition.LatePaymentFeeTypeListItem | The GUID and description of the late payment fee type associated to the late payment fee definition. |\r\n| Prices[0].LatePaymentFeeDefinition.ActionListItem | The GUID and description of the action associated to the late payment fee definition. |\r\n| Prices[0].LatePaymentFeeDefinition.DefaultActionListItem | The GUID and description of the default action associated to the late payment fee definition. |\r\n| Prices[0].LatePaymentFeeDefinition.RelatedPriceGuid | The GUID of the price associated to the late payment fee definition. |\r\n| Prices[0].LatePaymentFeeDefinition.GraceDays | The GraceDays associated to the late payment fee definition. |\r\n| Prices[0].LatePaymentFeeDefinition.FlatFeeAmount | The FlatFeeAmount associated to the late payment fee definition. |\r\n| Prices[0].LatePaymentFeeDefinition.PercentageFeeDecimalAmount | The PercentageFeeDecimalAmount associated to the late payment fee definition. |\r\n| Prices[0].LatePaymentFeeDefinition.PercentageFeeAmount | The PercentageFeeAmount associated to the late payment fee definition. |\r\n| Prices[0].LatePaymentFeeDefinition.MinimumCharge | The MinimumCharge associated to the late payment fee definition. |\r\n| Prices[0].LatePaymentFeeDefinition.MaximumCharge | The MaximumCharge associated to the late payment fee definition. |\r\n| Prices[0].LatePaymentFeeDefinition.IsDeleted |  Whether the late payment fee definition is deleted. |\r\n| Prices[0].LatePaymentFeeDefinition.Guid | The Guid associated to the late payment fee definition. |\r\n| OrderCombinationGroups | The list of order combination groups associated to the service agreement. |\r\n| OrderCombinationGroups[0].Guid | The GUID associated to the order combination group. |\r\n| OrderCombinationGroups[0].InvoiceCycleListItem | The GUID and description of the invoice cycle associated to the order combination group. |\r\n| OrderCombinationGroups[0].IsConcessionary | Whether the order combination group is concessionary. |\r\n| OrderCombinationGroups[0].IsRequiresPrePay | Whether the order combination group requires prepay. |\r\n| OrderCombinationGroups[0].Name | The name of the order combination group. |\r\n| OrderCombinationGroups[0].IsOutletLevelPricingUsed | Is outlet level pricing used. |\r\n| OrderCombinationGroups[0].AnnualContractCost | The cost of the annual contract. |\r\n| OrderCombinationGroups[0].AnnualContractValue | The value of the annual contract. |\r\n| OrderCombinationGroups[0].BillingUsagePolicyGuid | The GUID of the billing usage policy associated to the order combination group. |\r\n| OrderCombinationGroups[0].IsUseReducedRateForAdditionalBin | Is reduced rate used for additional bin. |\r\n| OrderCombinationGroups[0].RefundableAdvanceDeposit | The refundable advance deposit. |\r\n| OrderCombinationGroups[0].StartDateDeferredDays | The start date deferred days. |\r\n| OrderCombinationGroups[0].ForceFullPayment\t\t| Whether the order combination group forces full payment. |\r\n| OrderCombinationGroups[0].UseOutletLevelPricing\t| Whether the order combination group uses outlet level pricing. |\r\n| OrderCombinationGroups[0].RelatedContractTermLengthGuid | The GUID of the contract term length associated to the order combination group. |\r\n| OrderCombinationGroups[0].SubscriptionTypeListItem | The GUID and description of the subscription type associated to the order combination group. |\r\n| OrderCombinationGroups[0].IsDeleted | Whether the order combination group is deleted. |\r\n| RelatedOutlets\t\t\t\t | The list of related outlets associated to the service agreement. |\r\n| RelatedOutlets[0].Guid\t\t | The Guid associated to the related outlets. |\r\n| RelatedOutlets[0].CompanyOutletListItem | The Guid and description of the CompanyOutlet associated to the service agreement. |\r\n| RelatedOutlets[0].IsRelatedOutletDeleted\t | Is the service agreement deleted. |\r\n| RelatedCustomers\t\t\t     | The list of related customers associated to the service agreement. |\r\n| RelatedCustomers[0].Guid\t\t | The Guid associated to the service agreement. |\r\n| RelatedCustomers[0].RelatedCustomerGuid | The related customer guid CompanyOutlet associated to the service agreement. |\r\n| RelatedCustomers[0].IsRelatedCustomerDeleted\t | Is the related customer deleted. |\r\n| RelatedCustomers[0].IsForAllSites\t | Is the related customer for all sites. |\r\n| RelatedCustomers[0].RelatedSites[]\t | The list of related sites associated to the service agreement. |\r\n| RelatedCustomers[0].RelatedSites[0].CustomerSiteGuid  | The guid associated to the Customer site. |\r\n| RelatedCustomers[0].RelatedSites[0].RelatedSiteGuid  | The RelatedSiteGuid associated to the site. |\r\n| RelatedCustomers[0].RelatedSites[0].IsRelatedSiteDeleted  | Is the RelatedSite deleted. |\r\n| BillingUsagePolicies | The list of billing usage policies associated to the service agreement. |\r\n| BillingUsagePolicies[0].Guid | The GUID associated to the billing usage policy. |\r\n| BillingUsagePolicies[0].Description | The description of the billing usage policy. |\r\n| BillingUsagePolicies[0].AltWeightSourceForOutsideThreshold | Alternative weight source for outside threshold. |\r\n| BillingUsagePolicies[0].AltWeightSourceForZeroWeight | Alternative weight source for zero weight. |\r\n| BillingUsagePolicies[0].ApplyToWeightsOutsideThresholds | Whether to apply to weights outside thresholds. |\r\n| BillingUsagePolicies[0].ApplyToZeroWeights | Whether to apply to zero weights. |\r\n| BillingUsagePolicies[0].IsUseAccumulatedWeight | Whether to use accumulated weight. |\r\n| BillingUsagePolicies[0].IsUseActualLifts | Whether to use actual lifts. |\r\n| BillingUsagePolicies[0].IsUseExpectedLifts | Whether to use expected lifts. |\r\n| BillingUsagePolicies[0].FairUsageMonths | Number of fair usage months. |\r\n| BillingUsagePolicies[0].LiftsForAverage | Number of lifts to get average weight. |\r\n| BillingUsagePolicies[0].MonthlyLag | Number of monthly lag. |\r\n| BillingUsagePolicies[0].IsDeleted | Whether the billing usage policy is deleted. |\r\n| BillingUsagePolicies[0].Thresholds | The weight threshold associated to the billing usage policy. |\r\n| BillingUsagePolicies[0].Thresholds[0].Guid | The GUID associated to the billing usage policy weight threshold. |\r\n| BillingUsagePolicies[0].Thresholds[0].IsDeleted | Whether the billing usage policy weight threshold is deleted. |\r\n| BillingUsagePolicies[0].Thresholds[0].MinWeight | The minimum weight associated to the billing usage policy weight threshold. |\r\n| BillingUsagePolicies[0].Thresholds[0].MaxWeight | The maximum weight associated to the billing usage policy weight threshold. |\r\n| BillingUsagePolicies[0].Thresholds[0].ContainerTypeListItem | The GUID and description of the container type associated to the billing usage policy weight threshold. |\r\n| BillingUsagePolicies[0].Thresholds[0].MaterialListItem | The GUID and description of the material associated to the billing usage policy weight threshold. |\r\n| BillingUsagePolicies[0].Thresholds[0].UnitOfMeasurementListItem | The GUID and description of the unit of measurement associated to the billing usage policy weight threshold. |\r\n| PriceGuidFilter | Used to filter on the Guid in the Prices array. |\r\n| CompanyOutletListItemGuidFilter | Used to filter on the CompanyOutletListItem Guid in the RelatedOutlets array. |\r\n| RelatedCustomerGuidFilter | Used to filter on the GUID in the RelatedCustomers array. |\r\n| RelatedCustomersGuidFilter | Used to filter on the RelatedCustomerGuid in the RelatedCustomers array. |\r\n| RelatedSiteGuidFilter | Used to filter on the GUID in the RelatedSites array. |\r\n","operationId":"ServiceAgreement_GetChanges","consumes":["application/json"],"produces":["application/json"],"parameters":[{"name":"since","in":"query","required":false,"type":"string"},{"name":"cursor","in":"query","required":false,"type":"string"},{"name":"links","in":"query","required":false,"type":"string"}],"responses":{"200":{"description":"OK","schema":{"$ref":"#/definitions/ApiResourceChanges[ApiIntegratorServiceAgreementResource]"}}}}},"/productCatalogue/serviceAgreements/{guid}":{"get":{"tags":["ServiceAgreement"],"summary":"Find with GUID","description":"| Property       | Description                                                  |\r\n| -------------- | ------------------------------------------------------------ |\r\n| GUID\t\t\t\t\t\t\t\t\t| The GUID associated to the service agreement. |\r\n| Description\t\t\t\t\t\t\t| The description associated to the service agreement. |        \r\n| StartDate\t\t\t\t\t\t\t\t| The start date associated to the service agreement in ISO format (YYYY-MM-DD). |    \r\n| EndDate\t\t\t\t\t\t\t\t| The end date associated to the service agreement in ISO format (YYYY-MM-DD). |    \r\n| ReviewDate\t\t\t\t\t\t\t| The review date associated to the service agreement in ISO format (YYYY-MM-DD). |    \r\n| RelatedCustomerGuid\t\t\t\t\t| The GUID of the customer associated to the service agreement. Filterable. |\t \r\n| EndReasonListItem\t\t\t\t\t\t| The GUID and name of the end reason associated to the service agreement. |    \r\n| InvoiceFrequencyListItem\t\t\t\t| The GUID and name of the invoice frequency associated to the service agreement. |    \r\n| InvoiceCycleListItem\t\t\t\t\t| The GUID and name of the Invoice cycle associated to the service agreement. |    \r\n| OutletListItem\t\t\t\t\t\t| The GUID and name of the outlet associated to the service agreement. |    \r\n| PaymentTypeListItem\t\t\t\t\t| The GUID and name of the payment type associated to the service agreement. |    \r\n| PaymentTermListItem\t\t\t\t\t| The GUID and name of the payment term associated to the service agreement. |\r\n| DepartmentListItem\t\t\t\t\t| The GUID and name of the department associated to the service agreement. |\r\n| PrimaryServiceListItem\t\t\t\t| The GUID and name of the primary service  associated to the service agreement. |\r\n| IsDeleted\t\t\t\t\t\t\t\t| Whether the service agreement is deleted. |\r\n| Prices\t\t\t\t\t\t\t\t| The list of prices associated to the service agreement. |\r\n| Prices[0].PriceGuid\t\t\t\t\t| The GUID associated to the price related to the service agreement. |\r\n| Prices[0].ActionListItem\t\t\t\t| The GUID and name of the action associated to the price. |\r\n| Prices[0].ServiceListItem\t\t\t\t| The GUID and name of the service associated to the price. |\r\n| Prices[0].UnitOfMeasureListItem\t\t| The GUID and name of the unit of measurement associated to the price. |\r\n| Prices[0].DefaultActionExternalDescription | The default action external description of the price. |\r\n| Prices[0].SalesCode\t\t\t\t\t| The sales code of the price. |\r\n| Prices[0].CostCode\t\t\t\t\t| The cost code of the price. |\r\n| Prices[0].PurchaseCode\t\t\t\t| The purchase code of the price. |\r\n| Prices[0].ContainerTypeListItem\t\t| The GUID and name of the container type associated to the price. |\r\n| Prices[0].MaterialListItem\t\t\t| The GUID and name of the material associated to the price. |\r\n| Prices[0].MaterialClassListItem\t\t| The GUID and name of the material class associated to the price. |\r\n| Prices[0].PricingBasisListItem\t\t| The GUID and name of the pricing basis associated to the price. |\r\n| Prices[0].DateDeleted\t\t\t\t\t| The date deleted of the price. |\r\n| Prices[0].IsDeleted\t\t\t\t\t| Whether the price is deleted. |\r\n| Prices[0].Amount\t\t\t\t\t\t| The amount object associated to the price. |\r\n| Prices[0].Amount.Price\t\t\t\t| The price associated to the amount. |\r\n| Prices[0].Amount.Offset\t\t\t\t| The offset associated to the amount. |\r\n| Prices[0].Amount.Percentage\t\t\t| The percentage associated to the amount. |\r\n| Prices[0].Amount.FloorPrice\t\t\t| The floor price associated to the amount. |\r\n| Prices[0].Amount.CeilingPrice\t\t\t| The ceiling price associated to the amount. |\r\n| Prices[0].Amount.MinimumCharge\t\t| The minimum charge associated to the amount. |\r\n| Prices[0].Amount.Allowance\t\t\t| The allowance associated to the amount. |\r\n| Prices[0].Amount.VATListItem\t\t\t| The GUID and name of the VAT associated to the amount. |\r\n| Prices[0].Amount.IsRebate\t\t\t\t| Whether the price is rebate. |\r\n| Prices[0].LatePaymentFeeDefinition    | The late payment fee definition associated to the price. |\r\n| Prices[0].LatePaymentFeeDefinition.Description | The description associated to the late payment fee definition. |\r\n| Prices[0].LatePaymentFeeDefinition.CustomerCategoryListItem | The GUID and description of the customer category associated to the late payment fee definition. |\r\n| Prices[0].LatePaymentFeeDefinition.LatePaymentFeeTypeListItem | The GUID and description of the late payment fee type associated to the late payment fee definition. |\r\n| Prices[0].LatePaymentFeeDefinition.ActionListItem | The GUID and description of the action associated to the late payment fee definition. |\r\n| Prices[0].LatePaymentFeeDefinition.DefaultActionListItem | The GUID and description of the default action associated to the late payment fee definition. |\r\n| Prices[0].LatePaymentFeeDefinition.RelatedPriceGuid | The GUID of the price associated to the late payment fee definition. |\r\n| Prices[0].LatePaymentFeeDefinition.GraceDays | The GraceDays associated to the late payment fee definition. |\r\n| Prices[0].LatePaymentFeeDefinition.FlatFeeAmount | The FlatFeeAmount associated to the late payment fee definition. |\r\n| Prices[0].LatePaymentFeeDefinition.PercentageFeeDecimalAmount | The PercentageFeeDecimalAmount associated to the late payment fee definition. |\r\n| Prices[0].LatePaymentFeeDefinition.PercentageFeeAmount | The PercentageFeeAmount associated to the late payment fee definition. |\r\n| Prices[0].LatePaymentFeeDefinition.MinimumCharge | The MinimumCharge associated to the late payment fee definition. |\r\n| Prices[0].LatePaymentFeeDefinition.MaximumCharge | The MaximumCharge associated to the late payment fee definition. |\r\n| Prices[0].LatePaymentFeeDefinition.IsDeleted |  Whether the late payment fee definition is deleted. |\r\n| Prices[0].LatePaymentFeeDefinition.Guid | The Guid associated to the late payment fee definition. |\r\n| OrderCombinationGroups | The list of order combination groups associated to the service agreement. |\r\n| OrderCombinationGroups[0].Guid | The GUID associated to the order combination group. |\r\n| OrderCombinationGroups[0].InvoiceCycleListItem | The GUID and description of the invoice cycle associated to the order combination group. |\r\n| OrderCombinationGroups[0].IsConcessionary | Whether the order combination group is concessionary. |\r\n| OrderCombinationGroups[0].IsRequiresPrePay | Whether the order combination group requires prepay. |\r\n| OrderCombinationGroups[0].Name | The name of the order combination group. |\r\n| OrderCombinationGroups[0].IsOutletLevelPricingUsed | Is outlet level pricing used. |\r\n| OrderCombinationGroups[0].AnnualContractCost | The cost of the annual contract. |\r\n| OrderCombinationGroups[0].AnnualContractValue | The value of the annual contract. |\r\n| OrderCombinationGroups[0].BillingUsagePolicyGuid | The GUID of the billing usage policy associated to the order combination group. |\r\n| OrderCombinationGroups[0].IsUseReducedRateForAdditionalBin | Is reduced rate used for additional bin. |\r\n| OrderCombinationGroups[0].RefundableAdvanceDeposit | The refundable advance deposit. |\r\n| OrderCombinationGroups[0].StartDateDeferredDays | The start date deferred days. |\r\n| OrderCombinationGroups[0].ForceFullPayment\t\t| Whether the order combination group forces full payment. |\r\n| OrderCombinationGroups[0].UseOutletLevelPricing\t| Whether the order combination group uses outlet level pricing. |\r\n| OrderCombinationGroups[0].RelatedContractTermLengthGuid | The GUID of the contract term length associated to the order combination group. |\r\n| OrderCombinationGroups[0].SubscriptionTypeListItem | The GUID and description of the subscription type associated to the order combination group. |\r\n| OrderCombinationGroups[0].IsDeleted | Whether the order combination group is deleted. |\r\n| RelatedOutlets\t\t\t\t | The list of related outlets associated to the service agreement. |\r\n| RelatedOutlets[0].Guid\t\t | The Guid associated to the related outlets. |\r\n| RelatedOutlets[0].CompanyOutletListItem | The Guid and description of the CompanyOutlet associated to the service agreement. |\r\n| RelatedOutlets[0].IsRelatedOutletDeleted\t | Is the service agreement deleted. |\r\n| RelatedCustomers\t\t\t     | The list of related customers associated to the service agreement. |\r\n| RelatedCustomers[0].Guid\t\t | The Guid associated to the service agreement. |\r\n| RelatedCustomers[0].RelatedCustomerGuid | The related customer guid CompanyOutlet associated to the service agreement. |\r\n| RelatedCustomers[0].IsRelatedCustomerDeleted\t | Is the related customer deleted. |\r\n| RelatedCustomers[0].IsForAllSites\t | Is the related customer for all sites. |\r\n| RelatedCustomers[0].RelatedSites[]\t | The list of related sites associated to the service agreement. |\r\n| RelatedCustomers[0].RelatedSites[0].CustomerSiteGuid  | The guid associated to the Customer site. |\r\n| RelatedCustomers[0].RelatedSites[0].RelatedSiteGuid  | The RelatedSiteGuid associated to the site. |\r\n| RelatedCustomers[0].RelatedSites[0].IsRelatedSiteDeleted  | Is the RelatedSite deleted. |\r\n| BillingUsagePolicies | The list of billing usage policies associated to the service agreement. |\r\n| BillingUsagePolicies[0].Guid | The GUID associated to the billing usage policy. |\r\n| BillingUsagePolicies[0].Description | The description of the billing usage policy. |\r\n| BillingUsagePolicies[0].AltWeightSourceForOutsideThreshold | Alternative weight source for outside threshold. |\r\n| BillingUsagePolicies[0].AltWeightSourceForZeroWeight | Alternative weight source for zero weight. |\r\n| BillingUsagePolicies[0].ApplyToWeightsOutsideThresholds | Whether to apply to weights outside thresholds. |\r\n| BillingUsagePolicies[0].ApplyToZeroWeights | Whether to apply to zero weights. |\r\n| BillingUsagePolicies[0].IsUseAccumulatedWeight | Whether to use accumulated weight. |\r\n| BillingUsagePolicies[0].IsUseActualLifts | Whether to use actual lifts. |\r\n| BillingUsagePolicies[0].IsUseExpectedLifts | Whether to use expected lifts. |\r\n| BillingUsagePolicies[0].FairUsageMonths | Number of fair usage months. |\r\n| BillingUsagePolicies[0].LiftsForAverage | Number of lifts to get average weight. |\r\n| BillingUsagePolicies[0].MonthlyLag | Number of monthly lag. |\r\n| BillingUsagePolicies[0].IsDeleted | Whether the billing usage policy is deleted. |\r\n| BillingUsagePolicies[0].Thresholds | The weight threshold associated to the billing usage policy. |\r\n| BillingUsagePolicies[0].Thresholds[0].Guid | The GUID associated to the billing usage policy weight threshold. |\r\n| BillingUsagePolicies[0].Thresholds[0].IsDeleted | Whether the billing usage policy weight threshold is deleted. |\r\n| BillingUsagePolicies[0].Thresholds[0].MinWeight | The minimum weight associated to the billing usage policy weight threshold. |\r\n| BillingUsagePolicies[0].Thresholds[0].MaxWeight | The maximum weight associated to the billing usage policy weight threshold. |\r\n| BillingUsagePolicies[0].Thresholds[0].ContainerTypeListItem | The GUID and description of the container type associated to the billing usage policy weight threshold. |\r\n| BillingUsagePolicies[0].Thresholds[0].MaterialListItem | The GUID and description of the material associated to the billing usage policy weight threshold. |\r\n| BillingUsagePolicies[0].Thresholds[0].UnitOfMeasurementListItem | The GUID and description of the unit of measurement associated to the billing usage policy weight threshold. |\r\n| PriceGuidFilter | Used to filter on the Guid in the Prices array. |\r\n| CompanyOutletListItemGuidFilter | Used to filter on the CompanyOutletListItem Guid in the RelatedOutlets array. |\r\n| RelatedCustomerGuidFilter | Used to filter on the GUID in the RelatedCustomers array. |\r\n| RelatedCustomersGuidFilter | Used to filter on the RelatedCustomerGuid in the RelatedCustomers array. |\r\n| RelatedSiteGuidFilter | Used to filter on the GUID in the RelatedSites array. |\r\n","operationId":"ServiceAgreement_Get","consumes":["application/json"],"produces":["application/json"],"parameters":[{"name":"guid","in":"path","required":true,"type":"string","format":"uuid"},{"name":"links","in":"query","required":false,"type":"string"},{"name":"include","in":"query","required":false,"type":"string"},{"name":"expand","in":"query","required":false,"type":"string"},{"name":"udf","in":"query","required":false,"type":"string"}],"responses":{"200":{"description":"OK","schema":{"$ref":"#/definitions/ApiResourceResultEntity[ApiIntegratorServiceAgreementResource]"}}}}},"/productCatalogue/serviceAgreements":{"get":{"tags":["ServiceAgreement"],"summary":"Find with Filters","description":"| Property       | Description                                                  |\r\n| -------------- | ------------------------------------------------------------ |\r\n| GUID\t\t\t\t\t\t\t\t\t| The GUID associated to the service agreement. |\r\n| Description\t\t\t\t\t\t\t| The description associated to the service agreement. |        \r\n| StartDate\t\t\t\t\t\t\t\t| The start date associated to the service agreement in ISO format (YYYY-MM-DD). |    \r\n| EndDate\t\t\t\t\t\t\t\t| The end date associated to the service agreement in ISO format (YYYY-MM-DD). |    \r\n| ReviewDate\t\t\t\t\t\t\t| The review date associated to the service agreement in ISO format (YYYY-MM-DD). |    \r\n| RelatedCustomerGuid\t\t\t\t\t| The GUID of the customer associated to the service agreement. Filterable. |\t \r\n| EndReasonListItem\t\t\t\t\t\t| The GUID and name of the end reason associated to the service agreement. |    \r\n| InvoiceFrequencyListItem\t\t\t\t| The GUID and name of the invoice frequency associated to the service agreement. |    \r\n| InvoiceCycleListItem\t\t\t\t\t| The GUID and name of the Invoice cycle associated to the service agreement. |    \r\n| OutletListItem\t\t\t\t\t\t| The GUID and name of the outlet associated to the service agreement. |    \r\n| PaymentTypeListItem\t\t\t\t\t| The GUID and name of the payment type associated to the service agreement. |    \r\n| PaymentTermListItem\t\t\t\t\t| The GUID and name of the payment term associated to the service agreement. |\r\n| DepartmentListItem\t\t\t\t\t| The GUID and name of the department associated to the service agreement. |\r\n| PrimaryServiceListItem\t\t\t\t| The GUID and name of the primary service  associated to the service agreement. |\r\n| IsDeleted\t\t\t\t\t\t\t\t| Whether the service agreement is deleted. |\r\n| Prices\t\t\t\t\t\t\t\t| The list of prices associated to the service agreement. |\r\n| Prices[0].PriceGuid\t\t\t\t\t| The GUID associated to the price related to the service agreement. |\r\n| Prices[0].ActionListItem\t\t\t\t| The GUID and name of the action associated to the price. |\r\n| Prices[0].ServiceListItem\t\t\t\t| The GUID and name of the service associated to the price. |\r\n| Prices[0].UnitOfMeasureListItem\t\t| The GUID and name of the unit of measurement associated to the price. |\r\n| Prices[0].DefaultActionExternalDescription | The default action external description of the price. |\r\n| Prices[0].SalesCode\t\t\t\t\t| The sales code of the price. |\r\n| Prices[0].CostCode\t\t\t\t\t| The cost code of the price. |\r\n| Prices[0].PurchaseCode\t\t\t\t| The purchase code of the price. |\r\n| Prices[0].ContainerTypeListItem\t\t| The GUID and name of the container type associated to the price. |\r\n| Prices[0].MaterialListItem\t\t\t| The GUID and name of the material associated to the price. |\r\n| Prices[0].MaterialClassListItem\t\t| The GUID and name of the material class associated to the price. |\r\n| Prices[0].PricingBasisListItem\t\t| The GUID and name of the pricing basis associated to the price. |\r\n| Prices[0].DateDeleted\t\t\t\t\t| The date deleted of the price. |\r\n| Prices[0].IsDeleted\t\t\t\t\t| Whether the price is deleted. |\r\n| Prices[0].Amount\t\t\t\t\t\t| The amount object associated to the price. |\r\n| Prices[0].Amount.Price\t\t\t\t| The price associated to the amount. |\r\n| Prices[0].Amount.Offset\t\t\t\t| The offset associated to the amount. |\r\n| Prices[0].Amount.Percentage\t\t\t| The percentage associated to the amount. |\r\n| Prices[0].Amount.FloorPrice\t\t\t| The floor price associated to the amount. |\r\n| Prices[0].Amount.CeilingPrice\t\t\t| The ceiling price associated to the amount. |\r\n| Prices[0].Amount.MinimumCharge\t\t| The minimum charge associated to the amount. |\r\n| Prices[0].Amount.Allowance\t\t\t| The allowance associated to the amount. |\r\n| Prices[0].Amount.VATListItem\t\t\t| The GUID and name of the VAT associated to the amount. |\r\n| Prices[0].Amount.IsRebate\t\t\t\t| Whether the price is rebate. |\r\n| Prices[0].LatePaymentFeeDefinition    | The late payment fee definition associated to the price. |\r\n| Prices[0].LatePaymentFeeDefinition.Description | The description associated to the late payment fee definition. |\r\n| Prices[0].LatePaymentFeeDefinition.CustomerCategoryListItem | The GUID and description of the customer category associated to the late payment fee definition. |\r\n| Prices[0].LatePaymentFeeDefinition.LatePaymentFeeTypeListItem | The GUID and description of the late payment fee type associated to the late payment fee definition. |\r\n| Prices[0].LatePaymentFeeDefinition.ActionListItem | The GUID and description of the action associated to the late payment fee definition. |\r\n| Prices[0].LatePaymentFeeDefinition.DefaultActionListItem | The GUID and description of the default action associated to the late payment fee definition. |\r\n| Prices[0].LatePaymentFeeDefinition.RelatedPriceGuid | The GUID of the price associated to the late payment fee definition. |\r\n| Prices[0].LatePaymentFeeDefinition.GraceDays | The GraceDays associated to the late payment fee definition. |\r\n| Prices[0].LatePaymentFeeDefinition.FlatFeeAmount | The FlatFeeAmount associated to the late payment fee definition. |\r\n| Prices[0].LatePaymentFeeDefinition.PercentageFeeDecimalAmount | The PercentageFeeDecimalAmount associated to the late payment fee definition. |\r\n| Prices[0].LatePaymentFeeDefinition.PercentageFeeAmount | The PercentageFeeAmount associated to the late payment fee definition. |\r\n| Prices[0].LatePaymentFeeDefinition.MinimumCharge | The MinimumCharge associated to the late payment fee definition. |\r\n| Prices[0].LatePaymentFeeDefinition.MaximumCharge | The MaximumCharge associated to the late payment fee definition. |\r\n| Prices[0].LatePaymentFeeDefinition.IsDeleted |  Whether the late payment fee definition is deleted. |\r\n| Prices[0].LatePaymentFeeDefinition.Guid | The Guid associated to the late payment fee definition. |\r\n| OrderCombinationGroups | The list of order combination groups associated to the service agreement. |\r\n| OrderCombinationGroups[0].Guid | The GUID associated to the order combination group. |\r\n| OrderCombinationGroups[0].InvoiceCycleListItem | The GUID and description of the invoice cycle associated to the order combination group. |\r\n| OrderCombinationGroups[0].IsConcessionary | Whether the order combination group is concessionary. |\r\n| OrderCombinationGroups[0].IsRequiresPrePay | Whether the order combination group requires prepay. |\r\n| OrderCombinationGroups[0].Name | The name of the order combination group. |\r\n| OrderCombinationGroups[0].IsOutletLevelPricingUsed | Is outlet level pricing used. |\r\n| OrderCombinationGroups[0].AnnualContractCost | The cost of the annual contract. |\r\n| OrderCombinationGroups[0].AnnualContractValue | The value of the annual contract. |\r\n| OrderCombinationGroups[0].BillingUsagePolicyGuid | The GUID of the billing usage policy associated to the order combination group. |\r\n| OrderCombinationGroups[0].IsUseReducedRateForAdditionalBin | Is reduced rate used for additional bin. |\r\n| OrderCombinationGroups[0].RefundableAdvanceDeposit | The refundable advance deposit. |\r\n| OrderCombinationGroups[0].StartDateDeferredDays | The start date deferred days. |\r\n| OrderCombinationGroups[0].ForceFullPayment\t\t| Whether the order combination group forces full payment. |\r\n| OrderCombinationGroups[0].UseOutletLevelPricing\t| Whether the order combination group uses outlet level pricing. |\r\n| OrderCombinationGroups[0].RelatedContractTermLengthGuid | The GUID of the contract term length associated to the order combination group. |\r\n| OrderCombinationGroups[0].SubscriptionTypeListItem | The GUID and description of the subscription type associated to the order combination group. |\r\n| OrderCombinationGroups[0].IsDeleted | Whether the order combination group is deleted. |\r\n| RelatedOutlets\t\t\t\t | The list of related outlets associated to the service agreement. |\r\n| RelatedOutlets[0].Guid\t\t | The Guid associated to the related outlets. |\r\n| RelatedOutlets[0].CompanyOutletListItem | The Guid and description of the CompanyOutlet associated to the service agreement. |\r\n| RelatedOutlets[0].IsRelatedOutletDeleted\t | Is the service agreement deleted. |\r\n| RelatedCustomers\t\t\t     | The list of related customers associated to the service agreement. |\r\n| RelatedCustomers[0].Guid\t\t | The Guid associated to the service agreement. |\r\n| RelatedCustomers[0].RelatedCustomerGuid | The related customer guid CompanyOutlet associated to the service agreement. |\r\n| RelatedCustomers[0].IsRelatedCustomerDeleted\t | Is the related customer deleted. |\r\n| RelatedCustomers[0].IsForAllSites\t | Is the related customer for all sites. |\r\n| RelatedCustomers[0].RelatedSites[]\t | The list of related sites associated to the service agreement. |\r\n| RelatedCustomers[0].RelatedSites[0].CustomerSiteGuid  | The guid associated to the Customer site. |\r\n| RelatedCustomers[0].RelatedSites[0].RelatedSiteGuid  | The RelatedSiteGuid associated to the site. |\r\n| RelatedCustomers[0].RelatedSites[0].IsRelatedSiteDeleted  | Is the RelatedSite deleted. |\r\n| BillingUsagePolicies | The list of billing usage policies associated to the service agreement. |\r\n| BillingUsagePolicies[0].Guid | The GUID associated to the billing usage policy. |\r\n| BillingUsagePolicies[0].Description | The description of the billing usage policy. |\r\n| BillingUsagePolicies[0].AltWeightSourceForOutsideThreshold | Alternative weight source for outside threshold. |\r\n| BillingUsagePolicies[0].AltWeightSourceForZeroWeight | Alternative weight source for zero weight. |\r\n| BillingUsagePolicies[0].ApplyToWeightsOutsideThresholds | Whether to apply to weights outside thresholds. |\r\n| BillingUsagePolicies[0].ApplyToZeroWeights | Whether to apply to zero weights. |\r\n| BillingUsagePolicies[0].IsUseAccumulatedWeight | Whether to use accumulated weight. |\r\n| BillingUsagePolicies[0].IsUseActualLifts | Whether to use actual lifts. |\r\n| BillingUsagePolicies[0].IsUseExpectedLifts | Whether to use expected lifts. |\r\n| BillingUsagePolicies[0].FairUsageMonths | Number of fair usage months. |\r\n| BillingUsagePolicies[0].LiftsForAverage | Number of lifts to get average weight. |\r\n| BillingUsagePolicies[0].MonthlyLag | Number of monthly lag. |\r\n| BillingUsagePolicies[0].IsDeleted | Whether the billing usage policy is deleted. |\r\n| BillingUsagePolicies[0].Thresholds | The weight threshold associated to the billing usage policy. |\r\n| BillingUsagePolicies[0].Thresholds[0].Guid | The GUID associated to the billing usage policy weight threshold. |\r\n| BillingUsagePolicies[0].Thresholds[0].IsDeleted | Whether the billing usage policy weight threshold is deleted. |\r\n| BillingUsagePolicies[0].Thresholds[0].MinWeight | The minimum weight associated to the billing usage policy weight threshold. |\r\n| BillingUsagePolicies[0].Thresholds[0].MaxWeight | The maximum weight associated to the billing usage policy weight threshold. |\r\n| BillingUsagePolicies[0].Thresholds[0].ContainerTypeListItem | The GUID and description of the container type associated to the billing usage policy weight threshold. |\r\n| BillingUsagePolicies[0].Thresholds[0].MaterialListItem | The GUID and description of the material associated to the billing usage policy weight threshold. |\r\n| BillingUsagePolicies[0].Thresholds[0].UnitOfMeasurementListItem | The GUID and description of the unit of measurement associated to the billing usage policy weight threshold. |\r\n| PriceGuidFilter | Used to filter on the Guid in the Prices array. |\r\n| CompanyOutletListItemGuidFilter | Used to filter on the CompanyOutletListItem Guid in the RelatedOutlets array. |\r\n| RelatedCustomerGuidFilter | Used to filter on the GUID in the RelatedCustomers array. |\r\n| RelatedCustomersGuidFilter | Used to filter on the RelatedCustomerGuid in the RelatedCustomers array. |\r\n| RelatedSiteGuidFilter | Used to filter on the GUID in the RelatedSites array. |\r\n","operationId":"ServiceAgreement_GetCollection","consumes":["application/json"],"produces":["application/json"],"parameters":[{"name":"filter","in":"query","required":false,"type":"string"},{"name":"search","in":"query","required":false,"type":"string"},{"name":"order","in":"query","required":false,"type":"string"},{"name":"max","in":"query","required":false,"type":"integer","format":"int32"},{"name":"page","in":"query","required":false,"type":"integer","format":"int32"},{"name":"includeCount","in":"query","required":false,"type":"boolean"},{"name":"includeDeleted","in":"query","required":false,"type":"boolean"},{"name":"links","in":"query","required":false,"type":"string"},{"name":"udf","in":"query","required":false,"type":"string"}],"responses":{"200":{"description":"OK","schema":{"$ref":"#/definitions/ApiResourceResultCollection[ApiIntegratorServiceAgreementResource]"}}}}},"/lists/serviceCategories/{guid}":{"get":{"tags":["ServiceCategory"],"summary":"Find with GUID","description":"| Property                  | Description\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t|\r\n| ------------------------- | -------------------------------------------------------------------------\t|\r\n| GUID                      | The GUID associated to the service category\t\t\t\t\t\t\t\t|\r\n| Description               | The description of the service category\t\t\t\t\t\t\t\t\t|\r\n| IsDeleted                 | Whether the service category is deleted\t         \t \t\t\t\t\t|\r\n| AnalysisCode\t\t\t\t| The analysis code of the service category\t\t\t\t\t\t\t\t\t|","operationId":"ServiceCategory_Get","consumes":["application/json"],"produces":["application/json"],"parameters":[{"name":"guid","in":"path","required":true,"type":"string","format":"uuid"},{"name":"links","in":"query","required":false,"type":"string"},{"name":"include","in":"query","required":false,"type":"string"},{"name":"expand","in":"query","required":false,"type":"string"},{"name":"udf","in":"query","required":false,"type":"string"}],"responses":{"200":{"description":"OK","schema":{"$ref":"#/definitions/ApiResourceResultEntity[ApiIntegratorServiceCategoryResource]"}}}}},"/lists/serviceCategories":{"get":{"tags":["ServiceCategory"],"summary":"Find with Filters","description":"| Property                  | Description\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t|\r\n| ------------------------- | -------------------------------------------------------------------------\t|\r\n| GUID                      | The GUID associated to the service category\t\t\t\t\t\t\t\t|\r\n| Description               | The description of the service category\t\t\t\t\t\t\t\t\t|\r\n| IsDeleted                 | Whether the service category is deleted\t         \t \t\t\t\t\t|\r\n| AnalysisCode\t\t\t\t| The analysis code of the service category\t\t\t\t\t\t\t\t\t|","operationId":"ServiceCategory_GetCollection","consumes":["application/json"],"produces":["application/json"],"parameters":[{"name":"filter","in":"query","required":false,"type":"string"},{"name":"search","in":"query","required":false,"type":"string"},{"name":"order","in":"query","required":false,"type":"string"},{"name":"max","in":"query","required":false,"type":"integer","format":"int32"},{"name":"page","in":"query","required":false,"type":"integer","format":"int32"},{"name":"includeCount","in":"query","required":false,"type":"boolean"},{"name":"includeDeleted","in":"query","required":false,"type":"boolean"},{"name":"links","in":"query","required":false,"type":"string"},{"name":"udf","in":"query","required":false,"type":"string"}],"responses":{"200":{"description":"OK","schema":{"$ref":"#/definitions/ApiResourceResultCollection[ApiIntegratorServiceCategoryResource]"}}}}},"/lists/serviceFrequencies/{guid}":{"get":{"tags":["ServiceFrequency"],"summary":"Find with GUID","description":"| Property                  | Description                                                              |\r\n| ------------------------- | ------------------------------------------------------------------------ |\r\n| GUID                      | The GUID associated to the service frequency.                            |\r\n| Description\t\t\t\t| The description of the service frequency.\t\t     \t\t\t\t\t   |\r\n","operationId":"ServiceFrequency_Get","consumes":["application/json"],"produces":["application/json"],"parameters":[{"name":"guid","in":"path","required":true,"type":"string","format":"uuid"},{"name":"links","in":"query","required":false,"type":"string"},{"name":"include","in":"query","required":false,"type":"string"},{"name":"expand","in":"query","required":false,"type":"string"},{"name":"udf","in":"query","required":false,"type":"string"}],"responses":{"200":{"description":"OK","schema":{"$ref":"#/definitions/ApiResourceResultEntity[ApiIntegratorServiceFrequencyResource]"}}}}},"/lists/serviceFrequencies":{"get":{"tags":["ServiceFrequency"],"summary":"Find with Filters","description":"| Property                  | Description                                                              |\r\n| ------------------------- | ------------------------------------------------------------------------ |\r\n| GUID                      | The GUID associated to the service frequency.                            |\r\n| Description\t\t\t\t| The description of the service frequency.\t\t     \t\t\t\t\t   |\r\n","operationId":"ServiceFrequency_GetCollection","consumes":["application/json"],"produces":["application/json"],"parameters":[{"name":"filter","in":"query","required":false,"type":"string"},{"name":"search","in":"query","required":false,"type":"string"},{"name":"order","in":"query","required":false,"type":"string"},{"name":"max","in":"query","required":false,"type":"integer","format":"int32"},{"name":"page","in":"query","required":false,"type":"integer","format":"int32"},{"name":"includeCount","in":"query","required":false,"type":"boolean"},{"name":"includeDeleted","in":"query","required":false,"type":"boolean"},{"name":"links","in":"query","required":false,"type":"string"},{"name":"udf","in":"query","required":false,"type":"string"}],"responses":{"200":{"description":"OK","schema":{"$ref":"#/definitions/ApiResourceResultCollection[ApiIntegratorServiceFrequencyResource]"}}}}},"/lists/sicCodes/{guid}":{"get":{"tags":["SicCode"],"summary":"Find with GUID","description":"| Property                  | Description                                                              |\r\n| ------------------------- | ------------------------------------------------------------------------ |\r\n| GUID                      | The GUID associated to the sic code                                      |\r\n| Description2007           | The 2007 description of the sic code                                     |\r\n| Code2007                  | The 2007 sic code                                                        |    \r\n| Description2003           | The 2003 description of the sic code                                     |\r\n| Code2003                  | The 2003 sic code                                                        |\r\n| IsDeleted                 | Whether the sic code is deleted\t\t \t \t\t\t\t\t\t\t\t|\r\n    ","operationId":"SicCode_Get","consumes":["application/json"],"produces":["application/json"],"parameters":[{"name":"guid","in":"path","required":true,"type":"string","format":"uuid"},{"name":"links","in":"query","required":false,"type":"string"},{"name":"include","in":"query","required":false,"type":"string"},{"name":"expand","in":"query","required":false,"type":"string"},{"name":"udf","in":"query","required":false,"type":"string"}],"responses":{"200":{"description":"OK","schema":{"$ref":"#/definitions/ApiResourceResultEntity[ApiIntegratorSicCodeResource]"}}}}},"/lists/sicCodes":{"get":{"tags":["SicCode"],"summary":"Find with Filters","description":"| Property                  | Description                                                              |\r\n| ------------------------- | ------------------------------------------------------------------------ |\r\n| GUID                      | The GUID associated to the sic code                                      |\r\n| Description2007           | The 2007 description of the sic code                                     |\r\n| Code2007                  | The 2007 sic code                                                        |    \r\n| Description2003           | The 2003 description of the sic code                                     |\r\n| Code2003                  | The 2003 sic code                                                        |\r\n| IsDeleted                 | Whether the sic code is deleted\t\t \t \t\t\t\t\t\t\t\t|\r\n    ","operationId":"SicCode_GetCollection","consumes":["application/json"],"produces":["application/json"],"parameters":[{"name":"filter","in":"query","required":false,"type":"string"},{"name":"search","in":"query","required":false,"type":"string"},{"name":"order","in":"query","required":false,"type":"string"},{"name":"max","in":"query","required":false,"type":"integer","format":"int32"},{"name":"page","in":"query","required":false,"type":"integer","format":"int32"},{"name":"includeCount","in":"query","required":false,"type":"boolean"},{"name":"includeDeleted","in":"query","required":false,"type":"boolean"},{"name":"links","in":"query","required":false,"type":"string"},{"name":"udf","in":"query","required":false,"type":"string"}],"responses":{"200":{"description":"OK","schema":{"$ref":"#/definitions/ApiResourceResultCollection[ApiIntegratorSicCodeResource]"}}}}},"/directory/sites/changes":{"get":{"tags":["Site"],"summary":"Retrieve changes","description":"| Property\t\t\t\t\t\t\t\t\t\t\t| Description\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t|\r\n| ------------------------------------------------- | ------------------------------------------------------------------------------------------------- |\r\n| GUID\t\t\t\t\t\t\t\t\t\t\t\t| The GUID associated to the site.\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t|\r\n| Name\t\t\t\t\t\t\t\t\t\t\t\t| The site's name.\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t|\r\n| Reference\t\t\t\t\t\t\t\t\t\t\t| An alternative name used for the site. Filterable\t\t\t\t\t\t\t\t\t\t\t\t\t|\r\n| FederalId\t\t\t\t\t\t\t\t\t\t\t| The site's local authority / government / tax reference.\t\t\t\t\t\t\t\t\t\t\t|\r\n| AnalysisCode\t\t\t\t\t\t\t\t\t\t| The site's analysis code\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t|\r\n| UniqueCustomerSiteCode\t\t\t\t\t\t\t| The unique code assigned to the site if system configuration \"UniqueCustomerSiteCodeGeneration\" was set to true when site was created. |\r\n| IsNonServiceSite  \t\t\t\t\t\t\t\t| Whether the site is non-service.\t\t\t\t\t\t\t          \t\t\t\t\t\t\t\t|\r\n| RelatedCustomerGuid\t\t\t\t\t\t\t\t| The GUID associated to the customer of this site.\t\t\t\t\t\t\t\t\t\t\t\t\t|\r\n| SiteTypeListItem\t\t\t\t\t\t\t\t\t| The GUID and type of the site (eg. Unoccupied Location, Residential, Non Residential).\t\t\t|\r\n| SICCodeListItem\t\t\t\t\t\t\t\t\t| The GUID and 2007 description of SICCode\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t|\r\n| SalesTerritoryListItem\t\t\t\t\t\t\t| The GUID and name of the sales territory this site is associated to.\t\t\t\t\t\t\t\t|\r\n| CompanyOutletListItem\t\t\t\t\t\t\t\t| The GUID and name of the default company outlet this site is associated to.\t\t\t\t\t\t|\r\n| CustomerSiteStateListItem\t\t\t\t\t\t\t| The GUID and state of the site (eg. Active, Closed, Suspended).\t\t\t\t\t\t\t\t\t|\r\n| ZoneListItem\t\t\t\t\t\t\t\t\t\t| The GUID and description of the zone.\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t|\r\n| RebatePaymentTypeListItem\t\t\t\t\t\t\t| The GUID and description of the rebate payment type.\t\t\t\t\t\t\t\t\t\t\t\t|\r\n| RebatePaymentTermListItem\t\t\t\t\t\t\t| The GUID and description of the rebate payment term.\t\t\t\t\t\t\t\t\t\t\t\t|\r\n| ContactMethods.Email\t\t\t\t\t\t\t\t| The Email associated to the site.\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t|\r\n| PaymentHandlingCodeListItem\t\t\t\t\t\t| The GUID and description of the payment handling code.\t\t\t\t\t\t\t\t\t\t\t|\r\n| ReminderLetterPolicyListItem\t\t\t\t\t\t| The GUID and description of the reminder letter policy.\t\t\t\t\t\t\t\t\t\t\t|\r\n| VisitStatusListItem\t\t\t\t\t\t\t\t| The GUID and description of the visit status.\t\t\t\t\t\t\t\t\t\t\t\t\t\t|\r\n| RelatedLocationInvoiceGuid\t\t\t\t\t\t| Used to filter the related invoice location guid associated to the invoice location of this site.\t|\r\n| RelatedLocationRemitGuid\t\t\t\t\t\t\t| Used to filter the related remit location guid associated to the remit location of this site.\t\t|\r\n| RelatedLocationGuid\t\t\t\t\t\t\t\t| Used to filter the related location guid associated to the location of the site.\t\t\t\t\t|\r\n| AccessTimes[0]\t\t\t\t\t\t\t\t\t| A list of objects containing customer site access time.\t\t\t\t\t\t\t\t\t\t\t|\r\n| AccessTimes[0].Guid\t\t\t\t\t\t\t\t| The GUID associated to the site access time.\t\t\t\t\t\t\t\t\t\t\t\t\t\t|\r\n| AccessTimes[0].AccessContact\t\t\t\t\t\t| The access contact name to associated site.\t\t\t\t\t\t\t\t\t\t\t\t\t\t|\r\n| AccessTimes[0].AccessNotes\t\t\t\t\t\t| The access notes to associated site.\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t|\r\n| AccessTimes[0].AccessStartTime\t\t\t\t\t| The access start time to associated site.\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t|\r\n| AccessTimes[0].AccessEndTime\t\t\t\t\t\t| The access end time to associated site.\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t|\r\n| AccessTimes[0].DayOfWeekListItem\t\t\t\t\t| The GUID and description of the day of week to access.\t\t\t\t\t\t\t\t\t\t\t|\r\n| DocumentDeliveryMethods[]\t\t\t\t\t\t\t| The array of document delivery types associated to the customer site.\t\t\t\t\t\t\t\t|\r\n| DocumentDeliveryMethods[0].DocumentDeliveryType\t| The GUID and description of the document delivery type associated to the DocumentDeliveryMethods. |\r\n| RelatedLocationDocumentGuid\t\t\t\t\t\t| Used to filter the related document location guid associated to this site.\t\t\t\t\t\t|\r\n| RelatedLocationStatementGuid\t\t\t\t\t\t| Used to filter the related statement location guid associated to this site.\t\t\t\t\t\t|\r\n| RelatedLocationQuotationGuid\t\t\t\t\t\t| Used to filter the related quotation location guid associated to this site.\t\t\t\t\t\t|\r\n| RelatedTradingNames[]\t\t\t\t\t\t\t\t| The array of customer trading names associated to the customer site.\t\t\t\t\t\t\t\t| \r\n| RelatedTradingNames[0].Guid\t\t\t\t\t\t| The guid associated to the customer trading name associated to the customer site.\t\t\t\t\t| \r\n| RelatedTradingNames[0].RelatedTradingNameGuid\t\t| The guid of the customer trading name associated to the customer site.\t\t\t\t\t\t\t| \r\n| RelatedTradingNames[0].Description\t\t\t\t| The description of customer trading name associated to the customer site.\t\t\t\t\t\t\t| \r\n| RelatedTradingNameGuidFilter\t\t\t\t\t\t| Used to filter on related trading name guid.\t\t\t\t\t\t\t\t\t\t\t\t\t\t| \r\n| Areas\t\t\t\t\t\t\t\t\t\t\t\t| A list of objects containing customer site area.\t\t\t\t\t\t\t\t\t\t\t\t\t|\r\n| Areas[0].Guid\t\t\t\t\t\t\t\t\t\t| The GUID associated to the customer site area.\t\t\t\t\t\t\t\t\t\t\t\t\t|\r\n| Areas[0].Description\t\t\t\t\t\t\t\t| The description associated to the customer site area.\t\t\t\t\t\t\t\t\t\t\t\t|\r\n| Areas[0].RelatedLocationGuid\t\t\t\t\t\t| The related location guid associated to the location of the customer site area.\t\t\t\t\t|\r\n| Areas[0].IsDeleted\t\t\t\t\t\t\t\t| Whether the customer site area is deleted.\t\t\t\t\t\t\t\t\t\t\t\t\t\t|\r\n| AreasGuidFilter\t\t\t\t\t\t\t\t\t| Used to filter the customer site area by GUID.\t\t\t\t\t\t\t\t\t\t\t\t\t|\r\n| AreasRelatedLocationGuidFilter\t\t\t\t\t| Used to filter the related location guid associated to the location of the customer site area.\t|\r\n| RelatedHealthAndSafetyBlobs\t\t\t\t\t\t| The array of related health and safety blobs to this site.\t\t\t\t\t\t\t\t\t\t|\r\n| RelatedHealthAndSafetyBlobs[0].Guid\t\t\t\t| The GUID associated to the RelatedHealthAndSafetyBlob.\t\t\t\t\t\t\t\t\t\t\t|\r\n| RelatedHealthAndSafetyBlobs[0].Hash\t\t\t\t| The hash of the external document blob to be used against the /blob endpoint. Files are provided as an octet stream which will need to be converted. |\r\n| RelatedHealthAndSafetyBlobs[0].DocumentName\t\t| The document name\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t|\r\n| RelatedHealthAndSafetyBlobs[0].DocumentReference\t| The document reference\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t|\r\n| RelatedHealthAndSafetyBlobs[0].ValidFrom\t\t\t| The valid from date\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t|\r\n| RelatedHealthAndSafetyBlobs[0].ValidUntil\t\t\t| The valid until date\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t|\r\n| RelatedHealthAndSafetyBlobs[0].IsHighRisk\t\t\t| Whether the document contains high risk items\t\t\t\t\t\t\t\t\t\t\t\t\t\t|\r\n| RelatedHealthAndSafetyBlobs[0].IsSentToVehicle\t| Whether the document is sent to vehicle\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t|\r\n| RelatedHealthAndSafetyBlobs[0].HealthAndSafetyDocumentTypeListItem\t| The GUID and description of the health and safety document type\t\t\t\t|\r\n| IsDeleted\t\t\t\t\t\t\t\t\t\t\t| Whether site is deleted.\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t|\r\n| LocalAuthorityListItem\t\t\t\t\t\t\t| The GUID and description of the local authority related to customer site.\t\t\t\t\t\t\t|\r\n| LocalAuthorityGuidFilter\t\t\t\t\t\t\t| Used to filter the local Authority Guid associated to the customer site\t\t\t\t\t\t\t|\r\n\r\n","operationId":"Site_GetChanges","consumes":["application/json"],"produces":["application/json"],"parameters":[{"name":"since","in":"query","required":false,"type":"string"},{"name":"cursor","in":"query","required":false,"type":"string"},{"name":"links","in":"query","required":false,"type":"string"}],"responses":{"200":{"description":"OK","schema":{"$ref":"#/definitions/ApiResourceChanges[ApiIntegratorSiteResource]"}}}}},"/directory/sites/{guid}":{"get":{"tags":["Site"],"summary":"Find with GUID","description":"| Property\t\t\t\t\t\t\t\t\t\t\t| Description\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t|\r\n| ------------------------------------------------- | ------------------------------------------------------------------------------------------------- |\r\n| GUID\t\t\t\t\t\t\t\t\t\t\t\t| The GUID associated to the site.\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t|\r\n| Name\t\t\t\t\t\t\t\t\t\t\t\t| The site's name.\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t|\r\n| Reference\t\t\t\t\t\t\t\t\t\t\t| An alternative name used for the site. Filterable\t\t\t\t\t\t\t\t\t\t\t\t\t|\r\n| FederalId\t\t\t\t\t\t\t\t\t\t\t| The site's local authority / government / tax reference.\t\t\t\t\t\t\t\t\t\t\t|\r\n| AnalysisCode\t\t\t\t\t\t\t\t\t\t| The site's analysis code\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t|\r\n| UniqueCustomerSiteCode\t\t\t\t\t\t\t| The unique code assigned to the site if system configuration \"UniqueCustomerSiteCodeGeneration\" was set to true when site was created. |\r\n| IsNonServiceSite  \t\t\t\t\t\t\t\t| Whether the site is non-service.\t\t\t\t\t\t\t          \t\t\t\t\t\t\t\t|\r\n| RelatedCustomerGuid\t\t\t\t\t\t\t\t| The GUID associated to the customer of this site.\t\t\t\t\t\t\t\t\t\t\t\t\t|\r\n| SiteTypeListItem\t\t\t\t\t\t\t\t\t| The GUID and type of the site (eg. Unoccupied Location, Residential, Non Residential).\t\t\t|\r\n| SICCodeListItem\t\t\t\t\t\t\t\t\t| The GUID and 2007 description of SICCode\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t|\r\n| SalesTerritoryListItem\t\t\t\t\t\t\t| The GUID and name of the sales territory this site is associated to.\t\t\t\t\t\t\t\t|\r\n| CompanyOutletListItem\t\t\t\t\t\t\t\t| The GUID and name of the default company outlet this site is associated to.\t\t\t\t\t\t|\r\n| CustomerSiteStateListItem\t\t\t\t\t\t\t| The GUID and state of the site (eg. Active, Closed, Suspended).\t\t\t\t\t\t\t\t\t|\r\n| ZoneListItem\t\t\t\t\t\t\t\t\t\t| The GUID and description of the zone.\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t|\r\n| RebatePaymentTypeListItem\t\t\t\t\t\t\t| The GUID and description of the rebate payment type.\t\t\t\t\t\t\t\t\t\t\t\t|\r\n| RebatePaymentTermListItem\t\t\t\t\t\t\t| The GUID and description of the rebate payment term.\t\t\t\t\t\t\t\t\t\t\t\t|\r\n| ContactMethods.Email\t\t\t\t\t\t\t\t| The Email associated to the site.\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t|\r\n| PaymentHandlingCodeListItem\t\t\t\t\t\t| The GUID and description of the payment handling code.\t\t\t\t\t\t\t\t\t\t\t|\r\n| ReminderLetterPolicyListItem\t\t\t\t\t\t| The GUID and description of the reminder letter policy.\t\t\t\t\t\t\t\t\t\t\t|\r\n| VisitStatusListItem\t\t\t\t\t\t\t\t| The GUID and description of the visit status.\t\t\t\t\t\t\t\t\t\t\t\t\t\t|\r\n| RelatedLocationInvoiceGuid\t\t\t\t\t\t| Used to filter the related invoice location guid associated to the invoice location of this site.\t|\r\n| RelatedLocationRemitGuid\t\t\t\t\t\t\t| Used to filter the related remit location guid associated to the remit location of this site.\t\t|\r\n| RelatedLocationGuid\t\t\t\t\t\t\t\t| Used to filter the related location guid associated to the location of the site.\t\t\t\t\t|\r\n| AccessTimes[0]\t\t\t\t\t\t\t\t\t| A list of objects containing customer site access time.\t\t\t\t\t\t\t\t\t\t\t|\r\n| AccessTimes[0].Guid\t\t\t\t\t\t\t\t| The GUID associated to the site access time.\t\t\t\t\t\t\t\t\t\t\t\t\t\t|\r\n| AccessTimes[0].AccessContact\t\t\t\t\t\t| The access contact name to associated site.\t\t\t\t\t\t\t\t\t\t\t\t\t\t|\r\n| AccessTimes[0].AccessNotes\t\t\t\t\t\t| The access notes to associated site.\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t|\r\n| AccessTimes[0].AccessStartTime\t\t\t\t\t| The access start time to associated site.\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t|\r\n| AccessTimes[0].AccessEndTime\t\t\t\t\t\t| The access end time to associated site.\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t|\r\n| AccessTimes[0].DayOfWeekListItem\t\t\t\t\t| The GUID and description of the day of week to access.\t\t\t\t\t\t\t\t\t\t\t|\r\n| DocumentDeliveryMethods[]\t\t\t\t\t\t\t| The array of document delivery types associated to the customer site.\t\t\t\t\t\t\t\t|\r\n| DocumentDeliveryMethods[0].DocumentDeliveryType\t| The GUID and description of the document delivery type associated to the DocumentDeliveryMethods. |\r\n| RelatedLocationDocumentGuid\t\t\t\t\t\t| Used to filter the related document location guid associated to this site.\t\t\t\t\t\t|\r\n| RelatedLocationStatementGuid\t\t\t\t\t\t| Used to filter the related statement location guid associated to this site.\t\t\t\t\t\t|\r\n| RelatedLocationQuotationGuid\t\t\t\t\t\t| Used to filter the related quotation location guid associated to this site.\t\t\t\t\t\t|\r\n| RelatedTradingNames[]\t\t\t\t\t\t\t\t| The array of customer trading names associated to the customer site.\t\t\t\t\t\t\t\t| \r\n| RelatedTradingNames[0].Guid\t\t\t\t\t\t| The guid associated to the customer trading name associated to the customer site.\t\t\t\t\t| \r\n| RelatedTradingNames[0].RelatedTradingNameGuid\t\t| The guid of the customer trading name associated to the customer site.\t\t\t\t\t\t\t| \r\n| RelatedTradingNames[0].Description\t\t\t\t| The description of customer trading name associated to the customer site.\t\t\t\t\t\t\t| \r\n| RelatedTradingNameGuidFilter\t\t\t\t\t\t| Used to filter on related trading name guid.\t\t\t\t\t\t\t\t\t\t\t\t\t\t| \r\n| Areas\t\t\t\t\t\t\t\t\t\t\t\t| A list of objects containing customer site area.\t\t\t\t\t\t\t\t\t\t\t\t\t|\r\n| Areas[0].Guid\t\t\t\t\t\t\t\t\t\t| The GUID associated to the customer site area.\t\t\t\t\t\t\t\t\t\t\t\t\t|\r\n| Areas[0].Description\t\t\t\t\t\t\t\t| The description associated to the customer site area.\t\t\t\t\t\t\t\t\t\t\t\t|\r\n| Areas[0].RelatedLocationGuid\t\t\t\t\t\t| The related location guid associated to the location of the customer site area.\t\t\t\t\t|\r\n| Areas[0].IsDeleted\t\t\t\t\t\t\t\t| Whether the customer site area is deleted.\t\t\t\t\t\t\t\t\t\t\t\t\t\t|\r\n| AreasGuidFilter\t\t\t\t\t\t\t\t\t| Used to filter the customer site area by GUID.\t\t\t\t\t\t\t\t\t\t\t\t\t|\r\n| AreasRelatedLocationGuidFilter\t\t\t\t\t| Used to filter the related location guid associated to the location of the customer site area.\t|\r\n| RelatedHealthAndSafetyBlobs\t\t\t\t\t\t| The array of related health and safety blobs to this site.\t\t\t\t\t\t\t\t\t\t|\r\n| RelatedHealthAndSafetyBlobs[0].Guid\t\t\t\t| The GUID associated to the RelatedHealthAndSafetyBlob.\t\t\t\t\t\t\t\t\t\t\t|\r\n| RelatedHealthAndSafetyBlobs[0].Hash\t\t\t\t| The hash of the external document blob to be used against the /blob endpoint. Files are provided as an octet stream which will need to be converted. |\r\n| RelatedHealthAndSafetyBlobs[0].DocumentName\t\t| The document name\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t|\r\n| RelatedHealthAndSafetyBlobs[0].DocumentReference\t| The document reference\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t|\r\n| RelatedHealthAndSafetyBlobs[0].ValidFrom\t\t\t| The valid from date\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t|\r\n| RelatedHealthAndSafetyBlobs[0].ValidUntil\t\t\t| The valid until date\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t|\r\n| RelatedHealthAndSafetyBlobs[0].IsHighRisk\t\t\t| Whether the document contains high risk items\t\t\t\t\t\t\t\t\t\t\t\t\t\t|\r\n| RelatedHealthAndSafetyBlobs[0].IsSentToVehicle\t| Whether the document is sent to vehicle\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t|\r\n| RelatedHealthAndSafetyBlobs[0].HealthAndSafetyDocumentTypeListItem\t| The GUID and description of the health and safety document type\t\t\t\t|\r\n| IsDeleted\t\t\t\t\t\t\t\t\t\t\t| Whether site is deleted.\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t|\r\n| LocalAuthorityListItem\t\t\t\t\t\t\t| The GUID and description of the local authority related to customer site.\t\t\t\t\t\t\t|\r\n| LocalAuthorityGuidFilter\t\t\t\t\t\t\t| Used to filter the local Authority Guid associated to the customer site\t\t\t\t\t\t\t|\r\n\r\n","operationId":"Site_Get","consumes":["application/json"],"produces":["application/json"],"parameters":[{"name":"guid","in":"path","required":true,"type":"string","format":"uuid"},{"name":"links","in":"query","required":false,"type":"string"},{"name":"include","in":"query","required":false,"type":"string"},{"name":"expand","in":"query","required":false,"type":"string"},{"name":"udf","in":"query","required":false,"type":"string"}],"responses":{"200":{"description":"OK","schema":{"$ref":"#/definitions/ApiResourceResultEntity[ApiIntegratorSiteResource]"}}}},"put":{"tags":["Site"],"summary":"Partial update","description":"| Property\t\t\t\t\t\t\t\t\t\t\t| Description\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t| Required |\r\n| ------------------------------------------------- | ------------------------------------------------------------------------------------------------- | -------- |\r\n| GUID\t\t\t\t\t\t\t\t\t\t\t\t| The GUID associated to the site.\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t| No\t   |\r\n| Name\t\t\t\t\t\t\t\t\t\t\t\t| The site's name.\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t| Yes      |\r\n| Reference\t\t\t\t\t\t\t\t\t\t\t| An alternative name used for the site.\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t| No\t   |\r\n| FederalId\t\t\t\t\t\t\t\t\t\t\t| The site's local authority / government / tax reference.\t\t\t\t\t\t\t\t\t\t\t| No\t   |\r\n| AnalysisCode\t\t\t\t\t\t\t\t\t\t| The site's analysis code.\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t| No\t   |\r\n| UniqueCustomerSiteCode\t\t\t\t\t\t\t| The unique code assigned to the site, this will be automatically set if system configuration \"UniqueCustomerSiteCodeGeneration\" is set to true when posting. | No |\r\n| IsNonServiceSite  \t\t\t\t\t\t\t\t| Whether the site is non-service.\t\t\t\t\t\t\t          \t\t\t\t\t\t\t\t| Yes      |\r\n| RelatedCustomerGuid\t\t\t\t\t\t\t\t| The GUID associated to the customer of this site.\t\t\t\t\t\t\t\t\t\t\t\t\t| Yes\t   |\r\n| SICCodeListItem\t\t\t\t\t\t\t\t\t| The GUID and 2007 description this site is associated to.\t\t\t\t\t\t\t\t\t\t\t| No      |\r\n| SiteTypeListItem\t\t\t\t\t\t\t\t\t| The GUID and type of the site (eg. Unoccupied Location, Residential, Non Residential).\t\t\t| No\t   |\r\n| SalesTerritoryListItem\t\t\t\t\t\t\t| The GUID and name of the sales territory this site is associated to.\t\t\t\t\t\t\t\t| No\t   |\r\n| CompanyOutletListItem\t\t\t\t\t\t\t\t| The GUID and name of the default company outlet this site is associated to.\t\t\t\t\t\t| Yes\t   |\r\n| CustomerSiteStateListItem\t\t\t\t\t\t\t| The GUID and state of the site (eg. Active, Closed, Suspended).\t\t\t\t\t\t\t\t\t| Yes\t   |\r\n| ZoneListItem\t\t\t\t\t\t\t\t\t\t| The GUID and description of the zone.\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t| No\t   |\r\n| RebatePaymentTypeListItem\t\t\t\t\t\t\t| The GUID and description of the rebate payment type.\t\t\t\t\t\t\t\t\t\t\t\t| No\t   |\r\n| RebatePaymentTermListItem\t\t\t\t\t\t\t| The GUID and description of the rebate payment term.\t\t\t\t\t\t\t\t\t\t\t\t| No\t   |\r\n| ReminderLetterPolicyListItem\t\t\t\t\t\t| The GUID and description of the reminder letter policy.\t\t\t\t\t\t\t\t\t\t\t| No\t   |\r\n| VisitStatusListItem\t\t\t\t\t\t\t\t| The GUID and description of the visit status.\t\t\t\t\t\t\t\t\t\t\t\t\t\t| No\t   |\r\n| ContactMethods.Email\t\t\t\t\t\t\t\t| The Email associated to the site.\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t| No\t   |\r\n| PaymentHandlingCodeListItem\t\t\t\t\t\t| The GUID and description of the payment handling code.\t\t\t\t\t\t\t\t\t\t\t| No\t   |\r\n| RelatedLocationInvoiceGuid\t\t\t\t\t\t| The GUID associated to the invoice location of this site.\t\t\t\t\t\t\t\t\t\t\t| Yes\t   |\r\n| RelatedLocationRemitGuid\t\t\t\t\t\t\t| The GUID associated to the remit location of this site.\t\t\t\t\t\t\t\t\t\t\t| No\t   |\r\n| RelatedLocationGuid\t\t\t\t\t\t\t\t| The GUID associated to the location of the site.\t\t\t\t\t\t\t\t\t\t\t\t\t| Yes\t   |\r\n| AccessTimes[0]\t\t\t\t\t\t\t\t\t| A list of objects containing customer site access time.\t\t\t\t\t\t\t\t\t\t\t| No\t   |\r\n| AccessTimes[0].Guid\t\t\t\t\t\t\t\t| The GUID associated to the site access time.\t\t\t\t\t\t\t\t\t\t\t\t\t\t| No\t   |\r\n| AccessTimes[0].AccessContact\t\t\t\t\t\t| The access contact name to associated site.\t\t\t\t\t\t\t\t\t\t\t\t\t\t| No\t   |\r\n| AccessTimes[0].AccessNotes\t\t\t\t\t\t| The access notes to associated site.\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t| No\t   |\r\n| AccessTimes[0].AccessStartTime\t\t\t\t\t| The access start time to associated site.\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t| Yes\t   |\r\n| AccessTimes[0].AccessEndTime\t\t\t\t\t\t| The access end time to associated site.\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t| Yes\t   |\r\n| AccessTimes[0].DayOfWeekListItem\t\t\t\t\t| The GUID and description of the day of week to access.\t\t\t\t\t\t\t\t\t\t\t| Yes\t   |\r\n| DocumentDeliveryMethods[]\t\t\t\t\t\t\t| The array of document delivery types associated to the customer site.\t\t\t\t\t\t\t\t| No\t   |\r\n| DocumentDeliveryMethods[0].DocumentDeliveryType\t| The GUID and description of the document delivery type associated to the DocumentDeliveryMethods. | No\t   |\r\n| RelatedLocationDocumentGuid\t\t\t\t\t\t| The guid associated to the document location of this site.\t\t\t\t\t\t\t\t\t\t| No\t   |\r\n| RelatedLocationStatementGuid\t\t\t\t\t\t| The guid associated to the statement location of this site.\t\t\t\t\t\t\t\t\t\t| No\t   |\r\n| RelatedLocationQuotationGuid\t\t\t\t\t\t| The guid associated to the quotation location of this site.\t\t\t\t\t\t\t\t\t\t| No\t   |\r\n| RelatedTradingNames[]\t\t\t\t\t\t\t\t| The array of customer trading names associated to the customer site.\t\t\t\t\t\t\t\t| No\t   |\r\n| RelatedTradingNames[0].Guid\t\t\t\t\t\t| The guid associated to the customer trading name associated to the customer site.\t\t\t\t\t| No\t   |\r\n| RelatedTradingNames[0].RelatedTradingNameGuid\t\t| The guid of the customer trading name associated to the customer site.\t\t\t\t\t\t\t| Yes\t   |\r\n| RelatedTradingNames[0].Description\t\t\t\t| The description of customer trading name associated to the customer site.\t\t\t\t\t\t\t| No\t   |\r\n| RelatedTradingNameGuidFilter\t\t\t\t\t\t| Used to filter on related trading name guid.\t\t\t\t\t\t\t\t\t\t\t\t\t\t| No\t   |\r\n| Areas\t\t\t\t\t\t\t\t\t\t\t\t| A list of objects containing customer site area.\t\t\t\t\t\t\t\t\t\t\t\t\t| No\t   |\r\n| Areas[0].Guid\t\t\t\t\t\t\t\t\t\t| The GUID associated to the customer site area.\t\t\t\t\t\t\t\t\t\t\t\t\t| No\t   |\r\n| Areas[0].Description\t\t\t\t\t\t\t\t| The description associated to the customer site area.\t\t\t\t\t\t\t\t\t\t\t\t| Yes\t   |\r\n| Areas[0].RelatedLocationGuid\t\t\t\t\t\t| The related location guid associated to the location of the customer site area.\t\t\t\t\t| Yes\t   |\r\n| Areas[0].IsDeleted\t\t\t\t\t\t\t\t| Whether the customer site area is deleted.\t\t\t\t\t\t\t\t\t\t\t\t\t\t| No\t   |\r\n| AreasGuidFilter\t\t\t\t\t\t\t\t\t| Used to filter the customer site area by GUID.\t\t\t\t\t\t\t\t\t\t\t\t\t| No\t   |\r\n| AreasRelatedLocationGuidFilter\t\t\t\t\t| Used to filter the related location guid associated to the location of the customer site area.\t| No\t   |\r\n| RelatedHealthAndSafetyBlobs\t\t\t\t\t\t| The array of related health and safety blobs to this site.\t\t\t\t\t\t\t\t\t\t| No\t   |\r\n| RelatedHealthAndSafetyBlobs[0].Guid\t\t\t\t| The GUID associated to the RelatedHealthAndSafetyBlob.\t\t\t\t\t\t\t\t\t\t\t| No\t   |\t\r\n| RelatedHealthAndSafetyBlobs[0].Hash\t\t\t\t| The hash of the external document blob to be used against the /blob endpoint. Files are provided as an octet stream which will need to be converted. | No |\r\n| RelatedHealthAndSafetyBlobs[0].DocumentName\t\t| The document name\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t| No\t   |\r\n| RelatedHealthAndSafetyBlobs[0].DocumentReference\t| The document reference\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t| No\t   |\r\n| RelatedHealthAndSafetyBlobs[0].ValidFrom\t\t\t| The valid from date\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t| No\t   |\r\n| RelatedHealthAndSafetyBlobs[0].ValidUntil\t\t\t| The valid until date\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t| No\t   |\r\n| RelatedHealthAndSafetyBlobs[0].IsHighRisk\t\t\t| Whether the document contains high risk items\t\t\t\t\t\t\t\t\t\t\t\t\t\t| No\t   |\r\n| RelatedHealthAndSafetyBlobs[0].IsSentToVehicle\t| Whether the document is sent to vehicle\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t| No\t   |\r\n| RelatedHealthAndSafetyBlobs[0].HealthAndSafetyDocumentTypeListItem\t| The GUID and description of the health and safety document type\t\t\t\t| No\t   |\r\n| IsDeleted\t\t\t\t\t\t\t\t\t\t\t| Whether site is deleted.\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t| Yes      |\r\n| LocalAuthorityListItem\t\t\t\t\t\t\t| The GUID and description of the local authority related to customer site.\t\t\t\t\t\t\t| No       |\r\n| LocalAuthorityGuidFilter\t\t\t\t\t\t\t| Used to filter the local Authority Guid associated to the customer site\t\t\t\t\t\t\t| No       |\r\n\r\n## Extra validations\r\n\r\n| Condition | Error message |\r\n| --------- | ------------- |\r\n| Customer not found with value RelatedCustomerGuid | Failed to retrieve Customer with RelatedCustomerGuid of {value of RelatedCustomerGuid} |\r\n| Provided Customer is not same as existing Customer | Relationship between Site and Customer cannot be updated | \r\n| Location does not belong to the Customer | Failed to save. CustomerSite with RelatedLocationGuid of {value of RelatedLocationGuid} cannot be set if it is not a site of the related Customer.|\r\n| Location does not belong to the Customer | Failed to save. CustomerSite with RelatedLocationInvoiceGuid of {value of RelatedLocationInvoiceGuid} cannot be set if it is not a site of the related Customer.|\r\n| Location does not belong to the Customer | Failed to save. CustomerSite with RelatedLocationRemitGuid of {value of RelatedLocationRemitGuid} cannot be set if it is not a site of the related Customer.|\r\n| ZoneListItem isDeleted flag is set to true | Failed to save entity. IsDeleted flag set to true for given property with GUID {ZoneListItem.Guid} |\r\n| Failed to save/update Site because the supplied CustomerTradingName is not valid. The update has been rejected. Change RelatedTradingNames.RelatedTradingNameGuid to the Guid of a valid and undeleted CustomerTradingName. |\r\n| If Areas.Guid is not null on POST | One of the Areas in the request is an update. The request could not be processed. Ensure that none of the Areas has a guid. |\r\n| If Areas.IsDeleted is not null/true on POST | Attempt to has been made to set Areas.IsDeleted. The request could not be processed. Ensure that Areas.IsDeleted has default value. |\r\n| If Areas.IsDeleted is changed. | Areas.IsDeleted is a read-only property. The request could not be processed. Ensure that Areas.IsDeleted is not changed. |\r\n| If RelatedTradingNames.Guid is not null on POST | One of the RelatedTradingNames in the request is an update. The request could not be processed. Ensure that none of the RelatedTradingNames has a guid. |\r\n| If RelatedTradingNames.Guid is not unique | Failed to save/update Site because duplicate Guid listed in The RelatedTradingNames array. |\r\n| If RelatedTradingNames.Description is not null or changed. | Attempt to has been made to set RelatedTradingNames.Description. The request could not be processed. Ensure that RelatedTradingNames.Description has default value. |\r\n| If RelatedTradingNames.RelatedTradingNameGuid is not unique | Failed to save/update Site because duplicate RelatedTradingNameGuid listed in The RelatedTradingNames array. |\r\n| If RelatedTradingNameGuid is not related to RelatedCustomerGuid | The CustomerTradingName and Customer do not match. The resource could not be created/updated. Ensure that RelatedCustomerGuid references a CustomerTradingName of CustomerId. |\r\n| If RelatedTradingNames.Guid is not related to CustomerSite Guid | The CustomerTradingNameCustomerSite and CustomerSite do not match. The resource could not be created/updated. Ensure that Guid references a CustomerTradingNameCustomerSite of CustomerSiteId. |\r\n| RelatedHealthAndSafetyBlobs[0].Guid is changed for Update | RelatedHealthAndSafetyBlobs.Guid is a read-only property |\r\n| RelatedHealthAndSafetyBlobs[0].Hash is changed for Update | RelatedHealthAndSafetyBlobs.Hash is a read-only property |\r\n| RelatedHealthAndSafetyBlobs[0].DocumentName is changed for Update | RelatedHealthAndSafetyBlobs.DocumentName is a read-only property |\r\n| RelatedHealthAndSafetyBlobs[0].DocumentReference is changed for Update | RelatedHealthAndSafetyBlobs.DocumentReference is a read-only property |\r\n| RelatedHealthAndSafetyBlobs[0].IsSentToVehicle is changed for Update | RelatedHealthAndSafetyBlobs.IsSentToVehicle is a read-only property |\r\n| RelatedHealthAndSafetyBlobs[0].IsHighRisk is changed for Update | RelatedHealthAndSafetyBlobs.IsHighRisk is a read-only property |\r\n| RelatedHealthAndSafetyBlobs[0].ValidFrom is changed for Update | RelatedHealthAndSafetyBlobs.ValidFrom is a read-only property |\r\n| RelatedHealthAndSafetyBlobs[0].ValidUntil is changed for Update | RelatedHealthAndSafetyBlobs.ValidUntil is a read-only property |\r\n| RelatedHealthAndSafetyBlobs[0].HealthAndSafetyDocumentTypeListItem.Guid is changed for Update | RelatedHealthAndSafetyBlobs.HealthAndSafetyDocumentTypeListItem.Guid is a read-only property |\r\n\r\n##  Information\r\n\r\n| Information |\r\n| ----------- |\r\n| If the related invoice location guid is not same as the related location guid then the related statement location guid will be nullified. |\r\n","operationId":"Site_Update","consumes":["application/json"],"produces":["application/json"],"parameters":[{"name":"guid","in":"path","required":true,"type":"string","format":"uuid"},{"in":"body","required":true,"schema":{"$ref":"#/definitions/ApiResourceId"}}],"responses":{"200":{"description":"OK","schema":{"$ref":"#/definitions/ApiResourceId"}}}}},"/directory/sites":{"get":{"tags":["Site"],"summary":"Find with Filters","description":"| Property\t\t\t\t\t\t\t\t\t\t\t| Description\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t|\r\n| ------------------------------------------------- | ------------------------------------------------------------------------------------------------- |\r\n| GUID\t\t\t\t\t\t\t\t\t\t\t\t| The GUID associated to the site.\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t|\r\n| Name\t\t\t\t\t\t\t\t\t\t\t\t| The site's name.\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t|\r\n| Reference\t\t\t\t\t\t\t\t\t\t\t| An alternative name used for the site. Filterable\t\t\t\t\t\t\t\t\t\t\t\t\t|\r\n| FederalId\t\t\t\t\t\t\t\t\t\t\t| The site's local authority / government / tax reference.\t\t\t\t\t\t\t\t\t\t\t|\r\n| AnalysisCode\t\t\t\t\t\t\t\t\t\t| The site's analysis code\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t|\r\n| UniqueCustomerSiteCode\t\t\t\t\t\t\t| The unique code assigned to the site if system configuration \"UniqueCustomerSiteCodeGeneration\" was set to true when site was created. |\r\n| IsNonServiceSite  \t\t\t\t\t\t\t\t| Whether the site is non-service.\t\t\t\t\t\t\t          \t\t\t\t\t\t\t\t|\r\n| RelatedCustomerGuid\t\t\t\t\t\t\t\t| The GUID associated to the customer of this site.\t\t\t\t\t\t\t\t\t\t\t\t\t|\r\n| SiteTypeListItem\t\t\t\t\t\t\t\t\t| The GUID and type of the site (eg. Unoccupied Location, Residential, Non Residential).\t\t\t|\r\n| SICCodeListItem\t\t\t\t\t\t\t\t\t| The GUID and 2007 description of SICCode\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t|\r\n| SalesTerritoryListItem\t\t\t\t\t\t\t| The GUID and name of the sales territory this site is associated to.\t\t\t\t\t\t\t\t|\r\n| CompanyOutletListItem\t\t\t\t\t\t\t\t| The GUID and name of the default company outlet this site is associated to.\t\t\t\t\t\t|\r\n| CustomerSiteStateListItem\t\t\t\t\t\t\t| The GUID and state of the site (eg. Active, Closed, Suspended).\t\t\t\t\t\t\t\t\t|\r\n| ZoneListItem\t\t\t\t\t\t\t\t\t\t| The GUID and description of the zone.\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t|\r\n| RebatePaymentTypeListItem\t\t\t\t\t\t\t| The GUID and description of the rebate payment type.\t\t\t\t\t\t\t\t\t\t\t\t|\r\n| RebatePaymentTermListItem\t\t\t\t\t\t\t| The GUID and description of the rebate payment term.\t\t\t\t\t\t\t\t\t\t\t\t|\r\n| ContactMethods.Email\t\t\t\t\t\t\t\t| The Email associated to the site.\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t|\r\n| PaymentHandlingCodeListItem\t\t\t\t\t\t| The GUID and description of the payment handling code.\t\t\t\t\t\t\t\t\t\t\t|\r\n| ReminderLetterPolicyListItem\t\t\t\t\t\t| The GUID and description of the reminder letter policy.\t\t\t\t\t\t\t\t\t\t\t|\r\n| VisitStatusListItem\t\t\t\t\t\t\t\t| The GUID and description of the visit status.\t\t\t\t\t\t\t\t\t\t\t\t\t\t|\r\n| RelatedLocationInvoiceGuid\t\t\t\t\t\t| Used to filter the related invoice location guid associated to the invoice location of this site.\t|\r\n| RelatedLocationRemitGuid\t\t\t\t\t\t\t| Used to filter the related remit location guid associated to the remit location of this site.\t\t|\r\n| RelatedLocationGuid\t\t\t\t\t\t\t\t| Used to filter the related location guid associated to the location of the site.\t\t\t\t\t|\r\n| AccessTimes[0]\t\t\t\t\t\t\t\t\t| A list of objects containing customer site access time.\t\t\t\t\t\t\t\t\t\t\t|\r\n| AccessTimes[0].Guid\t\t\t\t\t\t\t\t| The GUID associated to the site access time.\t\t\t\t\t\t\t\t\t\t\t\t\t\t|\r\n| AccessTimes[0].AccessContact\t\t\t\t\t\t| The access contact name to associated site.\t\t\t\t\t\t\t\t\t\t\t\t\t\t|\r\n| AccessTimes[0].AccessNotes\t\t\t\t\t\t| The access notes to associated site.\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t|\r\n| AccessTimes[0].AccessStartTime\t\t\t\t\t| The access start time to associated site.\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t|\r\n| AccessTimes[0].AccessEndTime\t\t\t\t\t\t| The access end time to associated site.\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t|\r\n| AccessTimes[0].DayOfWeekListItem\t\t\t\t\t| The GUID and description of the day of week to access.\t\t\t\t\t\t\t\t\t\t\t|\r\n| DocumentDeliveryMethods[]\t\t\t\t\t\t\t| The array of document delivery types associated to the customer site.\t\t\t\t\t\t\t\t|\r\n| DocumentDeliveryMethods[0].DocumentDeliveryType\t| The GUID and description of the document delivery type associated to the DocumentDeliveryMethods. |\r\n| RelatedLocationDocumentGuid\t\t\t\t\t\t| Used to filter the related document location guid associated to this site.\t\t\t\t\t\t|\r\n| RelatedLocationStatementGuid\t\t\t\t\t\t| Used to filter the related statement location guid associated to this site.\t\t\t\t\t\t|\r\n| RelatedLocationQuotationGuid\t\t\t\t\t\t| Used to filter the related quotation location guid associated to this site.\t\t\t\t\t\t|\r\n| RelatedTradingNames[]\t\t\t\t\t\t\t\t| The array of customer trading names associated to the customer site.\t\t\t\t\t\t\t\t| \r\n| RelatedTradingNames[0].Guid\t\t\t\t\t\t| The guid associated to the customer trading name associated to the customer site.\t\t\t\t\t| \r\n| RelatedTradingNames[0].RelatedTradingNameGuid\t\t| The guid of the customer trading name associated to the customer site.\t\t\t\t\t\t\t| \r\n| RelatedTradingNames[0].Description\t\t\t\t| The description of customer trading name associated to the customer site.\t\t\t\t\t\t\t| \r\n| RelatedTradingNameGuidFilter\t\t\t\t\t\t| Used to filter on related trading name guid.\t\t\t\t\t\t\t\t\t\t\t\t\t\t| \r\n| Areas\t\t\t\t\t\t\t\t\t\t\t\t| A list of objects containing customer site area.\t\t\t\t\t\t\t\t\t\t\t\t\t|\r\n| Areas[0].Guid\t\t\t\t\t\t\t\t\t\t| The GUID associated to the customer site area.\t\t\t\t\t\t\t\t\t\t\t\t\t|\r\n| Areas[0].Description\t\t\t\t\t\t\t\t| The description associated to the customer site area.\t\t\t\t\t\t\t\t\t\t\t\t|\r\n| Areas[0].RelatedLocationGuid\t\t\t\t\t\t| The related location guid associated to the location of the customer site area.\t\t\t\t\t|\r\n| Areas[0].IsDeleted\t\t\t\t\t\t\t\t| Whether the customer site area is deleted.\t\t\t\t\t\t\t\t\t\t\t\t\t\t|\r\n| AreasGuidFilter\t\t\t\t\t\t\t\t\t| Used to filter the customer site area by GUID.\t\t\t\t\t\t\t\t\t\t\t\t\t|\r\n| AreasRelatedLocationGuidFilter\t\t\t\t\t| Used to filter the related location guid associated to the location of the customer site area.\t|\r\n| RelatedHealthAndSafetyBlobs\t\t\t\t\t\t| The array of related health and safety blobs to this site.\t\t\t\t\t\t\t\t\t\t|\r\n| RelatedHealthAndSafetyBlobs[0].Guid\t\t\t\t| The GUID associated to the RelatedHealthAndSafetyBlob.\t\t\t\t\t\t\t\t\t\t\t|\r\n| RelatedHealthAndSafetyBlobs[0].Hash\t\t\t\t| The hash of the external document blob to be used against the /blob endpoint. Files are provided as an octet stream which will need to be converted. |\r\n| RelatedHealthAndSafetyBlobs[0].DocumentName\t\t| The document name\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t|\r\n| RelatedHealthAndSafetyBlobs[0].DocumentReference\t| The document reference\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t|\r\n| RelatedHealthAndSafetyBlobs[0].ValidFrom\t\t\t| The valid from date\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t|\r\n| RelatedHealthAndSafetyBlobs[0].ValidUntil\t\t\t| The valid until date\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t|\r\n| RelatedHealthAndSafetyBlobs[0].IsHighRisk\t\t\t| Whether the document contains high risk items\t\t\t\t\t\t\t\t\t\t\t\t\t\t|\r\n| RelatedHealthAndSafetyBlobs[0].IsSentToVehicle\t| Whether the document is sent to vehicle\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t|\r\n| RelatedHealthAndSafetyBlobs[0].HealthAndSafetyDocumentTypeListItem\t| The GUID and description of the health and safety document type\t\t\t\t|\r\n| IsDeleted\t\t\t\t\t\t\t\t\t\t\t| Whether site is deleted.\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t|\r\n| LocalAuthorityListItem\t\t\t\t\t\t\t| The GUID and description of the local authority related to customer site.\t\t\t\t\t\t\t|\r\n| LocalAuthorityGuidFilter\t\t\t\t\t\t\t| Used to filter the local Authority Guid associated to the customer site\t\t\t\t\t\t\t|\r\n\r\n","operationId":"Site_GetCollection","consumes":["application/json"],"produces":["application/json"],"parameters":[{"name":"filter","in":"query","required":false,"type":"string"},{"name":"search","in":"query","required":false,"type":"string"},{"name":"order","in":"query","required":false,"type":"string"},{"name":"max","in":"query","required":false,"type":"integer","format":"int32"},{"name":"page","in":"query","required":false,"type":"integer","format":"int32"},{"name":"includeCount","in":"query","required":false,"type":"boolean"},{"name":"includeDeleted","in":"query","required":false,"type":"boolean"},{"name":"links","in":"query","required":false,"type":"string"},{"name":"udf","in":"query","required":false,"type":"string"}],"responses":{"200":{"description":"OK","schema":{"$ref":"#/definitions/ApiResourceResultCollection[ApiIntegratorSiteResource]"}}}},"post":{"tags":["Site"],"summary":"Create or update","description":"| Property\t\t\t\t\t\t\t\t\t\t\t| Description\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t| Required |\r\n| ------------------------------------------------- | -------------------------------------------------------------------------------------\t\t\t\t| -------- |\r\n| GUID\t\t\t\t\t\t\t\t\t\t\t\t| The GUID associated to the site.\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t| No\t   |\r\n| Name\t\t\t\t\t\t\t\t\t\t\t\t| The site's name.\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t| Yes      |\r\n| Reference\t\t\t\t\t\t\t\t\t\t\t| An alternative name used for the site.\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t| No\t   |\r\n| FederalId\t\t\t\t\t\t\t\t\t\t\t| The site's local authority / government / tax reference.\t\t\t\t\t\t\t\t\t\t\t| No\t   |\r\n| AnalysisCode\t\t\t\t\t\t\t\t\t\t| The site's analysis code.\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t| No\t   |\r\n| UniqueCustomerSiteCode\t\t\t\t\t\t\t| The unique code assigned to the site, this will be automatically set if system configuration \"UniqueCustomerSiteCodeGeneration\" is set to true when posting. | No |\r\n| IsNonServiceSite  \t\t\t\t\t\t\t\t| Whether the site is non-service.\t\t\t\t\t\t\t          \t\t\t\t\t\t\t\t| Yes      |\r\n| RelatedCustomerGuid\t\t\t\t\t\t\t\t| The GUID associated to the customer of this site.\t\t\t\t\t\t\t\t\t\t\t\t\t| Yes\t   |\r\n| SICCodeListItem\t\t\t\t\t\t\t\t\t| The GUID and 2007 description this site is associated to.\t\t\t\t\t\t\t\t\t\t\t| No       |\r\n| SiteTypeListItem\t\t\t\t\t\t\t\t\t| The GUID and type of the site (eg. Unoccupied Location, Residential, Non Residential).\t\t\t| No\t   |\r\n| SalesTerritoryListItem\t\t\t\t\t\t\t| The GUID and name of the sales territory this site is associated to.\t\t\t\t\t\t\t\t| No\t   |\r\n| CompanyOutletListItem\t\t\t\t\t\t\t\t| The GUID and name of the default company outlet this site is associated to.\t\t\t\t\t\t| Yes\t   |\r\n| CustomerSiteStateListItem\t\t\t\t\t\t\t| The GUID and state of the site (eg. Active, Closed, Suspended).\t\t\t\t\t\t\t\t\t| Yes\t   |\r\n| ZoneListItem\t\t\t\t\t\t\t\t\t\t| The GUID and description of the zone.\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t| No\t   |\r\n| RebatePaymentTypeListItem\t\t\t\t\t\t\t| The GUID and description of the rebate payment type.\t\t\t\t\t\t\t\t\t\t\t\t| No\t   |\r\n| RebatePaymentTermListItem\t\t\t\t\t\t\t| The GUID and description of the rebate payment term.\t\t\t\t\t\t\t\t\t\t\t\t| No\t   |\r\n| ReminderLetterPolicyListItem\t\t\t\t\t\t| The GUID and description of the reminder letter policy.\t\t\t\t\t\t\t\t\t\t\t| No\t   |\r\n| VisitStatusListItem\t\t\t\t\t\t\t\t| The GUID and description of the visit status.\t\t\t\t\t\t\t\t\t\t\t\t\t\t| No\t   |\r\n| ContactMethods.Email\t\t\t\t\t\t\t\t| The Email associated to the site.\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t| No\t   |\r\n| PaymentHandlingCodeListItem\t\t\t\t\t\t| The GUID and description of the payment handling code.\t\t\t\t\t\t\t\t\t\t\t| No\t   |\r\n| RelatedLocationInvoiceGuid\t\t\t\t\t\t| The GUID associated to the invoice location of this site.\t\t\t\t\t\t\t\t\t\t\t| Yes\t   |\r\n| RelatedLocationRemitGuid\t\t\t\t\t\t\t| The GUID associated to the remit location of this site.\t\t\t\t\t\t\t\t\t\t\t| No\t   |\r\n| RelatedLocationGuid\t\t\t\t\t\t\t\t| The GUID associated to the location of the site.\t\t\t\t\t\t\t\t\t\t\t\t\t| Yes\t   |\r\n| AccessTimes[0]\t\t\t\t\t\t\t\t\t| A list of objects containing customer site access time.\t\t\t\t\t\t\t\t\t\t\t| No\t   |\r\n| AccessTimes[0].Guid\t\t\t\t\t\t\t\t| The GUID associated to the site access time.\t\t\t\t\t\t\t\t\t\t\t\t\t\t| No\t   |\r\n| AccessTimes[0].AccessContact\t\t\t\t\t\t| The access contact name to associated site.\t\t\t\t\t\t\t\t\t\t\t\t\t\t| No\t   |\r\n| AccessTimes[0].AccessNotes\t\t\t\t\t\t| The access notes to associated site.\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t| No\t   |\r\n| AccessTimes[0].AccessStartTime\t\t\t\t\t| The access start time to associated site.\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t| Yes\t   |\r\n| AccessTimes[0].AccessEndTime\t\t\t\t\t\t| The access end time to associated site.\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t| Yes\t   |\r\n| AccessTimes[0].DayOfWeekListItem\t\t\t\t\t| The GUID and description of the day of week to access.\t\t\t\t\t\t\t\t\t\t\t| Yes\t   |\r\n| DocumentDeliveryMethods[]\t\t\t\t\t\t\t| The array of document delivery types associated to the customer site.\t\t\t\t\t\t\t\t| No\t   |\r\n| DocumentDeliveryMethods[0].DocumentDeliveryType\t| The GUID and description of the document delivery type associated to the DocumentDeliveryMethods. | No\t   |\r\n| RelatedLocationDocumentGuid\t\t\t\t\t\t| The guid associated to the document location of this site.\t\t\t\t\t\t\t\t\t\t| No\t   |\r\n| RelatedLocationStatementGuid\t\t\t\t\t\t| The guid associated to the statement location of this site.\t\t\t\t\t\t\t\t\t\t| No\t   |\r\n| RelatedLocationQuotationGuid\t\t\t\t\t\t| The guid associated to the quotation location of this site.\t\t\t\t\t\t\t\t\t\t| No\t   |\r\n| RelatedTradingNames[]\t\t\t\t\t\t\t\t| The array of customer trading names associated to the customer site.\t\t\t\t\t\t\t\t| No\t   |\r\n| RelatedTradingNames[0].Guid\t\t\t\t\t\t| The guid associated to the customer trading name associated to the customer site.\t\t\t\t\t| No\t   |\r\n| RelatedTradingNames[0].RelatedTradingNameGuid\t\t| The guid of the customer trading name associated to the customer site.\t\t\t\t\t\t\t| Yes\t   |\r\n| RelatedTradingNames[0].Description\t\t\t\t| The description of customer trading name associated to the customer site.\t\t\t\t\t\t\t| No\t   |\r\n| RelatedTradingNameGuidFilter\t\t\t\t\t\t| Used to filter on related trading name guid.\t\t\t\t\t\t\t\t\t\t\t\t\t\t| No\t   |\r\n| Areas\t\t\t\t\t\t\t\t\t\t\t\t| A list of objects containing customer site area.\t\t\t\t\t\t\t\t\t\t\t\t\t| No\t   |\r\n| Areas[0].Guid\t\t\t\t\t\t\t\t\t\t| The GUID associated to the customer site area.\t\t\t\t\t\t\t\t\t\t\t\t\t| No\t   |\r\n| Areas[0].Description\t\t\t\t\t\t\t\t| The description associated to the customer site area.\t\t\t\t\t\t\t\t\t\t\t\t| Yes\t   |\r\n| Areas[0].RelatedLocationGuid\t\t\t\t\t\t| The related location guid associated to the location of the customer site area.\t\t\t\t\t| Yes\t   |\r\n| Areas[0].IsDeleted\t\t\t\t\t\t\t\t| Whether the customer site area is deleted.\t\t\t\t\t\t\t\t\t\t\t\t\t\t| No\t   |\r\n| AreasGuidFilter\t\t\t\t\t\t\t\t\t| Used to filter the customer site area by GUID.\t\t\t\t\t\t\t\t\t\t\t\t\t| No\t   |\r\n| AreasRelatedLocationGuidFilter\t\t\t\t\t| Used to filter the related location guid associated to the location of the customer site area.\t| No\t   |\r\n| RelatedHealthAndSafetyBlobs\t\t\t\t\t\t| The array of related health and safety blobs to this site.\t\t\t\t\t\t\t\t\t\t| No\t   |\r\n| RelatedHealthAndSafetyBlobs[0].Guid\t\t\t\t| The GUID associated to the RelatedHealthAndSafetyBlob.\t\t\t\t\t\t\t\t\t\t\t| No\t   |\t\r\n| RelatedHealthAndSafetyBlobs[0].Hash\t\t\t\t| The hash of the external document blob to be used against the /blob endpoint. Files are provided as an octet stream which will need to be converted. | No |\r\n| RelatedHealthAndSafetyBlobs[0].DocumentName\t\t| The document name\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t| No\t   |\r\n| RelatedHealthAndSafetyBlobs[0].DocumentReference\t| The document reference\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t| No\t   |\r\n| RelatedHealthAndSafetyBlobs[0].ValidFrom\t\t\t| The valid from date\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t| No\t   |\r\n| RelatedHealthAndSafetyBlobs[0].ValidUntil\t\t\t| The valid until date\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t| No\t   |\r\n| RelatedHealthAndSafetyBlobs[0].IsHighRisk\t\t\t| Whether the document contains high risk items\t\t\t\t\t\t\t\t\t\t\t\t\t\t| No\t   |\r\n| RelatedHealthAndSafetyBlobs[0].IsSentToVehicle\t| Whether the document is sent to vehicle\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t| No\t   |\r\n| RelatedHealthAndSafetyBlobs[0].HealthAndSafetyDocumentTypeListItem\t| The GUID and description of the health and safety document type\t\t\t\t| No\t   |\r\n| IsDeleted\t\t\t\t\t\t\t\t\t\t\t| Whether site is deleted.\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t| Yes      |\r\n| LocalAuthorityListItem\t\t\t\t\t\t\t| The GUID and description of the local authority related to customer site.\t\t\t\t\t\t\t| No       |\r\n| LocalAuthorityGuidFilter\t\t\t\t\t\t\t| Used to filter the local Authority Guid associated to the customer site\t\t\t\t\t\t\t| No       |\r\n\r\n## Extra validations\r\n\r\n| Condition | Error message |\r\n| --------- | ------------- |\r\n| Customer not found with value RelatedCustomerGuid | Failed to retrieve Customer with RelatedCustomerGuid of {value of RelatedCustomerGuid} |\r\n| ZoneListItem isDeleted flag is set to true | Failed to save entity. IsDeleted flag set to true for given property with GUID {ZoneListItem.Guid} |\r\n| Failed to save/update Site because the supplied CustomerTradingName is not valid. The update has been rejected. Change RelatedTradingNames.RelatedTradingNameGuid to the Guid of a valid and undeleted CustomerTradingName. |\r\n| If Areas.Guid is not null on POST | One of the Areas in the request is an update. The request could not be processed. Ensure that none of the Areas has a guid. |\r\n| If Areas.IsDeleted is not null/true on POST | Attempt to has been made to set Areas.IsDeleted. The request could not be processed. Ensure that Areas.IsDeleted has default value. |\r\n| If Areas.IsDeleted is changed. | Areas.IsDeleted is a read-only property. The request could not be processed. Ensure that Areas.IsDeleted is not changed. |\r\n| If RelatedTradingNames.Guid is not null on POST | One of the RelatedTradingNames in the request is an update. The request could not be processed. Ensure that none of the RelatedTradingNames has a guid. |\r\n| If RelatedTradingNames.Guid is not unique | Failed to save/update Site because duplicate Guid listed in The RelatedTradingNames array. |\r\n| If RelatedTradingNames.Description is not null or changed. | Attempt to has been made to set RelatedTradingNames.Description. The request could not be processed. Ensure that RelatedTradingNames.Description has default value. |\r\n| If RelatedTradingNames.RelatedTradingNameGuid is not unique | Failed to save/update Site because duplicate RelatedTradingNameGuid listed in The RelatedTradingNames array. |\r\n| If RelatedTradingNameGuid is not related to RelatedCustomerGuid | The CustomerTradingName and Customer do not match. The resource could not be created/updated. Ensure that RelatedCustomerGuid references a CustomerTradingName of CustomerId. |\r\n| If RelatedTradingNames.Guid is not related to CustomerSite Guid | The CustomerTradingNameCustomerSite and CustomerSite do not match. The resource could not be created/updated. Ensure that Guid references a CustomerTradingNameCustomerSite of CustomerSiteId. |\r\n| RelatedHealthAndSafetyBlobs is not null for Insert | Failed to save/update site because RelatedHealthAndSafetyBlobs creation is not permitted |\r\n| RelatedHealthAndSafetyBlobs[0].Guid is changed for Update | RelatedHealthAndSafetyBlobs.Guid is a read-only property |\r\n| RelatedHealthAndSafetyBlobs[0].Hash is changed for Update | RelatedHealthAndSafetyBlobs.Hash is a read-only property |\r\n| RelatedHealthAndSafetyBlobs[0].DocumentName is changed for Update | RelatedHealthAndSafetyBlobs.DocumentName is a read-only property |\r\n| RelatedHealthAndSafetyBlobs[0].DocumentReference is changed for Update | RelatedHealthAndSafetyBlobs.DocumentReference is a read-only property |\r\n| RelatedHealthAndSafetyBlobs[0].IsSentToVehicle is changed for Update | RelatedHealthAndSafetyBlobs.IsSentToVehicle is a read-only property |\r\n| RelatedHealthAndSafetyBlobs[0].IsHighRisk is changed for Update | RelatedHealthAndSafetyBlobs.IsHighRisk is a read-only property |\r\n| RelatedHealthAndSafetyBlobs[0].ValidFrom is changed for Update | RelatedHealthAndSafetyBlobs.ValidFrom is a read-only property |\r\n| RelatedHealthAndSafetyBlobs[0].ValidUntil is changed for Update | RelatedHealthAndSafetyBlobs.ValidUntil is a read-only property |\r\n| RelatedHealthAndSafetyBlobs[0].HealthAndSafetyDocumentTypeListItem.Guid is changed for Update | RelatedHealthAndSafetyBlobs.HealthAndSafetyDocumentTypeListItem.Guid is a read-only property |\r\n\r\n##  Information\r\n\r\n| Information |\r\n| ----------- |\r\n| Creating a new site with related location guid will create a new location with same information and it will be linked to the site which is created, so we will get different related location guid on getting the site  |\r\n| If related invoice location guid is same as related location guid then related invoice location guid will be using the location guid created on the site |\r\n| If related invoice location guid is not same as related location guid then the site will be created with the invoice location guid passed from the request |\r\n| If related remit location guid is same as related location guid then related remit location guid will be using the location guid created on the site |\r\n| If related remit location guid is not same as related location guid then the site will be created with the remit location guid passed from the request |\r\n","operationId":"Site_Create","consumes":["application/json"],"produces":["application/json"],"parameters":[{"in":"body","required":true,"schema":{"$ref":"#/definitions/ApiResourceId"}}],"responses":{"200":{"description":"OK","schema":{"$ref":"#/definitions/ApiResourceId"}}}}},"/lists/siteTypes/{guid}":{"get":{"tags":["SiteType"],"summary":"Find with GUID","description":"| Property                  | Description                                                              |\r\n| ------------------------- | ------------------------------------------------------------------------ |\r\n| GUID                      | The GUID associated to the site type                              |\r\n| Description               | The description of the site type                                  |\r\n| IsDeleted                 | Whether the site type is deleted\t\t \t \t\t\t\t\t\t|","operationId":"SiteType_Get","consumes":["application/json"],"produces":["application/json"],"parameters":[{"name":"guid","in":"path","required":true,"type":"string","format":"uuid"},{"name":"links","in":"query","required":false,"type":"string"},{"name":"include","in":"query","required":false,"type":"string"},{"name":"expand","in":"query","required":false,"type":"string"},{"name":"udf","in":"query","required":false,"type":"string"}],"responses":{"200":{"description":"OK","schema":{"$ref":"#/definitions/ApiResourceResultEntity[ApiIntegratorSiteTypeResource]"}}}}},"/lists/siteTypes":{"get":{"tags":["SiteType"],"summary":"Find with Filters","description":"| Property                  | Description                                                              |\r\n| ------------------------- | ------------------------------------------------------------------------ |\r\n| GUID                      | The GUID associated to the site type                              |\r\n| Description               | The description of the site type                                  |\r\n| IsDeleted                 | Whether the site type is deleted\t\t \t \t\t\t\t\t\t|","operationId":"SiteType_GetCollection","consumes":["application/json"],"produces":["application/json"],"parameters":[{"name":"filter","in":"query","required":false,"type":"string"},{"name":"search","in":"query","required":false,"type":"string"},{"name":"order","in":"query","required":false,"type":"string"},{"name":"max","in":"query","required":false,"type":"integer","format":"int32"},{"name":"page","in":"query","required":false,"type":"integer","format":"int32"},{"name":"includeCount","in":"query","required":false,"type":"boolean"},{"name":"includeDeleted","in":"query","required":false,"type":"boolean"},{"name":"links","in":"query","required":false,"type":"string"},{"name":"udf","in":"query","required":false,"type":"string"}],"responses":{"200":{"description":"OK","schema":{"$ref":"#/definitions/ApiResourceResultCollection[ApiIntegratorSiteTypeResource]"}}}}},"/lists/staffTypes/{guid}":{"get":{"tags":["StaffType"],"summary":"Find with GUID","description":"| Property                  | Description                                                              |\r\n| ------------------------- | ------------------------------------------------------------------------ |\r\n| GUID                      | The GUID associated to the staff type\t\t\t\t   |\r\n| Description               | The description of the staff type\t\t\t\t\t   |\r\n| IsDeleted                 | Whether the staff type is deleted\t                   |\r\n\t\t\t\t   ","operationId":"StaffType_Get","consumes":["application/json"],"produces":["application/json"],"parameters":[{"name":"guid","in":"path","required":true,"type":"string","format":"uuid"},{"name":"links","in":"query","required":false,"type":"string"},{"name":"include","in":"query","required":false,"type":"string"},{"name":"expand","in":"query","required":false,"type":"string"},{"name":"udf","in":"query","required":false,"type":"string"}],"responses":{"200":{"description":"OK","schema":{"$ref":"#/definitions/ApiResourceResultEntity[ApiIntegratorStaffTypeResource]"}}}}},"/lists/staffTypes":{"get":{"tags":["StaffType"],"summary":"Find with Filters","description":"| Property                  | Description                                                              |\r\n| ------------------------- | ------------------------------------------------------------------------ |\r\n| GUID                      | The GUID associated to the staff type\t\t\t\t   |\r\n| Description               | The description of the staff type\t\t\t\t\t   |\r\n| IsDeleted                 | Whether the staff type is deleted\t                   |\r\n\t\t\t\t   ","operationId":"StaffType_GetCollection","consumes":["application/json"],"produces":["application/json"],"parameters":[{"name":"filter","in":"query","required":false,"type":"string"},{"name":"search","in":"query","required":false,"type":"string"},{"name":"order","in":"query","required":false,"type":"string"},{"name":"max","in":"query","required":false,"type":"integer","format":"int32"},{"name":"page","in":"query","required":false,"type":"integer","format":"int32"},{"name":"includeCount","in":"query","required":false,"type":"boolean"},{"name":"includeDeleted","in":"query","required":false,"type":"boolean"},{"name":"links","in":"query","required":false,"type":"string"},{"name":"udf","in":"query","required":false,"type":"string"}],"responses":{"200":{"description":"OK","schema":{"$ref":"#/definitions/ApiResourceResultCollection[ApiIntegratorStaffTypeResource]"}}}}},"/lists/subscriptions/{guid}":{"get":{"tags":["Subscription"],"summary":"Find with GUID","description":"| Property                  | Description                                                           |\r\n| ------------------------- | --------------------------------------------------------------------- |\r\n| GUID                      | The GUID associated to the subscription\t\t\t\t\t\t\t\t|\r\n| Description               | The description of the subscription\t\t\t\t\t\t\t\t\t|\r\n| IsDeleted                 | Whether the subscription is deleted\t\t \t\t\t\t\t\t\t|","operationId":"Subscription_Get","consumes":["application/json"],"produces":["application/json"],"parameters":[{"name":"guid","in":"path","required":true,"type":"string","format":"uuid"},{"name":"links","in":"query","required":false,"type":"string"},{"name":"include","in":"query","required":false,"type":"string"},{"name":"expand","in":"query","required":false,"type":"string"},{"name":"udf","in":"query","required":false,"type":"string"}],"responses":{"200":{"description":"OK","schema":{"$ref":"#/definitions/ApiResourceResultEntity[ApiIntegratorSubscriptionResource]"}}}}},"/lists/subscriptions":{"get":{"tags":["Subscription"],"summary":"Find with Filters","description":"| Property                  | Description                                                           |\r\n| ------------------------- | --------------------------------------------------------------------- |\r\n| GUID                      | The GUID associated to the subscription\t\t\t\t\t\t\t\t|\r\n| Description               | The description of the subscription\t\t\t\t\t\t\t\t\t|\r\n| IsDeleted                 | Whether the subscription is deleted\t\t \t\t\t\t\t\t\t|","operationId":"Subscription_GetCollection","consumes":["application/json"],"produces":["application/json"],"parameters":[{"name":"filter","in":"query","required":false,"type":"string"},{"name":"search","in":"query","required":false,"type":"string"},{"name":"order","in":"query","required":false,"type":"string"},{"name":"max","in":"query","required":false,"type":"integer","format":"int32"},{"name":"page","in":"query","required":false,"type":"integer","format":"int32"},{"name":"includeCount","in":"query","required":false,"type":"boolean"},{"name":"includeDeleted","in":"query","required":false,"type":"boolean"},{"name":"links","in":"query","required":false,"type":"string"},{"name":"udf","in":"query","required":false,"type":"string"}],"responses":{"200":{"description":"OK","schema":{"$ref":"#/definitions/ApiResourceResultCollection[ApiIntegratorSubscriptionResource]"}}}}},"/lists/subscriptionTypes/{guid}":{"get":{"tags":["SubscriptionType"],"summary":"Find with GUID","description":"| Property                  | Description\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t|\r\n| ------------------------- | --------------------------------------------------------------------------------\t|\r\n| GUID                      | The GUID associated to the subscription type\t\t\t\t\t\t\t\t\t\t|\r\n| Description               | The description of the subscription type\t\t\t\t\t\t\t\t\t\t\t|\r\n| SubscriptionListItem      | The GUID and description of the subscription associated to the subscription type\t|\r\n| IsDeleted                 | Whether the subscription type is deleted\t\t \t\t\t\t\t\t\t\t\t|","operationId":"SubscriptionType_Get","consumes":["application/json"],"produces":["application/json"],"parameters":[{"name":"guid","in":"path","required":true,"type":"string","format":"uuid"},{"name":"links","in":"query","required":false,"type":"string"},{"name":"include","in":"query","required":false,"type":"string"},{"name":"expand","in":"query","required":false,"type":"string"},{"name":"udf","in":"query","required":false,"type":"string"}],"responses":{"200":{"description":"OK","schema":{"$ref":"#/definitions/ApiResourceResultEntity[ApiIntegratorSubscriptionTypeResource]"}}}}},"/lists/subscriptionTypes":{"get":{"tags":["SubscriptionType"],"summary":"Find with Filters","description":"| Property                  | Description\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t|\r\n| ------------------------- | --------------------------------------------------------------------------------\t|\r\n| GUID                      | The GUID associated to the subscription type\t\t\t\t\t\t\t\t\t\t|\r\n| Description               | The description of the subscription type\t\t\t\t\t\t\t\t\t\t\t|\r\n| SubscriptionListItem      | The GUID and description of the subscription associated to the subscription type\t|\r\n| IsDeleted                 | Whether the subscription type is deleted\t\t \t\t\t\t\t\t\t\t\t|","operationId":"SubscriptionType_GetCollection","consumes":["application/json"],"produces":["application/json"],"parameters":[{"name":"filter","in":"query","required":false,"type":"string"},{"name":"search","in":"query","required":false,"type":"string"},{"name":"order","in":"query","required":false,"type":"string"},{"name":"max","in":"query","required":false,"type":"integer","format":"int32"},{"name":"page","in":"query","required":false,"type":"integer","format":"int32"},{"name":"includeCount","in":"query","required":false,"type":"boolean"},{"name":"includeDeleted","in":"query","required":false,"type":"boolean"},{"name":"links","in":"query","required":false,"type":"string"},{"name":"udf","in":"query","required":false,"type":"string"}],"responses":{"200":{"description":"OK","schema":{"$ref":"#/definitions/ApiResourceResultCollection[ApiIntegratorSubscriptionTypeResource]"}}}}},"/directory/suppliers/changes":{"get":{"tags":["Supplier"],"summary":"Retrieve changes","description":"| Property       | Description                                                  |\r\n| -------------- | ------------------------------------------------------------ |\r\n| GUID                         | The GUID associated to the supplier. |\r\n| ApAccountCode                | The account code used for accounts payable associated to the supplier. |\r\n| BankDetails\t\t\t       | The object where bank details are specified.\t\t\t        \t\t |\r\n| BankDetails.AccountName      | The account name associated to the bank details. |\r\n| BankDetails.AccountNo        | The account number associated to the bank details. |\r\n| BankDetails.Address.Address1 | The address1 associated to the bank details. |\r\n| BankDetails.Address.Address2 | The address2 associated to the bank details. |\r\n| BankDetails.Address.Address3 | The address3 associated to the bank details. |\r\n| BankDetails.Address.Address4 | The address4 associated to the bank details. |\r\n| BankDetails.Address.Address5 | The address5 associated to the bank details. |\r\n| BankDetails.Address.Postcode | The postcode associated to the bank details. |\r\n| BankDetails.BankName         | The bank name associated to the bank details. |\r\n| BankDetails.BIC              | The Bank Identifier Code associated to the bank details. |\r\n| BankDetails.IBAN             | The International Bank Account Number associated to the bank details. |\r\n| BankDetails.SortCode         | The sort code associated to the bank details. |\r\n| BankDetails.DirectDebitRunConfigListItem | The GUID and name of the direct debit run config associated to the bank details. |\r\n| CompanyOutletListItem        | The GUID and name of the company outlet associated to the supplier. |\r\n| CurrencyListItem             | The GUID and name of the currency associated to the supplier. |\r\n| Description                  | The description associated to the supplier. |\r\n| IsTransportSupplier          | Is this a transport supplier? |\r\n| PaymentTermListItem          | The GUID and name of the payment term associated to the supplier. |\r\n| PaymentTypeListItem          | The GUID and name of the payment type associated to the supplier. |\r\n","operationId":"Supplier_GetChanges","consumes":["application/json"],"produces":["application/json"],"parameters":[{"name":"since","in":"query","required":false,"type":"string"},{"name":"cursor","in":"query","required":false,"type":"string"},{"name":"links","in":"query","required":false,"type":"string"}],"responses":{"200":{"description":"OK","schema":{"$ref":"#/definitions/ApiResourceChanges[ApiIntegratorSupplierAccountResource]"}}}}},"/directory/suppliers/{guid}":{"get":{"tags":["Supplier"],"summary":"Find with GUID","description":"| Property       | Description                                                  |\r\n| -------------- | ------------------------------------------------------------ |\r\n| GUID                         | The GUID associated to the supplier. |\r\n| ApAccountCode                | The account code used for accounts payable associated to the supplier. |\r\n| BankDetails\t\t\t       | The object where bank details are specified.\t\t\t        \t\t |\r\n| BankDetails.AccountName      | The account name associated to the bank details. |\r\n| BankDetails.AccountNo        | The account number associated to the bank details. |\r\n| BankDetails.Address.Address1 | The address1 associated to the bank details. |\r\n| BankDetails.Address.Address2 | The address2 associated to the bank details. |\r\n| BankDetails.Address.Address3 | The address3 associated to the bank details. |\r\n| BankDetails.Address.Address4 | The address4 associated to the bank details. |\r\n| BankDetails.Address.Address5 | The address5 associated to the bank details. |\r\n| BankDetails.Address.Postcode | The postcode associated to the bank details. |\r\n| BankDetails.BankName         | The bank name associated to the bank details. |\r\n| BankDetails.BIC              | The Bank Identifier Code associated to the bank details. |\r\n| BankDetails.IBAN             | The International Bank Account Number associated to the bank details. |\r\n| BankDetails.SortCode         | The sort code associated to the bank details. |\r\n| BankDetails.DirectDebitRunConfigListItem | The GUID and name of the direct debit run config associated to the bank details. |\r\n| CompanyOutletListItem        | The GUID and name of the company outlet associated to the supplier. |\r\n| CurrencyListItem             | The GUID and name of the currency associated to the supplier. |\r\n| Description                  | The description associated to the supplier. |\r\n| IsTransportSupplier          | Is this a transport supplier? |\r\n| PaymentTermListItem          | The GUID and name of the payment term associated to the supplier. |\r\n| PaymentTypeListItem          | The GUID and name of the payment type associated to the supplier. |\r\n","operationId":"Supplier_Get","consumes":["application/json"],"produces":["application/json"],"parameters":[{"name":"guid","in":"path","required":true,"type":"string","format":"uuid"},{"name":"links","in":"query","required":false,"type":"string"},{"name":"include","in":"query","required":false,"type":"string"},{"name":"expand","in":"query","required":false,"type":"string"},{"name":"udf","in":"query","required":false,"type":"string"}],"responses":{"200":{"description":"OK","schema":{"$ref":"#/definitions/ApiResourceResultEntity[ApiIntegratorSupplierAccountResource]"}}}},"put":{"tags":["Supplier"],"summary":"Partial update","description":"| Property       | Description                                                  | Required |\r\n| -------------- | ------------------------------------------------------------ | -------- |\r\n| GUID                         | The GUID associated to the supplier. | No |\r\n| ApAccountCode                | The account code used for accounts payable associated to the supplier. | Yes |\r\n| BankDetails\t\t\t       | The object where bank details are specified.\t\t\t        \t\t | No |\r\n| BankDetails.AccountName      | The account name associated to the bank details. | Yes |\r\n| BankDetails.AccountNo        | The account number associated to the bank details. | Yes |\r\n| BankDetails.Address.Address1 | The address1 associated to the bank details. | No |\r\n| BankDetails.Address.Address2 | The address2 associated to the bank details. | No |\r\n| BankDetails.Address.Address3 | The address3 associated to the bank details. | No |\r\n| BankDetails.Address.Address4 | The address4 associated to the bank details. | No |\r\n| BankDetails.Address.Address5 | The address5 associated to the bank details. | No |\r\n| BankDetails.Address.Postcode | The postcode associated to the bank details. | No |\r\n| BankDetails.BankName         | The bank name associated to the bank details. | Yes |\r\n| BankDetails.BIC              | The Bank Identifier Code associated to the bank details. | No |\r\n| BankDetails.IBAN             | The International Bank Account Number associated to the bank details. | No |\r\n| BankDetails.SortCode         | The sort code associated to the bank details. | No |\r\n| BankDetails.DirectDebitRunConfigListItem | The GUID and name of the direct debit run config associated to the bank details. | Yes |\r\n| CompanyOutletListItem        | The GUID and name of the company outlet associated to the supplier. | No |\r\n| CurrencyListItem             | The GUID and name of the currency associated to the supplier. | Yes |\r\n| Description                  | The description associated to the supplier. | Yes |\r\n| IsTransportSupplier          | Is this a transport supplier? | No |\r\n| PaymentTermListItem          | The GUID and name of the payment term associated to the supplier. | No |\r\n| PaymentTypeListItem          | The GUID and name of the payment type associated to the supplier. | No |\r\n\r\n## Extra validations\r\n\r\n| Condition | Error message |\r\n| --------- | ------------- |\r\n| CompanyOutlet not found with value CompanyOutletListItem.Guid | Failed to retrieve CompanyOutlet with GUID of {value of CompanyOutletListItem.Guid} |\r\n| PaymentType not found with value PaymentTypeListItem.Guid | Failed to retrieve PaymentType with GUID of {value of PaymentTypeListItem.Guid} |\r\n| PaymentTerm not found with value PaymentTermListItem.Guid | Failed to retrieve PaymentTerm with GUID of {value of PaymentTermListItem.Guid} |\r\n| Currency not found with value CurrencyListItem.Guid | Failed to retrieve Currency with GUID of {value of CurrencyListItem.Guid} |\r\n| DirectDebitRunConfig not found with value BankDetails.DirectDebitRunConfigListItem.Guid | Failed to retrieve DirectDebitRunConfig with GUID of {value of BankDetails.DirectDebitRunConfigListItem.Guid} |\r\n| When APAccountCode is not unique | The ApAccountCode must be unique per supplier |\r\n| Description not unique per supplier | The description must be unique per supplier |\r\n| When Description is null/empty/more than 60 chars | Supplier/Haulier Description: Must have a value. Must be no more than 60 characters long |\r\n| When APAccountCode is null/empty/more than 20 chars | APAccountCode: Must have a value. Must be no more than 20 characters long |","operationId":"Supplier_Update","consumes":["application/json"],"produces":["application/json"],"parameters":[{"name":"guid","in":"path","required":true,"type":"string","format":"uuid"},{"in":"body","required":true,"schema":{"$ref":"#/definitions/ApiResourceId"}}],"responses":{"200":{"description":"OK","schema":{"$ref":"#/definitions/ApiResourceId"}}}}},"/directory/suppliers":{"get":{"tags":["Supplier"],"summary":"Find with Filters","description":"| Property       | Description                                                  |\r\n| -------------- | ------------------------------------------------------------ |\r\n| GUID                         | The GUID associated to the supplier. |\r\n| ApAccountCode                | The account code used for accounts payable associated to the supplier. |\r\n| BankDetails\t\t\t       | The object where bank details are specified.\t\t\t        \t\t |\r\n| BankDetails.AccountName      | The account name associated to the bank details. |\r\n| BankDetails.AccountNo        | The account number associated to the bank details. |\r\n| BankDetails.Address.Address1 | The address1 associated to the bank details. |\r\n| BankDetails.Address.Address2 | The address2 associated to the bank details. |\r\n| BankDetails.Address.Address3 | The address3 associated to the bank details. |\r\n| BankDetails.Address.Address4 | The address4 associated to the bank details. |\r\n| BankDetails.Address.Address5 | The address5 associated to the bank details. |\r\n| BankDetails.Address.Postcode | The postcode associated to the bank details. |\r\n| BankDetails.BankName         | The bank name associated to the bank details. |\r\n| BankDetails.BIC              | The Bank Identifier Code associated to the bank details. |\r\n| BankDetails.IBAN             | The International Bank Account Number associated to the bank details. |\r\n| BankDetails.SortCode         | The sort code associated to the bank details. |\r\n| BankDetails.DirectDebitRunConfigListItem | The GUID and name of the direct debit run config associated to the bank details. |\r\n| CompanyOutletListItem        | The GUID and name of the company outlet associated to the supplier. |\r\n| CurrencyListItem             | The GUID and name of the currency associated to the supplier. |\r\n| Description                  | The description associated to the supplier. |\r\n| IsTransportSupplier          | Is this a transport supplier? |\r\n| PaymentTermListItem          | The GUID and name of the payment term associated to the supplier. |\r\n| PaymentTypeListItem          | The GUID and name of the payment type associated to the supplier. |\r\n","operationId":"Supplier_GetCollection","consumes":["application/json"],"produces":["application/json"],"parameters":[{"name":"filter","in":"query","required":false,"type":"string"},{"name":"search","in":"query","required":false,"type":"string"},{"name":"order","in":"query","required":false,"type":"string"},{"name":"max","in":"query","required":false,"type":"integer","format":"int32"},{"name":"page","in":"query","required":false,"type":"integer","format":"int32"},{"name":"includeCount","in":"query","required":false,"type":"boolean"},{"name":"includeDeleted","in":"query","required":false,"type":"boolean"},{"name":"links","in":"query","required":false,"type":"string"},{"name":"udf","in":"query","required":false,"type":"string"}],"responses":{"200":{"description":"OK","schema":{"$ref":"#/definitions/ApiResourceResultCollection[ApiIntegratorSupplierAccountResource]"}}}},"post":{"tags":["Supplier"],"summary":"Create or update","description":"| Property       | Description                                                  | Required |\r\n| -------------- | ------------------------------------------------------------ | -------- |\r\n| GUID                         | The GUID associated to the supplier. | No |\r\n| ApAccountCode                | The account code used for accounts payable associated to the supplier. | Yes |\r\n| BankDetails\t\t\t       | The object where bank details are specified.\t\t\t        \t\t | No |\r\n| BankDetails.AccountName      | The account name associated to the bank details. | Yes |\r\n| BankDetails.AccountNo        | The account number associated to the bank details. | Yes |\r\n| BankDetails.Address.Address1 | The address1 associated to the bank details. | No |\r\n| BankDetails.Address.Address2 | The address2 associated to the bank details. | No |\r\n| BankDetails.Address.Address3 | The address3 associated to the bank details. | No |\r\n| BankDetails.Address.Address4 | The address4 associated to the bank details. | No |\r\n| BankDetails.Address.Address5 | The address5 associated to the bank details. | No |\r\n| BankDetails.Address.Postcode | The postcode associated to the bank details. | No |\r\n| BankDetails.BankName         | The bank name associated to the bank details. | Yes |\r\n| BankDetails.BIC              | The Bank Identifier Code associated to the bank details. | No |\r\n| BankDetails.IBAN             | The International Bank Account Number associated to the bank details. | No |\r\n| BankDetails.SortCode         | The sort code associated to the bank details. | No |\r\n| BankDetails.DirectDebitRunConfigListItem | The GUID and name of the direct debit run config associated to the bank details. | Yes |\r\n| CompanyOutletListItem        | The GUID and name of the company outlet associated to the supplier. | No |\r\n| CurrencyListItem             | The GUID and name of the currency associated to the supplier. | Yes |\r\n| Description                  | The description associated to the supplier. | Yes |\r\n| IsTransportSupplier          | Is this a transport supplier? | No |\r\n| PaymentTermListItem          | The GUID and name of the payment term associated to the supplier. | No |\r\n| PaymentTypeListItem          | The GUID and name of the payment type associated to the supplier. | No |\r\n\r\n## Extra validations\r\n\r\n| Condition | Error message |\r\n| --------- | ------------- |\r\n| CompanyOutlet not found with value CompanyOutletListItem.Guid | Failed to retrieve CompanyOutlet with GUID of {value of CompanyOutletListItem.Guid} |\r\n| PaymentType not found with value PaymentTypeListItem.Guid | Failed to retrieve PaymentType with GUID of {value of PaymentTypeListItem.Guid} |\r\n| PaymentTerm not found with value PaymentTermListItem.Guid | Failed to retrieve PaymentTerm with GUID of {value of PaymentTermListItem.Guid} |\r\n| Currency not found with value CurrencyListItem.Guid | Failed to retrieve Currency with GUID of {value of CurrencyListItem.Guid} |\r\n| DirectDebitRunConfig not found with value BankDetails.DirectDebitRunConfigListItem.Guid | Failed to retrieve DirectDebitRunConfig with GUID of {value of BankDetails.DirectDebitRunConfigListItem.Guid} |\r\n| When APAccountCode is not unique | The ApAccountCode must be unique per supplier |\r\n| When Description is null/empty/more than 60 chars | Supplier/Haulier Description: Must have a value. Must be no more than 60 characters long |\r\n| When APAccountCode is null/empty/more than 20 chars | APAccountCode: Must have a value. Must be no more than 20 characters long |","operationId":"Supplier_Create","consumes":["application/json"],"produces":["application/json"],"parameters":[{"in":"body","required":true,"schema":{"$ref":"#/definitions/ApiResourceId"}}],"responses":{"200":{"description":"OK","schema":{"$ref":"#/definitions/ApiResourceId"}}}}},"/purchasing/supplierBills/changes":{"get":{"tags":["SupplierBill"],"summary":"Retrieve changes","description":"| Property             | Description                                                           |\r\n| -------------------- | --------------------------------------------------------------------- |\r\n| RelatedSupplierGuid  | The GUID associated to the supplier of the supplier bill.             |\r\n| RelatedSupplierSiteGuid | The GUID associated to the supplier site of the supplier bill.     |\r\n| Reference\t\t\t   | The reference associated to the supplier bill.\t\t\t\t\t\t   |\r\n| Description\t\t   | The description associated to the supplier bill.\t\t\t\t\t   |\r\n| Amount\t\t\t   | The amount associated to the supplier bill.\t\t\t\t\t\t   |\r\n| AmountExVat\t\t   | The amount excluding VAT associated to the supplier bill.\t\t\t   |\r\n| IsFinalised\t\t   | Is this supplier bill finalised?                                      |\r\n| IsMatched\t\t\t   | Is this supplier bill matched?\t\t\t\t\t                       |\r\n| Date   \t\t\t   | The date associated to the supplier bill in ISO format (YYYY-MM-DD).  |\r\n| DueDate  \t\t       | The due date associated to the supplier bill in ISO format (YYYY-MM-DD).|\r\n| Number\t\t\t   | The number associated to the supplier bill.\t    \t\t\t\t   |\r\n| BillNo\t\t\t   | The bill number associated to the supplier bill.\t    \t\t\t   |","operationId":"SupplierBill_GetChanges","consumes":["application/json"],"produces":["application/json"],"parameters":[{"name":"since","in":"query","required":false,"type":"string"},{"name":"cursor","in":"query","required":false,"type":"string"},{"name":"links","in":"query","required":false,"type":"string"}],"responses":{"200":{"description":"OK","schema":{"$ref":"#/definitions/ApiResourceChanges[ApiIntegratorSupplierBillResource]"}}}}},"/purchasing/supplierBills/{guid}":{"get":{"tags":["SupplierBill"],"summary":"Find with GUID","description":"| Property             | Description                                                           |\r\n| -------------------- | --------------------------------------------------------------------- |\r\n| RelatedSupplierGuid  | The GUID associated to the supplier of the supplier bill.             |\r\n| RelatedSupplierSiteGuid | The GUID associated to the supplier site of the supplier bill.     |\r\n| Reference\t\t\t   | The reference associated to the supplier bill.\t\t\t\t\t\t   |\r\n| Description\t\t   | The description associated to the supplier bill.\t\t\t\t\t   |\r\n| Amount\t\t\t   | The amount associated to the supplier bill.\t\t\t\t\t\t   |\r\n| AmountExVat\t\t   | The amount excluding VAT associated to the supplier bill.\t\t\t   |\r\n| IsFinalised\t\t   | Is this supplier bill finalised?                                      |\r\n| IsMatched\t\t\t   | Is this supplier bill matched?\t\t\t\t\t                       |\r\n| Date   \t\t\t   | The date associated to the supplier bill in ISO format (YYYY-MM-DD).  |\r\n| DueDate  \t\t       | The due date associated to the supplier bill in ISO format (YYYY-MM-DD).|\r\n| Number\t\t\t   | The number associated to the supplier bill.\t    \t\t\t\t   |\r\n| BillNo\t\t\t   | The bill number associated to the supplier bill.\t    \t\t\t   |","operationId":"SupplierBill_Get","consumes":["application/json"],"produces":["application/json"],"parameters":[{"name":"guid","in":"path","required":true,"type":"string","format":"uuid"},{"name":"links","in":"query","required":false,"type":"string"},{"name":"include","in":"query","required":false,"type":"string"},{"name":"expand","in":"query","required":false,"type":"string"},{"name":"udf","in":"query","required":false,"type":"string"}],"responses":{"200":{"description":"OK","schema":{"$ref":"#/definitions/ApiResourceResultEntity[ApiIntegratorSupplierBillResource]"}}}},"put":{"tags":["SupplierBill"],"summary":"Partial update","description":"| Property             | Description                                                           | Required |\r\n| -------------------- | --------------------------------------------------------------------- | -------- |\r\n| RelatedSupplierGuid  | The GUID associated to the supplier of the supplier bill.  \t\t\t\t| Yes |\r\n| RelatedSupplierSiteGuid | The GUID associated to the supplier site of the supplier bill.\t\t\t| No |\r\n| Reference\t\t\t   | The reference associated to the supplier bill.\t\t\t\t\t\t\t\t| No |\r\n| Description\t\t   | The description associated to the supplier bill.\t\t\t\t\t\t\t| Yes |\r\n| Amount\t\t\t   | The amount associated to the supplier bill.\t\t\t\t\t\t\t\t| Yes |\r\n| AmountExVat\t\t   | The amount excluding VAT associated to the supplier bill.\t\t\t\t\t| Yes |\r\n| IsFinalised\t\t   | Is this supplier bill finalised? \t\t\t\t\t\t\t\t\t\t\t| Yes |\r\n| IsMatched\t\t\t   | Is this supplier bill matched?\t\t\t\t\t\t\t\t\t\t\t\t| Yes |\r\n| Date   \t\t\t   | The date associated to the supplier bill in ISO format (YYYY-MM-DD).\t\t| Yes |\r\n| DueDate   \t\t   | The due date associated to the supplier bill in ISO format (YYYY-MM-DD).\t| Yes |\r\n| Number\t\t\t   | The number associated to the supplier bill\t    \t\t\t\t\t\t\t| Yes |\r\n| BillNo\t\t\t   | The bill number associated to the supplier bill.\t    \t\t\t\t\t| No |\r\n\r\n## Extra validations\r\n\r\n| Condition | Error message |\r\n| --------- | ------------- |\r\n| IsFinalised is true | Can only create applied costs if bill is not finalised |\r\n| SupplierSite not found with value RelatedSupplierSiteGuid | Failed to retrieve SupplierSite with RelatedSupplierSiteGuid of {value of RelatedSupplierSiteGuid} |\r\n| Supplier not found with value RelatedSupplierGuid | Failed to retrieve Supplier with RelatedSupplierGuid of {value of RelatedSupplierGuid} |\r\n| Description is more than 60 characters long | Description must be no more than 60 characters long. |\r\n| Number is more than 60 characters long | Number must be no more than 60 characters long. |\r\n| Number already exists for the current supplier | The bill number must be unique per supplier | \r\n| IsMatched is true | Can only create applied costs if bill is unmatched |\r\n| IsFinalised is true | Can only create applied costs if bill is not finalised |\r\n| IsProForma is true | IsProForma must be false |\r\n| BillNo is not null | BillNo is a read-only property. |","operationId":"SupplierBill_Update","consumes":["application/json"],"produces":["application/json"],"parameters":[{"name":"guid","in":"path","required":true,"type":"string","format":"uuid"},{"in":"body","required":true,"schema":{"$ref":"#/definitions/ApiResourceId"}}],"responses":{"200":{"description":"OK","schema":{"$ref":"#/definitions/ApiResourceId"}}}}},"/purchasing/supplierBills":{"get":{"tags":["SupplierBill"],"summary":"Find with Filters","description":"| Property             | Description                                                           |\r\n| -------------------- | --------------------------------------------------------------------- |\r\n| RelatedSupplierGuid  | The GUID associated to the supplier of the supplier bill.             |\r\n| RelatedSupplierSiteGuid | The GUID associated to the supplier site of the supplier bill.     |\r\n| Reference\t\t\t   | The reference associated to the supplier bill.\t\t\t\t\t\t   |\r\n| Description\t\t   | The description associated to the supplier bill.\t\t\t\t\t   |\r\n| Amount\t\t\t   | The amount associated to the supplier bill.\t\t\t\t\t\t   |\r\n| AmountExVat\t\t   | The amount excluding VAT associated to the supplier bill.\t\t\t   |\r\n| IsFinalised\t\t   | Is this supplier bill finalised?                                      |\r\n| IsMatched\t\t\t   | Is this supplier bill matched?\t\t\t\t\t                       |\r\n| Date   \t\t\t   | The date associated to the supplier bill in ISO format (YYYY-MM-DD).  |\r\n| DueDate  \t\t       | The due date associated to the supplier bill in ISO format (YYYY-MM-DD).|\r\n| Number\t\t\t   | The number associated to the supplier bill.\t    \t\t\t\t   |\r\n| BillNo\t\t\t   | The bill number associated to the supplier bill.\t    \t\t\t   |","operationId":"SupplierBill_GetCollection","consumes":["application/json"],"produces":["application/json"],"parameters":[{"name":"filter","in":"query","required":false,"type":"string"},{"name":"search","in":"query","required":false,"type":"string"},{"name":"order","in":"query","required":false,"type":"string"},{"name":"max","in":"query","required":false,"type":"integer","format":"int32"},{"name":"page","in":"query","required":false,"type":"integer","format":"int32"},{"name":"includeCount","in":"query","required":false,"type":"boolean"},{"name":"includeDeleted","in":"query","required":false,"type":"boolean"},{"name":"links","in":"query","required":false,"type":"string"},{"name":"udf","in":"query","required":false,"type":"string"}],"responses":{"200":{"description":"OK","schema":{"$ref":"#/definitions/ApiResourceResultCollection[ApiIntegratorSupplierBillResource]"}}}},"post":{"tags":["SupplierBill"],"summary":"Create or update","description":"| Property             | Description                                                           | Required |\r\n| -------------------- | --------------------------------------------------------------------- | -------- |\r\n| RelatedSupplierGuid  | The GUID associated to the supplier of the supplier bill.  \t\t\t\t| Yes |\r\n| RelatedSupplierSiteGuid | The GUID associated to the supplier site of the supplier bill.\t\t\t| No |\r\n| Reference\t\t\t   | The reference associated to the supplier bill.\t\t\t\t\t\t\t\t| No |\r\n| Description\t\t   | The description associated to the supplier bill.\t\t\t\t\t\t\t| Yes |\r\n| Amount\t\t\t   | The amount associated to the supplier bill.\t\t\t\t\t\t\t\t| Yes |\r\n| AmountExVat\t\t   | The amount excluding VAT associated to the supplier bill.\t\t\t\t\t| Yes |\r\n| IsFinalised\t\t   | Is this supplier bill finalised? \t\t\t\t\t\t\t\t\t\t\t| Yes |\r\n| IsMatched\t\t\t   | Is this supplier bill matched?\t\t\t\t\t\t\t\t\t\t\t\t| Yes |\r\n| Date   \t\t\t   | The date associated to the supplier bill in ISO format (YYYY-MM-DD).\t\t| Yes |\r\n| DueDate   \t\t   | The due date associated to the supplier bill in ISO format (YYYY-MM-DD).\t| Yes |\r\n| Number\t\t\t   | The number associated to the supplier bill\t    \t\t\t\t\t\t\t| Yes |\r\n| BillNo\t\t\t   | The bill number associated to the supplier bill.\t    \t\t\t\t\t| No |\r\n\r\n## Extra validations\r\n\r\n| Condition | Error message |\r\n| --------- | ------------- |\r\n| IsFinalised is true | Can only create applied costs if bill is not finalised |\r\n| SupplierSite not found with value RelatedSupplierSiteGuid | Failed to retrieve SupplierSite with RelatedSupplierSiteGuid of {value of RelatedSupplierSiteGuid} |\r\n| Supplier not found with value RelatedSupplierGuid | Failed to retrieve Supplier with RelatedSupplierGuid of {value of RelatedSupplierGuid} |\r\n| Description is more than 60 characters long | Description must be no more than 60 characters long. |\r\n| Number is more than 60 characters long | Number must be no more than 60 characters long. |\r\n| Number already exists for the current supplier | The bill number must be unique per supplier | \r\n| IsMatched is true | Can only create applied costs if bill is unmatched |\r\n| IsFinalised is true | Can only create applied costs if bill is not finalised |\r\n| IsProForma is true | IsProForma must be false |\r\n| BillNo is not null | BillNo is a read-only property. |","operationId":"SupplierBill_Create","consumes":["application/json"],"produces":["application/json"],"parameters":[{"in":"body","required":true,"schema":{"$ref":"#/definitions/ApiResourceId"}}],"responses":{"200":{"description":"OK","schema":{"$ref":"#/definitions/ApiResourceId"}}}}},"/accounting/supplierPayments/changes":{"get":{"tags":["SupplierPayment"],"summary":"Retrieve changes","description":"| Property\t\t\t\t\t\t\t\t\t\t\t| Description\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t|\r\n| ------------------------------------------------- | ------------------------------------------------------------------------------------------------------|\r\n| GUID\t\t\t\t\t\t\t\t\t\t\t\t| The GUID associated to the supplier payment.\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t|\r\n| Amount\t\t\t\t\t\t\t\t\t\t\t| Amount of the supplier payment.\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t|\r\n| DateInput\t\t\t\t\t\t\t\t\t\t\t| The input date associated to the supplier payment.\t\t\t\t\t\t\t\t\t\t\t\t\t|\r\n| DateReceived\t\t\t\t\t\t\t\t\t\t| The received date associated to the supplier payment.\t\t\t\t\t\t\t\t\t\t\t\t\t|\r\n| IsBad\t\t\t\t\t\t\t\t\t\t\t\t| Whether the supplier payment is bad.\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t|\r\n| PaymentTypeListItem\t\t\t\t\t\t\t\t| The GUID and description of the payment type associated to the supplier payment.\t\t\t\t\t\t|\r\n| RelatedSupplierGuid\t\t\t\t\t\t\t\t| The GUID associated to the supplier of the supplier payment. Filterable.\t\t\t\t\t\t\t\t|\r\n| AccountingPeriodListItem\t\t\t\t\t\t\t| The GUID and description of the accounting period associated to the supplier payment.\t\t\t\t\t|\r\n| APPaymentStatusListItem\t\t\t\t\t\t\t| The GUID and description of the AP payment status associated to the supplier payment.\t\t\t\t\t|\r\n| DateBad\t\t\t\t\t\t\t\t\t\t\t| The bad date associated to the supplier payment.\t\t\t\t\t\t\t\t\t\t\t\t\t\t|\r\n| DateBadExported\t\t\t\t\t\t\t\t\t| The exported bad date associated to the supplier payment.\t\t\t\t\t\t\t\t\t\t\t\t|\r\n| DateCleared\t\t\t\t\t\t\t\t\t\t| The cleared date associated to the supplier payment.\t\t\t\t\t\t\t\t\t\t\t\t\t|\r\n| DateExported\t\t\t\t\t\t\t\t\t\t| The exported date associated to the supplier payment.\t\t\t\t\t\t\t\t\t\t\t\t\t|\r\n| DateProcessed\t\t\t\t\t\t\t\t\t\t| The processed date associated to the supplier payment.\t\t\t\t\t\t\t\t\t\t\t\t|\r\n| Notes\t\t\t\t\t\t\t\t\t\t\t\t| The notes associated to the supplier payment.\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t|\r\n| PayableCycleListItem\t\t\t\t\t\t\t\t| The GUID and description of the payable cycle associated to the supplier payment.\t\t\t\t\t\t|\r\n| PaymentPointListItem\t\t\t\t\t\t\t\t| The GUID and description of the payment point associated to the supplier payment.\t\t\t\t\t\t|\r\n| Reference\t\t\t\t\t\t\t\t\t\t\t| The reference\tassociated to the supplier payment.\t\t\t\t\t\t\t\t\t\t\t\t\t\t|\r\n| Allocations[0]\t\t\t\t\t\t\t\t\t| List of supplier payment allocation made for the supplier payment.\t\t\t\t\t\t\t\t\t| \r\n| Allocations[0].Amount\t\t\t\t\t\t\t\t| Amount of the supplier payment allocation.\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t| \r\n| Allocations[0].DateInput\t\t\t\t\t\t\t| The input date associated to the supplier payment allocation.\t\t\t\t\t\t\t\t\t\t\t| \r\n| Allocations[0].RelatedSupplierBillGuid            | The GUID associated to the supplier bill of the supplier payment.\t\t\t\t\t\t\t\t\t\t| \r\n| RelatedSupplierBillGuidFilter\t\t\t\t\t\t| The filter used to filter the related supplier bill guid associated to the Allocation. Filterable.\t|\r\n| IsDeleted\t\t\t\t\t\t\t\t\t\t\t| Supplier Payment is being deleted?\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t|\r\n","operationId":"SupplierPayment_GetChanges","consumes":["application/json"],"produces":["application/json"],"parameters":[{"name":"since","in":"query","required":false,"type":"string"},{"name":"cursor","in":"query","required":false,"type":"string"},{"name":"links","in":"query","required":false,"type":"string"}],"responses":{"200":{"description":"OK","schema":{"$ref":"#/definitions/ApiResourceChanges[ApiIntegratorSupplierPaymentResource]"}}}}},"/accounting/supplierPayments/{guid}":{"get":{"tags":["SupplierPayment"],"summary":"Find with GUID","description":"| Property\t\t\t\t\t\t\t\t\t\t\t| Description\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t|\r\n| ------------------------------------------------- | ------------------------------------------------------------------------------------------------------|\r\n| GUID\t\t\t\t\t\t\t\t\t\t\t\t| The GUID associated to the supplier payment.\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t|\r\n| Amount\t\t\t\t\t\t\t\t\t\t\t| Amount of the supplier payment.\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t|\r\n| DateInput\t\t\t\t\t\t\t\t\t\t\t| The input date associated to the supplier payment.\t\t\t\t\t\t\t\t\t\t\t\t\t|\r\n| DateReceived\t\t\t\t\t\t\t\t\t\t| The received date associated to the supplier payment.\t\t\t\t\t\t\t\t\t\t\t\t\t|\r\n| IsBad\t\t\t\t\t\t\t\t\t\t\t\t| Whether the supplier payment is bad.\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t|\r\n| PaymentTypeListItem\t\t\t\t\t\t\t\t| The GUID and description of the payment type associated to the supplier payment.\t\t\t\t\t\t|\r\n| RelatedSupplierGuid\t\t\t\t\t\t\t\t| The GUID associated to the supplier of the supplier payment. Filterable.\t\t\t\t\t\t\t\t|\r\n| AccountingPeriodListItem\t\t\t\t\t\t\t| The GUID and description of the accounting period associated to the supplier payment.\t\t\t\t\t|\r\n| APPaymentStatusListItem\t\t\t\t\t\t\t| The GUID and description of the AP payment status associated to the supplier payment.\t\t\t\t\t|\r\n| DateBad\t\t\t\t\t\t\t\t\t\t\t| The bad date associated to the supplier payment.\t\t\t\t\t\t\t\t\t\t\t\t\t\t|\r\n| DateBadExported\t\t\t\t\t\t\t\t\t| The exported bad date associated to the supplier payment.\t\t\t\t\t\t\t\t\t\t\t\t|\r\n| DateCleared\t\t\t\t\t\t\t\t\t\t| The cleared date associated to the supplier payment.\t\t\t\t\t\t\t\t\t\t\t\t\t|\r\n| DateExported\t\t\t\t\t\t\t\t\t\t| The exported date associated to the supplier payment.\t\t\t\t\t\t\t\t\t\t\t\t\t|\r\n| DateProcessed\t\t\t\t\t\t\t\t\t\t| The processed date associated to the supplier payment.\t\t\t\t\t\t\t\t\t\t\t\t|\r\n| Notes\t\t\t\t\t\t\t\t\t\t\t\t| The notes associated to the supplier payment.\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t|\r\n| PayableCycleListItem\t\t\t\t\t\t\t\t| The GUID and description of the payable cycle associated to the supplier payment.\t\t\t\t\t\t|\r\n| PaymentPointListItem\t\t\t\t\t\t\t\t| The GUID and description of the payment point associated to the supplier payment.\t\t\t\t\t\t|\r\n| Reference\t\t\t\t\t\t\t\t\t\t\t| The reference\tassociated to the supplier payment.\t\t\t\t\t\t\t\t\t\t\t\t\t\t|\r\n| Allocations[0]\t\t\t\t\t\t\t\t\t| List of supplier payment allocation made for the supplier payment.\t\t\t\t\t\t\t\t\t| \r\n| Allocations[0].Amount\t\t\t\t\t\t\t\t| Amount of the supplier payment allocation.\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t| \r\n| Allocations[0].DateInput\t\t\t\t\t\t\t| The input date associated to the supplier payment allocation.\t\t\t\t\t\t\t\t\t\t\t| \r\n| Allocations[0].RelatedSupplierBillGuid            | The GUID associated to the supplier bill of the supplier payment.\t\t\t\t\t\t\t\t\t\t| \r\n| RelatedSupplierBillGuidFilter\t\t\t\t\t\t| The filter used to filter the related supplier bill guid associated to the Allocation. Filterable.\t|\r\n| IsDeleted\t\t\t\t\t\t\t\t\t\t\t| Supplier Payment is being deleted?\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t|\r\n","operationId":"SupplierPayment_Get","consumes":["application/json"],"produces":["application/json"],"parameters":[{"name":"guid","in":"path","required":true,"type":"string","format":"uuid"},{"name":"links","in":"query","required":false,"type":"string"},{"name":"include","in":"query","required":false,"type":"string"},{"name":"expand","in":"query","required":false,"type":"string"},{"name":"udf","in":"query","required":false,"type":"string"}],"responses":{"200":{"description":"OK","schema":{"$ref":"#/definitions/ApiResourceResultEntity[ApiIntegratorSupplierPaymentResource]"}}}},"put":{"tags":["SupplierPayment"],"summary":"Partial update","description":"| Property\t\t\t\t\t\t\t\t\t\t\t| Description\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t| Required |\r\n| ------------------------------------------------- | ------------------------------------------------------------------------------------------------------| -------- |\r\n| GUID\t\t\t\t\t\t\t\t\t\t\t\t| The GUID associated to the supplier payment.\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t|\t No    |\r\n| Amount\t\t\t\t\t\t\t\t\t\t\t| Amount of the supplier payment.\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t|\t Yes   |\r\n| DateInput\t\t\t\t\t\t\t\t\t\t\t| The input date associated to the supplier payment.\t\t\t\t\t\t\t\t\t\t\t\t\t|\t Yes   |\r\n| DateReceived\t\t\t\t\t\t\t\t\t\t| The received date associated to the supplier payment.\t\t\t\t\t\t\t\t\t\t\t\t\t|\t Yes   |\r\n| IsBad\t\t\t\t\t\t\t\t\t\t\t\t| Whether the supplier payment is bad.\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t|\t Yes   |\r\n| PaymentTypeListItem\t\t\t\t\t\t\t\t| The GUID and description of the payment type associated to the supplier payment.\t\t\t\t\t\t|\t Yes   |\r\n| RelatedSupplierGuid\t\t\t\t\t\t\t\t| The GUID associated to the supplier of the supplier payment. Filterable.\t\t\t\t\t\t\t\t|\t Yes   |\r\n| AccountingPeriodListItem\t\t\t\t\t\t\t| The GUID and description of the accounting period associated to the supplier payment.\t\t\t\t\t|\t No    |\r\n| APPaymentStatusListItem\t\t\t\t\t\t\t| The GUID and description of the AP payment status associated to the supplier payment.\t\t\t\t\t|\t No    |\r\n| DateBad\t\t\t\t\t\t\t\t\t\t\t| The bad date associated to the supplier payment.\t\t\t\t\t\t\t\t\t\t\t\t\t\t|\t No    |\r\n| DateBadExported\t\t\t\t\t\t\t\t\t| The exported bad date associated to the supplier payment.\t\t\t\t\t\t\t\t\t\t\t\t|\t No    |\r\n| DateCleared\t\t\t\t\t\t\t\t\t\t| The cleared date associated to the supplier payment.\t\t\t\t\t\t\t\t\t\t\t\t\t|\t No    |\r\n| DateExported\t\t\t\t\t\t\t\t\t\t| The exported date associated to the supplier payment.\t\t\t\t\t\t\t\t\t\t\t\t\t|\t No    |\r\n| DateProcessed\t\t\t\t\t\t\t\t\t\t| The processed date associated to the supplier payment.\t\t\t\t\t\t\t\t\t\t\t\t|\t No    |\r\n| Notes\t\t\t\t\t\t\t\t\t\t\t\t| The notes associated to the supplier payment.\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t|\t No    |\r\n| PayableCycleListItem\t\t\t\t\t\t\t\t| The GUID and description of the payable cycle associated to the supplier payment.\t\t\t\t\t\t|\t No    |\r\n| PaymentPointListItem\t\t\t\t\t\t\t\t| The GUID and description of the payment point associated to the supplier payment.\t\t\t\t\t\t|\t No    |\r\n| Reference\t\t\t\t\t\t\t\t\t\t\t| The reference\tassociated to the supplier payment.\t\t\t\t\t\t\t\t\t\t\t\t\t\t|\t No    |\r\n| Allocations[0]\t\t\t\t\t\t\t\t\t| List of supplier payment allocation made for the supplier payment.\t\t\t\t\t\t\t\t\t|\t No    | \r\n| Allocations[0].Amount\t\t\t\t\t\t\t\t| Amount of the supplier payment allocation.\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t|\t Yes   | \r\n| Allocations[0].DateInput\t\t\t\t\t\t\t| The input date associated to the supplier payment allocation.\t\t\t\t\t\t\t\t\t\t\t|\t Yes   | \r\n| Allocations[0].RelatedSupplierBillGuid            | The GUID associated to the supplier bill of the supplier payment.\t\t\t\t\t\t\t\t\t\t|\t Yes   | \r\n| RelatedSupplierBillGuidFilter\t\t\t\t\t\t| The filter used to filter the related supplier bill guid associated to the Allocation. Filterable.\t|\t No    |\r\n| IsDeleted\t\t\t\t\t\t\t\t\t\t\t| Supplier Payment is being deleted?\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t|\t No    |\r\n\r\n## Extra validations\r\n\r\n| Condition | Error message |\r\n| --------- | ------------- |\r\n| If RelatedSupplierGuid provided is Deleted. | The provided RelatedSupplierGuid is deleted. Could not update the resource. Please check the relevant list end point for the available options. |\r\n| If PaymentTypeListItem.Guid provided is Deleted. | The provided PaymentTypeListItem is deleted. Could not update the resource. Please check the relevant list end point for the available options. |\r\n| If AccountingPeriodListItem.Guid provided is Deleted. | The provided AccountingPeriodListItem is deleted. Could not update the resource. Please check the relevant list end point for the available options. |\r\n| If APPaymentStatusListItem.Guid provided is Deleted. | The provided APPaymentStatusListItem is deleted. Could not update the resource. Please check the relevant list end point for the available options. |\r\n| If PayableCycleListItem.Guid provided is Deleted. | The provided PayableCycleListItem is deleted. Could not update the resource. Please check the relevant list end point for the available options. |\r\n| If PaymentPointListItem.Guid provided is Deleted. | The provided PaymentPointListItem is deleted. Could not update the resource. Please check the relevant list end point for the available options. |\r\n| If RelatedSupplierBillGuid provided is Deleted. | The provided RelatedSupplierBillGuid is deleted. Could not update the resource. Please check the relevant list end point for the available options. |\r\n| If we attempt to delete a supplier payment | IsDeleted is TRUE. Could not process the request. SupplierPayment can not be deleted via the REST API. |\r\n| If we attempt to delete a supplier payment allocation | IsDeleted is TRUE. Could not process the request. Allocation can not be deleted via the REST API. |\r\n| If we provide supplier payment allocation with Guid of another supplier payment allocation | Failed to save. Allocations with Guid of xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx does not belong to SupplierPayment |\r\n| If we provide same RelatedSupplierBillGuid more than one time in allocations array | Failed to save. Allocations already exists with RelatedSupplierBillGuid of xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx. |\r\n| If we provide RelatedSupplierBillGuid already exist in SupplierBillSupplierPayment(allocations) | Failed to save. SupplierBillSupplierPayment already exists with RelatedSupplierBillGuid of xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx. |","operationId":"SupplierPayment_Update","consumes":["application/json"],"produces":["application/json"],"parameters":[{"name":"guid","in":"path","required":true,"type":"string","format":"uuid"},{"in":"body","required":true,"schema":{"$ref":"#/definitions/ApiResourceId"}}],"responses":{"200":{"description":"OK","schema":{"$ref":"#/definitions/ApiResourceId"}}}}},"/accounting/supplierPayments":{"get":{"tags":["SupplierPayment"],"summary":"Find with Filters","description":"| Property\t\t\t\t\t\t\t\t\t\t\t| Description\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t|\r\n| ------------------------------------------------- | ------------------------------------------------------------------------------------------------------|\r\n| GUID\t\t\t\t\t\t\t\t\t\t\t\t| The GUID associated to the supplier payment.\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t|\r\n| Amount\t\t\t\t\t\t\t\t\t\t\t| Amount of the supplier payment.\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t|\r\n| DateInput\t\t\t\t\t\t\t\t\t\t\t| The input date associated to the supplier payment.\t\t\t\t\t\t\t\t\t\t\t\t\t|\r\n| DateReceived\t\t\t\t\t\t\t\t\t\t| The received date associated to the supplier payment.\t\t\t\t\t\t\t\t\t\t\t\t\t|\r\n| IsBad\t\t\t\t\t\t\t\t\t\t\t\t| Whether the supplier payment is bad.\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t|\r\n| PaymentTypeListItem\t\t\t\t\t\t\t\t| The GUID and description of the payment type associated to the supplier payment.\t\t\t\t\t\t|\r\n| RelatedSupplierGuid\t\t\t\t\t\t\t\t| The GUID associated to the supplier of the supplier payment. Filterable.\t\t\t\t\t\t\t\t|\r\n| AccountingPeriodListItem\t\t\t\t\t\t\t| The GUID and description of the accounting period associated to the supplier payment.\t\t\t\t\t|\r\n| APPaymentStatusListItem\t\t\t\t\t\t\t| The GUID and description of the AP payment status associated to the supplier payment.\t\t\t\t\t|\r\n| DateBad\t\t\t\t\t\t\t\t\t\t\t| The bad date associated to the supplier payment.\t\t\t\t\t\t\t\t\t\t\t\t\t\t|\r\n| DateBadExported\t\t\t\t\t\t\t\t\t| The exported bad date associated to the supplier payment.\t\t\t\t\t\t\t\t\t\t\t\t|\r\n| DateCleared\t\t\t\t\t\t\t\t\t\t| The cleared date associated to the supplier payment.\t\t\t\t\t\t\t\t\t\t\t\t\t|\r\n| DateExported\t\t\t\t\t\t\t\t\t\t| The exported date associated to the supplier payment.\t\t\t\t\t\t\t\t\t\t\t\t\t|\r\n| DateProcessed\t\t\t\t\t\t\t\t\t\t| The processed date associated to the supplier payment.\t\t\t\t\t\t\t\t\t\t\t\t|\r\n| Notes\t\t\t\t\t\t\t\t\t\t\t\t| The notes associated to the supplier payment.\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t|\r\n| PayableCycleListItem\t\t\t\t\t\t\t\t| The GUID and description of the payable cycle associated to the supplier payment.\t\t\t\t\t\t|\r\n| PaymentPointListItem\t\t\t\t\t\t\t\t| The GUID and description of the payment point associated to the supplier payment.\t\t\t\t\t\t|\r\n| Reference\t\t\t\t\t\t\t\t\t\t\t| The reference\tassociated to the supplier payment.\t\t\t\t\t\t\t\t\t\t\t\t\t\t|\r\n| Allocations[0]\t\t\t\t\t\t\t\t\t| List of supplier payment allocation made for the supplier payment.\t\t\t\t\t\t\t\t\t| \r\n| Allocations[0].Amount\t\t\t\t\t\t\t\t| Amount of the supplier payment allocation.\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t| \r\n| Allocations[0].DateInput\t\t\t\t\t\t\t| The input date associated to the supplier payment allocation.\t\t\t\t\t\t\t\t\t\t\t| \r\n| Allocations[0].RelatedSupplierBillGuid            | The GUID associated to the supplier bill of the supplier payment.\t\t\t\t\t\t\t\t\t\t| \r\n| RelatedSupplierBillGuidFilter\t\t\t\t\t\t| The filter used to filter the related supplier bill guid associated to the Allocation. Filterable.\t|\r\n| IsDeleted\t\t\t\t\t\t\t\t\t\t\t| Supplier Payment is being deleted?\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t|\r\n","operationId":"SupplierPayment_GetCollection","consumes":["application/json"],"produces":["application/json"],"parameters":[{"name":"filter","in":"query","required":false,"type":"string"},{"name":"search","in":"query","required":false,"type":"string"},{"name":"order","in":"query","required":false,"type":"string"},{"name":"max","in":"query","required":false,"type":"integer","format":"int32"},{"name":"page","in":"query","required":false,"type":"integer","format":"int32"},{"name":"includeCount","in":"query","required":false,"type":"boolean"},{"name":"includeDeleted","in":"query","required":false,"type":"boolean"},{"name":"links","in":"query","required":false,"type":"string"},{"name":"udf","in":"query","required":false,"type":"string"}],"responses":{"200":{"description":"OK","schema":{"$ref":"#/definitions/ApiResourceResultCollection[ApiIntegratorSupplierPaymentResource]"}}}},"post":{"tags":["SupplierPayment"],"summary":"Create or update","description":"| Property\t\t\t\t\t\t\t\t\t\t\t| Description\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t| Required |\r\n| ------------------------------------------------- | ------------------------------------------------------------------------------------------------------| -------- |\r\n| GUID\t\t\t\t\t\t\t\t\t\t\t\t| The GUID associated to the supplier payment.\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t|\t No    |\r\n| Amount\t\t\t\t\t\t\t\t\t\t\t| Amount of the supplier payment.\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t|\t Yes   |\r\n| DateInput\t\t\t\t\t\t\t\t\t\t\t| The input date associated to the supplier payment.\t\t\t\t\t\t\t\t\t\t\t\t\t|\t Yes   |\r\n| DateReceived\t\t\t\t\t\t\t\t\t\t| The received date associated to the supplier payment.\t\t\t\t\t\t\t\t\t\t\t\t\t|\t Yes   |\r\n| IsBad\t\t\t\t\t\t\t\t\t\t\t\t| Whether the supplier payment is bad.\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t|\t Yes   |\r\n| PaymentTypeListItem\t\t\t\t\t\t\t\t| The GUID and description of the payment type associated to the supplier payment.\t\t\t\t\t\t|\t Yes   |\r\n| RelatedSupplierGuid\t\t\t\t\t\t\t\t| The GUID associated to the supplier of the supplier payment. Filterable.\t\t\t\t\t\t\t\t|\t Yes   |\r\n| AccountingPeriodListItem\t\t\t\t\t\t\t| The GUID and description of the accounting period associated to the supplier payment.\t\t\t\t\t|\t No    |\r\n| APPaymentStatusListItem\t\t\t\t\t\t\t| The GUID and description of the AP payment status associated to the supplier payment.\t\t\t\t\t|\t No    |\r\n| DateBad\t\t\t\t\t\t\t\t\t\t\t| The bad date associated to the supplier payment.\t\t\t\t\t\t\t\t\t\t\t\t\t\t|\t No    |\r\n| DateBadExported\t\t\t\t\t\t\t\t\t| The exported bad date associated to the supplier payment.\t\t\t\t\t\t\t\t\t\t\t\t|\t No    |\r\n| DateCleared\t\t\t\t\t\t\t\t\t\t| The cleared date associated to the supplier payment.\t\t\t\t\t\t\t\t\t\t\t\t\t|\t No    |\r\n| DateExported\t\t\t\t\t\t\t\t\t\t| The exported date associated to the supplier payment.\t\t\t\t\t\t\t\t\t\t\t\t\t|\t No    |\r\n| DateProcessed\t\t\t\t\t\t\t\t\t\t| The processed date associated to the supplier payment.\t\t\t\t\t\t\t\t\t\t\t\t|\t No    |\r\n| Notes\t\t\t\t\t\t\t\t\t\t\t\t| The notes associated to the supplier payment.\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t|\t No    |\r\n| PayableCycleListItem\t\t\t\t\t\t\t\t| The GUID and description of the payable cycle associated to the supplier payment.\t\t\t\t\t\t|\t No    |\r\n| PaymentPointListItem\t\t\t\t\t\t\t\t| The GUID and description of the payment point associated to the supplier payment.\t\t\t\t\t\t|\t No    |\r\n| Reference\t\t\t\t\t\t\t\t\t\t\t| The reference\tassociated to the supplier payment.\t\t\t\t\t\t\t\t\t\t\t\t\t\t|\t No    |\r\n| Allocations[0]\t\t\t\t\t\t\t\t\t| List of supplier payment allocation made for the supplier payment.\t\t\t\t\t\t\t\t\t|\t No    | \r\n| Allocations[0].Amount\t\t\t\t\t\t\t\t| Amount of the supplier payment allocation.\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t|\t Yes   | \r\n| Allocations[0].DateInput\t\t\t\t\t\t\t| The input date associated to the supplier payment allocation.\t\t\t\t\t\t\t\t\t\t\t|\t Yes   | \r\n| Allocations[0].RelatedSupplierBillGuid            | The GUID associated to the supplier bill of the supplier payment.\t\t\t\t\t\t\t\t\t\t|\t Yes   | \r\n| RelatedSupplierBillGuidFilter\t\t\t\t\t\t| The filter used to filter the related supplier bill guid associated to the Allocation. Filterable.\t|\t No    |\r\n| IsDeleted\t\t\t\t\t\t\t\t\t\t\t| Supplier Payment is being deleted?\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t|\t No    |\r\n\r\n## Extra validations\r\n\r\n| Condition | Error message |\r\n| --------- | ------------- |\r\n| If RelatedSupplierGuid provided is Deleted. | The provided RelatedSupplierGuid is deleted. Could not update the resource. Please check the relevant list end point for the available options. |\r\n| If PaymentTypeListItem.Guid provided is Deleted. | The provided PaymentTypeListItem is deleted. Could not update the resource. Please check the relevant list end point for the available options. |\r\n| If AccountingPeriodListItem.Guid provided is Deleted. | The provided AccountingPeriodListItem is deleted. Could not update the resource. Please check the relevant list end point for the available options. |\r\n| If APPaymentStatusListItem.Guid provided is Deleted. | The provided APPaymentStatusListItem is deleted. Could not update the resource. Please check the relevant list end point for the available options. |\r\n| If PayableCycleListItem.Guid provided is Deleted. | The provided PayableCycleListItem is deleted. Could not update the resource. Please check the relevant list end point for the available options. |\r\n| If PaymentPointListItem.Guid provided is Deleted. | The provided PaymentPointListItem is deleted. Could not update the resource. Please check the relevant list end point for the available options. |\r\n| If RelatedSupplierBillGuid provided is Deleted. | The provided RelatedSupplierBillGuid is deleted. Could not update the resource. Please check the relevant list end point for the available options. |\r\n| If we attempt to delete a supplier payment | IsDeleted is TRUE. Could not process the request. SupplierPayment can not be deleted via the REST API. |\r\n| If we attempt to delete a supplier payment allocation | IsDeleted is TRUE. Could not process the request. Allocation can not be deleted via the REST API. |\r\n| If we provide supplier payment allocation with Guid | One of the Allocations in the request is an update. The request could not be processed. Ensure that none of the Allocations has a guid. |\r\n| If we provide same RelatedSupplierBillGuid more than one time in allocations array | Failed to save. Allocations already exists with RelatedSupplierBillGuid of xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx. |","operationId":"SupplierPayment_Create","consumes":["application/json"],"produces":["application/json"],"parameters":[{"in":"body","required":true,"schema":{"$ref":"#/definitions/ApiResourceId"}}],"responses":{"200":{"description":"OK","schema":{"$ref":"#/definitions/ApiResourceId"}}}}},"/directory/supplierSites/changes":{"get":{"tags":["SupplierSite"],"summary":"Retrieve changes","description":"| Property                            | Description                                                               |\r\n| ----------------------------------- | ------------------------------------------------------------------------- |\r\n| GUID                                | The GUID associated to the supplier site.                                 |\r\n| Name                                | The supplier site's name.                                                 |\r\n| RelatedSupplierGuid                 | The GUID associated to the supplier of this site.                         |\r\n| RelatedLocationPaymentGuid          | Used to filter the related payment location guid associated to the payment location of this site.                 |\r\n| RelatedLocationGuid                 | Used to filter the related location guid associated to the location of the supplier site.                 |\r\n| UniqueReference\t\t\t\t\t  | Used to filter on the the unique reference of the supplier site.\t\t  |\r\n| PaymentTermListItem                 | The GUID and description of the PaymentTerm associated to the supplier site. |\r\n| PaymentTypeListItem                 | The GUID and description of the PaymentType associated to the supplier site. |\r\n| SICCodeListItem                     | The GUID and description of the Standard Industrial Classification code associated to the supplier site. |\r\n| SupplierTypeListItem                | The GUID and description of the Supplier type associated to the supplier site. |\r\n| BankDetails\t\t\t\t          | The object where bank details are specified.\t\t\t        \t\t  |\r\n| BankDetails.BankName                | The bank name of the direct debit.                                        |\r\n| BankDetails.DirectDebitRunConfigListItem | The GUID and description of the direct debit run configuration           |\r\n| BankDetails.Address.Address1 till 5 | The 5 address lines of the bank.                                          |\r\n| BankDetails.Address.Postcode        | The Postcode of the bank.\t\t\t\t\t\t\t\t\t\t\t      |\r\n| BankDetails.AccountName             | The account name of the direct debit.\t\t\t                          |\r\n| BankDetails.AccountNo               | The account number of the direct debit.\t\t\t\t\t                  |\r\n| BankDetails.SortCode                | The sort code of the direct debit.\t\t\t\t\t\t\t\t\t      |\r\n| BankDetails.BIC                     | The Bank Identifier Code of the direct debit.\t\t\t\t\t\t\t  |\r\n| BankDetails.IBAN                    | The International Bank Account Number of the direct debit.\t\t\t      |\r\n| PaymentHandlingCodeListItem\t\t  | The GUID and description of the payment handling code associated to the supplier site. |\r\n| FacilityTypeListItem\t\t\t\t  | The GUID and description of the facility type associated to the supplier site. |\r\n| SupplierTypesListItems[]\t\t\t  | The array of supplier types associated to the supplier site. |\r\n| SupplierTypesListItems[0].SupplierTypeListItem | The GUID and description of the supplier type associated to the SupplierTypesListItems. |\r\n","operationId":"SupplierSite_GetChanges","consumes":["application/json"],"produces":["application/json"],"parameters":[{"name":"since","in":"query","required":false,"type":"string"},{"name":"cursor","in":"query","required":false,"type":"string"},{"name":"links","in":"query","required":false,"type":"string"}],"responses":{"200":{"description":"OK","schema":{"$ref":"#/definitions/ApiResourceChanges[ApiIntegratorSupplierSiteResource]"}}}}},"/directory/supplierSites/{guid}":{"get":{"tags":["SupplierSite"],"summary":"Find with GUID","description":"| Property                            | Description                                                               |\r\n| ----------------------------------- | ------------------------------------------------------------------------- |\r\n| GUID                                | The GUID associated to the supplier site.                                 |\r\n| Name                                | The supplier site's name.                                                 |\r\n| RelatedSupplierGuid                 | The GUID associated to the supplier of this site.                         |\r\n| RelatedLocationPaymentGuid          | Used to filter the related payment location guid associated to the payment location of this site.                 |\r\n| RelatedLocationGuid                 | Used to filter the related location guid associated to the location of the supplier site.                 |\r\n| UniqueReference\t\t\t\t\t  | Used to filter on the the unique reference of the supplier site.\t\t  |\r\n| PaymentTermListItem                 | The GUID and description of the PaymentTerm associated to the supplier site. |\r\n| PaymentTypeListItem                 | The GUID and description of the PaymentType associated to the supplier site. |\r\n| SICCodeListItem                     | The GUID and description of the Standard Industrial Classification code associated to the supplier site. |\r\n| SupplierTypeListItem                | The GUID and description of the Supplier type associated to the supplier site. |\r\n| BankDetails\t\t\t\t          | The object where bank details are specified.\t\t\t        \t\t  |\r\n| BankDetails.BankName                | The bank name of the direct debit.                                        |\r\n| BankDetails.DirectDebitRunConfigListItem | The GUID and description of the direct debit run configuration           |\r\n| BankDetails.Address.Address1 till 5 | The 5 address lines of the bank.                                          |\r\n| BankDetails.Address.Postcode        | The Postcode of the bank.\t\t\t\t\t\t\t\t\t\t\t      |\r\n| BankDetails.AccountName             | The account name of the direct debit.\t\t\t                          |\r\n| BankDetails.AccountNo               | The account number of the direct debit.\t\t\t\t\t                  |\r\n| BankDetails.SortCode                | The sort code of the direct debit.\t\t\t\t\t\t\t\t\t      |\r\n| BankDetails.BIC                     | The Bank Identifier Code of the direct debit.\t\t\t\t\t\t\t  |\r\n| BankDetails.IBAN                    | The International Bank Account Number of the direct debit.\t\t\t      |\r\n| PaymentHandlingCodeListItem\t\t  | The GUID and description of the payment handling code associated to the supplier site. |\r\n| FacilityTypeListItem\t\t\t\t  | The GUID and description of the facility type associated to the supplier site. |\r\n| SupplierTypesListItems[]\t\t\t  | The array of supplier types associated to the supplier site. |\r\n| SupplierTypesListItems[0].SupplierTypeListItem | The GUID and description of the supplier type associated to the SupplierTypesListItems. |\r\n","operationId":"SupplierSite_Get","consumes":["application/json"],"produces":["application/json"],"parameters":[{"name":"guid","in":"path","required":true,"type":"string","format":"uuid"},{"name":"links","in":"query","required":false,"type":"string"},{"name":"include","in":"query","required":false,"type":"string"},{"name":"expand","in":"query","required":false,"type":"string"},{"name":"udf","in":"query","required":false,"type":"string"}],"responses":{"200":{"description":"OK","schema":{"$ref":"#/definitions/ApiResourceResultEntity[ApiIntegratorSupplierSiteResource]"}}}},"put":{"tags":["SupplierSite"],"summary":"Partial update","description":"| Property                            | Description                                                               | Required |\r\n| ----------------------------------- | ------------------------------------------------------------------------- | -------- |\r\n| GUID                                | The GUID associated to the supplier site.                                 | No |\r\n| Name                                | The supplier site's name.                                                 | Yes |\r\n| RelatedSupplierGuid                 | The GUID associated to the supplier of this site.                         | Yes |\r\n| RelatedLocationPaymentGuid          | The GUID associated to the payment location of this site.                 | Yes |\r\n| RelatedLocationGuid                 | The GUID associated to the location of the supplier site.                 | Yes |\r\n| PaymentTermListItem                 | The GUID and description of the PaymentTerm associated to the supplier site. | No |\r\n| PaymentTypeListItem                 | The GUID and description of the PaymentType associated to the supplier site. | No |\r\n| SICCodeListItem                     | The GUID and description of the Standard Industrial Classification code associated to the supplier site. | No |\r\n| SupplierTypeListItem                | The GUID and description of the Supplier type associated to the supplier site. | No |\r\n| BankDetails\t\t\t           \t  | The object where bank details are specified.\t\t\t        \t\t  | No |\r\n| BankDetails.BankName                | The bank name of the direct debit.                                        | No |\r\n| BankDetails.DirectDebitRunConfigListItem | The GUID and description of the direct debit run configuration.      | Yes if BankDetails is not null |\r\n| BankDetails.Address.Address1 till 5 | The 5 address lines of the bank.                                          | No |\r\n| BankDetails.Address.Postcode        | The Postcode of the bank.\t\t\t\t\t\t\t\t\t\t\t      | No |\r\n| BankDetails.AccountName             | The account name of the direct debit.\t\t\t                          | No |\r\n| BankDetails.AccountNo               | The account number of the direct debit.\t\t\t\t\t                  | No |\r\n| BankDetails.SortCode                | The sort code of the direct debit.\t\t\t\t\t\t\t\t\t      | No |\r\n| BankDetails.BIC                     | The Bank Identifier Code of the direct debit.\t\t\t\t\t\t\t  | No |\r\n| BankDetails.IBAN                    | The International Bank Account Number of the direct debit.\t\t\t      | No |\r\n| PaymentHandlingCodeListItem\t\t  | The GUID and description of the payment handling code associated to the supplier site. | No |\r\n| FacilityTypeListItem\t\t\t\t  | The GUID and description of the facility type associated to the supplier site. | No |\r\n| SupplierTypesListItems[]\t\t\t  | The array of supplier types associated to the supplier site. | No |\t\r\n| SupplierTypesListItems[0].SupplierTypeListItem | The GUID and description of the supplier type associated to the SupplierTypesListItems. | No |\t\r\n\r\n## Extra validations\r\n\r\n| Condition | Error message |\r\n| --------- | ------------- |\r\n| BankDetails is not null and DirectDebitRunConfig not found with value BankDetails.DirectDebitRunConfigListItem.Guid | Failed to retrieve DirectDebitRunConfig with BankDetails.DirectDebitRunConfigListItem.Guid of {value of BankDetails.DirectDebitRunConfigListItem.Guid} |\r\n| The SupplierTypesListItems[0].SupplierTypeListItem.Guid is already present in the SupplierTypesListItems array | Failed to save. SupplierTypeListItem already exists with Guid of 8ef6ebc3-9d3b-eb11-8d0c-24418c4ab67b |","operationId":"SupplierSite_Update","consumes":["application/json"],"produces":["application/json"],"parameters":[{"name":"guid","in":"path","required":true,"type":"string","format":"uuid"},{"in":"body","required":true,"schema":{"$ref":"#/definitions/ApiResourceId"}}],"responses":{"200":{"description":"OK","schema":{"$ref":"#/definitions/ApiResourceId"}}}}},"/directory/supplierSites":{"get":{"tags":["SupplierSite"],"summary":"Find with Filters","description":"| Property                            | Description                                                               |\r\n| ----------------------------------- | ------------------------------------------------------------------------- |\r\n| GUID                                | The GUID associated to the supplier site.                                 |\r\n| Name                                | The supplier site's name.                                                 |\r\n| RelatedSupplierGuid                 | The GUID associated to the supplier of this site.                         |\r\n| RelatedLocationPaymentGuid          | Used to filter the related payment location guid associated to the payment location of this site.                 |\r\n| RelatedLocationGuid                 | Used to filter the related location guid associated to the location of the supplier site.                 |\r\n| UniqueReference\t\t\t\t\t  | Used to filter on the the unique reference of the supplier site.\t\t  |\r\n| PaymentTermListItem                 | The GUID and description of the PaymentTerm associated to the supplier site. |\r\n| PaymentTypeListItem                 | The GUID and description of the PaymentType associated to the supplier site. |\r\n| SICCodeListItem                     | The GUID and description of the Standard Industrial Classification code associated to the supplier site. |\r\n| SupplierTypeListItem                | The GUID and description of the Supplier type associated to the supplier site. |\r\n| BankDetails\t\t\t\t          | The object where bank details are specified.\t\t\t        \t\t  |\r\n| BankDetails.BankName                | The bank name of the direct debit.                                        |\r\n| BankDetails.DirectDebitRunConfigListItem | The GUID and description of the direct debit run configuration           |\r\n| BankDetails.Address.Address1 till 5 | The 5 address lines of the bank.                                          |\r\n| BankDetails.Address.Postcode        | The Postcode of the bank.\t\t\t\t\t\t\t\t\t\t\t      |\r\n| BankDetails.AccountName             | The account name of the direct debit.\t\t\t                          |\r\n| BankDetails.AccountNo               | The account number of the direct debit.\t\t\t\t\t                  |\r\n| BankDetails.SortCode                | The sort code of the direct debit.\t\t\t\t\t\t\t\t\t      |\r\n| BankDetails.BIC                     | The Bank Identifier Code of the direct debit.\t\t\t\t\t\t\t  |\r\n| BankDetails.IBAN                    | The International Bank Account Number of the direct debit.\t\t\t      |\r\n| PaymentHandlingCodeListItem\t\t  | The GUID and description of the payment handling code associated to the supplier site. |\r\n| FacilityTypeListItem\t\t\t\t  | The GUID and description of the facility type associated to the supplier site. |\r\n| SupplierTypesListItems[]\t\t\t  | The array of supplier types associated to the supplier site. |\r\n| SupplierTypesListItems[0].SupplierTypeListItem | The GUID and description of the supplier type associated to the SupplierTypesListItems. |\r\n","operationId":"SupplierSite_GetCollection","consumes":["application/json"],"produces":["application/json"],"parameters":[{"name":"filter","in":"query","required":false,"type":"string"},{"name":"search","in":"query","required":false,"type":"string"},{"name":"order","in":"query","required":false,"type":"string"},{"name":"max","in":"query","required":false,"type":"integer","format":"int32"},{"name":"page","in":"query","required":false,"type":"integer","format":"int32"},{"name":"includeCount","in":"query","required":false,"type":"boolean"},{"name":"includeDeleted","in":"query","required":false,"type":"boolean"},{"name":"links","in":"query","required":false,"type":"string"},{"name":"udf","in":"query","required":false,"type":"string"}],"responses":{"200":{"description":"OK","schema":{"$ref":"#/definitions/ApiResourceResultCollection[ApiIntegratorSupplierSiteResource]"}}}},"post":{"tags":["SupplierSite"],"summary":"Create or update","description":"| Property                            | Description                                                               | Required |\r\n| ----------------------------------- | ------------------------------------------------------------------------- | -------- |\r\n| GUID                                | The GUID associated to the supplier site.                                 | No |\r\n| Name                                | The supplier site's name.                                                 | Yes |\r\n| RelatedSupplierGuid                 | The GUID associated to the supplier of this site.                         | Yes |\r\n| RelatedLocationPaymentGuid          | The GUID associated to the payment location of this site.                 | Yes |\r\n| RelatedLocationGuid                 | The GUID associated to the location of the supplier site.                 | Yes |\r\n| PaymentTermListItem                 | The GUID and description of the PaymentTerm associated to the supplier site. | No |\r\n| PaymentTypeListItem                 | The GUID and description of the PaymentType associated to the supplier site. | No |\r\n| SICCodeListItem                     | The GUID and description of the Standard Industrial Classification code associated to the supplier site. | No |\r\n| SupplierTypeListItem                | The GUID and description of the Supplier type associated to the supplier site. | No |\r\n| BankDetails\t\t\t           \t  | The object where bank details are specified.\t\t\t        \t\t  | No |\r\n| BankDetails.BankName                | The bank name of the direct debit.                                        | No |\r\n| BankDetails.DirectDebitRunConfigListItem | The GUID and description of the direct debit run configuration.      | Yes if BankDetails is not null |\r\n| BankDetails.Address.Address1 till 5 | The 5 address lines of the bank.                                          | No |\r\n| BankDetails.Address.Postcode        | The Postcode of the bank.\t\t\t\t\t\t\t\t\t\t\t      | No |\r\n| BankDetails.AccountName             | The account name of the direct debit.\t\t\t                          | No |\r\n| BankDetails.AccountNo               | The account number of the direct debit.\t\t\t\t\t                  | No |\r\n| BankDetails.SortCode                | The sort code of the direct debit.\t\t\t\t\t\t\t\t\t      | No |\r\n| BankDetails.BIC                     | The Bank Identifier Code of the direct debit.\t\t\t\t\t\t\t  | No |\r\n| BankDetails.IBAN                    | The International Bank Account Number of the direct debit.\t\t\t      | No |\r\n| PaymentHandlingCodeListItem\t\t  | The GUID and description of the payment handling code associated to the supplier site. | No |\r\n| FacilityTypeListItem\t\t\t\t  | The GUID and description of the facility type associated to the supplier site. | No |\r\n| SupplierTypesListItems[]\t\t\t  | The array of supplier types associated to the supplier site. | No |\t\r\n| SupplierTypesListItems[0].SupplierTypeListItem | The GUID and description of the supplier type associated to the SupplierTypesListItems. | No |\t\r\n\r\n## Extra validations\r\n\r\n| Condition | Error message |\r\n| --------- | ------------- |\r\n| BankDetails is not null and DirectDebitRunConfig not found with value BankDetails.DirectDebitRunConfigListItem.Guid | Failed to retrieve DirectDebitRunConfig with BankDetails.DirectDebitRunConfigListItem.Guid of {value of BankDetails.DirectDebitRunConfigListItem.Guid} |\r\n| The SupplierTypesListItems[0].SupplierTypeListItem.Guid is already present in the SupplierTypesListItems array | Failed to save. SupplierTypeListItem already exists with Guid of 8ef6ebc3-9d3b-eb11-8d0c-24418c4ab67b |\r\n","operationId":"SupplierSite_Create","consumes":["application/json"],"produces":["application/json"],"parameters":[{"in":"body","required":true,"schema":{"$ref":"#/definitions/ApiResourceId"}}],"responses":{"200":{"description":"OK","schema":{"$ref":"#/definitions/ApiResourceId"}}}}},"/lists/supplierTypes/{guid}":{"get":{"tags":["SupplierType"],"summary":"Find with GUID","description":"| Property                  | Description                                                              |\r\n| ------------------------- | ------------------------------------------------------------------------ |\r\n| GUID                      | The GUID associated to the supplier type                              |\r\n| Description               | The description of the supplier type                                  |","operationId":"SupplierType_Get","consumes":["application/json"],"produces":["application/json"],"parameters":[{"name":"guid","in":"path","required":true,"type":"string","format":"uuid"},{"name":"links","in":"query","required":false,"type":"string"},{"name":"include","in":"query","required":false,"type":"string"},{"name":"expand","in":"query","required":false,"type":"string"},{"name":"udf","in":"query","required":false,"type":"string"}],"responses":{"200":{"description":"OK","schema":{"$ref":"#/definitions/ApiResourceResultEntity[ApiIntegratorSupplierTypeResource]"}}}}},"/lists/supplierTypes":{"get":{"tags":["SupplierType"],"summary":"Find with Filters","description":"| Property                  | Description                                                              |\r\n| ------------------------- | ------------------------------------------------------------------------ |\r\n| GUID                      | The GUID associated to the supplier type                              |\r\n| Description               | The description of the supplier type                                  |","operationId":"SupplierType_GetCollection","consumes":["application/json"],"produces":["application/json"],"parameters":[{"name":"filter","in":"query","required":false,"type":"string"},{"name":"search","in":"query","required":false,"type":"string"},{"name":"order","in":"query","required":false,"type":"string"},{"name":"max","in":"query","required":false,"type":"integer","format":"int32"},{"name":"page","in":"query","required":false,"type":"integer","format":"int32"},{"name":"includeCount","in":"query","required":false,"type":"boolean"},{"name":"includeDeleted","in":"query","required":false,"type":"boolean"},{"name":"links","in":"query","required":false,"type":"string"},{"name":"udf","in":"query","required":false,"type":"string"}],"responses":{"200":{"description":"OK","schema":{"$ref":"#/definitions/ApiResourceResultCollection[ApiIntegratorSupplierTypeResource]"}}}}},"/lists/systemConfigurations/{guid}":{"get":{"tags":["SystemConfiguration"],"summary":"Find with GUID","description":"| Property                  | Description                                                              |\r\n| ------------------------- | ------------------------------------------------------------------------ |\r\n| GUID                      | The GUID associated to the system configuration.                         |\r\n| Name\t\t\t\t\t\t| The Name of the system configuration.\t\t\t\t\t\t\t\t\t   |\r\n| HelpDescription           | The Description of the system configuration.\t\t\t\t\t\t\t   |\r\n| IsInternal                | Whether the system configuration is Internal.\t\t\t\t\t\t\t   |  \r\n| Value\t\t\t\t\t\t| The Value of the system configuration.\t\t\t\t\t\t\t\t   |\r\n| IsDeleted\t\t\t\t    | Is the system configuration deleted.\t\t\t\t\t\t\t\t\t   |\r\n\r\n\r\n","operationId":"SystemConfiguration_Get","consumes":["application/json"],"produces":["application/json"],"parameters":[{"name":"guid","in":"path","required":true,"type":"string","format":"uuid"},{"name":"links","in":"query","required":false,"type":"string"},{"name":"include","in":"query","required":false,"type":"string"},{"name":"expand","in":"query","required":false,"type":"string"},{"name":"udf","in":"query","required":false,"type":"string"}],"responses":{"200":{"description":"OK","schema":{"$ref":"#/definitions/ApiResourceResultEntity[ApiIntegratorSystemConfigurationResource]"}}}}},"/lists/systemConfigurations":{"get":{"tags":["SystemConfiguration"],"summary":"Find with Filters","description":"| Property                  | Description                                                              |\r\n| ------------------------- | ------------------------------------------------------------------------ |\r\n| GUID                      | The GUID associated to the system configuration.                         |\r\n| Name\t\t\t\t\t\t| The Name of the system configuration.\t\t\t\t\t\t\t\t\t   |\r\n| HelpDescription           | The Description of the system configuration.\t\t\t\t\t\t\t   |\r\n| IsInternal                | Whether the system configuration is Internal.\t\t\t\t\t\t\t   |  \r\n| Value\t\t\t\t\t\t| The Value of the system configuration.\t\t\t\t\t\t\t\t   |\r\n| IsDeleted\t\t\t\t    | Is the system configuration deleted.\t\t\t\t\t\t\t\t\t   |\r\n\r\n\r\n","operationId":"SystemConfiguration_GetCollection","consumes":["application/json"],"produces":["application/json"],"parameters":[{"name":"filter","in":"query","required":false,"type":"string"},{"name":"search","in":"query","required":false,"type":"string"},{"name":"order","in":"query","required":false,"type":"string"},{"name":"max","in":"query","required":false,"type":"integer","format":"int32"},{"name":"page","in":"query","required":false,"type":"integer","format":"int32"},{"name":"includeCount","in":"query","required":false,"type":"boolean"},{"name":"includeDeleted","in":"query","required":false,"type":"boolean"},{"name":"links","in":"query","required":false,"type":"string"},{"name":"udf","in":"query","required":false,"type":"string"}],"responses":{"200":{"description":"OK","schema":{"$ref":"#/definitions/ApiResourceResultCollection[ApiIntegratorSystemConfigurationResource]"}}}}},"/lists/taxTemplateCollections/{guid}":{"get":{"tags":["TaxTemplateCollection"],"summary":"Find with GUID","description":"| Property                  | Description                                                              |\r\n| ------------------------- | ------------------------------------------------------------------------ |\r\n| GUID                      | The GUID associated to the tax template collection                       |\r\n| Description               | The description of the tax template collection\t\t\t\t\t\t   |\r\n| Code\t\t\t\t\t\t| The code of the tax template collection\t\t\t\t\t\t\t\t   |\r\n| IsDeleted                 | Whether the tax template collection is deleted\t\t\t\t\t\t\t|","operationId":"TaxTemplateCollection_Get","consumes":["application/json"],"produces":["application/json"],"parameters":[{"name":"guid","in":"path","required":true,"type":"string","format":"uuid"},{"name":"links","in":"query","required":false,"type":"string"},{"name":"include","in":"query","required":false,"type":"string"},{"name":"expand","in":"query","required":false,"type":"string"},{"name":"udf","in":"query","required":false,"type":"string"}],"responses":{"200":{"description":"OK","schema":{"$ref":"#/definitions/ApiResourceResultEntity[ApiIntegratorTaxTemplateCollectionResource]"}}}}},"/lists/taxTemplateCollections":{"get":{"tags":["TaxTemplateCollection"],"summary":"Find with Filters","description":"| Property                  | Description                                                              |\r\n| ------------------------- | ------------------------------------------------------------------------ |\r\n| GUID                      | The GUID associated to the tax template collection                       |\r\n| Description               | The description of the tax template collection\t\t\t\t\t\t   |\r\n| Code\t\t\t\t\t\t| The code of the tax template collection\t\t\t\t\t\t\t\t   |\r\n| IsDeleted                 | Whether the tax template collection is deleted\t\t\t\t\t\t\t|","operationId":"TaxTemplateCollection_GetCollection","consumes":["application/json"],"produces":["application/json"],"parameters":[{"name":"filter","in":"query","required":false,"type":"string"},{"name":"search","in":"query","required":false,"type":"string"},{"name":"order","in":"query","required":false,"type":"string"},{"name":"max","in":"query","required":false,"type":"integer","format":"int32"},{"name":"page","in":"query","required":false,"type":"integer","format":"int32"},{"name":"includeCount","in":"query","required":false,"type":"boolean"},{"name":"includeDeleted","in":"query","required":false,"type":"boolean"},{"name":"links","in":"query","required":false,"type":"string"},{"name":"udf","in":"query","required":false,"type":"string"}],"responses":{"200":{"description":"OK","schema":{"$ref":"#/definitions/ApiResourceResultCollection[ApiIntegratorTaxTemplateCollectionResource]"}}}}},"/lists/tipLocations/{guid}":{"get":{"tags":["TipLocation"],"summary":"Find with GUID","description":"| Property                  | Description                                                              |\r\n| ------------------------- | ------------------------------------------------------------------------ |\r\n| GUID                      | The GUID associated to the tip location                                  |\r\n| Description               | The description of the tip location                                      |\r\n| IsDeleted                 | Whether the tip location is deleted                                      |","operationId":"TipLocation_Get","consumes":["application/json"],"produces":["application/json"],"parameters":[{"name":"guid","in":"path","required":true,"type":"string","format":"uuid"},{"name":"links","in":"query","required":false,"type":"string"},{"name":"include","in":"query","required":false,"type":"string"},{"name":"expand","in":"query","required":false,"type":"string"},{"name":"udf","in":"query","required":false,"type":"string"}],"responses":{"200":{"description":"OK","schema":{"$ref":"#/definitions/ApiResourceResultEntity[ApiIntegratorTipLocationResource]"}}}}},"/lists/tipLocations":{"get":{"tags":["TipLocation"],"summary":"Find with Filters","description":"| Property                  | Description                                                              |\r\n| ------------------------- | ------------------------------------------------------------------------ |\r\n| GUID                      | The GUID associated to the tip location                                  |\r\n| Description               | The description of the tip location                                      |\r\n| IsDeleted                 | Whether the tip location is deleted                                      |","operationId":"TipLocation_GetCollection","consumes":["application/json"],"produces":["application/json"],"parameters":[{"name":"filter","in":"query","required":false,"type":"string"},{"name":"search","in":"query","required":false,"type":"string"},{"name":"order","in":"query","required":false,"type":"string"},{"name":"max","in":"query","required":false,"type":"integer","format":"int32"},{"name":"page","in":"query","required":false,"type":"integer","format":"int32"},{"name":"includeCount","in":"query","required":false,"type":"boolean"},{"name":"includeDeleted","in":"query","required":false,"type":"boolean"},{"name":"links","in":"query","required":false,"type":"string"},{"name":"udf","in":"query","required":false,"type":"string"}],"responses":{"200":{"description":"OK","schema":{"$ref":"#/definitions/ApiResourceResultCollection[ApiIntegratorTipLocationResource]"}}}}},"/lists/tradingNameTypes/{guid}":{"get":{"tags":["TradingNameType"],"summary":"Find with GUID","description":"| Property                  | Description                                                              |\r\n| ------------------------- | ------------------------------------------------------------------------ |\r\n| GUID                      | The GUID associated to the trading name type                             |\r\n| Description               | The description of the trading name type        \t\t\t\t\t\t   |","operationId":"TradingNameType_Get","consumes":["application/json"],"produces":["application/json"],"parameters":[{"name":"guid","in":"path","required":true,"type":"string","format":"uuid"},{"name":"links","in":"query","required":false,"type":"string"},{"name":"include","in":"query","required":false,"type":"string"},{"name":"expand","in":"query","required":false,"type":"string"},{"name":"udf","in":"query","required":false,"type":"string"}],"responses":{"200":{"description":"OK","schema":{"$ref":"#/definitions/ApiResourceResultEntity[ApiIntegratorTradingNameTypeResource]"}}}}},"/lists/tradingNameTypes":{"get":{"tags":["TradingNameType"],"summary":"Find with Filters","description":"| Property                  | Description                                                              |\r\n| ------------------------- | ------------------------------------------------------------------------ |\r\n| GUID                      | The GUID associated to the trading name type                             |\r\n| Description               | The description of the trading name type        \t\t\t\t\t\t   |","operationId":"TradingNameType_GetCollection","consumes":["application/json"],"produces":["application/json"],"parameters":[{"name":"filter","in":"query","required":false,"type":"string"},{"name":"search","in":"query","required":false,"type":"string"},{"name":"order","in":"query","required":false,"type":"string"},{"name":"max","in":"query","required":false,"type":"integer","format":"int32"},{"name":"page","in":"query","required":false,"type":"integer","format":"int32"},{"name":"includeCount","in":"query","required":false,"type":"boolean"},{"name":"includeDeleted","in":"query","required":false,"type":"boolean"},{"name":"links","in":"query","required":false,"type":"string"},{"name":"udf","in":"query","required":false,"type":"string"}],"responses":{"200":{"description":"OK","schema":{"$ref":"#/definitions/ApiResourceResultCollection[ApiIntegratorTradingNameTypeResource]"}}}}},"/fleet/trailers/changes":{"get":{"tags":["Trailer"],"summary":"Retrieve changes","description":"| Property\t\t\t\t\t\t\t\t\t\t\t| Description                                                                   |\r\n| -------------------------------------------------\t| ----------------------------------------------------------------------------- |\r\n| GUID\t\t\t\t\t\t\t\t\t\t\t\t| The GUID associated to the trailer.\t\t\t\t\t\t\t\t    |\r\n| Description\t\t\t\t\t\t\t\t\t\t| The description associated to the trailer.\t\t\t\t\t\t\t|","operationId":"Trailer_GetChanges","consumes":["application/json"],"produces":["application/json"],"parameters":[{"name":"since","in":"query","required":false,"type":"string"},{"name":"cursor","in":"query","required":false,"type":"string"},{"name":"links","in":"query","required":false,"type":"string"}],"responses":{"200":{"description":"OK","schema":{"$ref":"#/definitions/ApiResourceChanges[ApiIntegratorTrailerResource]"}}}}},"/fleet/trailers/{guid}":{"get":{"tags":["Trailer"],"summary":"Find with GUID","description":"| Property\t\t\t\t\t\t\t\t\t\t\t| Description                                                                   |\r\n| -------------------------------------------------\t| ----------------------------------------------------------------------------- |\r\n| GUID\t\t\t\t\t\t\t\t\t\t\t\t| The GUID associated to the trailer.\t\t\t\t\t\t\t\t    |\r\n| Description\t\t\t\t\t\t\t\t\t\t| The description associated to the trailer.\t\t\t\t\t\t\t|","operationId":"Trailer_Get","consumes":["application/json"],"produces":["application/json"],"parameters":[{"name":"guid","in":"path","required":true,"type":"string","format":"uuid"},{"name":"links","in":"query","required":false,"type":"string"},{"name":"include","in":"query","required":false,"type":"string"},{"name":"expand","in":"query","required":false,"type":"string"},{"name":"udf","in":"query","required":false,"type":"string"}],"responses":{"200":{"description":"OK","schema":{"$ref":"#/definitions/ApiResourceResultEntity[ApiIntegratorTrailerResource]"}}}}},"/fleet/trailers":{"get":{"tags":["Trailer"],"summary":"Find with Filters","description":"| Property\t\t\t\t\t\t\t\t\t\t\t| Description                                                                   |\r\n| -------------------------------------------------\t| ----------------------------------------------------------------------------- |\r\n| GUID\t\t\t\t\t\t\t\t\t\t\t\t| The GUID associated to the trailer.\t\t\t\t\t\t\t\t    |\r\n| Description\t\t\t\t\t\t\t\t\t\t| The description associated to the trailer.\t\t\t\t\t\t\t|","operationId":"Trailer_GetCollection","consumes":["application/json"],"produces":["application/json"],"parameters":[{"name":"filter","in":"query","required":false,"type":"string"},{"name":"search","in":"query","required":false,"type":"string"},{"name":"order","in":"query","required":false,"type":"string"},{"name":"max","in":"query","required":false,"type":"integer","format":"int32"},{"name":"page","in":"query","required":false,"type":"integer","format":"int32"},{"name":"includeCount","in":"query","required":false,"type":"boolean"},{"name":"includeDeleted","in":"query","required":false,"type":"boolean"},{"name":"links","in":"query","required":false,"type":"string"},{"name":"udf","in":"query","required":false,"type":"string"}],"responses":{"200":{"description":"OK","schema":{"$ref":"#/definitions/ApiResourceResultCollection[ApiIntegratorTrailerResource]"}}}}},"/lists/unitOfMeasures/{guid}":{"get":{"tags":["UnitOfMeasure"],"summary":"Find with GUID","description":"| Property                  | Description                                                              |\r\n| ------------------------- | ------------------------------------------------------------------------ |\r\n| GUID                      | The GUID associated to the unit of measure                               |\r\n| Description               | The description of the unit of measure                                   |\r\n| Code\t\t\t\t\t\t| The unit of measure code\t\t\t\t\t\t\t\t\t               |\r\n| PricingBasisListItem      | The GUID and description of the pricing basis (various values).             |\r\n| ShortName\t\t\t\t\t| The unit of measure short name\t\t\t\t\t\t\t\t\t       |\r\n| IsDeleted                 | Whether the unit of measure is deleted\t\t\t\t\t\t\t\t\t|","operationId":"UnitOfMeasure_Get","consumes":["application/json"],"produces":["application/json"],"parameters":[{"name":"id","in":"path","required":true,"type":"string","format":"uuid"},{"name":"links","in":"query","required":false,"type":"string"},{"name":"include","in":"query","required":false,"type":"string"},{"name":"expand","in":"query","required":false,"type":"string"},{"name":"udf","in":"query","required":false,"type":"string"}],"responses":{"200":{"description":"OK","schema":{"$ref":"#/definitions/ApiResourceResultEntity[ApiIntegratorUnitOfMeasurementResource]"}}}}},"/lists/unitOfMeasures":{"get":{"tags":["UnitOfMeasure"],"summary":"Find with Filters","description":"| Property                  | Description                                                              |\r\n| ------------------------- | ------------------------------------------------------------------------ |\r\n| GUID                      | The GUID associated to the unit of measure                               |\r\n| Description               | The description of the unit of measure                                   |\r\n| Code\t\t\t\t\t\t| The unit of measure code\t\t\t\t\t\t\t\t\t               |\r\n| PricingBasisListItem      | The GUID and description of the pricing basis (various values).             |\r\n| ShortName\t\t\t\t\t| The unit of measure short name\t\t\t\t\t\t\t\t\t       |\r\n| IsDeleted                 | Whether the unit of measure is deleted\t\t\t\t\t\t\t\t\t|","operationId":"UnitOfMeasure_GetCollection","consumes":["application/json"],"produces":["application/json"],"parameters":[{"name":"filter","in":"query","required":false,"type":"string"},{"name":"search","in":"query","required":false,"type":"string"},{"name":"order","in":"query","required":false,"type":"string"},{"name":"max","in":"query","required":false,"type":"integer","format":"int32"},{"name":"page","in":"query","required":false,"type":"integer","format":"int32"},{"name":"includeCount","in":"query","required":false,"type":"boolean"},{"name":"includeDeleted","in":"query","required":false,"type":"boolean"},{"name":"links","in":"query","required":false,"type":"string"},{"name":"udf","in":"query","required":false,"type":"string"}],"responses":{"200":{"description":"OK","schema":{"$ref":"#/definitions/ApiResourceResultCollection[ApiIntegratorUnitOfMeasurementResource]"}}}}},"/directory/users/{guid}":{"get":{"tags":["User"],"summary":"Find with GUID","description":"| Property | Description                                                  |\r\n| -------- | ------------------------------------------------------------ |\r\n| GUID     | The GUID associated to the user.                             |\r\n| UserName | The username assigned to the user (usually what they use to log-in). |\r\n| Forename | The user's first name.                                       |\r\n| Surname  | The user's last name.                                        |\r\n| Email\t   | The user's email.                                            |\r\n| MobileTelNo     | The MobileTelNo associated to the user.               |\r\n| IsOwnerDriver | Whether the user is Owner Driver.\t\t\t\t\t\t  |\r\n| AccessRightEnumFilter | Used to filter users by access right.\t\t\t  |\r\n| CompanyOutletListItem | The GUID and Description of the company outlet associated to the user. |\r\n| StaffTypeListItem | The GUID and Description of the staff type associated to the user. |","operationId":"User_Get","consumes":["application/json"],"produces":["application/json"],"parameters":[{"name":"guid","in":"path","required":true,"type":"string","format":"uuid"},{"name":"links","in":"query","required":false,"type":"string"},{"name":"include","in":"query","required":false,"type":"string"},{"name":"expand","in":"query","required":false,"type":"string"},{"name":"udf","in":"query","required":false,"type":"string"}],"responses":{"200":{"description":"OK","schema":{"$ref":"#/definitions/ApiResourceResultEntity[ApiIntegratorUserResource]"}}}}},"/directory/users":{"get":{"tags":["User"],"summary":"Find with Filters","description":"| Property | Description                                                  |\r\n| -------- | ------------------------------------------------------------ |\r\n| GUID     | The GUID associated to the user.                             |\r\n| UserName | The username assigned to the user (usually what they use to log-in). |\r\n| Forename | The user's first name.                                       |\r\n| Surname  | The user's last name.                                        |\r\n| Email\t   | The user's email.                                            |\r\n| MobileTelNo     | The MobileTelNo associated to the user.               |\r\n| IsOwnerDriver | Whether the user is Owner Driver.\t\t\t\t\t\t  |\r\n| AccessRightEnumFilter | Used to filter users by access right.\t\t\t  |\r\n| CompanyOutletListItem | The GUID and Description of the company outlet associated to the user. |\r\n| StaffTypeListItem | The GUID and Description of the staff type associated to the user. |","operationId":"User_GetCollection","consumes":["application/json"],"produces":["application/json"],"parameters":[{"name":"filter","in":"query","required":false,"type":"string"},{"name":"search","in":"query","required":false,"type":"string"},{"name":"order","in":"query","required":false,"type":"string"},{"name":"max","in":"query","required":false,"type":"integer","format":"int32"},{"name":"page","in":"query","required":false,"type":"integer","format":"int32"},{"name":"includeCount","in":"query","required":false,"type":"boolean"},{"name":"includeDeleted","in":"query","required":false,"type":"boolean"},{"name":"links","in":"query","required":false,"type":"string"},{"name":"udf","in":"query","required":false,"type":"string"}],"responses":{"200":{"description":"OK","schema":{"$ref":"#/definitions/ApiResourceResultCollection[ApiIntegratorUserResource]"}}}}},"/lists/vats/{guid}":{"get":{"tags":["Vat"],"summary":"Find with GUID","description":"| Property                  | Description                                                              |\r\n| ------------------------- | ------------------------------------------------------------------------ |\r\n| GUID                      | The GUID associated to the VAT                              |\r\n| Description               | The description (code + rate) of the VAT                    |\r\n| Rate                      | The VAT rate                                                |    \r\n| IsDeleted                 | Whether the VAT is deleted\t            \t\t\t\t  |    \r\n","operationId":"Vat_Get","consumes":["application/json"],"produces":["application/json"],"parameters":[{"name":"guid","in":"path","required":true,"type":"string","format":"uuid"},{"name":"links","in":"query","required":false,"type":"string"},{"name":"include","in":"query","required":false,"type":"string"},{"name":"expand","in":"query","required":false,"type":"string"},{"name":"udf","in":"query","required":false,"type":"string"}],"responses":{"200":{"description":"OK","schema":{"$ref":"#/definitions/ApiResourceResultEntity[ApiIntegratorVatResource]"}}}}},"/lists/vats":{"get":{"tags":["Vat"],"summary":"Find with Filters","description":"| Property                  | Description                                                              |\r\n| ------------------------- | ------------------------------------------------------------------------ |\r\n| GUID                      | The GUID associated to the VAT                              |\r\n| Description               | The description (code + rate) of the VAT                    |\r\n| Rate                      | The VAT rate                                                |    \r\n| IsDeleted                 | Whether the VAT is deleted\t            \t\t\t\t  |    \r\n","operationId":"Vat_GetCollection","consumes":["application/json"],"produces":["application/json"],"parameters":[{"name":"filter","in":"query","required":false,"type":"string"},{"name":"search","in":"query","required":false,"type":"string"},{"name":"order","in":"query","required":false,"type":"string"},{"name":"max","in":"query","required":false,"type":"integer","format":"int32"},{"name":"page","in":"query","required":false,"type":"integer","format":"int32"},{"name":"includeCount","in":"query","required":false,"type":"boolean"},{"name":"includeDeleted","in":"query","required":false,"type":"boolean"},{"name":"links","in":"query","required":false,"type":"string"},{"name":"udf","in":"query","required":false,"type":"string"}],"responses":{"200":{"description":"OK","schema":{"$ref":"#/definitions/ApiResourceResultCollection[ApiIntegratorVatResource]"}}}}},"/fleet/vehicles/changes":{"get":{"tags":["Vehicle"],"summary":"Retrieve changes","description":"| Property\t\t\t\t\t\t\t\t\t\t\t| Description                                                                   |\r\n| -------------------------------------------------\t| ----------------------------------------------------------------------------- |\r\n| GUID\t\t\t\t\t\t\t\t\t\t\t\t| The GUID associated to the vehicle.\t\t\t\t\t\t\t\t            |\r\n| IsZeroWeightBinAccumulated\t\t\t\t\t\t| Is the zero weight bin accumulated.\t\t\t\t\t\t\t\t\t\t\t|\r\n| IsNoTagStopEnabled\t\t\t\t\t\t\t\t| Is the no tag stop enabled.\t\t\t\t\t\t\t\t\t\t\t\t\t|\r\n| RegistrationNo\t\t\t\t\t\t\t\t\t| The registration number associated to the vehicle.\t\t\t\t\t\t\t|\r\n| VehicleCode \t\t\t\t\t\t\t\t\t\t| The vehicle code associated to the vehicle.\t\t\t\t\t\t\t\t\t|\r\n| Make \t\t\t\t\t\t\t\t\t\t\t\t| The make associated to the vehicle.\t\t\t\t\t\t\t\t\t        |\r\n| Model \t\t\t\t\t\t\t\t\t\t\t| The model associated to the vehicle.\t\t\t\t\t\t\t\t\t        |\r\n| MaxWeight \t\t\t\t\t\t\t\t\t\t| The maximum weight associated to the vehicle.\t\t\t\t\t\t\t        |\r\n| TareWeight \t\t\t\t\t\t\t\t\t\t| The tare weight associated to the vehicle.\t\t\t\t\t\t\t\t    |\r\n| VolumeCapacity \t\t\t\t\t\t\t        | The volume capacity associated to the vehicle.\t\t\t\t\t\t\t    |\r\n| Notes \t\t\t\t\t\t\t\t\t\t    | The notes associated to the vehicle.\t\t\t\t\t\t\t\t\t        |\r\n| RelatedSupplierGuid\t\t\t\t\t\t\t\t| The related supplier GUID associated to the vehicle.\t\t\t\t\t\t\t|\r\n| RelatedSupplierSiteGuid\t\t\t\t\t\t\t| The related supplier site GUID associated to the vehicle.\t\t\t\t\t\t|\r\n| ContainerTypeListItems[0]\t\t\t\t\t\t\t| The list of container types associated to the vehicle.\t\t\t\t\t\t|\r\n| ContainerTypeListItems[0].ContainerTypeListItem\t| The GUID and description of the container type associated to vehicle.\t\t\t|\r\n| CompanyOutletListItem\t\t\t\t\t\t\t\t| The GUID and description associated to the company outlet.\t\t\t\t\t|\r\n| FilterCompanyOutletListItemGuid\t\t\t\t\t| Filter by the company outlet GUID.\t\t\t\t\t\t\t\t\t\t\t|\r\n| VehicleTypeListItem\t\t\t\t\t\t\t\t| The GUID and description associated to the vehicle type.\t\t\t\t\t\t|","operationId":"Vehicle_GetChanges","consumes":["application/json"],"produces":["application/json"],"parameters":[{"name":"since","in":"query","required":false,"type":"string"},{"name":"cursor","in":"query","required":false,"type":"string"},{"name":"links","in":"query","required":false,"type":"string"}],"responses":{"200":{"description":"OK","schema":{"$ref":"#/definitions/ApiResourceChanges[ApiIntegratorVehicleResource]"}}}}},"/fleet/vehicles/{guid}":{"get":{"tags":["Vehicle"],"summary":"Find with GUID","description":"| Property\t\t\t\t\t\t\t\t\t\t\t| Description                                                                   |\r\n| -------------------------------------------------\t| ----------------------------------------------------------------------------- |\r\n| GUID\t\t\t\t\t\t\t\t\t\t\t\t| The GUID associated to the vehicle.\t\t\t\t\t\t\t\t            |\r\n| IsZeroWeightBinAccumulated\t\t\t\t\t\t| Is the zero weight bin accumulated.\t\t\t\t\t\t\t\t\t\t\t|\r\n| IsNoTagStopEnabled\t\t\t\t\t\t\t\t| Is the no tag stop enabled.\t\t\t\t\t\t\t\t\t\t\t\t\t|\r\n| RegistrationNo\t\t\t\t\t\t\t\t\t| The registration number associated to the vehicle.\t\t\t\t\t\t\t|\r\n| VehicleCode \t\t\t\t\t\t\t\t\t\t| The vehicle code associated to the vehicle.\t\t\t\t\t\t\t\t\t|\r\n| Make \t\t\t\t\t\t\t\t\t\t\t\t| The make associated to the vehicle.\t\t\t\t\t\t\t\t\t        |\r\n| Model \t\t\t\t\t\t\t\t\t\t\t| The model associated to the vehicle.\t\t\t\t\t\t\t\t\t        |\r\n| MaxWeight \t\t\t\t\t\t\t\t\t\t| The maximum weight associated to the vehicle.\t\t\t\t\t\t\t        |\r\n| TareWeight \t\t\t\t\t\t\t\t\t\t| The tare weight associated to the vehicle.\t\t\t\t\t\t\t\t    |\r\n| VolumeCapacity \t\t\t\t\t\t\t        | The volume capacity associated to the vehicle.\t\t\t\t\t\t\t    |\r\n| Notes \t\t\t\t\t\t\t\t\t\t    | The notes associated to the vehicle.\t\t\t\t\t\t\t\t\t        |\r\n| RelatedSupplierGuid\t\t\t\t\t\t\t\t| The related supplier GUID associated to the vehicle.\t\t\t\t\t\t\t|\r\n| RelatedSupplierSiteGuid\t\t\t\t\t\t\t| The related supplier site GUID associated to the vehicle.\t\t\t\t\t\t|\r\n| ContainerTypeListItems[0]\t\t\t\t\t\t\t| The list of container types associated to the vehicle.\t\t\t\t\t\t|\r\n| ContainerTypeListItems[0].ContainerTypeListItem\t| The GUID and description of the container type associated to vehicle.\t\t\t|\r\n| CompanyOutletListItem\t\t\t\t\t\t\t\t| The GUID and description associated to the company outlet.\t\t\t\t\t|\r\n| FilterCompanyOutletListItemGuid\t\t\t\t\t| Filter by the company outlet GUID.\t\t\t\t\t\t\t\t\t\t\t|\r\n| VehicleTypeListItem\t\t\t\t\t\t\t\t| The GUID and description associated to the vehicle type.\t\t\t\t\t\t|","operationId":"Vehicle_Get","consumes":["application/json"],"produces":["application/json"],"parameters":[{"name":"guid","in":"path","required":true,"type":"string","format":"uuid"},{"name":"links","in":"query","required":false,"type":"string"},{"name":"include","in":"query","required":false,"type":"string"},{"name":"expand","in":"query","required":false,"type":"string"},{"name":"udf","in":"query","required":false,"type":"string"}],"responses":{"200":{"description":"OK","schema":{"$ref":"#/definitions/ApiResourceResultEntity[ApiIntegratorVehicleResource]"}}}},"put":{"tags":["Vehicle"],"summary":"Partial update","description":"| Property\t\t\t\t\t\t\t\t\t\t\t| Description                                                                   | Required|\r\n| -------------------------------------------------\t| ----------------------------------------------------------------------------- |---------|\r\n| GUID\t\t\t\t\t\t\t\t\t\t\t\t| The GUID associated to the vehicle.\t\t\t\t\t\t\t\t            |   No    |\r\n| IsZeroWeightBinAccumulated\t\t\t\t\t\t| Is the zero weight bin accumulated.\t\t\t\t\t\t\t\t\t\t\t|   Yes   |\r\n| IsNoTagStopEnabled\t\t\t\t\t\t\t\t| Is the no tag stop enabled.\t\t\t\t\t\t\t\t\t\t\t\t\t|   Yes   |\r\n| RegistrationNo\t\t\t\t\t\t\t\t\t| The registration number associated to the vehicle.\t\t\t\t\t\t\t|   Yes   |\r\n| VehicleCode \t\t\t\t\t\t\t\t\t\t| The vehicle code associated to the vehicle.\t\t\t\t\t\t\t\t\t|   Yes   |\r\n| Make \t\t\t\t\t\t\t\t\t\t\t\t| The make associated to the vehicle.\t\t\t\t\t\t\t\t\t        |   Yes   |\r\n| Model \t\t\t\t\t\t\t\t\t\t\t| The model associated to the vehicle.\t\t\t\t\t\t\t\t\t        |   Yes   |\r\n| MaxWeight \t\t\t\t\t\t\t\t\t\t| The maximum weight associated to the vehicle.\t\t\t\t\t\t\t        |   No    |\r\n| TareWeight \t\t\t\t\t\t\t\t\t\t| The tare weight associated to the vehicle.\t\t\t\t\t\t\t\t    |   No    |\r\n| VolumeCapacity \t\t\t\t\t\t\t        | The volume capacity associated to the vehicle.\t\t\t\t\t\t\t    |   No    |\r\n| Notes \t\t\t\t\t\t\t\t\t\t    | The notes associated to the vehicle.\t\t\t\t\t\t\t\t\t        |   No    |\r\n| RelatedSupplierGuid\t\t\t\t\t\t\t\t| The related supplier GUID associated to the vehicle.\t\t\t\t\t\t\t|   No    |\r\n| RelatedSupplierSiteGuid\t\t\t\t\t\t\t| The related supplier site GUID associated to the vehicle.\t\t\t\t\t\t|   No    |\r\n| ContainerTypeListItems[0]\t\t\t\t\t\t\t| The list of container types associated to the vehicle.\t\t\t\t\t\t|   No    |\r\n| ContainerTypeListItems[0].ContainerTypeListItem\t| The GUID and description of the container type associated to vehicle.\t\t\t|   No    |\r\n| CompanyOutletListItem\t\t\t\t\t\t\t\t| The GUID and description associated to the company outlet.\t\t\t\t\t|   No    |\r\n| FilterCompanyOutletListItemGuid\t\t\t\t\t| Filter by the company outlet GUID.\t\t\t\t\t\t\t\t\t\t\t|   No    |\r\n| VehicleTypeListItem\t\t\t\t\t\t\t\t| The GUID and description associated to the vehicle type.\t\t\t\t\t\t|   No    |\r\n\r\n\r\n## Extra validations\r\n\r\n| Condition | Error message |\r\n| --------- | ------------- |\r\n| If RelatedSupplierGuid has a value but RelatedSupplierSiteGuid is null | The mandatory property RelatedSupplierSiteGuid has a null value. The request could not be processed. Supply a value for the RelatedSupplierSiteGuid property of the submitted resource. |\r\n| CompanyOutletListItem.Guid is duplicate | The Guid must be unique per ContainerTypeListItem |\r\n| If Make is more than 30 characters long | Make must be no more than 30 characters long. |\r\n| If Model is more than 30 characters long | Model must be no more than 30 characters long. |\r\n| If RegistrationNo is more than 30 characters long | RegistrationNo must be no more than 30 characters long. |\r\n| If VehicleCode is more than 60 characters long | VehicleCode must be no more than 60 characters long. |\r\n| If MaxWeight value is more than 10 characters long | MaxWeight must be no more than 10 characters long. |\r\n| If TareWeight value is more than 10 characters long | TareWeight must be no more than 10 characters long. |\r\n| If VolumeCapacity value is more than 10 characters long | VolumeCapacity must be no more than 10 characters long. |\r\n| If VolumeCapacity has negative value | VolumeCapacity must be a positive number. |\r\n| Both RegistrationNo and VehicleCode values already exist | The Vehicle that you are trying to save conflicts with an existing item. Each Vehicle must be unique in terms of Registration Number and Vehicle Code |\r\n| RegistrationNo value already exists | The Vehicle that you are trying to save conflicts with an existing item. Each Vehicle must be unique in terms of Registration Number |\r\n| VehicleCode value already exists | The Vehicle that you are trying to save conflicts with an existing item. Each Vehicle must be unique in terms of Vehicle Code |","operationId":"Vehicle_Update","consumes":["application/json"],"produces":["application/json"],"parameters":[{"name":"id","in":"path","required":true,"type":"string","format":"uuid"},{"in":"body","required":true,"schema":{"$ref":"#/definitions/ApiResourceId"}}],"responses":{"200":{"description":"OK","schema":{"$ref":"#/definitions/ApiResourceId"}}}}},"/fleet/vehicles":{"get":{"tags":["Vehicle"],"summary":"Find with Filters","description":"| Property\t\t\t\t\t\t\t\t\t\t\t| Description                                                                   |\r\n| -------------------------------------------------\t| ----------------------------------------------------------------------------- |\r\n| GUID\t\t\t\t\t\t\t\t\t\t\t\t| The GUID associated to the vehicle.\t\t\t\t\t\t\t\t            |\r\n| IsZeroWeightBinAccumulated\t\t\t\t\t\t| Is the zero weight bin accumulated.\t\t\t\t\t\t\t\t\t\t\t|\r\n| IsNoTagStopEnabled\t\t\t\t\t\t\t\t| Is the no tag stop enabled.\t\t\t\t\t\t\t\t\t\t\t\t\t|\r\n| RegistrationNo\t\t\t\t\t\t\t\t\t| The registration number associated to the vehicle.\t\t\t\t\t\t\t|\r\n| VehicleCode \t\t\t\t\t\t\t\t\t\t| The vehicle code associated to the vehicle.\t\t\t\t\t\t\t\t\t|\r\n| Make \t\t\t\t\t\t\t\t\t\t\t\t| The make associated to the vehicle.\t\t\t\t\t\t\t\t\t        |\r\n| Model \t\t\t\t\t\t\t\t\t\t\t| The model associated to the vehicle.\t\t\t\t\t\t\t\t\t        |\r\n| MaxWeight \t\t\t\t\t\t\t\t\t\t| The maximum weight associated to the vehicle.\t\t\t\t\t\t\t        |\r\n| TareWeight \t\t\t\t\t\t\t\t\t\t| The tare weight associated to the vehicle.\t\t\t\t\t\t\t\t    |\r\n| VolumeCapacity \t\t\t\t\t\t\t        | The volume capacity associated to the vehicle.\t\t\t\t\t\t\t    |\r\n| Notes \t\t\t\t\t\t\t\t\t\t    | The notes associated to the vehicle.\t\t\t\t\t\t\t\t\t        |\r\n| RelatedSupplierGuid\t\t\t\t\t\t\t\t| The related supplier GUID associated to the vehicle.\t\t\t\t\t\t\t|\r\n| RelatedSupplierSiteGuid\t\t\t\t\t\t\t| The related supplier site GUID associated to the vehicle.\t\t\t\t\t\t|\r\n| ContainerTypeListItems[0]\t\t\t\t\t\t\t| The list of container types associated to the vehicle.\t\t\t\t\t\t|\r\n| ContainerTypeListItems[0].ContainerTypeListItem\t| The GUID and description of the container type associated to vehicle.\t\t\t|\r\n| CompanyOutletListItem\t\t\t\t\t\t\t\t| The GUID and description associated to the company outlet.\t\t\t\t\t|\r\n| FilterCompanyOutletListItemGuid\t\t\t\t\t| Filter by the company outlet GUID.\t\t\t\t\t\t\t\t\t\t\t|\r\n| VehicleTypeListItem\t\t\t\t\t\t\t\t| The GUID and description associated to the vehicle type.\t\t\t\t\t\t|","operationId":"Vehicle_GetCollection","consumes":["application/json"],"produces":["application/json"],"parameters":[{"name":"filter","in":"query","required":false,"type":"string"},{"name":"search","in":"query","required":false,"type":"string"},{"name":"order","in":"query","required":false,"type":"string"},{"name":"max","in":"query","required":false,"type":"integer","format":"int32"},{"name":"page","in":"query","required":false,"type":"integer","format":"int32"},{"name":"includeCount","in":"query","required":false,"type":"boolean"},{"name":"includeDeleted","in":"query","required":false,"type":"boolean"},{"name":"links","in":"query","required":false,"type":"string"},{"name":"udf","in":"query","required":false,"type":"string"}],"responses":{"200":{"description":"OK","schema":{"$ref":"#/definitions/ApiResourceResultCollection[ApiIntegratorVehicleResource]"}}}},"post":{"tags":["Vehicle"],"summary":"Create or update","description":"| Property\t\t\t\t\t\t\t\t\t\t\t| Description                                                                   | Required|\r\n| -------------------------------------------------\t| ----------------------------------------------------------------------------- |---------|\r\n| GUID\t\t\t\t\t\t\t\t\t\t\t\t| The GUID associated to the vehicle.\t\t\t\t\t\t\t\t            |   No    |\r\n| IsZeroWeightBinAccumulated\t\t\t\t\t\t| Is the zero weight bin accumulated.\t\t\t\t\t\t\t\t\t\t\t|   Yes   |\r\n| IsNoTagStopEnabled\t\t\t\t\t\t\t\t| Is the no tag stop enabled.\t\t\t\t\t\t\t\t\t\t\t\t\t|   Yes   |\r\n| RegistrationNo\t\t\t\t\t\t\t\t\t| The registration number associated to the vehicle.\t\t\t\t\t\t\t|   Yes   |\r\n| VehicleCode \t\t\t\t\t\t\t\t\t\t| The vehicle code associated to the vehicle.\t\t\t\t\t\t\t\t\t|   Yes   |\r\n| Make \t\t\t\t\t\t\t\t\t\t\t\t| The make associated to the vehicle.\t\t\t\t\t\t\t\t\t        |   Yes   |\r\n| Model \t\t\t\t\t\t\t\t\t\t\t| The model associated to the vehicle.\t\t\t\t\t\t\t\t\t        |   Yes   |\r\n| MaxWeight \t\t\t\t\t\t\t\t\t\t| The maximum weight associated to the vehicle.\t\t\t\t\t\t\t        |   No    |\r\n| TareWeight \t\t\t\t\t\t\t\t\t\t| The tare weight associated to the vehicle.\t\t\t\t\t\t\t\t    |   No    |\r\n| VolumeCapacity \t\t\t\t\t\t\t        | The volume capacity associated to the vehicle.\t\t\t\t\t\t\t    |   No    |\r\n| Notes \t\t\t\t\t\t\t\t\t\t    | The notes associated to the vehicle.\t\t\t\t\t\t\t\t\t        |   No    |\r\n| RelatedSupplierGuid\t\t\t\t\t\t\t\t| The related supplier GUID associated to the vehicle.\t\t\t\t\t\t\t|   No    |\r\n| RelatedSupplierSiteGuid\t\t\t\t\t\t\t| The related supplier site GUID associated to the vehicle.\t\t\t\t\t\t|   No    |\r\n| ContainerTypeListItems[0]\t\t\t\t\t\t\t| The list of container types associated to the vehicle.\t\t\t\t\t\t|   No    |\r\n| ContainerTypeListItems[0].ContainerTypeListItem\t| The GUID and description of the container type associated to vehicle.\t\t\t|   No    |\r\n| CompanyOutletListItem\t\t\t\t\t\t\t\t| The GUID and description associated to the company outlet.\t\t\t\t\t|   No    |\r\n| FilterCompanyOutletListItemGuid\t\t\t\t\t| Filter by the company outlet GUID.\t\t\t\t\t\t\t\t\t\t\t|   No    |\r\n| VehicleTypeListItem\t\t\t\t\t\t\t\t| The GUID and description associated to the vehicle type.\t\t\t\t\t\t|   No    |\r\n\r\n\r\n## Extra validations\r\n\r\n| Condition | Error message |\r\n| --------- | ------------- |\r\n| If RelatedSupplierGuid has a value but RelatedSupplierSiteGuid is null | The mandatory property RelatedSupplierSiteGuid has a null value. The request could not be processed. Supply a value for the RelatedSupplierSiteGuid property of the submitted resource. |\r\n| CompanyOutletListItem.Guid is duplicate | The Guid must be unique per ContainerTypeListItem |\r\n| If Make is more than 30 characters long | Make must be no more than 30 characters long. |\r\n| If Model is more than 30 characters long | Model must be no more than 30 characters long. |\r\n| If RegistrationNo is more than 30 characters long | RegistrationNo must be no more than 30 characters long. |\r\n| If VehicleCode is more than 60 characters long | VehicleCode must be no more than 60 characters long. |\r\n| If MaxWeight value is more than 10 characters long | MaxWeight must be no more than 10 characters long. |\r\n| If TareWeight value is more than 10 characters long | TareWeight must be no more than 10 characters long. |\r\n| If VolumeCapacity value is more than 10 characters long | VolumeCapacity must be no more than 10 characters long. |\r\n| If VolumeCapacity has negative value | VolumeCapacity must be a positive number. |\r\n| Both RegistrationNo and VehicleCode values already exist | The Vehicle that you are trying to save conflicts with an existing item. Each Vehicle must be unique in terms of Registration Number and Vehicle Code |\r\n| RegistrationNo value already exists | The Vehicle that you are trying to save conflicts with an existing item. Each Vehicle must be unique in terms of Registration Number |\r\n| VehicleCode value already exists | The Vehicle that you are trying to save conflicts with an existing item. Each Vehicle must be unique in terms of Vehicle Code |","operationId":"Vehicle_Create","consumes":["application/json"],"produces":["application/json"],"parameters":[{"in":"body","required":true,"schema":{"$ref":"#/definitions/ApiResourceId"}}],"responses":{"200":{"description":"OK","schema":{"$ref":"#/definitions/ApiResourceId"}}}}},"/fleet/vehicleEvents/changes":{"get":{"tags":["VehicleEvent"],"summary":"Retrieve changes","description":"| Property\t\t\t\t\t\t\t\t\t\t\t| Description                                                                   |\r\n| -------------------------------------------------\t| ----------------------------------------------------------------------------- |\r\n| GUID\t\t\t\t\t\t\t\t\t\t\t\t| The GUID associated to the vehicle event.\t\t\t\t\t\t\t\t\t\t|\r\n| AdditionalInformation\t\t\t\t\t\t\t\t| The additional information associated to the vehicle event.\t\t\t\t\t|\r\n| BinVisitedCount\t\t\t\t\t\t\t\t\t| The bin visited count associated to the vehicle event.\t\t\t\t\t\t|\r\n| CurrentWeight \t\t\t\t\t\t\t\t\t| The current weight associated to the vehicle event.\t\t\t\t\t\t\t|\r\n| Distance \t\t\t\t\t\t\t\t\t\t\t| The distance associated to the vehicle event.\t\t\t\t\t\t\t\t\t|\r\n| EventDate\t\t\t \t\t\t\t\t\t\t\t| The event date associated to the vehicle event.\t\t\t\t\t\t\t\t|\r\n| FlexibleData\t\t\t\t\t\t\t\t\t\t| The flexible data associated to the vehicle event.\t\t\t\t\t\t\t|\r\n| IsAcknowledged\t\t\t\t\t\t\t\t\t| Whether the vehicle event is acknowledged.\t\t\t\t\t\t\t\t\t|\r\n| IsGeoCompressed\t\t\t\t\t\t\t\t\t| Whether the vehicle event is geo compressed.\t\t\t\t\t\t\t\t\t|\r\n| Location\t\t\t\t\t\t\t\t\t\t\t| The location associated to the vehicle event.\t\t\t\t\t\t\t\t\t|\r\n| NumberOfPictures\t\t\t\t\t\t\t\t\t| The number of pictures associated to the vehicle event.\t\t\t\t\t\t|\r\n| Speed\t\t\t\t\t\t\t\t\t\t\t\t| The speed associated to the vehicle event.\t\t\t\t\t\t\t\t\t|\r\n| SpeedLimit\t\t\t\t\t\t\t\t\t\t| The speed limit associated to the vehicle event.\t\t\t\t\t\t\t\t|\r\n| SysUserName\t\t\t\t\t\t\t\t\t\t| The system user name associated to the vehicle event.\t\t\t\t\t\t\t|\r\n| TimeStamp\t\t\t\t\t\t\t\t\t\t\t| The time stamp associated to the vehicle event.\t\t\t\t\t\t\t\t|\r\n| TotalDistance\t\t\t\t\t\t\t\t\t\t| The total distance associated to the vehicle event.\t\t\t\t\t\t\t|\r\n| VehicleCode\t\t\t\t\t\t\t\t\t\t| The vehicle code associated to the vehicle event.\t\t\t\t\t\t\t\t|\r\n| VehicleEventXML\t\t\t\t\t\t\t\t\t| The vehicle event XML associated to the vehicle event.\t\t\t\t\t\t|\r\n| VehicleEventTypeListItem\t\t\t\t\t\t\t| The GUID and description associated to the vehicle event.\t\t\t\t\t\t|\r\n| RelatedJobGuid\t\t\t\t\t\t\t\t\t| The related job GUID associated to the vehicle event. Filterable\t\t\t\t|\r\n| RelatedRouteGuid\t\t\t\t\t\t\t\t\t| The related route GUID associated to the vehicle event. Filterable\t\t\t|\r\n| RelatedRouteVisitGroupGuid\t\t\t\t\t\t| The related route visit group GUID associated to the vehicle event. Filterable|\r\n| RelatedScheduleGuid\t\t\t\t\t\t\t\t| The related schedule GUID associated to the vehicle event. Filterable\t\t\t|\r\n| RelatedVehicleGuid\t\t\t\t\t\t\t\t| The related vehicle GUID associated to the vehicle event.\t\t\t\t\t\t|\r\n| IsDeleted\t\t\t\t\t\t\t\t\t\t\t| Whether the vehicle event is deleted\t\t\t\t\t\t\t\t\t\t\t|","operationId":"VehicleEvent_GetChanges","consumes":["application/json"],"produces":["application/json"],"parameters":[{"name":"since","in":"query","required":false,"type":"string"},{"name":"cursor","in":"query","required":false,"type":"string"},{"name":"links","in":"query","required":false,"type":"string"}],"responses":{"200":{"description":"OK","schema":{"$ref":"#/definitions/ApiResourceChanges[ApiIntegratorVehicleEventResource]"}}}}},"/fleet/vehicleEvents/{guid}":{"get":{"tags":["VehicleEvent"],"summary":"Find with GUID","description":"| Property\t\t\t\t\t\t\t\t\t\t\t| Description                                                                   |\r\n| -------------------------------------------------\t| ----------------------------------------------------------------------------- |\r\n| GUID\t\t\t\t\t\t\t\t\t\t\t\t| The GUID associated to the vehicle event.\t\t\t\t\t\t\t\t\t\t|\r\n| AdditionalInformation\t\t\t\t\t\t\t\t| The additional information associated to the vehicle event.\t\t\t\t\t|\r\n| BinVisitedCount\t\t\t\t\t\t\t\t\t| The bin visited count associated to the vehicle event.\t\t\t\t\t\t|\r\n| CurrentWeight \t\t\t\t\t\t\t\t\t| The current weight associated to the vehicle event.\t\t\t\t\t\t\t|\r\n| Distance \t\t\t\t\t\t\t\t\t\t\t| The distance associated to the vehicle event.\t\t\t\t\t\t\t\t\t|\r\n| EventDate\t\t\t \t\t\t\t\t\t\t\t| The event date associated to the vehicle event.\t\t\t\t\t\t\t\t|\r\n| FlexibleData\t\t\t\t\t\t\t\t\t\t| The flexible data associated to the vehicle event.\t\t\t\t\t\t\t|\r\n| IsAcknowledged\t\t\t\t\t\t\t\t\t| Whether the vehicle event is acknowledged.\t\t\t\t\t\t\t\t\t|\r\n| IsGeoCompressed\t\t\t\t\t\t\t\t\t| Whether the vehicle event is geo compressed.\t\t\t\t\t\t\t\t\t|\r\n| Location\t\t\t\t\t\t\t\t\t\t\t| The location associated to the vehicle event.\t\t\t\t\t\t\t\t\t|\r\n| NumberOfPictures\t\t\t\t\t\t\t\t\t| The number of pictures associated to the vehicle event.\t\t\t\t\t\t|\r\n| Speed\t\t\t\t\t\t\t\t\t\t\t\t| The speed associated to the vehicle event.\t\t\t\t\t\t\t\t\t|\r\n| SpeedLimit\t\t\t\t\t\t\t\t\t\t| The speed limit associated to the vehicle event.\t\t\t\t\t\t\t\t|\r\n| SysUserName\t\t\t\t\t\t\t\t\t\t| The system user name associated to the vehicle event.\t\t\t\t\t\t\t|\r\n| TimeStamp\t\t\t\t\t\t\t\t\t\t\t| The time stamp associated to the vehicle event.\t\t\t\t\t\t\t\t|\r\n| TotalDistance\t\t\t\t\t\t\t\t\t\t| The total distance associated to the vehicle event.\t\t\t\t\t\t\t|\r\n| VehicleCode\t\t\t\t\t\t\t\t\t\t| The vehicle code associated to the vehicle event.\t\t\t\t\t\t\t\t|\r\n| VehicleEventXML\t\t\t\t\t\t\t\t\t| The vehicle event XML associated to the vehicle event.\t\t\t\t\t\t|\r\n| VehicleEventTypeListItem\t\t\t\t\t\t\t| The GUID and description associated to the vehicle event.\t\t\t\t\t\t|\r\n| RelatedJobGuid\t\t\t\t\t\t\t\t\t| The related job GUID associated to the vehicle event. Filterable\t\t\t\t|\r\n| RelatedRouteGuid\t\t\t\t\t\t\t\t\t| The related route GUID associated to the vehicle event. Filterable\t\t\t|\r\n| RelatedRouteVisitGroupGuid\t\t\t\t\t\t| The related route visit group GUID associated to the vehicle event. Filterable|\r\n| RelatedScheduleGuid\t\t\t\t\t\t\t\t| The related schedule GUID associated to the vehicle event. Filterable\t\t\t|\r\n| RelatedVehicleGuid\t\t\t\t\t\t\t\t| The related vehicle GUID associated to the vehicle event.\t\t\t\t\t\t|\r\n| IsDeleted\t\t\t\t\t\t\t\t\t\t\t| Whether the vehicle event is deleted\t\t\t\t\t\t\t\t\t\t\t|","operationId":"VehicleEvent_Get","consumes":["application/json"],"produces":["application/json"],"parameters":[{"name":"guid","in":"path","required":true,"type":"string","format":"uuid"},{"name":"links","in":"query","required":false,"type":"string"},{"name":"include","in":"query","required":false,"type":"string"},{"name":"expand","in":"query","required":false,"type":"string"},{"name":"udf","in":"query","required":false,"type":"string"}],"responses":{"200":{"description":"OK","schema":{"$ref":"#/definitions/ApiResourceResultEntity[ApiIntegratorVehicleEventResource]"}}}},"put":{"tags":["VehicleEvent"],"summary":"Partial update","description":"| Property\t\t\t\t\t\t\t\t\t\t\t| Description                                                                   | Required|\r\n| -------------------------------------------------\t| ----------------------------------------------------------------------------- |---------|\r\n| GUID\t\t\t\t\t\t\t\t\t\t\t\t| The GUID associated to the vehicle event.\t\t\t\t\t\t\t\t\t\t|   No    |\r\n| AdditionalInformation\t\t\t\t\t\t\t\t| The additional information associated to the vehicle event.\t\t\t\t\t|   No    |\r\n| BinVisitedCount\t\t\t\t\t\t\t\t\t| The bin visited count associated to the vehicle event.\t\t\t\t\t\t|   No    |\r\n| CurrentWeight \t\t\t\t\t\t\t\t\t| The current weight associated to the vehicle event.\t\t\t\t\t\t\t|   No    |\r\n| Distance \t\t\t\t\t\t\t\t\t\t\t| The distance associated to the vehicle event.\t\t\t\t\t\t\t\t\t|   No    |\r\n| EventDate\t\t\t \t\t\t\t\t\t\t\t| The event date associated to the vehicle event.\t\t\t\t\t\t\t\t|   No    |\r\n| FlexibleData\t\t\t\t\t\t\t\t\t\t| The flexible data associated to the vehicle event.\t\t\t\t\t\t\t|   No    |\r\n| IsAcknowledged\t\t\t\t\t\t\t\t\t| Whether the vehicle event is acknowledged.\t\t\t\t\t\t\t\t\t|   Yes   |\r\n| IsGeoCompressed\t\t\t\t\t\t\t\t\t| Whether the vehicle event is geo compressed.\t\t\t\t\t\t\t\t\t|   Yes   |\r\n| Location\t\t\t\t\t\t\t\t\t\t\t| The location associated to the vehicle event.\t\t\t\t\t\t\t\t\t|   No    |\r\n| NumberOfPictures\t\t\t\t\t\t\t\t\t| The number of pictures associated to the vehicle event.\t\t\t\t\t\t|   No    |\r\n| Speed\t\t\t\t\t\t\t\t\t\t\t\t| The speed associated to the vehicle event.\t\t\t\t\t\t\t\t\t|   No    |\r\n| SpeedLimit\t\t\t\t\t\t\t\t\t\t| The speed limit associated to the vehicle event.\t\t\t\t\t\t\t\t|   No    |\r\n| SysUserName\t\t\t\t\t\t\t\t\t\t| The system user name associated to the vehicle event.\t\t\t\t\t\t\t|   No    |\r\n| TimeStamp\t\t\t\t\t\t\t\t\t\t\t| The time stamp associated to the vehicle event.\t\t\t\t\t\t\t\t|   No    |\r\n| TotalDistance\t\t\t\t\t\t\t\t\t\t| The total distance associated to the vehicle event.\t\t\t\t\t\t\t|   No    |\r\n| VehicleCode\t\t\t\t\t\t\t\t\t\t| The vehicle code associated to the vehicle event.\t\t\t\t\t\t\t\t|   Yes   |\r\n| VehicleEventXML\t\t\t\t\t\t\t\t\t| The vehicle event XML associated to the vehicle event.\t\t\t\t\t\t|   No    |\r\n| VehicleEventTypeListItem\t\t\t\t\t\t\t| The GUID and description associated to the vehicle event.\t\t\t\t\t\t|   No    |\r\n| RelatedJobGuid\t\t\t\t\t\t\t\t\t| The related job GUID associated to the vehicle event.\t\t\t\t\t\t\t|   No    |\r\n| RelatedRouteGuid\t\t\t\t\t\t\t\t\t| The related route GUID associated to the vehicle event.\t\t\t\t\t\t|   No    |\r\n| RelatedRouteVisitGroupGuid\t\t\t\t\t\t| The related route visit group GUID associated to the vehicle event.\t\t\t|   No    |\r\n| RelatedScheduleGuid\t\t\t\t\t\t\t\t| The related schedule GUID associated to the vehicle event.\t\t\t\t\t|   No    |\r\n| RelatedVehicleGuid\t\t\t\t\t\t\t\t| The related vehicle GUID associated to the vehicle event.\t\t\t\t\t\t|   Yes   |\r\n| IsDeleted\t\t\t\t\t\t\t\t\t\t\t| Whether the vehicle event is deleted\t\t\t\t\t\t\t\t\t\t\t|   No    |\r\n\r\n\r\n## Extra validations\r\n\r\n| Condition | Error message |\r\n| --------- | ------------- |\r\n| Invalid RelatedJobGuid | Failed to retrieve Job with RelatedJobGuid of {Guid} |\r\n| Invalid RelatedRouteGuid | Failed to retrieve Route with RelatedRouteGuid of {Guid} |\r\n| Invalid RelatedScheduleGuid | Failed to retrieve Schedule with RelatedScheduleGuid of {Guid} |\r\n| Invalid RelatedVehicleGuid | Failed to retrieve Vehicle with RelatedVehicleGuid of {Guid} |\r\n| VehicleEventType not found with value VehicleEventTypeListItem.Guid | Failed to retrieve VehicleEventType with GUID of {value of VehicleEventTypeListItem.Guid} |\r\n| If IsDeleted is set as true on the payload | IsDeleted is TRUE. Could not process the request. Resources can not be deleted via the REST API. |\r\n| Location.Lat value not in range between -90 and 90 or Location.Long value not in range between -180 and 180 | Location.Lat value must be between -90 and 90. Location.Long value must be between -180 and 180. |","operationId":"VehicleEvent_Update","consumes":["application/json"],"produces":["application/json"],"parameters":[{"name":"guid","in":"path","required":true,"type":"string","format":"uuid"},{"in":"body","required":true,"schema":{"$ref":"#/definitions/ApiResourceId"}}],"responses":{"200":{"description":"OK","schema":{"$ref":"#/definitions/ApiResourceId"}}}}},"/fleet/vehicleEvents":{"get":{"tags":["VehicleEvent"],"summary":"Find with Filters","description":"| Property\t\t\t\t\t\t\t\t\t\t\t| Description                                                                   |\r\n| -------------------------------------------------\t| ----------------------------------------------------------------------------- |\r\n| GUID\t\t\t\t\t\t\t\t\t\t\t\t| The GUID associated to the vehicle event.\t\t\t\t\t\t\t\t\t\t|\r\n| AdditionalInformation\t\t\t\t\t\t\t\t| The additional information associated to the vehicle event.\t\t\t\t\t|\r\n| BinVisitedCount\t\t\t\t\t\t\t\t\t| The bin visited count associated to the vehicle event.\t\t\t\t\t\t|\r\n| CurrentWeight \t\t\t\t\t\t\t\t\t| The current weight associated to the vehicle event.\t\t\t\t\t\t\t|\r\n| Distance \t\t\t\t\t\t\t\t\t\t\t| The distance associated to the vehicle event.\t\t\t\t\t\t\t\t\t|\r\n| EventDate\t\t\t \t\t\t\t\t\t\t\t| The event date associated to the vehicle event.\t\t\t\t\t\t\t\t|\r\n| FlexibleData\t\t\t\t\t\t\t\t\t\t| The flexible data associated to the vehicle event.\t\t\t\t\t\t\t|\r\n| IsAcknowledged\t\t\t\t\t\t\t\t\t| Whether the vehicle event is acknowledged.\t\t\t\t\t\t\t\t\t|\r\n| IsGeoCompressed\t\t\t\t\t\t\t\t\t| Whether the vehicle event is geo compressed.\t\t\t\t\t\t\t\t\t|\r\n| Location\t\t\t\t\t\t\t\t\t\t\t| The location associated to the vehicle event.\t\t\t\t\t\t\t\t\t|\r\n| NumberOfPictures\t\t\t\t\t\t\t\t\t| The number of pictures associated to the vehicle event.\t\t\t\t\t\t|\r\n| Speed\t\t\t\t\t\t\t\t\t\t\t\t| The speed associated to the vehicle event.\t\t\t\t\t\t\t\t\t|\r\n| SpeedLimit\t\t\t\t\t\t\t\t\t\t| The speed limit associated to the vehicle event.\t\t\t\t\t\t\t\t|\r\n| SysUserName\t\t\t\t\t\t\t\t\t\t| The system user name associated to the vehicle event.\t\t\t\t\t\t\t|\r\n| TimeStamp\t\t\t\t\t\t\t\t\t\t\t| The time stamp associated to the vehicle event.\t\t\t\t\t\t\t\t|\r\n| TotalDistance\t\t\t\t\t\t\t\t\t\t| The total distance associated to the vehicle event.\t\t\t\t\t\t\t|\r\n| VehicleCode\t\t\t\t\t\t\t\t\t\t| The vehicle code associated to the vehicle event.\t\t\t\t\t\t\t\t|\r\n| VehicleEventXML\t\t\t\t\t\t\t\t\t| The vehicle event XML associated to the vehicle event.\t\t\t\t\t\t|\r\n| VehicleEventTypeListItem\t\t\t\t\t\t\t| The GUID and description associated to the vehicle event.\t\t\t\t\t\t|\r\n| RelatedJobGuid\t\t\t\t\t\t\t\t\t| The related job GUID associated to the vehicle event. Filterable\t\t\t\t|\r\n| RelatedRouteGuid\t\t\t\t\t\t\t\t\t| The related route GUID associated to the vehicle event. Filterable\t\t\t|\r\n| RelatedRouteVisitGroupGuid\t\t\t\t\t\t| The related route visit group GUID associated to the vehicle event. Filterable|\r\n| RelatedScheduleGuid\t\t\t\t\t\t\t\t| The related schedule GUID associated to the vehicle event. Filterable\t\t\t|\r\n| RelatedVehicleGuid\t\t\t\t\t\t\t\t| The related vehicle GUID associated to the vehicle event.\t\t\t\t\t\t|\r\n| IsDeleted\t\t\t\t\t\t\t\t\t\t\t| Whether the vehicle event is deleted\t\t\t\t\t\t\t\t\t\t\t|","operationId":"VehicleEvent_GetCollection","consumes":["application/json"],"produces":["application/json"],"parameters":[{"name":"filter","in":"query","required":false,"type":"string"},{"name":"search","in":"query","required":false,"type":"string"},{"name":"order","in":"query","required":false,"type":"string"},{"name":"max","in":"query","required":false,"type":"integer","format":"int32"},{"name":"page","in":"query","required":false,"type":"integer","format":"int32"},{"name":"includeCount","in":"query","required":false,"type":"boolean"},{"name":"includeDeleted","in":"query","required":false,"type":"boolean"},{"name":"links","in":"query","required":false,"type":"string"},{"name":"udf","in":"query","required":false,"type":"string"}],"responses":{"200":{"description":"OK","schema":{"$ref":"#/definitions/ApiResourceResultCollection[ApiIntegratorVehicleEventResource]"}}}},"post":{"tags":["VehicleEvent"],"summary":"Create or update","description":"| Property\t\t\t\t\t\t\t\t\t\t\t| Description                                                                   | Required|\r\n| -------------------------------------------------\t| ----------------------------------------------------------------------------- |---------|\r\n| GUID\t\t\t\t\t\t\t\t\t\t\t\t| The GUID associated to the vehicle event.\t\t\t\t\t\t\t\t\t\t|   No    |\r\n| AdditionalInformation\t\t\t\t\t\t\t\t| The additional information associated to the vehicle event.\t\t\t\t\t|   No    |\r\n| BinVisitedCount\t\t\t\t\t\t\t\t\t| The bin visited count associated to the vehicle event.\t\t\t\t\t\t|   No    |\r\n| CurrentWeight \t\t\t\t\t\t\t\t\t| The current weight associated to the vehicle event.\t\t\t\t\t\t\t|   No    |\r\n| Distance \t\t\t\t\t\t\t\t\t\t\t| The distance associated to the vehicle event.\t\t\t\t\t\t\t\t\t|   No    |\r\n| EventDate\t\t\t \t\t\t\t\t\t\t\t| The event date associated to the vehicle event.\t\t\t\t\t\t\t\t|   No    |\r\n| FlexibleData\t\t\t\t\t\t\t\t\t\t| The flexible data associated to the vehicle event.\t\t\t\t\t\t\t|   No    |\r\n| IsAcknowledged\t\t\t\t\t\t\t\t\t| Whether the vehicle event is acknowledged.\t\t\t\t\t\t\t\t\t|   Yes   |\r\n| IsGeoCompressed\t\t\t\t\t\t\t\t\t| Whether the vehicle event is geo compressed.\t\t\t\t\t\t\t\t\t|   Yes   |\r\n| Location\t\t\t\t\t\t\t\t\t\t\t| The location associated to the vehicle event.\t\t\t\t\t\t\t\t\t|   No    |\r\n| NumberOfPictures\t\t\t\t\t\t\t\t\t| The number of pictures associated to the vehicle event.\t\t\t\t\t\t|   No    |\r\n| Speed\t\t\t\t\t\t\t\t\t\t\t\t| The speed associated to the vehicle event.\t\t\t\t\t\t\t\t\t|   No    |\r\n| SpeedLimit\t\t\t\t\t\t\t\t\t\t| The speed limit associated to the vehicle event.\t\t\t\t\t\t\t\t|   No    |\r\n| SysUserName\t\t\t\t\t\t\t\t\t\t| The system user name associated to the vehicle event.\t\t\t\t\t\t\t|   No    |\r\n| TimeStamp\t\t\t\t\t\t\t\t\t\t\t| The time stamp associated to the vehicle event.\t\t\t\t\t\t\t\t|   No    |\r\n| TotalDistance\t\t\t\t\t\t\t\t\t\t| The total distance associated to the vehicle event.\t\t\t\t\t\t\t|   No    |\r\n| VehicleCode\t\t\t\t\t\t\t\t\t\t| The vehicle code associated to the vehicle event.\t\t\t\t\t\t\t\t|   Yes   |\r\n| VehicleEventXML\t\t\t\t\t\t\t\t\t| The vehicle event XML associated to the vehicle event.\t\t\t\t\t\t|   No    |\r\n| VehicleEventTypeListItem\t\t\t\t\t\t\t| The GUID and description associated to the vehicle event.\t\t\t\t\t\t|   No    |\r\n| RelatedJobGuid\t\t\t\t\t\t\t\t\t| The related job GUID associated to the vehicle event.\t\t\t\t\t\t\t|   No    |\r\n| RelatedRouteGuid\t\t\t\t\t\t\t\t\t| The related route GUID associated to the vehicle event.\t\t\t\t\t\t|   No    |\r\n| RelatedRouteVisitGroupGuid\t\t\t\t\t\t| The related route visit group GUID associated to the vehicle event.\t\t\t|   No    |\r\n| RelatedScheduleGuid\t\t\t\t\t\t\t\t| The related schedule GUID associated to the vehicle event.\t\t\t\t\t|   No    |\r\n| RelatedVehicleGuid\t\t\t\t\t\t\t\t| The related vehicle GUID associated to the vehicle event.\t\t\t\t\t\t|   Yes   |\r\n| IsDeleted\t\t\t\t\t\t\t\t\t\t\t| Whether the vehicle event is deleted\t\t\t\t\t\t\t\t\t\t\t|   No    |\r\n\r\n\r\n## Extra validations\r\n\r\n| Condition | Error message |\r\n| --------- | ------------- |\r\n| Invalid RelatedJobGuid | Failed to retrieve Job with RelatedJobGuid of {Guid} |\r\n| Invalid RelatedRouteGuid | Failed to retrieve Route with RelatedRouteGuid of {Guid} |\r\n| Invalid RelatedScheduleGuid | Failed to retrieve Schedule with RelatedScheduleGuid of {Guid} |\r\n| Invalid RelatedVehicleGuid | Failed to retrieve Vehicle with RelatedVehicleGuid of {Guid} |\r\n| VehicleEventType not found with value VehicleEventTypeListItem.Guid | Failed to retrieve VehicleEventType with GUID of {value of VehicleEventTypeListItem.Guid} |\r\n| If IsDeleted is set as true on the payload | IsDeleted is TRUE. Could not process the request. Resources can not be deleted via the REST API. |\r\n| Location.Lat value not in range between -90 and 90 or Location.Long value not in range between -180 and 180 | Location.Lat value must be between -90 and 90. Location.Long value must be between -180 and 180. |","operationId":"VehicleEvent_Create","consumes":["application/json"],"produces":["application/json"],"parameters":[{"in":"body","required":true,"schema":{"$ref":"#/definitions/ApiResourceId"}}],"responses":{"200":{"description":"OK","schema":{"$ref":"#/definitions/ApiResourceId"}}}}},"/fleet/vehicleEventGeoSummaries/changes":{"get":{"tags":["VehicleEventGeoSummary"],"summary":"Retrieve changes","description":"| Property\t\t\t\t\t\t\t\t\t\t\t| Description                                                                   |\r\n| -------------------------------------------------\t| ----------------------------------------------------------------------------- |\r\n| GUID\t\t\t\t\t\t\t\t\t\t\t\t| The GUID associated to the VehicleEventGeoSummary.\t\t\t\t\t\t\t|\r\n| DemoRegion \t\t\t\t\t\t\t\t\t\t| The Demo Region associated to the VehicleEventGeoSummary.\t\t\t\t        |    \r\n| FromTimeStamp\t\t\t\t\t\t\t\t\t\t| The From Time Stamp associated to the VehicleEventGeoSummary.\t\t\t\t\t|\r\n| GeoJSON \t\t\t\t\t\t\t\t\t        | The Geo JSON associated to the VehicleEventGeoSummary.\t\t\t\t\t\t|\r\n| NumberOfVehicleEvents \t\t\t\t\t\t\t| The Number Of Vehicle Events associated to the VehicleEventGeoSummary.\t\t|\r\n| ToTimeStamp\t\t\t \t\t\t\t\t\t\t| The To Time Stamp associated to the VehicleEventGeoSummary.\t\t\t\t\t|\r\n| RelatedVehicleGuid\t\t\t\t\t            | The Related Vehicle Guid associated to the VehicleEventGeoSummary. Filterable.|\r\n| Version\t\t\t\t\t\t\t\t            | The Version  associated to the VehicleEventGeoSummary.\t\t\t\t\t\t|\r\n| IsDeleted\t\t\t\t\t\t\t\t            | Is the VehicleEventGeoSummary Deleted.\t\t\t\t\t\t                |\r\n","operationId":"VehicleEventGeoSummary_GetChanges","consumes":["application/json"],"produces":["application/json"],"parameters":[{"name":"since","in":"query","required":false,"type":"string"},{"name":"cursor","in":"query","required":false,"type":"string"},{"name":"links","in":"query","required":false,"type":"string"}],"responses":{"200":{"description":"OK","schema":{"$ref":"#/definitions/ApiResourceChanges[ApiIntegratorVehicleEventGeoSummaryResource]"}}}}},"/fleet/vehicleEventGeoSummaries/{guid}":{"get":{"tags":["VehicleEventGeoSummary"],"summary":"Find with GUID","description":"| Property\t\t\t\t\t\t\t\t\t\t\t| Description                                                                   |\r\n| -------------------------------------------------\t| ----------------------------------------------------------------------------- |\r\n| GUID\t\t\t\t\t\t\t\t\t\t\t\t| The GUID associated to the VehicleEventGeoSummary.\t\t\t\t\t\t\t|\r\n| DemoRegion \t\t\t\t\t\t\t\t\t\t| The Demo Region associated to the VehicleEventGeoSummary.\t\t\t\t        |    \r\n| FromTimeStamp\t\t\t\t\t\t\t\t\t\t| The From Time Stamp associated to the VehicleEventGeoSummary.\t\t\t\t\t|\r\n| GeoJSON \t\t\t\t\t\t\t\t\t        | The Geo JSON associated to the VehicleEventGeoSummary.\t\t\t\t\t\t|\r\n| NumberOfVehicleEvents \t\t\t\t\t\t\t| The Number Of Vehicle Events associated to the VehicleEventGeoSummary.\t\t|\r\n| ToTimeStamp\t\t\t \t\t\t\t\t\t\t| The To Time Stamp associated to the VehicleEventGeoSummary.\t\t\t\t\t|\r\n| RelatedVehicleGuid\t\t\t\t\t            | The Related Vehicle Guid associated to the VehicleEventGeoSummary. Filterable.|\r\n| Version\t\t\t\t\t\t\t\t            | The Version  associated to the VehicleEventGeoSummary.\t\t\t\t\t\t|\r\n| IsDeleted\t\t\t\t\t\t\t\t            | Is the VehicleEventGeoSummary Deleted.\t\t\t\t\t\t                |\r\n","operationId":"VehicleEventGeoSummary_Get","consumes":["application/json"],"produces":["application/json"],"parameters":[{"name":"guid","in":"path","required":true,"type":"string","format":"uuid"},{"name":"links","in":"query","required":false,"type":"string"},{"name":"include","in":"query","required":false,"type":"string"},{"name":"expand","in":"query","required":false,"type":"string"},{"name":"udf","in":"query","required":false,"type":"string"}],"responses":{"200":{"description":"OK","schema":{"$ref":"#/definitions/ApiResourceResultEntity[ApiIntegratorVehicleEventGeoSummaryResource]"}}}},"put":{"tags":["VehicleEventGeoSummary"],"summary":"Partial update","description":"| Property\t\t\t\t\t\t\t\t\t\t\t| Description                                                                   | Required |\r\n| -------------------------------------------------\t| ----------------------------------------------------------------------------- |--------- |\r\n| GUID\t\t\t\t\t\t\t\t\t\t\t\t| The GUID associated to the external vehicle.\t\t\t\t\t\t\t\t    | No       |\r\n| DemoRegion \t\t\t\t\t\t\t\t\t\t| The Demo Region associated to the VehicleEventGeoSummary.\t\t\t\t        | No       |\r\n| FromTimeStamp\t\t\t\t\t\t\t\t\t\t| The From Time Stamp associated to the VehicleEventGeoSummary.\t\t\t\t\t| No       |\r\n| GeoJSON \t\t\t\t\t\t\t\t\t        | The Geo JSON associated to the VehicleEventGeoSummary.\t\t\t\t\t\t| No       |\r\n| NumberOfVehicleEvents \t\t\t\t\t\t\t| The Number Of Vehicle Events associated to the VehicleEventGeoSummary.\t\t| No       |\r\n| ToTimeStamp\t\t\t \t\t\t\t\t\t\t| The To Time Stamp associated to the VehicleEventGeoSummary.\t\t\t\t\t| No       |\r\n| RelatedVehicleGuid\t\t\t\t\t            | The Related Vehicle Guid associated to the VehicleEventGeoSummary.            | Yes      |\r\n| Version\t\t\t\t\t\t\t\t            | The Version  associated to the VehicleEventGeoSummary.\t\t\t\t\t\t| No       |\r\n| IsDeleted\t\t\t\t\t\t\t\t            | Is the VehicleEventGeoSummary Deleted.\t\t\t\t\t\t                | No       |\r\n\r\n## Extra validations\r\n\r\n| Condition | Error message |\r\n| --------- | ------------- |\r\n| Invalid RelatedVehicleGuid | Failed to retrieve Vehicle with RelatedVehicleGuid of {Guid} |\r\n| RelatedVehicleGuid Is Null Or Not Provided | The mandatory property RelatedVehicleGuid has a null value. The request could not be processed. Supply a value for the RelatedVehicleGuid property of the submitted resource.|\r\n| RelatedVehicleGuid belongs to a deleted Vehicle | The provided RelatedVehicleGuid is deleted. Could not update the resource. Please check the relevant list end point for the available options.|\r\n","operationId":"VehicleEventGeoSummary_Update","consumes":["application/json"],"produces":["application/json"],"parameters":[{"name":"guid","in":"path","required":true,"type":"string","format":"uuid"},{"in":"body","required":true,"schema":{"$ref":"#/definitions/ApiResourceId"}}],"responses":{"200":{"description":"OK","schema":{"$ref":"#/definitions/ApiResourceId"}}}}},"/fleet/vehicleEventGeoSummaries":{"get":{"tags":["VehicleEventGeoSummary"],"summary":"Find with Filters","description":"| Property\t\t\t\t\t\t\t\t\t\t\t| Description                                                                   |\r\n| -------------------------------------------------\t| ----------------------------------------------------------------------------- |\r\n| GUID\t\t\t\t\t\t\t\t\t\t\t\t| The GUID associated to the VehicleEventGeoSummary.\t\t\t\t\t\t\t|\r\n| DemoRegion \t\t\t\t\t\t\t\t\t\t| The Demo Region associated to the VehicleEventGeoSummary.\t\t\t\t        |    \r\n| FromTimeStamp\t\t\t\t\t\t\t\t\t\t| The From Time Stamp associated to the VehicleEventGeoSummary.\t\t\t\t\t|\r\n| GeoJSON \t\t\t\t\t\t\t\t\t        | The Geo JSON associated to the VehicleEventGeoSummary.\t\t\t\t\t\t|\r\n| NumberOfVehicleEvents \t\t\t\t\t\t\t| The Number Of Vehicle Events associated to the VehicleEventGeoSummary.\t\t|\r\n| ToTimeStamp\t\t\t \t\t\t\t\t\t\t| The To Time Stamp associated to the VehicleEventGeoSummary.\t\t\t\t\t|\r\n| RelatedVehicleGuid\t\t\t\t\t            | The Related Vehicle Guid associated to the VehicleEventGeoSummary. Filterable.|\r\n| Version\t\t\t\t\t\t\t\t            | The Version  associated to the VehicleEventGeoSummary.\t\t\t\t\t\t|\r\n| IsDeleted\t\t\t\t\t\t\t\t            | Is the VehicleEventGeoSummary Deleted.\t\t\t\t\t\t                |\r\n","operationId":"VehicleEventGeoSummary_GetCollection","consumes":["application/json"],"produces":["application/json"],"parameters":[{"name":"filter","in":"query","required":false,"type":"string"},{"name":"search","in":"query","required":false,"type":"string"},{"name":"order","in":"query","required":false,"type":"string"},{"name":"max","in":"query","required":false,"type":"integer","format":"int32"},{"name":"page","in":"query","required":false,"type":"integer","format":"int32"},{"name":"includeCount","in":"query","required":false,"type":"boolean"},{"name":"includeDeleted","in":"query","required":false,"type":"boolean"},{"name":"links","in":"query","required":false,"type":"string"},{"name":"udf","in":"query","required":false,"type":"string"}],"responses":{"200":{"description":"OK","schema":{"$ref":"#/definitions/ApiResourceResultCollection[ApiIntegratorVehicleEventGeoSummaryResource]"}}}},"post":{"tags":["VehicleEventGeoSummary"],"summary":"Create or update","description":"| Property\t\t\t\t\t\t\t\t\t\t\t| Description                                                                   | Required |\r\n| -------------------------------------------------\t| ----------------------------------------------------------------------------- |--------- |\r\n| GUID\t\t\t\t\t\t\t\t\t\t\t\t| The GUID associated to the external vehicle.\t\t\t\t\t\t\t\t    | No       |\r\n| DemoRegion \t\t\t\t\t\t\t\t\t\t| The Demo Region associated to the VehicleEventGeoSummary.\t\t\t\t        | No       |\r\n| FromTimeStamp\t\t\t\t\t\t\t\t\t\t| The From Time Stamp associated to the VehicleEventGeoSummary.\t\t\t\t\t| No       |\r\n| GeoJSON \t\t\t\t\t\t\t\t\t        | The Geo JSON associated to the VehicleEventGeoSummary.\t\t\t\t\t\t| No       |\r\n| NumberOfVehicleEvents \t\t\t\t\t\t\t| The Number Of Vehicle Events associated to the VehicleEventGeoSummary.\t\t| No       |\r\n| ToTimeStamp\t\t\t \t\t\t\t\t\t\t| The To Time Stamp associated to the VehicleEventGeoSummary.\t\t\t\t\t| No       |\r\n| RelatedVehicleGuid\t\t\t\t\t            | The Related Vehicle Guid associated to the VehicleEventGeoSummary.            | Yes      |\r\n| Version\t\t\t\t\t\t\t\t            | The Version  associated to the VehicleEventGeoSummary.\t\t\t\t\t\t| No       |\r\n| IsDeleted\t\t\t\t\t\t\t\t            | Is the VehicleEventGeoSummary Deleted.\t\t\t\t\t\t                | No       |\r\n\r\n## Extra validations\r\n\r\n| Condition | Error message |\r\n| --------- | ------------- |\r\n| Invalid RelatedVehicleGuid | Failed to retrieve Vehicle with RelatedVehicleGuid of {Guid} |\r\n| RelatedVehicleGuid Is Null Or Not Provided | The mandatory property RelatedVehicleGuid has a null value. The request could not be processed. Supply a value for the RelatedVehicleGuid property of the submitted resource.|\r\n| RelatedVehicleGuid belongs to a deleted Vehicle | The provided RelatedVehicleGuid is deleted. Could not update the resource. Please check the relevant list end point for the available options.|\r\n\r\n","operationId":"VehicleEventGeoSummary_Create","consumes":["application/json"],"produces":["application/json"],"parameters":[{"in":"body","required":true,"schema":{"$ref":"#/definitions/ApiResourceId"}}],"responses":{"200":{"description":"OK","schema":{"$ref":"#/definitions/ApiResourceId"}}}}},"/lists/vehicleEventTypes/{guid}":{"get":{"tags":["VehicleEventType"],"summary":"Find with GUID","description":"| Property                  | Description                                                              |\r\n| ------------------------- | ------------------------------------------------------------------------ |\r\n| GUID                      | The GUID associated to the vehicle event type.\t\t                   |\r\n| Description               | The description of the vehicle event type.                               |\r\n| IsDeleted                 | Whether the vehicle event type is deleted\t            \t\t\t\t   |   ","operationId":"VehicleEventType_Get","consumes":["application/json"],"produces":["application/json"],"parameters":[{"name":"guid","in":"path","required":true,"type":"string","format":"uuid"},{"name":"links","in":"query","required":false,"type":"string"},{"name":"include","in":"query","required":false,"type":"string"},{"name":"expand","in":"query","required":false,"type":"string"},{"name":"udf","in":"query","required":false,"type":"string"}],"responses":{"200":{"description":"OK","schema":{"$ref":"#/definitions/ApiResourceResultEntity[ApiIntegratorVehicleEventTypeResource]"}}}}},"/lists/vehicleEventTypes":{"get":{"tags":["VehicleEventType"],"summary":"Find with Filters","description":"| Property                  | Description                                                              |\r\n| ------------------------- | ------------------------------------------------------------------------ |\r\n| GUID                      | The GUID associated to the vehicle event type.\t\t                   |\r\n| Description               | The description of the vehicle event type.                               |\r\n| IsDeleted                 | Whether the vehicle event type is deleted\t            \t\t\t\t   |   ","operationId":"VehicleEventType_GetCollection","consumes":["application/json"],"produces":["application/json"],"parameters":[{"name":"filter","in":"query","required":false,"type":"string"},{"name":"search","in":"query","required":false,"type":"string"},{"name":"order","in":"query","required":false,"type":"string"},{"name":"max","in":"query","required":false,"type":"integer","format":"int32"},{"name":"page","in":"query","required":false,"type":"integer","format":"int32"},{"name":"includeCount","in":"query","required":false,"type":"boolean"},{"name":"includeDeleted","in":"query","required":false,"type":"boolean"},{"name":"links","in":"query","required":false,"type":"string"},{"name":"udf","in":"query","required":false,"type":"string"}],"responses":{"200":{"description":"OK","schema":{"$ref":"#/definitions/ApiResourceResultCollection[ApiIntegratorVehicleEventTypeResource]"}}}}},"/lists/vehicleTypes/{guid}":{"get":{"tags":["VehicleType"],"summary":"Find with GUID","description":"| Property                  | Description                                                              |\r\n| ------------------------- | ------------------------------------------------------------------------ |\r\n| GUID                      | The GUID associated to the vehicle type.\t\t\t\t\t\t\t\t   |\r\n| Description               | The description of the vehicle type.                                     |\r\n| Code\t\t\t\t\t\t| The code associated to the vehicle type.                                 |\r\n| CollectionType            | The collectionType associated to the vehicle type.                       |\r\n","operationId":"VehicleType_Get","consumes":["application/json"],"produces":["application/json"],"parameters":[{"name":"guid","in":"path","required":true,"type":"string","format":"uuid"},{"name":"links","in":"query","required":false,"type":"string"},{"name":"include","in":"query","required":false,"type":"string"},{"name":"expand","in":"query","required":false,"type":"string"},{"name":"udf","in":"query","required":false,"type":"string"}],"responses":{"200":{"description":"OK","schema":{"$ref":"#/definitions/ApiResourceResultEntity[ApiIntegratorVehicleTypeResource]"}}}}},"/lists/vehicleTypes":{"get":{"tags":["VehicleType"],"summary":"Find with Filters","description":"| Property                  | Description                                                              |\r\n| ------------------------- | ------------------------------------------------------------------------ |\r\n| GUID                      | The GUID associated to the vehicle type.\t\t\t\t\t\t\t\t   |\r\n| Description               | The description of the vehicle type.                                     |\r\n| Code\t\t\t\t\t\t| The code associated to the vehicle type.                                 |\r\n| CollectionType            | The collectionType associated to the vehicle type.                       |\r\n","operationId":"VehicleType_GetCollection","consumes":["application/json"],"produces":["application/json"],"parameters":[{"name":"filter","in":"query","required":false,"type":"string"},{"name":"search","in":"query","required":false,"type":"string"},{"name":"order","in":"query","required":false,"type":"string"},{"name":"max","in":"query","required":false,"type":"integer","format":"int32"},{"name":"page","in":"query","required":false,"type":"integer","format":"int32"},{"name":"includeCount","in":"query","required":false,"type":"boolean"},{"name":"includeDeleted","in":"query","required":false,"type":"boolean"},{"name":"links","in":"query","required":false,"type":"string"},{"name":"udf","in":"query","required":false,"type":"string"}],"responses":{"200":{"description":"OK","schema":{"$ref":"#/definitions/ApiResourceResultCollection[ApiIntegratorVehicleTypeResource]"}}}}},"/lists/visitStatuses/{guid}":{"get":{"tags":["VisitStatus"],"summary":"Find with GUID","description":"| Property                  | Description                                                              |\r\n| ------------------------- | ------------------------------------------------------------------------ |\r\n| GUID                      | The GUID associated to the visit status.\t\t\t\t\t\t\t\t   |\r\n| Description               | The description of the visit status.                                     |\r\n","operationId":"VisitStatus_Get","consumes":["application/json"],"produces":["application/json"],"parameters":[{"name":"guid","in":"path","required":true,"type":"string","format":"uuid"},{"name":"links","in":"query","required":false,"type":"string"},{"name":"include","in":"query","required":false,"type":"string"},{"name":"expand","in":"query","required":false,"type":"string"},{"name":"udf","in":"query","required":false,"type":"string"}],"responses":{"200":{"description":"OK","schema":{"$ref":"#/definitions/ApiResourceResultEntity[ApiIntegratorVisitStatusResource]"}}}}},"/lists/visitStatuses":{"get":{"tags":["VisitStatus"],"summary":"Find with Filters","description":"| Property                  | Description                                                              |\r\n| ------------------------- | ------------------------------------------------------------------------ |\r\n| GUID                      | The GUID associated to the visit status.\t\t\t\t\t\t\t\t   |\r\n| Description               | The description of the visit status.                                     |\r\n","operationId":"VisitStatus_GetCollection","consumes":["application/json"],"produces":["application/json"],"parameters":[{"name":"filter","in":"query","required":false,"type":"string"},{"name":"search","in":"query","required":false,"type":"string"},{"name":"order","in":"query","required":false,"type":"string"},{"name":"max","in":"query","required":false,"type":"integer","format":"int32"},{"name":"page","in":"query","required":false,"type":"integer","format":"int32"},{"name":"includeCount","in":"query","required":false,"type":"boolean"},{"name":"includeDeleted","in":"query","required":false,"type":"boolean"},{"name":"links","in":"query","required":false,"type":"string"},{"name":"udf","in":"query","required":false,"type":"string"}],"responses":{"200":{"description":"OK","schema":{"$ref":"#/definitions/ApiResourceResultCollection[ApiIntegratorVisitStatusResource]"}}}}},"/scale/weighings/changes":{"get":{"tags":["Weighing"],"summary":"Retrieve changes","description":"| Property                              | Description                                                                   |\r\n| ------------------------------------- | ----------------------------------------------------------------------------- |\r\n| GUID                                  | The GUID associated to the weighing.                                          |\r\n| RelatedScheduleGuid                   | The GUID associated to the schedule of the weighing.                          |\r\n| RelatedRouteGuid                      | The GUID associated to the route of the weighing.                             |\r\n| RelatedJobGuid                        | The GUID associated to the job of the weighing.                               |\r\n| RelatedVehicleGuid                    | The GUID associated to the vehicle of the weighing.                           |\r\n| RelatedExternalVehicleGuid            | The GUID associated to the external vehicle of the weighing.                  |\r\n| RelatedMaterialGuid                   | The GUID associated to the material of the weighing.                          |\r\n| RelatedLocationGuid                   | Used to filter the related location guid associated to the location of the weighing.                          |\r\n| RelatedLocationDestinationGuid        | Used to filter the related destination location guid associated to the destination location of the weighing.              |\r\n| RelatedAreaOfOriginGuid               | The GUID associated to the area of origin of the weighing.                    |\r\n| RelatedSupplierThirdPartyCarrierGuid  | The GUID associated to the third party carrier supplier site of the weighing. |\r\n| RelatedTransferDestinationWeighingGuid | The GUID associated to the transfer destination weighing of the weighing.    |\r\n| TicketNo                              | The ticket number associated to the weighing.                                 |\r\n| ExternalTicketNo                      | The external ticket number associated to the weighing.                        |\r\n| DestinationTicketNo                   | The destination ticket number associated to the weighing.                     |\r\n| CustomerLoadReference                 | The customer load reference associated to the weighing.                       |\r\n| CustomerInvoiceReference              | The customer invoice reference associated to the weighing.                    |\r\n| Notes                                 | The notes associated to the weighing.                                         |\r\n| WeighingTypeListItem                  | The GUID and description of the weighing type associated to the weighing.     |\r\n| HaulierName                           | The haulier name associated to the weighing.                                  |\r\n| Driver                                | The driver data associated to the weighing.                                   |\r\n| Driver.Name                           | The name associated to the driver.                                            |\r\n| Driver.LicenceNumber                  | The licence number associated to the driver.                                  |\r\n| IsComplete                            | Is this weighing complete?                                                    |\r\n| IsDestinationConfirmed                | Is this weighing confirmed on destination?                                    |\r\n| IsExternalVehicle                     | Is this weighing done with an external vehicle?                               |\r\n| IsEstimatedWeight                     | Is the weight of this weighing estimated?                                     |\r\n| IsGradingConfirmed                    | Is the grading of this weighing confirmed?                                    |\r\n| IsIncContainer                        | Is this weighing including a container?                                       |\r\n| IsInspectionConfirmed                 | Is the inspection of this weighing confirmed?                                 |\r\n| IsOutboundWeighingComplete            | Is the outbound weighing complete?                                            |\r\n| IsPassThrough                         | Is this a pass through weighing?                                              |\r\n| IsPrinted                             | Is this weighing printed?                                                     |\r\n| StartedFromANPR                       | Is this weighing started by an Automatic Number Plate Recognition device?     |\r\n| CashCollected                         | Amount of cash collected for this weighing.                                   |\r\n| WeighingDate                          | The weighing date of this weighing. Filterable                                |\r\n| Weights                               | The weight data assosicated to the weighing.                                  |\r\n| Weights.GrossWeight                   | The gross weight data associated to the weighing.                             |\r\n| Weights.GrossWeight.Guid              | The GUID associated to the gross weight of the weighing.                      |\r\n| Weights.GrossWeight.Weight            | The weight associated to the gross weight of the weighing.                    |\r\n| Weights.GrossWeight.Timestamp         | The timestamp associated to the gross weight of the weighing.                 |\r\n| Weights.GrossWeight.WeightTypeListItem         | The GUID and description of the weight type associated to the gross weight.                 |\r\n| Weights.TareWeight                    | The tare weight data associated to the weighing.                              |\r\n| Weights.TareWeight.Guid               | The GUID associated to the tare weight of the weighing.                       |\r\n| Weights.TareWeight.Weight             | The weight associated to the tare weight of the weighing.                     |\r\n| Weights.TareWeight.Timestamp          | The timestamp associated to the tare weight of the weighing.                  |\r\n| Weights.TareWeight.WeightTypeListItem          | The GUID and description of the weight type associated to the tare weight.                  |\r\n| Weights.Quantity                      | The quantity associated to the weighing.                                      |\r\n| Weights.Volume                        | The volume associated to the weighing.                                        |\r\n| Weights.BridgeName                    | The bridge name associated to the weighing.                                   |\r\n| DestinationWeight                     | Weights done at destination associated to the weighing.                       |\r\n| DestinationWeight.GrossWeight         | The gross weight at destination associated to the weighing.                   |\r\n| DestinationWeight.TareWeight          | The tare weight at destination associated to the weighing.                    |\r\n| DestinationWeight.Quantity            | The quantity at destination associated to the weighing.                       |\r\n| DestinationWeight.Volume              | The volume at destination associated to the weighing.                         |\r\n| WeighingIns[0]                        | The list of weighing ins associated to the weighing.                          |\r\n| WeighingIns[0].Guid                   | The GUID associated to the weighing in.                                       |\r\n| WeighingIns[0].TicketNo               | The ticket number associated to the weighing in.                              |\r\n| WeighingIns[0].IsAutomatic            | Is this weighing done automatic?                                              |\r\n| WeighingIns[0].MaterialListItem       | The GUID and description of the material list associated to the weighing in.  |\r\n| WeighingIns[0].ContainerTypeListItem  | The GUID and description of the container type associated to the weighing in. |\r\n| WeighingIns[0].Weights                       | The weight data assosicated to the weighing in.                        |\r\n| WeighingIns[0].Weights.GrossWeight           | The gross weight data associated to the weighing in.                   |\r\n| WeighingIns[0].Weights.GrossWeight.Guid      | The GUID associated to the gross weight of the weighing in.            |\r\n| WeighingIns[0].Weights.GrossWeight.Weight    | The weight associated to the gross weight of the weighing in.          |\r\n| WeighingIns[0].Weights.GrossWeight.Timestamp | The timestamp associated to the gross weight of the weighing in.       |\r\n| WeighingIns[0].Weights.GrossWeight.WeightTypeListItem | The GUID and description of the weight type associated to the weighing in gross weight.       |\r\n| WeighingIns[0].Weights.TareWeight            | The tare weight data associated to the weighing in.                    |\r\n| WeighingIns[0].Weights.TareWeight.Guid       | The GUID associated to the tare weight of the weighing in.             |\r\n| WeighingIns[0].Weights.TareWeight.Weight     | The weight associated to the tare weight of the weighing in.           |\r\n| WeighingIns[0].Weights.TareWeight.Timestamp  | The timestamp associated to the tare weight of the weighing in.        |\r\n| WeighingIns[0].Weights.TareWeight.WeightTypeListItem  | The GUID and description of the weight type associated to the weighing in tare weight.        |\r\n| WeighingIns[0].Weights.Quantity              | The quantity associated to the weighing in.                            |\r\n| WeighingIns[0].Weights.Volume                | The volume associated to the weighing in.                              |\r\n| WeighingIns[0].Details\t\t\t\t\t\t| The weighingin detail assosicated to the weighing in                          |\r\n| WeighingIns[0].Details[0].Guid                | The guid assosicated to the weighingin detail\t\t\t\t\t\t\t\t\t|\r\n| WeighingIns[0].Details[0].Barcode             | The barcode assosicated to the weighingin detail\t\t\t\t\t\t\t\t|\r\n| WeighingIns[0].Details[0].Weight              | The weight assosicated to the weighingin detail\t\t\t\t\t\t\t\t|\r\n| WeighingIns[0].Details[0].RelatedJobOverrideBreakdownGuid | The job override breakdown assosicated to the weighingin detail   |\r\n| WeighingIns[0].Details[0].ReasonListItem      | The reason assosicated to the weighingin detail\t\t\t\t\t\t\t\t|\r\n| WeighingIns[0].Details[0].IsDeleted           | Is the weighingin detail is deleted?                                  |\r\n| WeighingOuts[0]                       | The list of weighing outs associated to the weighing.                         |\r\n| WeighingOuts[0].Guid                  | The GUID associated to the weighing out.                                      |\r\n| WeighingOuts[0].TicketNo              | The ticket number associated to the weighing out.                             |\r\n| WeighingOuts[0].IsAutomatic           | Is this weighing done automatic?                                              |\r\n| WeighingOuts[0].MaterialListItem      | The GUID and description of the material list associated to the weighing out. |\r\n| WeighingOuts[0].ContainerTypeListItem | The GUID and description of the container type associated to the weighing out.|\r\n| WeighingOuts[0].RelatedWeighingInGuid\t\t\t| The GUID associated to the weighing in of the weighing out.           |\r\n| WeighingOuts[0].Weights                       | The weight data assosicated to the weighing out.                      |\r\n| WeighingOuts[0].Weights.GrossWeight           | The gross weight data associated to the weighing out.                 |\r\n| WeighingOuts[0].Weights.GrossWeight.Guid      | The GUID associated to the gross weight of the weighing out.          |\r\n| WeighingOuts[0].Weights.GrossWeight.Weight    | The weight associated to the gross weight of the weighing out.        |\r\n| WeighingOuts[0].Weights.GrossWeight.Timestamp | The timestamp associated to the gross weight of the weighing out.     |\r\n| WeighingOuts[0].Weights.GrossWeight.WeightTypeListItem | The GUID and description of the weight type associated to the weighing out gross weight.     |\r\n| WeighingOuts[0].Weights.TareWeight            | The tare weight data associated to the weighing out.                  |\r\n| WeighingOuts[0].Weights.TareWeight.Guid       | The GUID associated to the tare weight of the weighing out.           |\r\n| WeighingOuts[0].Weights.TareWeight.Weight     | The weight associated to the tare weight of the weighing out.         |\r\n| WeighingOuts[0].Weights.TareWeight.Timestamp  | The timestamp associated to the tare weight of the weighing out.      |\r\n| WeighingOuts[0].Weights.TareWeight.WeightTypeListItem  | The GUID and description of the weight type associated to the weighing out tare weight.      |\r\n| WeighingOuts[0].Weights.Quantity              | The quantity associated to the weighing out.                          |\r\n| WeighingOuts[0].Weights.Volume                | The volume associated to the weighing out.                            |\r\n| ContainerIdentifier\t\t\t\t\t| The container identifier of the weighing.\t\t\t\t\t\t\t\t\t\t|\r\n| SealIdentifier\t\t\t\t\t\t| The seal identifier of the weighing.\t\t\t\t\t\t\t\t\t\t\t|\r\n| ContainerTare \t\t\t\t\t\t| The container tare weight of the weighing.\t\t\t\t\t\t\t\t\t|\r\n| VerifiedGrossMaximum \t\t\t\t\t| The verified gross maximum weight of the weighing.\t\t\t\t\t\t\t|\r\n| ContainerNotes\t\t\t\t\t\t| The container notes of the weighing.\t\t\t\t\t\t\t\t\t\t\t|\r\n| RelatedWeighingInGuid                 | Used to filter on weighing with weighing in of provided GUID.                 |\r\n| RelatedWeighingOutGuid                | Used to filter on weighing with weighing out of provided GUID.                |\r\n| RelatedBlobHashes\t\t\t\t\t\t| The array of related blob hashes and descriptions associated to the weighing. |\r\n| RelatedBlobHashes[0].Description\t\t| The description of the blob.\t\t\t\t\t\t\t\t\t\t\t\t\t|\r\n| RelatedBlobHashes[0].Hash\t\t\t\t| The hash of the blob to be used against the /blob endpoint. Files are provided as an octet stream which will need to be converted. |\r\n| RelatedBlobWeighingDocketPdfHashes\t\t | The array of related weighing docket blob hashes. |\r\n| RelatedBlobWeighingDocketPdfHashes[0].Hash | The hash of the weighing docket blob to be used against the /blob endpoint. Files are provided as an octet stream which will need to be converted. |\r\n| RelatedWeighingInDetailGuid                | Used to filter on weighing with weighing in detail of provided GUID. Filterable\t\t\t\t\t\t\t\t\t   |\r\n| RelatedJobOverrideBreakdownGuid            | Used to filter on weighing with weighing in detail job override breakdown of provided GUID. Filterable              |\r\n| WeighingOutsRelatedWeighingInGuidFilter    | Used to filter the related weighing in guid associated to the weighing out.\t\t\t\t\t\t\t\t\t\t   |","operationId":"Weighing_GetChanges","consumes":["application/json"],"produces":["application/json"],"parameters":[{"name":"since","in":"query","required":false,"type":"string"},{"name":"cursor","in":"query","required":false,"type":"string"},{"name":"links","in":"query","required":false,"type":"string"}],"responses":{"200":{"description":"OK","schema":{"$ref":"#/definitions/ApiResourceChanges[ApiIntegratorWeighingResource]"}}}}},"/scale/weighings/{guid}":{"get":{"tags":["Weighing"],"summary":"Find with GUID","description":"| Property                              | Description                                                                   |\r\n| ------------------------------------- | ----------------------------------------------------------------------------- |\r\n| GUID                                  | The GUID associated to the weighing.                                          |\r\n| RelatedScheduleGuid                   | The GUID associated to the schedule of the weighing.                          |\r\n| RelatedRouteGuid                      | The GUID associated to the route of the weighing.                             |\r\n| RelatedJobGuid                        | The GUID associated to the job of the weighing.                               |\r\n| RelatedVehicleGuid                    | The GUID associated to the vehicle of the weighing.                           |\r\n| RelatedExternalVehicleGuid            | The GUID associated to the external vehicle of the weighing.                  |\r\n| RelatedMaterialGuid                   | The GUID associated to the material of the weighing.                          |\r\n| RelatedLocationGuid                   | Used to filter the related location guid associated to the location of the weighing.                          |\r\n| RelatedLocationDestinationGuid        | Used to filter the related destination location guid associated to the destination location of the weighing.              |\r\n| RelatedAreaOfOriginGuid               | The GUID associated to the area of origin of the weighing.                    |\r\n| RelatedSupplierThirdPartyCarrierGuid  | The GUID associated to the third party carrier supplier site of the weighing. |\r\n| RelatedTransferDestinationWeighingGuid | The GUID associated to the transfer destination weighing of the weighing.    |\r\n| TicketNo                              | The ticket number associated to the weighing.                                 |\r\n| ExternalTicketNo                      | The external ticket number associated to the weighing.                        |\r\n| DestinationTicketNo                   | The destination ticket number associated to the weighing.                     |\r\n| CustomerLoadReference                 | The customer load reference associated to the weighing.                       |\r\n| CustomerInvoiceReference              | The customer invoice reference associated to the weighing.                    |\r\n| Notes                                 | The notes associated to the weighing.                                         |\r\n| WeighingTypeListItem                  | The GUID and description of the weighing type associated to the weighing.     |\r\n| HaulierName                           | The haulier name associated to the weighing.                                  |\r\n| Driver                                | The driver data associated to the weighing.                                   |\r\n| Driver.Name                           | The name associated to the driver.                                            |\r\n| Driver.LicenceNumber                  | The licence number associated to the driver.                                  |\r\n| IsComplete                            | Is this weighing complete?                                                    |\r\n| IsDestinationConfirmed                | Is this weighing confirmed on destination?                                    |\r\n| IsExternalVehicle                     | Is this weighing done with an external vehicle?                               |\r\n| IsEstimatedWeight                     | Is the weight of this weighing estimated?                                     |\r\n| IsGradingConfirmed                    | Is the grading of this weighing confirmed?                                    |\r\n| IsIncContainer                        | Is this weighing including a container?                                       |\r\n| IsInspectionConfirmed                 | Is the inspection of this weighing confirmed?                                 |\r\n| IsOutboundWeighingComplete            | Is the outbound weighing complete?                                            |\r\n| IsPassThrough                         | Is this a pass through weighing?                                              |\r\n| IsPrinted                             | Is this weighing printed?                                                     |\r\n| StartedFromANPR                       | Is this weighing started by an Automatic Number Plate Recognition device?     |\r\n| CashCollected                         | Amount of cash collected for this weighing.                                   |\r\n| WeighingDate                          | The weighing date of this weighing. Filterable                                |\r\n| Weights                               | The weight data assosicated to the weighing.                                  |\r\n| Weights.GrossWeight                   | The gross weight data associated to the weighing.                             |\r\n| Weights.GrossWeight.Guid              | The GUID associated to the gross weight of the weighing.                      |\r\n| Weights.GrossWeight.Weight            | The weight associated to the gross weight of the weighing.                    |\r\n| Weights.GrossWeight.Timestamp         | The timestamp associated to the gross weight of the weighing.                 |\r\n| Weights.GrossWeight.WeightTypeListItem         | The GUID and description of the weight type associated to the gross weight.                 |\r\n| Weights.TareWeight                    | The tare weight data associated to the weighing.                              |\r\n| Weights.TareWeight.Guid               | The GUID associated to the tare weight of the weighing.                       |\r\n| Weights.TareWeight.Weight             | The weight associated to the tare weight of the weighing.                     |\r\n| Weights.TareWeight.Timestamp          | The timestamp associated to the tare weight of the weighing.                  |\r\n| Weights.TareWeight.WeightTypeListItem          | The GUID and description of the weight type associated to the tare weight.                  |\r\n| Weights.Quantity                      | The quantity associated to the weighing.                                      |\r\n| Weights.Volume                        | The volume associated to the weighing.                                        |\r\n| Weights.BridgeName                    | The bridge name associated to the weighing.                                   |\r\n| DestinationWeight                     | Weights done at destination associated to the weighing.                       |\r\n| DestinationWeight.GrossWeight         | The gross weight at destination associated to the weighing.                   |\r\n| DestinationWeight.TareWeight          | The tare weight at destination associated to the weighing.                    |\r\n| DestinationWeight.Quantity            | The quantity at destination associated to the weighing.                       |\r\n| DestinationWeight.Volume              | The volume at destination associated to the weighing.                         |\r\n| WeighingIns[0]                        | The list of weighing ins associated to the weighing.                          |\r\n| WeighingIns[0].Guid                   | The GUID associated to the weighing in.                                       |\r\n| WeighingIns[0].TicketNo               | The ticket number associated to the weighing in.                              |\r\n| WeighingIns[0].IsAutomatic            | Is this weighing done automatic?                                              |\r\n| WeighingIns[0].MaterialListItem       | The GUID and description of the material list associated to the weighing in.  |\r\n| WeighingIns[0].ContainerTypeListItem  | The GUID and description of the container type associated to the weighing in. |\r\n| WeighingIns[0].Weights                       | The weight data assosicated to the weighing in.                        |\r\n| WeighingIns[0].Weights.GrossWeight           | The gross weight data associated to the weighing in.                   |\r\n| WeighingIns[0].Weights.GrossWeight.Guid      | The GUID associated to the gross weight of the weighing in.            |\r\n| WeighingIns[0].Weights.GrossWeight.Weight    | The weight associated to the gross weight of the weighing in.          |\r\n| WeighingIns[0].Weights.GrossWeight.Timestamp | The timestamp associated to the gross weight of the weighing in.       |\r\n| WeighingIns[0].Weights.GrossWeight.WeightTypeListItem | The GUID and description of the weight type associated to the weighing in gross weight.       |\r\n| WeighingIns[0].Weights.TareWeight            | The tare weight data associated to the weighing in.                    |\r\n| WeighingIns[0].Weights.TareWeight.Guid       | The GUID associated to the tare weight of the weighing in.             |\r\n| WeighingIns[0].Weights.TareWeight.Weight     | The weight associated to the tare weight of the weighing in.           |\r\n| WeighingIns[0].Weights.TareWeight.Timestamp  | The timestamp associated to the tare weight of the weighing in.        |\r\n| WeighingIns[0].Weights.TareWeight.WeightTypeListItem  | The GUID and description of the weight type associated to the weighing in tare weight.        |\r\n| WeighingIns[0].Weights.Quantity              | The quantity associated to the weighing in.                            |\r\n| WeighingIns[0].Weights.Volume                | The volume associated to the weighing in.                              |\r\n| WeighingIns[0].Details\t\t\t\t\t\t| The weighingin detail assosicated to the weighing in                          |\r\n| WeighingIns[0].Details[0].Guid                | The guid assosicated to the weighingin detail\t\t\t\t\t\t\t\t\t|\r\n| WeighingIns[0].Details[0].Barcode             | The barcode assosicated to the weighingin detail\t\t\t\t\t\t\t\t|\r\n| WeighingIns[0].Details[0].Weight              | The weight assosicated to the weighingin detail\t\t\t\t\t\t\t\t|\r\n| WeighingIns[0].Details[0].RelatedJobOverrideBreakdownGuid | The job override breakdown assosicated to the weighingin detail   |\r\n| WeighingIns[0].Details[0].ReasonListItem      | The reason assosicated to the weighingin detail\t\t\t\t\t\t\t\t|\r\n| WeighingIns[0].Details[0].IsDeleted           | Is the weighingin detail is deleted?                                  |\r\n| WeighingOuts[0]                       | The list of weighing outs associated to the weighing.                         |\r\n| WeighingOuts[0].Guid                  | The GUID associated to the weighing out.                                      |\r\n| WeighingOuts[0].TicketNo              | The ticket number associated to the weighing out.                             |\r\n| WeighingOuts[0].IsAutomatic           | Is this weighing done automatic?                                              |\r\n| WeighingOuts[0].MaterialListItem      | The GUID and description of the material list associated to the weighing out. |\r\n| WeighingOuts[0].ContainerTypeListItem | The GUID and description of the container type associated to the weighing out.|\r\n| WeighingOuts[0].RelatedWeighingInGuid\t\t\t| The GUID associated to the weighing in of the weighing out.           |\r\n| WeighingOuts[0].Weights                       | The weight data assosicated to the weighing out.                      |\r\n| WeighingOuts[0].Weights.GrossWeight           | The gross weight data associated to the weighing out.                 |\r\n| WeighingOuts[0].Weights.GrossWeight.Guid      | The GUID associated to the gross weight of the weighing out.          |\r\n| WeighingOuts[0].Weights.GrossWeight.Weight    | The weight associated to the gross weight of the weighing out.        |\r\n| WeighingOuts[0].Weights.GrossWeight.Timestamp | The timestamp associated to the gross weight of the weighing out.     |\r\n| WeighingOuts[0].Weights.GrossWeight.WeightTypeListItem | The GUID and description of the weight type associated to the weighing out gross weight.     |\r\n| WeighingOuts[0].Weights.TareWeight            | The tare weight data associated to the weighing out.                  |\r\n| WeighingOuts[0].Weights.TareWeight.Guid       | The GUID associated to the tare weight of the weighing out.           |\r\n| WeighingOuts[0].Weights.TareWeight.Weight     | The weight associated to the tare weight of the weighing out.         |\r\n| WeighingOuts[0].Weights.TareWeight.Timestamp  | The timestamp associated to the tare weight of the weighing out.      |\r\n| WeighingOuts[0].Weights.TareWeight.WeightTypeListItem  | The GUID and description of the weight type associated to the weighing out tare weight.      |\r\n| WeighingOuts[0].Weights.Quantity              | The quantity associated to the weighing out.                          |\r\n| WeighingOuts[0].Weights.Volume                | The volume associated to the weighing out.                            |\r\n| ContainerIdentifier\t\t\t\t\t| The container identifier of the weighing.\t\t\t\t\t\t\t\t\t\t|\r\n| SealIdentifier\t\t\t\t\t\t| The seal identifier of the weighing.\t\t\t\t\t\t\t\t\t\t\t|\r\n| ContainerTare \t\t\t\t\t\t| The container tare weight of the weighing.\t\t\t\t\t\t\t\t\t|\r\n| VerifiedGrossMaximum \t\t\t\t\t| The verified gross maximum weight of the weighing.\t\t\t\t\t\t\t|\r\n| ContainerNotes\t\t\t\t\t\t| The container notes of the weighing.\t\t\t\t\t\t\t\t\t\t\t|\r\n| RelatedWeighingInGuid                 | Used to filter on weighing with weighing in of provided GUID.                 |\r\n| RelatedWeighingOutGuid                | Used to filter on weighing with weighing out of provided GUID.                |\r\n| RelatedBlobHashes\t\t\t\t\t\t| The array of related blob hashes and descriptions associated to the weighing. |\r\n| RelatedBlobHashes[0].Description\t\t| The description of the blob.\t\t\t\t\t\t\t\t\t\t\t\t\t|\r\n| RelatedBlobHashes[0].Hash\t\t\t\t| The hash of the blob to be used against the /blob endpoint. Files are provided as an octet stream which will need to be converted. |\r\n| RelatedBlobWeighingDocketPdfHashes\t\t | The array of related weighing docket blob hashes. |\r\n| RelatedBlobWeighingDocketPdfHashes[0].Hash | The hash of the weighing docket blob to be used against the /blob endpoint. Files are provided as an octet stream which will need to be converted. |\r\n| RelatedWeighingInDetailGuid                | Used to filter on weighing with weighing in detail of provided GUID. Filterable\t\t\t\t\t\t\t\t\t   |\r\n| RelatedJobOverrideBreakdownGuid            | Used to filter on weighing with weighing in detail job override breakdown of provided GUID. Filterable              |\r\n| WeighingOutsRelatedWeighingInGuidFilter    | Used to filter the related weighing in guid associated to the weighing out.\t\t\t\t\t\t\t\t\t\t   |","operationId":"Weighing_Get","consumes":["application/json"],"produces":["application/json"],"parameters":[{"name":"guid","in":"path","required":true,"type":"string","format":"uuid"},{"name":"links","in":"query","required":false,"type":"string"},{"name":"include","in":"query","required":false,"type":"string"},{"name":"expand","in":"query","required":false,"type":"string"},{"name":"udf","in":"query","required":false,"type":"string"}],"responses":{"200":{"description":"OK","schema":{"$ref":"#/definitions/ApiResourceResultEntity[ApiIntegratorWeighingResource]"}}}},"put":{"tags":["Weighing"],"summary":"Partial update","description":"| Property                              | Description                                                                   | Required |\r\n| ------------------------------------- | ----------------------------------------------------------------------------- | -------- |\r\n| GUID                                  | The GUID associated to the weighing.                                          | No |\r\n| RelatedScheduleGuid                   | The GUID associated to the schedule of the weighing.                          | No |\r\n| RelatedRouteGuid                      | The GUID associated to the route of the weighing.                             | Route |\r\n| RelatedJobGuid                        | The GUID associated to the job of the weighing.                               | Gate, ScheduledJob, MaterialSale, TransferOut |\r\n| RelatedVehicleGuid                    | The GUID associated to the vehicle of the weighing.                           | No |\r\n| RelatedExternalVehicleGuid            | The GUID associated to the external vehicle of the weighing.                  | Yes |\r\n| RelatedMaterialGuid                   | The GUID associated to the material of the weighing.                          | Yes |\r\n| RelatedLocationGuid                   | The GUID associated to the location of the weighing.                          | No |\r\n| RelatedLocationDestinationGuid        | The GUID associated to the destination location of the weighing.              | TransferOut |\r\n| RelatedAreaOfOriginGuid               | The GUID associated to the area of origin of the weighing.                    | Route |\r\n| RelatedSupplierThirdPartyCarrierGuid  | The GUID associated to the third party carrier supplier site of the weighing. | No |\r\n| RelatedTransferDestinationWeighingGuid | The GUID associated to the transfer destination weighing of the weighing.    | No |\r\n| TicketNo                              | The ticket number associated to the weighing.                                 | No |\r\n| ExternalTicketNo                      | The external ticket number associated to the weighing.                        | No |\r\n| DestinationTicketNo                   | The destination ticket number associated to the weighing.                     | No |\r\n| CustomerLoadReference                 | The customer load reference associated to the weighing.                       | No |\r\n| CustomerInvoiceReference              | The customer invoice reference associated to the weighing.                    | No |\r\n| Notes                                 | The notes associated to the weighing.                                         | No |\r\n| WeighingTypeListItem                  | The GUID and description of the weighing type associated to the weighing.     | Yes |\r\n| HaulierName                           | The haulier name associated to the weighing.                                  | No |\r\n| Driver                                | The driver data associated to the weighing.                                   | No |\r\n| Driver.Name                           | The name associated to the driver.                                            | No |\r\n| Driver.LicenceNumber                  | The licence number associated to the driver.                                  | No |\r\n| IsComplete                            | Is this weighing complete?                                                    | No |\r\n| IsDestinationConfirmed                | Is this weighing confirmed on destination?                                    | No |\r\n| IsExternalVehicle                     | Is this weighing done with an external vehicle?                               | No |\r\n| IsEstimatedWeight                     | Is the weight of this weighing estimated?                                     | No |\r\n| IsGradingConfirmed                    | Is the grading of this weighing confirmed?                                    | No |\r\n| IsIncContainer                        | Is this weighing including a container?                                       | No |\r\n| IsInspectionConfirmed                 | Is the inspection of this weighing confirmed?                                 | No |\r\n| IsOutboundWeighingComplete            | Is the outbound weighing complete?                                            | No |\r\n| IsPassThrough                         | Is this a pass through weighing?                                              | No |\r\n| IsPrinted                             | Is this weighing printed?                                                     | No |\r\n| StartedFromANPR                       | Is this weighing started by an Automatic Number Plate Recognition device?     | No |\r\n| CashCollected                         | Amount of cash collected for this weighing.                                   | No |\r\n| WeighingDate                          | The weighing date of this weighing.                                           | No |\r\n| Weights                               | The weight data assosicated to the weighing.                                  | No |\r\n| Weights.GrossWeight                   | The gross weight data associated to the weighing.                             | No |\r\n| Weights.GrossWeight.Guid              | The GUID associated to the gross weight of the weighing.                      | No |\r\n| Weights.GrossWeight.Weight            | The weight associated to the gross weight of the weighing.                    | No |\r\n| Weights.GrossWeight.Timestamp         | The timestamp associated to the gross weight of the weighing.                 | Yes if Weight not null |\r\n| Weights.GrossWeight.WeightTypeListItem         | The GUID and description of the weight type associated to the gross weight.                 | Yes if Weights.GrossWeight not null |\r\n| Weights.TareWeight                    | The tare weight data associated to the weighing.                              | No |\r\n| Weights.TareWeight.Guid               | The GUID associated to the tare weight of the weighing.                       | No |\r\n| Weights.TareWeight.Weight             | The weight associated to the tare weight of the weighing.                     | No |\r\n| Weights.TareWeight.Timestamp          | The timestamp associated to the tare weight of the weighing.                  | No |\r\n| Weights.TareWeight.WeightTypeListItem         | The GUID and description of the weight type associated to the tare weight.                 | Yes if Weights.TareWeight not null |\r\n| Weights.Quantity                      | The quantity associated to the weighing.                                      | No |\r\n| Weights.Volume                        | The volume associated to the weighing.                                        | No |\r\n| Weights.BridgeName                    | The bridge name associated to the weighing.                                   | No |\r\n| DestinationWeight                     | Weights done at destination associated to the weighing.                       | No |\r\n| DestinationWeight.GrossWeight         | The gross weight at destination associated to the weighing.                   | No |\r\n| DestinationWeight.TareWeight          | The tare weight at destination associated to the weighing.                    | No |\r\n| DestinationWeight.Quantity            | The quantity at destination associated to the weighing.                       | No |\r\n| DestinationWeight.Volume              | The volume at destination associated to the weighing.                         | No |\r\n| WeighingIns[0]                        | The list of weighing ins associated to the weighing.                          | No |\r\n| WeighingIns[0].Guid                   | The GUID associated to the weighing in.                                       | No |\r\n| WeighingIns[0].TicketNo               | The ticket number associated to the weighing in.                              | No |\r\n| WeighingIns[0].IsAutomatic            | Is this weighing done automatic?                                              | No |\r\n| WeighingIns[0].MaterialListItem       | The GUID and description of the material list associated to the weighing in.  | Yes |\r\n| WeighingIns[0].ContainerTypeListItem  | The GUID and description of the container type associated to the weighing in. | No |\r\n| WeighingIns[0].Weights                       | The weight data assosicated to the weighing in.                        | No |\r\n| WeighingIns[0].Weights.GrossWeight           | The gross weight data associated to the weighing in.                   | No |\r\n| WeighingIns[0].Weights.GrossWeight.Guid      | The GUID associated to the gross weight of the weighing in.            | No |\r\n| WeighingIns[0].Weights.GrossWeight.Weight    | The weight associated to the gross weight of the weighing in.          | No |\r\n| WeighingIns[0].Weights.GrossWeight.Timestamp | The timestamp associated to the gross weight of the weighing in.       | No |\r\n| WeighingIns[0].Weights.GrossWeight.WeightTypeListItem         | The GUID and description of the weight type associated to the WeighingIns.Weights gross weight.                 | Yes if WeighingIns.Weights.GrossWeight not null |\r\n| WeighingIns[0].Weights.TareWeight            | The tare weight data associated to the weighing in.                    | No |\r\n| WeighingIns[0].Weights.TareWeight.Guid       | The GUID associated to the tare weight of the weighing in.             | No |\r\n| WeighingIns[0].Weights.TareWeight.Weight     | The weight associated to the tare weight of the weighing in.           | No |\r\n| WeighingIns[0].Weights.TareWeight.Timestamp  | The timestamp associated to the tare weight of the weighing in.        | No |\r\n| WeighingIns[0].Weights.TareWeight.WeightTypeListItem         | The GUID and description of the weight type associated to the WeighingIns.Weights tare weight.                 | Yes if WeighingIns.Weights.GrossWeight not null |\r\n| WeighingIns[0].Weights.Quantity              | The quantity associated to the weighing in.                            | No |\r\n| WeighingIns[0].Weights.Volume                | The volume associated to the weighing in.                              | No |\r\n| WeighingIns[0].Details\t\t\t\t\t\t\t\t\t| The weighingin detail assosicated to the weighing in                          | No |\r\n| WeighingIns[0].Details[0].Guid\t\t\t\t\t\t\t| The guid assosicated to the weighingin detail\t\t\t\t\t\t\t\t\t| No |\r\n| WeighingIns[0].Details[0].Barcode\t\t\t\t\t\t\t| The barcode assosicated to the weighingin detail\t\t\t\t\t\t\t\t| No |\r\n| WeighingIns[0].Details[0].Weight\t\t\t\t\t\t\t| The weight assosicated to the weighingin detail\t\t\t\t\t\t\t\t| Yes |\r\n| WeighingIns[0].Details[0].RelatedJobOverrideBreakdownGuid\t| The job override breakdown assosicated to the weighingin detail\t\t\t\t| No |\r\n| WeighingIns[0].Details[0].ReasonListItem\t\t\t\t\t| The reason assosicated to the weighingin detail\t\t\t\t\t\t\t\t| No |\r\n| WeighingIns[0].Details[0].IsDeleted\t\t\t\t\t\t| Is the weighingin detail is deleted?\t\t\t\t\t                        | No |\r\n| WeighingOuts[0]                       | The list of weighing outs associated to the weighing.                         | No |\r\n| WeighingOuts[0].Guid                  | The GUID associated to the weighing out.                                      | No |\r\n| WeighingOuts[0].TicketNo              | The ticket number associated to the weighing out.                             | No |\r\n| WeighingOuts[0].IsAutomatic           | Is this weighing done automatic?                                              | No |\r\n| WeighingOuts[0].MaterialListItem      | The GUID and description of the material list associated to the weighing out. | Yes |\r\n| WeighingOuts[0].ContainerTypeListItem | The GUID and description of the container type associated to the weighing out.| No |\r\n| WeighingOuts[0].RelatedWeighingInGuid\t\t\t| The GUID associated to the weighing in of the weighing out.           | No |\r\n| WeighingOuts[0].Weights                       | The weight data assosicated to the weighing out.                      | No |\r\n| WeighingOuts[0].Weights.GrossWeight           | The gross weight data associated to the weighing out.                 | No |\r\n| WeighingOuts[0].Weights.GrossWeight.Guid      | The GUID associated to the gross weight of the weighing out.          | No |\r\n| WeighingOuts[0].Weights.GrossWeight.Weight    | The weight associated to the gross weight of the weighing out.        | No |\r\n| WeighingOuts[0].Weights.GrossWeight.Timestamp | The timestamp associated to the gross weight of the weighing out.     | No |\r\n| WeighingOuts[0].Weights.GrossWeight.WeightTypeListItem         | The GUID and description of the weight type associated to the WeighingOuts.Weights gross weight.                 | Yes if WeighingOuts.Weights.GrossWeight not null |\r\n| WeighingOuts[0].Weights.TareWeight            | The tare weight data associated to the weighing out.                  | No |\r\n| WeighingOuts[0].Weights.TareWeight.Guid       | The GUID associated to the tare weight of the weighing out.           | No |\r\n| WeighingOuts[0].Weights.TareWeight.Weight     | The weight associated to the tare weight of the weighing out.         | No |\r\n| WeighingOuts[0].Weights.TareWeight.Timestamp  | The timestamp associated to the tare weight of the weighing out.      | No |\r\n| WeighingOuts[0].Weights.TareWeight.WeightTypeListItem         | The GUID and description of the weight type associated to the WeighingOuts.Weights tare weight.                 | Yes if WeighingOuts.Weights.GrossWeight not null |\r\n| WeighingOuts[0].Weights.Quantity              | The quantity associated to the weighing out.                          | No |\r\n| WeighingOuts[0].Weights.Volume                | The volume associated to the weighing out.                            | No |\r\n| ContainerIdentifier\t\t\t\t\t| The container identifier of the weighing.\t\t\t\t\t\t\t\t\t\t| No |\r\n| SealIdentifier\t\t\t\t\t\t| The seal identifier of the weighing.\t\t\t\t\t\t\t\t\t\t\t| No |\r\n| ContainerTare \t\t\t\t\t\t| The container tare weight of the weighing.\t\t\t\t\t\t\t\t\t| No |\r\n| VerifiedGrossMaximum \t\t\t\t\t| The verified gross maximum weight of the weighing.\t\t\t\t\t\t\t| No |\r\n| ContainerNotes\t\t\t\t\t\t| The container notes of the weighing.\t\t\t\t\t\t\t\t\t\t\t| No |\r\n| RelatedWeighingInGuid                 | Used to filter on weighing with weighing in of provided GUID.                 | - |\r\n| RelatedWeighingOutGuid                | Used to filter on weighing with weighing out of provided GUID.                | - |\r\n| RelatedBlobHashes\t\t\t\t\t\t| The array of related blob hashes and descriptions associated to the weighing.| No |\r\n| RelatedBlobHashes[0].Description\t\t| The description of the blob.\t\t\t\t\t\t\t\t\t\t\t\t\t| No |\r\n| RelatedBlobHashes[0].Hash\t\t\t\t| The hash of the blob to be used against the /blob endpoint. Files are provided as an octet stream which will need to be converted. | No |\r\n| RelatedBlobWeighingDocketPdfHashes\t\t | The array of related weighing docket blob hashes. | No |\r\n| RelatedBlobWeighingDocketPdfHashes[0].Hash | The hash of the weighing docket blob to be used against the /blob endpoint. Files are provided as an octet stream which will need to be converted. | No |\r\n| RelatedWeighingInDetailGuid\t\t\t\t\t\t\t\t| Used to filter on weighing with weighing in detail of provided GUID.\t\t\t\t\t\t\t\t\t| No |\r\n| RelatedJobOverrideBreakdownGuid\t\t\t\t\t\t\t| Used to filter on weighing with weighing in detail job override breakdown of provided GUID.           | No |\r\n| WeighingOutsRelatedWeighingInGuidFilter                   | Used to filter the related weighing in guid associated to the weighing out.\t\t\t\t\t\t\t| No |\r\n\r\n## Extra validations\r\n\r\n| Condition | Error message |\r\n| --------- | ------------- |\r\n| For Gate, ScheduledJob and MaterialSale if provided Job does not have a SiteOrder. | RelatedJobGuid must be a job with a site order. |\r\n| For Gate, ScheduledJob, Route and MaterialSale if provided Job is linked to another Weighing. | The weighing must be unique per job. |\r\n| If TicketNo is changed. | ticketNo is a read-only property. | \r\n| If weighing is inbound or Route and WeighingOut provided. (1) | WeighingOut: is not supported. |\r\n| If weighing is outbound or Route and WeighingIn provided. (2) | WeighingIn: is not supported. |\r\n| If Weights.TareWeight.Weight is bigger then Weights.GrossWeight.Weight. | Weights.GrossWeight.Weight: Must be greater than the then Weights.TareWeight.Weight |\r\n| If WeighingIns[0].Weights.TareWeight.Weight is bigger then WeighingIns[0].Weights.GrossWeight.Weight. | WeighingIns[0].Weights.GrossWeight.Weight: Must be greater than the then WeighingIns[0].Weights.TareWeight.Weight |\r\n| If WeighingOuts[0].Weights.TareWeight.Weight is bigger then WeighingOuts[0].Weights.GrossWeight.Weight. | WeighingOuts[0].Weights.GrossWeight.Weight: Must be greater than the then WeighingOuts[0].Weights.TareWeight.Weight |\r\n| For Gate if RelatedVehicleGuid is provided. | RelatedVehicleGuid: is not supported. |\r\n| For weighing, if IsExternalVehicle set to true and RelatedExternalVehicleGuid is not provided | For Weighing, IsExternalVehicle property has been set as true, therefore RelatedExternalVehicleGuid property must also be set. |\r\n| For weighing, if RelatedExternalVehicleGuid have value and IsExternalVehicle set to false | For Weighing, RelatedExternalVehicleGuid property have seen set, therefore IsExternalVehicle property must be set as true. |\r\n| For weighing, if RelatedVehicleGuid and RelatedExternalVehicleGuid was provided  | Either RelatedExternalVehicleGuid or RelatedVehicleGuid properties must be set. |\r\n| For transferout weighing type, if we try to set IsComplete as true | Weighing has the property IsComplete with value of true that is not supported. WeighingType TransferOut does not support CompleteWeighing |\r\n| For transferout weighing type if the weighing was already Completed and if we try to set IsComplete as false | Weighing has the property IsComplete with value of false that is not supported. WeighingType TransferOut does not support UnCompleteWeighing |\r\n| For transferout weighing type, if RelatedJobGuid is changed. | RelatedJobGuid is a read-only property. | \r\n| If Weights.BridgeName is more than 100 characters long | BridgeName must be no more than 100 characters long. |\r\n| If ContainerIdentifier is more than 50 characters long | ContainerIdentifier must be no more than 50 characters long. |\r\n| If SealIdentifier is more than 50 characters long | SealIdentifier must be no more than 50 characters long. |\r\n\r\n1) Inbound are weighings of type Gate, ScheduledJob and TransferOut (if the weighing is not linked to another weighing via TransferDestinationWeighingId)\r\n2) Outbound are weighings of type MaterialSale and TransferOut (if the weighing is linked to another weighing via TransferDestinationWeighingId)\r\n\r\n| RelatedBlobWeighingDocketPdfHashes[0].Hash is not null for Update and the Weighing did not have RelatedBlobWeighingDocketPdfHashes initially | Failed to save/update Weighing because RelatedBlobWeighingDocketPdfHashes do not exist for the Weighing. |\r\n| RelatedBlobWeighingDocketPdfHashes[0].Hash is not null for Update and Invalid Hash | Could not find WeighingDocketOutput matching template. |\r\n| WeighingIns[0].Details[0].IsDeleted is true | IsDeleted is TRUE. Could not process the request. WeighingIns[0].Details[0] can not be deleted via the REST API. |\r\n| If the GUID passed to WeighingIns[0].Details[0].ReasonListItem has a value that is deleted | The provided WeighingIns[0].Details[0].ReasonListItem is deleted. Could not update the resource. Please check the relevant list end point for the available options. |","operationId":"Weighing_Update","consumes":["application/json"],"produces":["application/json"],"parameters":[{"name":"guid","in":"path","required":true,"type":"string","format":"uuid"},{"in":"body","required":true,"schema":{"$ref":"#/definitions/ApiResourceId"}}],"responses":{"200":{"description":"OK","schema":{"$ref":"#/definitions/ApiResourceId"}}}}},"/scale/weighings":{"get":{"tags":["Weighing"],"summary":"Find with Filters","description":"| Property                              | Description                                                                   |\r\n| ------------------------------------- | ----------------------------------------------------------------------------- |\r\n| GUID                                  | The GUID associated to the weighing.                                          |\r\n| RelatedScheduleGuid                   | The GUID associated to the schedule of the weighing.                          |\r\n| RelatedRouteGuid                      | The GUID associated to the route of the weighing.                             |\r\n| RelatedJobGuid                        | The GUID associated to the job of the weighing.                               |\r\n| RelatedVehicleGuid                    | The GUID associated to the vehicle of the weighing.                           |\r\n| RelatedExternalVehicleGuid            | The GUID associated to the external vehicle of the weighing.                  |\r\n| RelatedMaterialGuid                   | The GUID associated to the material of the weighing.                          |\r\n| RelatedLocationGuid                   | Used to filter the related location guid associated to the location of the weighing.                          |\r\n| RelatedLocationDestinationGuid        | Used to filter the related destination location guid associated to the destination location of the weighing.              |\r\n| RelatedAreaOfOriginGuid               | The GUID associated to the area of origin of the weighing.                    |\r\n| RelatedSupplierThirdPartyCarrierGuid  | The GUID associated to the third party carrier supplier site of the weighing. |\r\n| RelatedTransferDestinationWeighingGuid | The GUID associated to the transfer destination weighing of the weighing.    |\r\n| TicketNo                              | The ticket number associated to the weighing.                                 |\r\n| ExternalTicketNo                      | The external ticket number associated to the weighing.                        |\r\n| DestinationTicketNo                   | The destination ticket number associated to the weighing.                     |\r\n| CustomerLoadReference                 | The customer load reference associated to the weighing.                       |\r\n| CustomerInvoiceReference              | The customer invoice reference associated to the weighing.                    |\r\n| Notes                                 | The notes associated to the weighing.                                         |\r\n| WeighingTypeListItem                  | The GUID and description of the weighing type associated to the weighing.     |\r\n| HaulierName                           | The haulier name associated to the weighing.                                  |\r\n| Driver                                | The driver data associated to the weighing.                                   |\r\n| Driver.Name                           | The name associated to the driver.                                            |\r\n| Driver.LicenceNumber                  | The licence number associated to the driver.                                  |\r\n| IsComplete                            | Is this weighing complete?                                                    |\r\n| IsDestinationConfirmed                | Is this weighing confirmed on destination?                                    |\r\n| IsExternalVehicle                     | Is this weighing done with an external vehicle?                               |\r\n| IsEstimatedWeight                     | Is the weight of this weighing estimated?                                     |\r\n| IsGradingConfirmed                    | Is the grading of this weighing confirmed?                                    |\r\n| IsIncContainer                        | Is this weighing including a container?                                       |\r\n| IsInspectionConfirmed                 | Is the inspection of this weighing confirmed?                                 |\r\n| IsOutboundWeighingComplete            | Is the outbound weighing complete?                                            |\r\n| IsPassThrough                         | Is this a pass through weighing?                                              |\r\n| IsPrinted                             | Is this weighing printed?                                                     |\r\n| StartedFromANPR                       | Is this weighing started by an Automatic Number Plate Recognition device?     |\r\n| CashCollected                         | Amount of cash collected for this weighing.                                   |\r\n| WeighingDate                          | The weighing date of this weighing. Filterable                                |\r\n| Weights                               | The weight data assosicated to the weighing.                                  |\r\n| Weights.GrossWeight                   | The gross weight data associated to the weighing.                             |\r\n| Weights.GrossWeight.Guid              | The GUID associated to the gross weight of the weighing.                      |\r\n| Weights.GrossWeight.Weight            | The weight associated to the gross weight of the weighing.                    |\r\n| Weights.GrossWeight.Timestamp         | The timestamp associated to the gross weight of the weighing.                 |\r\n| Weights.GrossWeight.WeightTypeListItem         | The GUID and description of the weight type associated to the gross weight.                 |\r\n| Weights.TareWeight                    | The tare weight data associated to the weighing.                              |\r\n| Weights.TareWeight.Guid               | The GUID associated to the tare weight of the weighing.                       |\r\n| Weights.TareWeight.Weight             | The weight associated to the tare weight of the weighing.                     |\r\n| Weights.TareWeight.Timestamp          | The timestamp associated to the tare weight of the weighing.                  |\r\n| Weights.TareWeight.WeightTypeListItem          | The GUID and description of the weight type associated to the tare weight.                  |\r\n| Weights.Quantity                      | The quantity associated to the weighing.                                      |\r\n| Weights.Volume                        | The volume associated to the weighing.                                        |\r\n| Weights.BridgeName                    | The bridge name associated to the weighing.                                   |\r\n| DestinationWeight                     | Weights done at destination associated to the weighing.                       |\r\n| DestinationWeight.GrossWeight         | The gross weight at destination associated to the weighing.                   |\r\n| DestinationWeight.TareWeight          | The tare weight at destination associated to the weighing.                    |\r\n| DestinationWeight.Quantity            | The quantity at destination associated to the weighing.                       |\r\n| DestinationWeight.Volume              | The volume at destination associated to the weighing.                         |\r\n| WeighingIns[0]                        | The list of weighing ins associated to the weighing.                          |\r\n| WeighingIns[0].Guid                   | The GUID associated to the weighing in.                                       |\r\n| WeighingIns[0].TicketNo               | The ticket number associated to the weighing in.                              |\r\n| WeighingIns[0].IsAutomatic            | Is this weighing done automatic?                                              |\r\n| WeighingIns[0].MaterialListItem       | The GUID and description of the material list associated to the weighing in.  |\r\n| WeighingIns[0].ContainerTypeListItem  | The GUID and description of the container type associated to the weighing in. |\r\n| WeighingIns[0].Weights                       | The weight data assosicated to the weighing in.                        |\r\n| WeighingIns[0].Weights.GrossWeight           | The gross weight data associated to the weighing in.                   |\r\n| WeighingIns[0].Weights.GrossWeight.Guid      | The GUID associated to the gross weight of the weighing in.            |\r\n| WeighingIns[0].Weights.GrossWeight.Weight    | The weight associated to the gross weight of the weighing in.          |\r\n| WeighingIns[0].Weights.GrossWeight.Timestamp | The timestamp associated to the gross weight of the weighing in.       |\r\n| WeighingIns[0].Weights.GrossWeight.WeightTypeListItem | The GUID and description of the weight type associated to the weighing in gross weight.       |\r\n| WeighingIns[0].Weights.TareWeight            | The tare weight data associated to the weighing in.                    |\r\n| WeighingIns[0].Weights.TareWeight.Guid       | The GUID associated to the tare weight of the weighing in.             |\r\n| WeighingIns[0].Weights.TareWeight.Weight     | The weight associated to the tare weight of the weighing in.           |\r\n| WeighingIns[0].Weights.TareWeight.Timestamp  | The timestamp associated to the tare weight of the weighing in.        |\r\n| WeighingIns[0].Weights.TareWeight.WeightTypeListItem  | The GUID and description of the weight type associated to the weighing in tare weight.        |\r\n| WeighingIns[0].Weights.Quantity              | The quantity associated to the weighing in.                            |\r\n| WeighingIns[0].Weights.Volume                | The volume associated to the weighing in.                              |\r\n| WeighingIns[0].Details\t\t\t\t\t\t| The weighingin detail assosicated to the weighing in                          |\r\n| WeighingIns[0].Details[0].Guid                | The guid assosicated to the weighingin detail\t\t\t\t\t\t\t\t\t|\r\n| WeighingIns[0].Details[0].Barcode             | The barcode assosicated to the weighingin detail\t\t\t\t\t\t\t\t|\r\n| WeighingIns[0].Details[0].Weight              | The weight assosicated to the weighingin detail\t\t\t\t\t\t\t\t|\r\n| WeighingIns[0].Details[0].RelatedJobOverrideBreakdownGuid | The job override breakdown assosicated to the weighingin detail   |\r\n| WeighingIns[0].Details[0].ReasonListItem      | The reason assosicated to the weighingin detail\t\t\t\t\t\t\t\t|\r\n| WeighingIns[0].Details[0].IsDeleted           | Is the weighingin detail is deleted?                                  |\r\n| WeighingOuts[0]                       | The list of weighing outs associated to the weighing.                         |\r\n| WeighingOuts[0].Guid                  | The GUID associated to the weighing out.                                      |\r\n| WeighingOuts[0].TicketNo              | The ticket number associated to the weighing out.                             |\r\n| WeighingOuts[0].IsAutomatic           | Is this weighing done automatic?                                              |\r\n| WeighingOuts[0].MaterialListItem      | The GUID and description of the material list associated to the weighing out. |\r\n| WeighingOuts[0].ContainerTypeListItem | The GUID and description of the container type associated to the weighing out.|\r\n| WeighingOuts[0].RelatedWeighingInGuid\t\t\t| The GUID associated to the weighing in of the weighing out.           |\r\n| WeighingOuts[0].Weights                       | The weight data assosicated to the weighing out.                      |\r\n| WeighingOuts[0].Weights.GrossWeight           | The gross weight data associated to the weighing out.                 |\r\n| WeighingOuts[0].Weights.GrossWeight.Guid      | The GUID associated to the gross weight of the weighing out.          |\r\n| WeighingOuts[0].Weights.GrossWeight.Weight    | The weight associated to the gross weight of the weighing out.        |\r\n| WeighingOuts[0].Weights.GrossWeight.Timestamp | The timestamp associated to the gross weight of the weighing out.     |\r\n| WeighingOuts[0].Weights.GrossWeight.WeightTypeListItem | The GUID and description of the weight type associated to the weighing out gross weight.     |\r\n| WeighingOuts[0].Weights.TareWeight            | The tare weight data associated to the weighing out.                  |\r\n| WeighingOuts[0].Weights.TareWeight.Guid       | The GUID associated to the tare weight of the weighing out.           |\r\n| WeighingOuts[0].Weights.TareWeight.Weight     | The weight associated to the tare weight of the weighing out.         |\r\n| WeighingOuts[0].Weights.TareWeight.Timestamp  | The timestamp associated to the tare weight of the weighing out.      |\r\n| WeighingOuts[0].Weights.TareWeight.WeightTypeListItem  | The GUID and description of the weight type associated to the weighing out tare weight.      |\r\n| WeighingOuts[0].Weights.Quantity              | The quantity associated to the weighing out.                          |\r\n| WeighingOuts[0].Weights.Volume                | The volume associated to the weighing out.                            |\r\n| ContainerIdentifier\t\t\t\t\t| The container identifier of the weighing.\t\t\t\t\t\t\t\t\t\t|\r\n| SealIdentifier\t\t\t\t\t\t| The seal identifier of the weighing.\t\t\t\t\t\t\t\t\t\t\t|\r\n| ContainerTare \t\t\t\t\t\t| The container tare weight of the weighing.\t\t\t\t\t\t\t\t\t|\r\n| VerifiedGrossMaximum \t\t\t\t\t| The verified gross maximum weight of the weighing.\t\t\t\t\t\t\t|\r\n| ContainerNotes\t\t\t\t\t\t| The container notes of the weighing.\t\t\t\t\t\t\t\t\t\t\t|\r\n| RelatedWeighingInGuid                 | Used to filter on weighing with weighing in of provided GUID.                 |\r\n| RelatedWeighingOutGuid                | Used to filter on weighing with weighing out of provided GUID.                |\r\n| RelatedBlobHashes\t\t\t\t\t\t| The array of related blob hashes and descriptions associated to the weighing. |\r\n| RelatedBlobHashes[0].Description\t\t| The description of the blob.\t\t\t\t\t\t\t\t\t\t\t\t\t|\r\n| RelatedBlobHashes[0].Hash\t\t\t\t| The hash of the blob to be used against the /blob endpoint. Files are provided as an octet stream which will need to be converted. |\r\n| RelatedBlobWeighingDocketPdfHashes\t\t | The array of related weighing docket blob hashes. |\r\n| RelatedBlobWeighingDocketPdfHashes[0].Hash | The hash of the weighing docket blob to be used against the /blob endpoint. Files are provided as an octet stream which will need to be converted. |\r\n| RelatedWeighingInDetailGuid                | Used to filter on weighing with weighing in detail of provided GUID. Filterable\t\t\t\t\t\t\t\t\t   |\r\n| RelatedJobOverrideBreakdownGuid            | Used to filter on weighing with weighing in detail job override breakdown of provided GUID. Filterable              |\r\n| WeighingOutsRelatedWeighingInGuidFilter    | Used to filter the related weighing in guid associated to the weighing out.\t\t\t\t\t\t\t\t\t\t   |","operationId":"Weighing_GetCollection","consumes":["application/json"],"produces":["application/json"],"parameters":[{"name":"filter","in":"query","required":false,"type":"string"},{"name":"search","in":"query","required":false,"type":"string"},{"name":"order","in":"query","required":false,"type":"string"},{"name":"max","in":"query","required":false,"type":"integer","format":"int32"},{"name":"page","in":"query","required":false,"type":"integer","format":"int32"},{"name":"includeCount","in":"query","required":false,"type":"boolean"},{"name":"includeDeleted","in":"query","required":false,"type":"boolean"},{"name":"links","in":"query","required":false,"type":"string"},{"name":"udf","in":"query","required":false,"type":"string"}],"responses":{"200":{"description":"OK","schema":{"$ref":"#/definitions/ApiResourceResultCollection[ApiIntegratorWeighingResource]"}}}},"post":{"tags":["Weighing"],"summary":"Create or update","description":"| Property                              | Description                                                                   | Required |\r\n| ------------------------------------- | ----------------------------------------------------------------------------- | -------- |\r\n| GUID                                  | The GUID associated to the weighing.                                          | No |\r\n| RelatedScheduleGuid                   | The GUID associated to the schedule of the weighing.                          | No |\r\n| RelatedRouteGuid                      | The GUID associated to the route of the weighing.                             | Route |\r\n| RelatedJobGuid                        | The GUID associated to the job of the weighing.                               | Gate, ScheduledJob, MaterialSale, TransferOut |\r\n| RelatedVehicleGuid                    | The GUID associated to the vehicle of the weighing.                           | No |\r\n| RelatedExternalVehicleGuid            | The GUID associated to the external vehicle of the weighing.                  | Yes |\r\n| RelatedMaterialGuid                   | The GUID associated to the material of the weighing.                          | Yes |\r\n| RelatedLocationGuid                   | The GUID associated to the location of the weighing.                          | No |\r\n| RelatedLocationDestinationGuid        | The GUID associated to the destination location of the weighing.              | TransferOut |\r\n| RelatedAreaOfOriginGuid               | The GUID associated to the area of origin of the weighing.                    | Route |\r\n| RelatedSupplierThirdPartyCarrierGuid  | The GUID associated to the third party carrier supplier site of the weighing. | No |\r\n| RelatedTransferDestinationWeighingGuid | The GUID associated to the transfer destination weighing of the weighing.    | No |\r\n| TicketNo                              | The ticket number associated to the weighing.                                 | No |\r\n| ExternalTicketNo                      | The external ticket number associated to the weighing.                        | No |\r\n| DestinationTicketNo                   | The destination ticket number associated to the weighing.                     | No |\r\n| CustomerLoadReference                 | The customer load reference associated to the weighing.                       | No |\r\n| CustomerInvoiceReference              | The customer invoice reference associated to the weighing.                    | No |\r\n| Notes                                 | The notes associated to the weighing.                                         | No |\r\n| WeighingTypeListItem                  | The GUID and description of the weighing type associated to the weighing.     | Yes |\r\n| HaulierName                           | The haulier name associated to the weighing.                                  | No |\r\n| Driver                                | The driver data associated to the weighing.                                   | No |\r\n| Driver.Name                           | The name associated to the driver.                                            | No |\r\n| Driver.LicenceNumber                  | The licence number associated to the driver.                                  | No |\r\n| IsComplete                            | Is this weighing complete?                                                    | No |\r\n| IsDestinationConfirmed                | Is this weighing confirmed on destination?                                    | No |\r\n| IsExternalVehicle                     | Is this weighing done with an external vehicle?                               | No |\r\n| IsEstimatedWeight                     | Is the weight of this weighing estimated?                                     | No |\r\n| IsGradingConfirmed                    | Is the grading of this weighing confirmed?                                    | No |\r\n| IsIncContainer                        | Is this weighing including a container?                                       | No |\r\n| IsInspectionConfirmed                 | Is the inspection of this weighing confirmed?                                 | No |\r\n| IsOutboundWeighingComplete            | Is the outbound weighing complete?                                            | No |\r\n| IsPassThrough                         | Is this a pass through weighing?                                              | No |\r\n| IsPrinted                             | Is this weighing printed?                                                     | No |\r\n| StartedFromANPR                       | Is this weighing started by an Automatic Number Plate Recognition device?     | No |\r\n| CashCollected                         | Amount of cash collected for this weighing.                                   | No |\r\n| WeighingDate                          | The weighing date of this weighing.                                           | No |\r\n| Weights                               | The weight data assosicated to the weighing.                                  | No |\r\n| Weights.GrossWeight                   | The gross weight data associated to the weighing.                             | No |\r\n| Weights.GrossWeight.Guid              | The GUID associated to the gross weight of the weighing.                      | No |\r\n| Weights.GrossWeight.Weight            | The weight associated to the gross weight of the weighing.                    | No |\r\n| Weights.GrossWeight.Timestamp         | The timestamp associated to the gross weight of the weighing.                 | Yes if Weight not null |\r\n| Weights.GrossWeight.WeightTypeListItem         | The GUID and description of the weight type associated to the gross weight.                 | Yes if Weights.GrossWeight not null |\r\n| Weights.TareWeight                    | The tare weight data associated to the weighing.                              | No |\r\n| Weights.TareWeight.Guid               | The GUID associated to the tare weight of the weighing.                       | No |\r\n| Weights.TareWeight.Weight             | The weight associated to the tare weight of the weighing.                     | No |\r\n| Weights.TareWeight.Timestamp          | The timestamp associated to the tare weight of the weighing.                  | No |\r\n| Weights.TareWeight.WeightTypeListItem         | The GUID and description of the weight type associated to the tare weight.                 | Yes if Weights.TareWeight not null |\r\n| Weights.Quantity                      | The quantity associated to the weighing.                                      | No |\r\n| Weights.Volume                        | The volume associated to the weighing.                                        | No |\r\n| Weights.BridgeName                    | The bridge name associated to the weighing.                                   | No |\r\n| DestinationWeight                     | Weights done at destination associated to the weighing.                       | No |\r\n| DestinationWeight.GrossWeight         | The gross weight at destination associated to the weighing.                   | No |\r\n| DestinationWeight.TareWeight          | The tare weight at destination associated to the weighing.                    | No |\r\n| DestinationWeight.Quantity            | The quantity at destination associated to the weighing.                       | No |\r\n| DestinationWeight.Volume              | The volume at destination associated to the weighing.                         | No |\r\n| WeighingIns[0]                        | The list of weighing ins associated to the weighing.                          | No |\r\n| WeighingIns[0].Guid                   | The GUID associated to the weighing in.                                       | No |\r\n| WeighingIns[0].TicketNo               | The ticket number associated to the weighing in.                              | No |\r\n| WeighingIns[0].IsAutomatic            | Is this weighing done automatic?                                              | No |\r\n| WeighingIns[0].MaterialListItem       | The GUID and description of the material list associated to the weighing in.  | Yes |\r\n| WeighingIns[0].ContainerTypeListItem  | The GUID and description of the container type associated to the weighing in. | No |\r\n| WeighingIns[0].Weights                       | The weight data assosicated to the weighing in.                        | No |\r\n| WeighingIns[0].Weights.GrossWeight           | The gross weight data associated to the weighing in.                   | No |\r\n| WeighingIns[0].Weights.GrossWeight.Guid      | The GUID associated to the gross weight of the weighing in.            | No |\r\n| WeighingIns[0].Weights.GrossWeight.Weight    | The weight associated to the gross weight of the weighing in.          | No |\r\n| WeighingIns[0].Weights.GrossWeight.Timestamp | The timestamp associated to the gross weight of the weighing in.       | No |\r\n| WeighingIns[0].Weights.GrossWeight.WeightTypeListItem         | The GUID and description of the weight type associated to the WeighingIns.Weights gross weight.                 | Yes if WeighingIns.Weights.GrossWeight not null |\r\n| WeighingIns[0].Weights.TareWeight            | The tare weight data associated to the weighing in.                    | No |\r\n| WeighingIns[0].Weights.TareWeight.Guid       | The GUID associated to the tare weight of the weighing in.             | No |\r\n| WeighingIns[0].Weights.TareWeight.Weight     | The weight associated to the tare weight of the weighing in.           | No |\r\n| WeighingIns[0].Weights.TareWeight.Timestamp  | The timestamp associated to the tare weight of the weighing in.        | No |\r\n| WeighingIns[0].Weights.TareWeight.WeightTypeListItem         | The GUID and description of the weight type associated to the WeighingIns.Weights tare weight.                 | Yes if WeighingIns.Weights.GrossWeight not null |\r\n| WeighingIns[0].Weights.Quantity              | The quantity associated to the weighing in.                            | No |\r\n| WeighingIns[0].Weights.Volume                | The volume associated to the weighing in.                              | No |\r\n| WeighingIns[0].Details\t\t\t\t\t\t\t\t\t| The weighingin detail assosicated to the weighing in                          | No |\r\n| WeighingIns[0].Details[0].Guid\t\t\t\t\t\t\t| The guid assosicated to the weighingin detail\t\t\t\t\t\t\t\t\t| No |\r\n| WeighingIns[0].Details[0].Barcode\t\t\t\t\t\t\t| The barcode assosicated to the weighingin detail\t\t\t\t\t\t\t\t| No |\r\n| WeighingIns[0].Details[0].Weight\t\t\t\t\t\t\t| The weight assosicated to the weighingin detail\t\t\t\t\t\t\t\t| Yes |\r\n| WeighingIns[0].Details[0].RelatedJobOverrideBreakdownGuid\t| The job override breakdown assosicated to the weighingin detail\t\t\t\t| No |\r\n| WeighingIns[0].Details[0].ReasonListItem\t\t\t\t\t| The reason assosicated to the weighingin detail\t\t\t\t\t\t\t\t| No |\r\n| WeighingIns[0].Details[0].IsDeleted\t\t\t\t\t\t| Is the weighingin detail is deleted?\t\t\t\t\t                        | No |\r\n| WeighingOuts[0]                       | The list of weighing outs associated to the weighing.                         | No |\r\n| WeighingOuts[0].Guid                  | The GUID associated to the weighing out.                                      | No |\r\n| WeighingOuts[0].TicketNo              | The ticket number associated to the weighing out.                             | No |\r\n| WeighingOuts[0].IsAutomatic           | Is this weighing done automatic?                                              | No |\r\n| WeighingOuts[0].MaterialListItem      | The GUID and description of the material list associated to the weighing out. | Yes |\r\n| WeighingOuts[0].ContainerTypeListItem | The GUID and description of the container type associated to the weighing out.| No |\r\n| WeighingOuts[0].RelatedWeighingInGuid\t\t\t| The GUID associated to the weighing in of the weighing out.           | No |\r\n| WeighingOuts[0].Weights                       | The weight data assosicated to the weighing out.                      | No |\r\n| WeighingOuts[0].Weights.GrossWeight           | The gross weight data associated to the weighing out.                 | No |\r\n| WeighingOuts[0].Weights.GrossWeight.Guid      | The GUID associated to the gross weight of the weighing out.          | No |\r\n| WeighingOuts[0].Weights.GrossWeight.Weight    | The weight associated to the gross weight of the weighing out.        | No |\r\n| WeighingOuts[0].Weights.GrossWeight.Timestamp | The timestamp associated to the gross weight of the weighing out.     | No |\r\n| WeighingOuts[0].Weights.GrossWeight.WeightTypeListItem         | The GUID and description of the weight type associated to the WeighingOuts.Weights gross weight.                 | Yes if WeighingOuts.Weights.GrossWeight not null |\r\n| WeighingOuts[0].Weights.TareWeight            | The tare weight data associated to the weighing out.                  | No |\r\n| WeighingOuts[0].Weights.TareWeight.Guid       | The GUID associated to the tare weight of the weighing out.           | No |\r\n| WeighingOuts[0].Weights.TareWeight.Weight     | The weight associated to the tare weight of the weighing out.         | No |\r\n| WeighingOuts[0].Weights.TareWeight.Timestamp  | The timestamp associated to the tare weight of the weighing out.      | No |\r\n| WeighingOuts[0].Weights.TareWeight.WeightTypeListItem         | The GUID and description of the weight type associated to the WeighingOuts.Weights tare weight.                 | Yes if WeighingOuts.Weights.GrossWeight not null |\r\n| WeighingOuts[0].Weights.Quantity              | The quantity associated to the weighing out.                          | No |\r\n| WeighingOuts[0].Weights.Volume                | The volume associated to the weighing out.                            | No |\r\n| ContainerIdentifier\t\t\t\t\t| The container identifier of the weighing.\t\t\t\t\t\t\t\t\t\t| No |\r\n| SealIdentifier\t\t\t\t\t\t| The seal identifier of the weighing.\t\t\t\t\t\t\t\t\t\t\t| No |\r\n| ContainerTare \t\t\t\t\t\t| The container tare weight of the weighing.\t\t\t\t\t\t\t\t\t| No |\r\n| VerifiedGrossMaximum \t\t\t\t\t| The verified gross maximum weight of the weighing.\t\t\t\t\t\t\t| No |\r\n| ContainerNotes\t\t\t\t\t\t| The container notes of the weighing.\t\t\t\t\t\t\t\t\t\t\t| No |\r\n| RelatedWeighingInGuid                 | Used to filter on weighing with weighing in of provided GUID.                 | - |\r\n| RelatedWeighingOutGuid                | Used to filter on weighing with weighing out of provided GUID.                | - |\r\n| RelatedBlobHashes\t\t\t\t\t\t| The array of related blob hashes and descriptions associated to the weighing.| No |\r\n| RelatedBlobHashes[0].Description\t\t| The description of the blob.\t\t\t\t\t\t\t\t\t\t\t\t\t| No |\r\n| RelatedBlobHashes[0].Hash\t\t\t\t| The hash of the blob to be used against the /blob endpoint. Files are provided as an octet stream which will need to be converted. | No |\r\n| RelatedBlobWeighingDocketPdfHashes\t\t | The array of related weighing docket blob hashes. | No |\r\n| RelatedBlobWeighingDocketPdfHashes[0].Hash | The hash of the weighing docket blob to be used against the /blob endpoint. Files are provided as an octet stream which will need to be converted. | No |\r\n| RelatedWeighingInDetailGuid\t\t\t\t\t\t\t\t| Used to filter on weighing with weighing in detail of provided GUID.\t\t\t\t\t\t\t\t\t| No |\r\n| RelatedJobOverrideBreakdownGuid\t\t\t\t\t\t\t| Used to filter on weighing with weighing in detail job override breakdown of provided GUID.           | No |\r\n| WeighingOutsRelatedWeighingInGuidFilter                   | Used to filter the related weighing in guid associated to the weighing out.\t\t\t\t\t\t\t| No |\r\n\r\n## Extra validations\r\n\r\n| Condition | Error message |\r\n| --------- | ------------- |\r\n| For Gate, ScheduledJob and MaterialSale if provided Job does not have a SiteOrder. | RelatedJobGuid must be a job with a site order. |\r\n| For Gate, ScheduledJob, Route and MaterialSale if provided Job is linked to another Weighing. | The weighing must be unique per job. |\r\n| If weighing is inbound or Route and WeighingOut provided. (1) | WeighingOut: is not supported. |\r\n| If weighing is outbound or Route and WeighingIn provided. (2) | WeighingIn: is not supported. |\r\n| If Weights.TareWeight.Weight is bigger then Weights.GrossWeight.Weight. | Weights.GrossWeight.Weight: Must be greater than the then Weights.TareWeight.Weight |\r\n| If WeighingIns[0].Weights.TareWeight.Weight is bigger then WeighingIns[0].Weights.GrossWeight.Weight. | WeighingIns[0].Weights.GrossWeight.Weight: Must be greater than the then WeighingIns[0].Weights.TareWeight.Weight |\r\n| If WeighingOuts[0].Weights.TareWeight.Weight is bigger then WeighingOuts[0].Weights.GrossWeight.Weight. | WeighingOuts[0].Weights.GrossWeight.Weight: Must be greater than the then WeighingOuts[0].Weights.TareWeight.Weight |\r\n| For Gate if RelatedVehicleGuid is provided. | RelatedVehicleGuid: is not supported. |\r\n| For weighing, if IsExternalVehicle set to true and RelatedExternalVehicleGuid is not provided | For Weighing, IsExternalVehicle property has been set as true, therefore RelatedExternalVehicleGuid property must also be set. |\r\n| For weighing, if RelatedExternalVehicleGuid have value and IsExternalVehicle set to false | For Weighing, RelatedExternalVehicleGuid property have seen set, therefore IsExternalVehicle property must be set as true. |\r\n| For weighing, if RelatedVehicleGuid and RelatedExternalVehicleGuid was provided  | Either RelatedExternalVehicleGuid or RelatedVehicleGuid properties must be set. |\r\n| For weighing, if IsComplete set to true | Attempted to create a completed weighing. Weighing could not be created. Create the weighing and then set the IsComplete flag via an update. |\r\n| If Weights.BridgeName is more than 100 characters long | BridgeName must be no more than 100 characters long. |\r\n| If ContainerIdentifier is more than 50 characters long | ContainerIdentifier must be no more than 50 characters long. |\r\n| If SealIdentifier is more than 50 characters long | SealIdentifier must be no more than 50 characters long. |\r\n\r\n1) Inbound are weighings of type Gate, ScheduledJob and TransferOut (if the weighing is not linked to another weighing via TransferDestinationWeighingId)\r\n2) Outbound are weighings of type MaterialSale and TransferOut (if the weighing is linked to another weighing via TransferDestinationWeighingId)\r\n\r\n| RelatedBlobWeighingDocketPdfHashes[0].Hash is not null for Insert | Failed to save Weighing because RelatedBlobWeighingDocketPdfHashes creation is not permitted. |\r\n| RelatedBlobWeighingDocketPdfHashes[0].Hash is not null for Update and the Weighing did not have RelatedBlobWeighingDocketPdfHashes initially | Failed to save/update Weighing because RelatedBlobWeighingDocketPdfHashes do not exist for the Weighing. |\r\n| RelatedBlobWeighingDocketPdfHashes[0].Hash is not null for Update and Invalid Hash | Could not find WeighingDocketOutput matching template. |\r\n| WeighingIns[0].Details[0].Guid is not null on insert | Attempting to update WeighingIns[0].Details[0] when creating the weighing. Could not process the request. Provide WeighingIns[0].Details[0] without a Guid property to create new WeighingIns[0].Details[0] rather than attempting an update. |\r\n| WeighingIns[0].Details[0].IsDeleted is true | IsDeleted is TRUE. Could not process the request. WeighingIns[0].Details[0] can not be deleted via the REST API. |\r\n| If the GUID passed to WeighingIns[0].Details[0].ReasonListItem has a value that is deleted | The provided WeighingIns[0].Details[0].ReasonListItem is deleted. Could not update the resource. Please check the relevant list end point for the available options. |","operationId":"Weighing_Create","consumes":["application/json"],"produces":["application/json"],"parameters":[{"in":"body","required":true,"schema":{"$ref":"#/definitions/ApiResourceId"}}],"responses":{"200":{"description":"OK","schema":{"$ref":"#/definitions/ApiResourceId"}}}}},"/lists/weighingTypes/{guid}":{"get":{"tags":["WeighingType"],"summary":"Find with GUID","description":"| Property                  | Description                                                              |\r\n| ------------------------- | ------------------------------------------------------------------------ |\r\n| GUID                      | The GUID associated to the weighing type                              |\r\n| Description               | The description of the weighing type                                  |","operationId":"WeighingType_Get","consumes":["application/json"],"produces":["application/json"],"parameters":[{"name":"guid","in":"path","required":true,"type":"string","format":"uuid"},{"name":"links","in":"query","required":false,"type":"string"},{"name":"include","in":"query","required":false,"type":"string"},{"name":"expand","in":"query","required":false,"type":"string"},{"name":"udf","in":"query","required":false,"type":"string"}],"responses":{"200":{"description":"OK","schema":{"$ref":"#/definitions/ApiResourceResultEntity[ApiIntegratorWeighingTypeResource]"}}}}},"/lists/weighingTypes":{"get":{"tags":["WeighingType"],"summary":"Find with Filters","description":"| Property                  | Description                                                              |\r\n| ------------------------- | ------------------------------------------------------------------------ |\r\n| GUID                      | The GUID associated to the weighing type                              |\r\n| Description               | The description of the weighing type                                  |","operationId":"WeighingType_GetCollection","consumes":["application/json"],"produces":["application/json"],"parameters":[{"name":"filter","in":"query","required":false,"type":"string"},{"name":"search","in":"query","required":false,"type":"string"},{"name":"order","in":"query","required":false,"type":"string"},{"name":"max","in":"query","required":false,"type":"integer","format":"int32"},{"name":"page","in":"query","required":false,"type":"integer","format":"int32"},{"name":"includeCount","in":"query","required":false,"type":"boolean"},{"name":"includeDeleted","in":"query","required":false,"type":"boolean"},{"name":"links","in":"query","required":false,"type":"string"},{"name":"udf","in":"query","required":false,"type":"string"}],"responses":{"200":{"description":"OK","schema":{"$ref":"#/definitions/ApiResourceResultCollection[ApiIntegratorWeighingTypeResource]"}}}}},"/lists/weightTypes/{guid}":{"get":{"tags":["WeightType"],"summary":"Find with GUID","description":"| Property                  | Description                                                              |\r\n| ------------------------- | ------------------------------------------------------------------------ |\r\n| GUID                      | The GUID associated to the weight type                              |\r\n| Description               | The description of the weight type                                  |","operationId":"WeightType_Get","consumes":["application/json"],"produces":["application/json"],"parameters":[{"name":"guid","in":"path","required":true,"type":"string","format":"uuid"},{"name":"links","in":"query","required":false,"type":"string"},{"name":"include","in":"query","required":false,"type":"string"},{"name":"expand","in":"query","required":false,"type":"string"},{"name":"udf","in":"query","required":false,"type":"string"}],"responses":{"200":{"description":"OK","schema":{"$ref":"#/definitions/ApiResourceResultEntity[ApiIntegratorWeightTypeResource]"}}}}},"/lists/weightTypes":{"get":{"tags":["WeightType"],"summary":"Find with Filters","description":"| Property                  | Description                                                              |\r\n| ------------------------- | ------------------------------------------------------------------------ |\r\n| GUID                      | The GUID associated to the weight type                              |\r\n| Description               | The description of the weight type                                  |","operationId":"WeightType_GetCollection","consumes":["application/json"],"produces":["application/json"],"parameters":[{"name":"filter","in":"query","required":false,"type":"string"},{"name":"search","in":"query","required":false,"type":"string"},{"name":"order","in":"query","required":false,"type":"string"},{"name":"max","in":"query","required":false,"type":"integer","format":"int32"},{"name":"page","in":"query","required":false,"type":"integer","format":"int32"},{"name":"includeCount","in":"query","required":false,"type":"boolean"},{"name":"includeDeleted","in":"query","required":false,"type":"boolean"},{"name":"links","in":"query","required":false,"type":"string"},{"name":"udf","in":"query","required":false,"type":"string"}],"responses":{"200":{"description":"OK","schema":{"$ref":"#/definitions/ApiResourceResultCollection[ApiIntegratorWeightTypeResource]"}}}}},"/lists/writeOffReasons/{guid}":{"get":{"tags":["WriteOffReason"],"summary":"Find with GUID","description":"| Property                  | Description                                                              |\r\n| ------------------------- | ------------------------------------------------------------------------ |\r\n| GUID                      | The GUID associated to the write off reason                              |\r\n| Description               | The description of the write off reason                                  |\r\n| AnalysisCode              | The analysis code of the write off reason                                |\r\n| IsDeleted                 | Whether the write off reason is deleted\t\t\t\t\t\t\t\t\t|\r\n\r\n","operationId":"WriteOffReason_Get","consumes":["application/json"],"produces":["application/json"],"parameters":[{"name":"guid","in":"path","required":true,"type":"string","format":"uuid"},{"name":"links","in":"query","required":false,"type":"string"},{"name":"include","in":"query","required":false,"type":"string"},{"name":"expand","in":"query","required":false,"type":"string"},{"name":"udf","in":"query","required":false,"type":"string"}],"responses":{"200":{"description":"OK","schema":{"$ref":"#/definitions/ApiResourceResultEntity[ApiIntegratorWriteOffReasonResource]"}}}}},"/lists/writeOffReasons":{"get":{"tags":["WriteOffReason"],"summary":"Find with Filters","description":"| Property                  | Description                                                              |\r\n| ------------------------- | ------------------------------------------------------------------------ |\r\n| GUID                      | The GUID associated to the write off reason                              |\r\n| Description               | The description of the write off reason                                  |\r\n| AnalysisCode              | The analysis code of the write off reason                                |\r\n| IsDeleted                 | Whether the write off reason is deleted\t\t\t\t\t\t\t\t\t|\r\n\r\n","operationId":"WriteOffReason_GetCollection","consumes":["application/json"],"produces":["application/json"],"parameters":[{"name":"filter","in":"query","required":false,"type":"string"},{"name":"search","in":"query","required":false,"type":"string"},{"name":"order","in":"query","required":false,"type":"string"},{"name":"max","in":"query","required":false,"type":"integer","format":"int32"},{"name":"page","in":"query","required":false,"type":"integer","format":"int32"},{"name":"includeCount","in":"query","required":false,"type":"boolean"},{"name":"includeDeleted","in":"query","required":false,"type":"boolean"},{"name":"links","in":"query","required":false,"type":"string"},{"name":"udf","in":"query","required":false,"type":"string"}],"responses":{"200":{"description":"OK","schema":{"$ref":"#/definitions/ApiResourceResultCollection[ApiIntegratorWriteOffReasonResource]"}}}}},"/lists/zones/{guid}":{"get":{"tags":["Zone"],"summary":"Find with GUID","description":"| Property                  | Description                                                  |\r\n| ------------------------- | -------------------------------------------------------------|\r\n| GUID                      | The GUID associated to the zone                              |\r\n| Description               | The description of the zone                                  |","operationId":"Zone_Get","consumes":["application/json"],"produces":["application/json"],"parameters":[{"name":"guid","in":"path","required":true,"type":"string","format":"uuid"},{"name":"links","in":"query","required":false,"type":"string"},{"name":"include","in":"query","required":false,"type":"string"},{"name":"expand","in":"query","required":false,"type":"string"},{"name":"udf","in":"query","required":false,"type":"string"}],"responses":{"200":{"description":"OK","schema":{"$ref":"#/definitions/ApiResourceResultEntity[ApiIntegratorZoneResource]"}}}}},"/lists/zones":{"get":{"tags":["Zone"],"summary":"Find with Filters","description":"| Property                  | Description                                                  |\r\n| ------------------------- | -------------------------------------------------------------|\r\n| GUID                      | The GUID associated to the zone                              |\r\n| Description               | The description of the zone                                  |","operationId":"Zone_GetCollection","consumes":["application/json"],"produces":["application/json"],"parameters":[{"name":"filter","in":"query","required":false,"type":"string"},{"name":"search","in":"query","required":false,"type":"string"},{"name":"order","in":"query","required":false,"type":"string"},{"name":"max","in":"query","required":false,"type":"integer","format":"int32"},{"name":"page","in":"query","required":false,"type":"integer","format":"int32"},{"name":"includeCount","in":"query","required":false,"type":"boolean"},{"name":"includeDeleted","in":"query","required":false,"type":"boolean"},{"name":"links","in":"query","required":false,"type":"string"},{"name":"udf","in":"query","required":false,"type":"string"}],"responses":{"200":{"description":"OK","schema":{"$ref":"#/definitions/ApiResourceResultCollection[ApiIntegratorZoneResource]"}}}}}},"definitions":{"ApiResourceResultEntity[ApiIntegratorAccessGroupResource]":{"type":"object","properties":{"resource":{"$ref":"#/definitions/ApiIntegratorAccessGroupResource"},"links":{"$ref":"#/definitions/ApiResourceResultEntityLinks"},"extra":{"$ref":"#/definitions/ApiResourceResultEntityExtra"},"errors":{"$ref":"#/definitions/ApiResourceErrors"},"status":{"$ref":"#/definitions/ApiResourceStatus"}}},"ApiIntegratorAccessGroupResource":{"type":"object","properties":{"Description":{"type":"string"},"IsDeleted":{"type":"boolean"},"GUID":{"format":"uuid","type":"string","example":"00000000-0000-0000-0000-000000000000"}}},"ApiResourceResultEntityLinks":{"type":"object","properties":{"self":{"type":"string"},"associations":{"type":"array","items":{"type":"string"}},"expand":{"type":"array","items":{"type":"string"}},"operations":{"type":"array","items":{"type":"string"}}}},"ApiResourceResultEntityExtra":{"type":"object","properties":{"expand":{"type":"object","additionalProperties":{"type":"object","additionalProperties":{"type":"object"}}},"include":{"type":"object","additionalProperties":{"type":"array","items":{"type":"object","additionalProperties":{"type":"object"}}}}}},"ApiResourceErrors":{"type":"object","properties":{"errors":{"type":"string"}}},"ApiResourceStatus":{"type":"object","properties":{"id":{"format":"int32","type":"integer"},"isSuccess":{"type":"boolean"}}},"ApiResourceResultCollection[ApiIntegratorAccessGroupResource]":{"type":"object","properties":{"resource":{"type":"array","items":{"$ref":"#/definitions/ApiIntegratorAccessGroupResource"}},"extra":{"$ref":"#/definitions/ApiResourceResultCollectionExtra"},"errors":{"$ref":"#/definitions/ApiResourceErrors"},"status":{"$ref":"#/definitions/ApiResourceStatus"}}},"ApiResourceResultCollectionExtra":{"type":"object","properties":{"count":{"format":"int32","type":"integer"}}},"ApiResourceChanges[ApiIntegratorAccountCustomerResource]":{"type":"object","properties":{"resource":{"type":"array","items":{"$ref":"#/definitions/ApiIntegratorAccountCustomerResource"}},"extra":{"$ref":"#/definitions/ApiResourceResultUpdatesExtra"},"errors":{"$ref":"#/definitions/ApiResourceErrors"},"status":{"$ref":"#/definitions/ApiResourceStatus"}}},"ApiIntegratorAccountCustomerResource":{"type":"object","properties":{"Name":{"type":"string"},"Reference":{"type":"string"},"FederalId":{"type":"string"},"IsInternal":{"type":"boolean"},"ARAccountCode":{"type":"string"},"APAccountCode":{"type":"string"},"Notes":{"type":"string"},"AMICENumber":{"type":"string"},"CoCNumber":{"type":"string"},"CompanyListItem":{"$ref":"#/definitions/ApiIntegratorListItemResource"},"CustomerStateListItem":{"$ref":"#/definitions/ApiIntegratorListItemResource"},"CustomerTypeListItem":{"$ref":"#/definitions/ApiIntegratorListItemResource"},"CustomerCategoryListItem":{"$ref":"#/definitions/ApiIntegratorListItemResource"},"CustomerGroupListItem":{"$ref":"#/definitions/ApiIntegratorListItemResource"},"CurrencyListItem":{"$ref":"#/definitions/ApiIntegratorListItemResource"},"CustomerTemplateListItem":{"$ref":"#/definitions/ApiIntegratorListItemResource"},"BusinessTypeListItem":{"$ref":"#/definitions/ApiIntegratorListItemResource"},"VisitStatusListItem":{"$ref":"#/definitions/ApiIntegratorListItemResource"},"BankDetails":{"$ref":"#/definitions/ApiIntegratorAccountCustomerBankDetailsResource"},"Contract":{"$ref":"#/definitions/ApiIntegratorAccountCustomerContractResource"},"AutoArAccountCode":{"$ref":"#/definitions/ApiIntegratorAutoArAccountCodeResource"},"Balance":{"$ref":"#/definitions/ApiIntegratorAccountCustomerBalanceResource"},"RelatedUserSalesRepGuid":{"format":"uuid","type":"string","example":"00000000-0000-0000-0000-000000000000"},"RelatedUserCreditControllerGuid":{"format":"uuid","type":"string","example":"00000000-0000-0000-0000-000000000000"},"RelatedMasterAccountGuid":{"format":"uuid","type":"string","example":"00000000-0000-0000-0000-000000000000"},"RelatedBillToCustomerGuid":{"format":"uuid","type":"string","example":"00000000-0000-0000-0000-000000000000"},"RelatedLocationHQGuid":{"format":"uuid","type":"string","example":"00000000-0000-0000-0000-000000000000"},"CombineChargesRebates":{"type":"boolean"},"HasRedLight":{"type":"boolean"},"ExternalVehicleValidation":{"type":"boolean"},"TicketsRequiredWithInvoice":{"type":"boolean"},"RctCustomer":{"type":"boolean"},"ProofOfServiceRequired":{"type":"boolean"},"ExcludeFromStatementRun":{"type":"boolean"},"ReceiveServiceUpdatesByEmail":{"type":"boolean"},"ReceiveServiceUpdatesByText":{"type":"boolean"},"ReceiveMarketingUpdatesByEmail":{"type":"boolean"},"ReceiveMarketingUpdatesByText":{"type":"boolean"},"TradingNames":{"type":"array","items":{"$ref":"#/definitions/ApiIntegratorAccountCustomerTradingNamesResource"}},"PaymentProviderSettings":{"type":"array","items":{"$ref":"#/definitions/ApiIntegratorAccountCustomerPaymentProviderSettingsResource"}},"CreditCards":{"type":"array","items":{"$ref":"#/definitions/ApiIntegratorAccountCustomerCreditCardsResource"}},"RelatedBlobHashes":{"type":"array","items":{"$ref":"#/definitions/ApiIntegratorCustomerRelatedBlobHashesResource"}},"RelatedReportBlobs":{"type":"array","items":{"$ref":"#/definitions/ApiIntegratorCustomerReportBlobHashesResource"}},"RelatedExternalVehicles":{"type":"array","items":{"$ref":"#/definitions/ApiIntegratorAccountCustomerExternalVehicleResource"}},"CustomerBusinessTypes":{"type":"array","items":{"$ref":"#/definitions/ApiIntegratorAccountCustomerBusinessTypeOptionResource"}},"DefaultSicCodeListItem":{"$ref":"#/definitions/ApiIntegratorListItemResource"},"TradingNameGuidFilter":{"format":"uuid","type":"string","example":"00000000-0000-0000-0000-000000000000"},"TradingNameFilter":{"type":"string"},"RelatedExternalVehicleGuidFilter":{"format":"uuid","type":"string","example":"00000000-0000-0000-0000-000000000000"},"GUID":{"format":"uuid","type":"string","example":"00000000-0000-0000-0000-000000000000"}}},"ApiResourceResultUpdatesExtra":{"type":"object","properties":{"until":{"type":"string"},"cursor":{"type":"string"}}},"ApiIntegratorListItemResource":{"type":"object","properties":{"Description":{"type":"string"},"Guid":{"format":"uuid","type":"string","example":"00000000-0000-0000-0000-000000000000"}}},"ApiIntegratorAccountCustomerBankDetailsResource":{"type":"object","properties":{"BankName":{"type":"string"},"AccountName":{"type":"string"},"AccountNo":{"type":"string"},"SortCode":{"type":"string"},"BIC":{"type":"string"},"IBAN":{"type":"string"},"NationalBankCode":{"type":"string"},"DirectDebitRunConfigListItem":{"$ref":"#/definitions/ApiIntegratorListItemResource"},"DirectDebitAccountTypeListItem":{"$ref":"#/definitions/ApiIntegratorListItemResource"},"Address":{"$ref":"#/definitions/ApiIntegratorAccountCustomerBankDetailsAddressResource"}}},"ApiIntegratorAccountCustomerContractResource":{"type":"object","properties":{"StartDate":{"format":"localDate","type":"string","example":"2000-01-01"},"CreditLimit":{"format":"double","type":"number"},"BalanceMigrated":{"format":"double","type":"number"},"VATExemptNumber":{"type":"string"},"VATExemptionExpiryDate":{"format":"localDate","type":"string","example":"2000-01-01"},"VATRegistrationNumber":{"type":"string"},"ApprovedDate":{"format":"localDate","type":"string","example":"2000-01-01"},"IsInvoiceCollated":{"type":"boolean"},"RollUpInvoiceBySite":{"type":"boolean"},"RollUpInvoiceByService":{"type":"boolean"},"InvoiceCycleListItem":{"$ref":"#/definitions/ApiIntegratorListItemResource"},"DepartmentListItem":{"$ref":"#/definitions/ApiIntegratorListItemResource"},"ContractStatusListItem":{"$ref":"#/definitions/ApiIntegratorListItemResource"},"PaymentTypeListItem":{"$ref":"#/definitions/ApiIntegratorListItemResource"},"PaymentTermListItem":{"$ref":"#/definitions/ApiIntegratorListItemResource"},"InvoiceFrequencyTermListItem":{"$ref":"#/definitions/ApiIntegratorListItemResource"},"InvoiceDocumentDeliveryMethods":{"type":"array","items":{"$ref":"#/definitions/ApiIntegratorDocumentDeliveryMethodsResource"}}}},"ApiIntegratorAutoArAccountCodeResource":{"type":"object","properties":{"CompanyOutletGuid":{"format":"uuid","type":"string","example":"00000000-0000-0000-0000-000000000000"}}},"ApiIntegratorAccountCustomerBalanceResource":{"type":"object","properties":{"OutstandingAmount":{"format":"double","type":"number"},"UnallocatedAmount":{"format":"double","type":"number"},"UnconfirmedBalance":{"format":"double","type":"number"},"LedgerBalance":{"format":"double","type":"number"}}},"ApiIntegratorAccountCustomerTradingNamesResource":{"type":"object","properties":{"Description":{"type":"string"},"TradingNameTypeListItem":{"$ref":"#/definitions/ApiIntegratorListItemResource"},"IsDeleted":{"type":"boolean"},"IsForAllSites":{"type":"boolean"},"Guid":{"format":"uuid","type":"string","example":"00000000-0000-0000-0000-000000000000"}}},"ApiIntegratorAccountCustomerPaymentProviderSettingsResource":{"type":"object","properties":{"Name":{"type":"string"},"PaymentProviderListItem":{"$ref":"#/definitions/ApiIntegratorListItemResource"},"Value":{"type":"string"},"IsDeleted":{"type":"boolean"},"Guid":{"format":"uuid","type":"string","example":"00000000-0000-0000-0000-000000000000"}}},"ApiIntegratorAccountCustomerCreditCardsResource":{"type":"object","properties":{"Forename":{"type":"string"},"Surname":{"type":"string"},"Postcode":{"type":"string"},"Province":{"type":"string"},"DateCreated":{"format":"localDate","type":"string","example":"2000-01-01"},"MaskedCreditCardNumber":{"type":"string"},"Address1":{"type":"string"},"City":{"type":"string"},"RelatedContactGuid":{"format":"uuid","type":"string","example":"00000000-0000-0000-0000-000000000000"},"Country":{"type":"string"},"CreditCardExpiryDate":{"format":"localDate","type":"string","example":"2000-01-01"},"Currency":{"type":"string"},"ExternalVaultCardReference":{"type":"string"},"ExternalVaultReference":{"type":"string"},"IsACH":{"type":"boolean"},"IsDeleted":{"type":"boolean"},"IsRequestWithImmediateResponse":{"type":"boolean"},"PayerReference":{"type":"string"},"PaymentPointListItem":{"$ref":"#/definitions/ApiIntegratorListItemResource"},"PaymentProviderListItem":{"$ref":"#/definitions/ApiIntegratorListItemResource"},"PaymentReference":{"type":"string"},"Guid":{"format":"uuid","type":"string","example":"00000000-0000-0000-0000-000000000000"}}},"ApiIntegratorCustomerRelatedBlobHashesResource":{"type":"object","properties":{"Hash":{"type":"string"}}},"ApiIntegratorCustomerReportBlobHashesResource":{"type":"object","properties":{"Guid":{"format":"uuid","type":"string","example":"00000000-0000-0000-0000-000000000000"},"DocumentDescription":{"type":"string"},"DocumentName":{"type":"string"},"Hash":{"type":"string"},"IsForAllSites":{"type":"boolean"},"RelatedSites":{"type":"array","items":{"$ref":"#/definitions/ApiIntegratorCustomerReportRelatedSiteResource"}},"RelatedExcludedSites":{"type":"array","items":{"$ref":"#/definitions/ApiIntegratorCustomerReportRelatedSiteResource"}}}},"ApiIntegratorAccountCustomerExternalVehicleResource":{"type":"object","properties":{"RelatedExternalVehicleGuid":{"format":"uuid","type":"string","example":"00000000-0000-0000-0000-000000000000"},"IsForAllMaterials":{"type":"boolean"},"IsForAllSites":{"type":"boolean"},"ValidFrom":{"format":"localDate","type":"string","example":"2000-01-01"},"ValidTo":{"format":"localDate","type":"string","example":"2000-01-01"},"IsDeleted":{"type":"boolean"},"Guid":{"format":"uuid","type":"string","example":"00000000-0000-0000-0000-000000000000"}}},"ApiIntegratorAccountCustomerBusinessTypeOptionResource":{"type":"object","properties":{"Guid":{"format":"uuid","type":"string","example":"00000000-0000-0000-0000-000000000000"},"BusinessTypeOptionListItem":{"$ref":"#/definitions/ApiIntegratorListItemResource"}}},"ApiIntegratorAccountCustomerBankDetailsAddressResource":{"type":"object","properties":{"Address1":{"type":"string"},"Address2":{"type":"string"},"Address3":{"type":"string"},"Address4":{"type":"string"},"Address5":{"type":"string"},"Postcode":{"type":"string"}}},"ApiIntegratorDocumentDeliveryMethodsResource":{"type":"object","properties":{"DocumentDeliveryType":{"$ref":"#/definitions/ApiIntegratorListItemResource"}}},"ApiIntegratorCustomerReportRelatedSiteResource":{"type":"object","properties":{"Guid":{"format":"uuid","type":"string","example":"00000000-0000-0000-0000-000000000000"},"RelatedSiteGuid":{"format":"uuid","type":"string","example":"00000000-0000-0000-0000-000000000000"}}},"ApiResourceResultEntity[ApiIntegratorAccountCustomerResource]":{"type":"object","properties":{"resource":{"$ref":"#/definitions/ApiIntegratorAccountCustomerResource"},"links":{"$ref":"#/definitions/ApiResourceResultEntityLinks"},"extra":{"$ref":"#/definitions/ApiResourceResultEntityExtra"},"errors":{"$ref":"#/definitions/ApiResourceErrors"},"status":{"$ref":"#/definitions/ApiResourceStatus"}}},"ApiResourceId":{"type":"object","properties":{"resource":{"format":"int32","type":"integer"},"errors":{"$ref":"#/definitions/ApiResourceErrors"},"status":{"$ref":"#/definitions/ApiResourceStatus"}}},"ApiResourceResultCollection[ApiIntegratorAccountCustomerResource]":{"type":"object","properties":{"resource":{"type":"array","items":{"$ref":"#/definitions/ApiIntegratorAccountCustomerResource"}},"extra":{"$ref":"#/definitions/ApiResourceResultCollectionExtra"},"errors":{"$ref":"#/definitions/ApiResourceErrors"},"status":{"$ref":"#/definitions/ApiResourceStatus"}}},"ApiResourceChanges[ApiIntegratorAccountingPeriodResource]":{"type":"object","properties":{"resource":{"type":"array","items":{"$ref":"#/definitions/ApiIntegratorAccountingPeriodResource"}},"extra":{"$ref":"#/definitions/ApiResourceResultUpdatesExtra"},"errors":{"$ref":"#/definitions/ApiResourceErrors"},"status":{"$ref":"#/definitions/ApiResourceStatus"}}},"ApiIntegratorAccountingPeriodResource":{"type":"object","properties":{"Description":{"type":"string"},"Code":{"type":"string"},"IsClosed":{"type":"boolean"},"StartDate":{"format":"localDate","type":"string","example":"2000-01-01"},"EndDate":{"format":"localDate","type":"string","example":"2000-01-01"},"GUID":{"format":"uuid","type":"string","example":"00000000-0000-0000-0000-000000000000"}}},"ApiResourceResultEntity[ApiIntegratorAccountingPeriodResource]":{"type":"object","properties":{"resource":{"$ref":"#/definitions/ApiIntegratorAccountingPeriodResource"},"links":{"$ref":"#/definitions/ApiResourceResultEntityLinks"},"extra":{"$ref":"#/definitions/ApiResourceResultEntityExtra"},"errors":{"$ref":"#/definitions/ApiResourceErrors"},"status":{"$ref":"#/definitions/ApiResourceStatus"}}},"ApiResourceResultCollection[ApiIntegratorAccountingPeriodResource]":{"type":"object","properties":{"resource":{"type":"array","items":{"$ref":"#/definitions/ApiIntegratorAccountingPeriodResource"}},"extra":{"$ref":"#/definitions/ApiResourceResultCollectionExtra"},"errors":{"$ref":"#/definitions/ApiResourceErrors"},"status":{"$ref":"#/definitions/ApiResourceStatus"}}},"ApiResourceResultEntity[ApiIntegratorAccountingPeriodLockResource]":{"type":"object","properties":{"resource":{"$ref":"#/definitions/ApiIntegratorAccountingPeriodLockResource"},"links":{"$ref":"#/definitions/ApiResourceResultEntityLinks"},"extra":{"$ref":"#/definitions/ApiResourceResultEntityExtra"},"errors":{"$ref":"#/definitions/ApiResourceErrors"},"status":{"$ref":"#/definitions/ApiResourceStatus"}}},"ApiIntegratorAccountingPeriodLockResource":{"type":"object","properties":{"SourceModule":{"format":"uuid","type":"string","example":"00000000-0000-0000-0000-000000000000"},"Description":{"type":"string"},"CompanyListItem":{"$ref":"#/definitions/ApiIntegratorListItemResource"},"CompanyOutletListItem":{"$ref":"#/definitions/ApiIntegratorListItemResource"},"SysUserName":{"type":"string"},"LockStatus":{"type":"boolean"},"GUID":{"format":"uuid","type":"string","example":"00000000-0000-0000-0000-000000000000"}}},"ApiResourceResultCollection[ApiIntegratorAccountingPeriodLockResource]":{"type":"object","properties":{"resource":{"type":"array","items":{"$ref":"#/definitions/ApiIntegratorAccountingPeriodLockResource"}},"extra":{"$ref":"#/definitions/ApiResourceResultCollectionExtra"},"errors":{"$ref":"#/definitions/ApiResourceErrors"},"status":{"$ref":"#/definitions/ApiResourceStatus"}}},"ApiResourceResultEntity[ApiIntegratorActionResource]":{"type":"object","properties":{"resource":{"$ref":"#/definitions/ApiIntegratorActionResource"},"links":{"$ref":"#/definitions/ApiResourceResultEntityLinks"},"extra":{"$ref":"#/definitions/ApiResourceResultEntityExtra"},"errors":{"$ref":"#/definitions/ApiResourceErrors"},"status":{"$ref":"#/definitions/ApiResourceStatus"}}},"ApiIntegratorActionResource":{"type":"object","properties":{"Description":{"type":"string"},"IsDeleted":{"type":"boolean"},"AnalysisCode":{"type":"string"},"ShortAction":{"type":"string"},"EquivalentHaul":{"format":"double","type":"number"},"ActionTypes":{"type":"array","items":{"$ref":"#/definitions/ApiIntegratorActionTypesResource"}},"GUID":{"format":"uuid","type":"string","example":"00000000-0000-0000-0000-000000000000"}}},"ApiIntegratorActionTypesResource":{"type":"object","properties":{"Guid":{"format":"uuid","type":"string","example":"00000000-0000-0000-0000-000000000000"},"ActionTypeListItem":{"$ref":"#/definitions/ApiIntegratorListItemResource"}}},"ApiResourceResultCollection[ApiIntegratorActionResource]":{"type":"object","properties":{"resource":{"type":"array","items":{"$ref":"#/definitions/ApiIntegratorActionResource"}},"extra":{"$ref":"#/definitions/ApiResourceResultCollectionExtra"},"errors":{"$ref":"#/definitions/ApiResourceErrors"},"status":{"$ref":"#/definitions/ApiResourceStatus"}}},"ApiResourceResultEntity[ApiIntegratorActionTypeResource]":{"type":"object","properties":{"resource":{"$ref":"#/definitions/ApiIntegratorActionTypeResource"},"links":{"$ref":"#/definitions/ApiResourceResultEntityLinks"},"extra":{"$ref":"#/definitions/ApiResourceResultEntityExtra"},"errors":{"$ref":"#/definitions/ApiResourceErrors"},"status":{"$ref":"#/definitions/ApiResourceStatus"}}},"ApiIntegratorActionTypeResource":{"type":"object","properties":{"Description":{"type":"string"},"GUID":{"format":"uuid","type":"string","example":"00000000-0000-0000-0000-000000000000"}}},"ApiResourceResultCollection[ApiIntegratorActionTypeResource]":{"type":"object","properties":{"resource":{"type":"array","items":{"$ref":"#/definitions/ApiIntegratorActionTypeResource"}},"extra":{"$ref":"#/definitions/ApiResourceResultCollectionExtra"},"errors":{"$ref":"#/definitions/ApiResourceErrors"},"status":{"$ref":"#/definitions/ApiResourceStatus"}}},"ApiResourceChanges[ApiIntegratorAppliedCostResource]":{"type":"object","properties":{"resource":{"type":"array","items":{"$ref":"#/definitions/ApiIntegratorAppliedCostResource"}},"extra":{"$ref":"#/definitions/ApiResourceResultUpdatesExtra"},"errors":{"$ref":"#/definitions/ApiResourceErrors"},"status":{"$ref":"#/definitions/ApiResourceStatus"}}},"ApiIntegratorAppliedCostResource":{"type":"object","properties":{"RelatedSupplierSiteGuid":{"format":"uuid","type":"string","example":"00000000-0000-0000-0000-000000000000"},"RelatedOrderGuid":{"format":"uuid","type":"string","example":"00000000-0000-0000-0000-000000000000"},"RelatedSupplierBillGuid":{"format":"uuid","type":"string","example":"00000000-0000-0000-0000-000000000000"},"RelatedApplicationJobGuid":{"format":"uuid","type":"string","example":"00000000-0000-0000-0000-000000000000"},"RelatedApplicationRouteVisitGuid":{"format":"uuid","type":"string","example":"00000000-0000-0000-0000-000000000000"},"RelatedApplicationRouteGuid":{"format":"uuid","type":"string","example":"00000000-0000-0000-0000-000000000000"},"RelatedApplicationCostAgreementRouteCostGuid":{"format":"uuid","type":"string","example":"00000000-0000-0000-0000-000000000000"},"RelatedApplicationRentalActionGuid":{"format":"uuid","type":"string","example":"00000000-0000-0000-0000-000000000000"},"RelatedApplicationRentTermGuid":{"format":"uuid","type":"string","example":"00000000-0000-0000-0000-000000000000"},"RelatedApplicationWeighingInGuid":{"format":"uuid","type":"string","example":"00000000-0000-0000-0000-000000000000"},"RelatedApplicationWeighingOutGuid":{"format":"uuid","type":"string","example":"00000000-0000-0000-0000-000000000000"},"RelatedApplicationRouteVisitJobGuid":{"format":"uuid","type":"string","example":"00000000-0000-0000-0000-000000000000"},"RelatedApplicationOneOffActionGuid":{"format":"uuid","type":"string","example":"00000000-0000-0000-0000-000000000000"},"RelatedApplicationJobDetailGuid":{"format":"uuid","type":"string","example":"00000000-0000-0000-0000-000000000000"},"RelatedApplicationVehicleFuelEventGuid":{"format":"uuid","type":"string","example":"00000000-0000-0000-0000-000000000000"},"RelatedApplicationOneOffCostActionGuid":{"format":"uuid","type":"string","example":"00000000-0000-0000-0000-000000000000"},"RelatedApplicationRouteVisitMissedCollectionGuid":{"format":"uuid","type":"string","example":"00000000-0000-0000-0000-000000000000"},"RelatedApplicationDamageContainerIncidentCostGuid":{"format":"uuid","type":"string","example":"00000000-0000-0000-0000-000000000000"},"RelatedApplicationRouteProRataCollectionCostGuid":{"format":"uuid","type":"string","example":"00000000-0000-0000-0000-000000000000"},"RelatedApplicationInternalPurchaseOrderCostGuid":{"format":"uuid","type":"string","example":"00000000-0000-0000-0000-000000000000"},"RelatedApplicationVATGuid":{"format":"uuid","type":"string","example":"00000000-0000-0000-0000-000000000000"},"RelatedApplicationTaxTemplateCollectionGuid":{"format":"uuid","type":"string","example":"00000000-0000-0000-0000-000000000000"},"ActionListItem":{"$ref":"#/definitions/ApiIntegratorListItemResource"},"ServiceListItem":{"$ref":"#/definitions/ApiIntegratorListItemResource"},"PricingBasisListItem":{"$ref":"#/definitions/ApiIntegratorListItemResource"},"ContainerListItem":{"$ref":"#/definitions/ApiIntegratorListItemResource"},"AccountingPeriodListItem":{"$ref":"#/definitions/ApiIntegratorListItemResource"},"FilterAccountingPeriodListItemGuid":{"format":"uuid","type":"string","example":"00000000-0000-0000-0000-000000000000"},"Rate":{"format":"double","type":"number"},"CostExVat":{"format":"double","type":"number"},"CostIncVat":{"format":"double","type":"number"},"CostDate":{"format":"localDate","type":"string","example":"2000-01-01"},"IsAdjustment":{"type":"boolean"},"IsApproved":{"type":"boolean"},"IsDisputed":{"type":"boolean"},"IsSupplierBillConfirmed":{"type":"boolean"},"RelatedCostAgreementCostGuid":{"format":"uuid","type":"string","example":"00000000-0000-0000-0000-000000000000"},"GUID":{"format":"uuid","type":"string","example":"00000000-0000-0000-0000-000000000000"}}},"ApiResourceResultEntity[ApiIntegratorAppliedCostResource]":{"type":"object","properties":{"resource":{"$ref":"#/definitions/ApiIntegratorAppliedCostResource"},"links":{"$ref":"#/definitions/ApiResourceResultEntityLinks"},"extra":{"$ref":"#/definitions/ApiResourceResultEntityExtra"},"errors":{"$ref":"#/definitions/ApiResourceErrors"},"status":{"$ref":"#/definitions/ApiResourceStatus"}}},"ApiResourceResultCollection[ApiIntegratorAppliedCostResource]":{"type":"object","properties":{"resource":{"type":"array","items":{"$ref":"#/definitions/ApiIntegratorAppliedCostResource"}},"extra":{"$ref":"#/definitions/ApiResourceResultCollectionExtra"},"errors":{"$ref":"#/definitions/ApiResourceErrors"},"status":{"$ref":"#/definitions/ApiResourceStatus"}}},"ApiResourceResultEntity[ApiIntegratorAreaOfOriginResource]":{"type":"object","properties":{"resource":{"$ref":"#/definitions/ApiIntegratorAreaOfOriginResource"},"links":{"$ref":"#/definitions/ApiResourceResultEntityLinks"},"extra":{"$ref":"#/definitions/ApiResourceResultEntityExtra"},"errors":{"$ref":"#/definitions/ApiResourceErrors"},"status":{"$ref":"#/definitions/ApiResourceStatus"}}},"ApiIntegratorAreaOfOriginResource":{"type":"object","properties":{"Description":{"type":"string"},"IsDeleted":{"type":"boolean"},"CompanyOutletListItem":{"$ref":"#/definitions/ApiIntegratorListItemResource"},"GUID":{"format":"uuid","type":"string","example":"00000000-0000-0000-0000-000000000000"}}},"ApiResourceResultCollection[ApiIntegratorAreaOfOriginResource]":{"type":"object","properties":{"resource":{"type":"array","items":{"$ref":"#/definitions/ApiIntegratorAreaOfOriginResource"}},"extra":{"$ref":"#/definitions/ApiResourceResultCollectionExtra"},"errors":{"$ref":"#/definitions/ApiResourceErrors"},"status":{"$ref":"#/definitions/ApiResourceStatus"}}},"ApiResourceResultEntity[ApiIntegratorBusinessTypeResource]":{"type":"object","properties":{"resource":{"$ref":"#/definitions/ApiIntegratorBusinessTypeResource"},"links":{"$ref":"#/definitions/ApiResourceResultEntityLinks"},"extra":{"$ref":"#/definitions/ApiResourceResultEntityExtra"},"errors":{"$ref":"#/definitions/ApiResourceErrors"},"status":{"$ref":"#/definitions/ApiResourceStatus"}}},"ApiIntegratorBusinessTypeResource":{"type":"object","properties":{"Description":{"type":"string"},"IsDeleted":{"type":"boolean"},"GUID":{"format":"uuid","type":"string","example":"00000000-0000-0000-0000-000000000000"}}},"ApiResourceResultCollection[ApiIntegratorBusinessTypeResource]":{"type":"object","properties":{"resource":{"type":"array","items":{"$ref":"#/definitions/ApiIntegratorBusinessTypeResource"}},"extra":{"$ref":"#/definitions/ApiResourceResultCollectionExtra"},"errors":{"$ref":"#/definitions/ApiResourceErrors"},"status":{"$ref":"#/definitions/ApiResourceStatus"}}},"ApiResourceResultEntity[ApiIntegratorBusinessTypeOptionResource]":{"type":"object","properties":{"resource":{"$ref":"#/definitions/ApiIntegratorBusinessTypeOptionResource"},"links":{"$ref":"#/definitions/ApiResourceResultEntityLinks"},"extra":{"$ref":"#/definitions/ApiResourceResultEntityExtra"},"errors":{"$ref":"#/definitions/ApiResourceErrors"},"status":{"$ref":"#/definitions/ApiResourceStatus"}}},"ApiIntegratorBusinessTypeOptionResource":{"type":"object","properties":{"Description":{"type":"string"},"GUID":{"format":"uuid","type":"string","example":"00000000-0000-0000-0000-000000000000"}}},"ApiResourceResultCollection[ApiIntegratorBusinessTypeOptionResource]":{"type":"object","properties":{"resource":{"type":"array","items":{"$ref":"#/definitions/ApiIntegratorBusinessTypeOptionResource"}},"extra":{"$ref":"#/definitions/ApiResourceResultCollectionExtra"},"errors":{"$ref":"#/definitions/ApiResourceErrors"},"status":{"$ref":"#/definitions/ApiResourceStatus"}}},"ApiResourceResultEntity[ApiIntegratorChargeResource]":{"type":"object","properties":{"resource":{"$ref":"#/definitions/ApiIntegratorChargeResource"},"links":{"$ref":"#/definitions/ApiResourceResultEntityLinks"},"extra":{"$ref":"#/definitions/ApiResourceResultEntityExtra"},"errors":{"$ref":"#/definitions/ApiResourceErrors"},"status":{"$ref":"#/definitions/ApiResourceStatus"}}},"ApiIntegratorChargeResource":{"type":"object","properties":{"RelatedSiteOrderGuid":{"format":"uuid","type":"string","example":"00000000-0000-0000-0000-000000000000"},"RelatedJobGuid":{"format":"uuid","type":"string","example":"00000000-0000-0000-0000-000000000000"},"RelatedLiftEventGuid":{"format":"uuid","type":"string","example":"00000000-0000-0000-0000-000000000000"},"RelatedPriceGuid":{"format":"uuid","type":"string","example":"00000000-0000-0000-0000-000000000000"},"RelatedRouteVisitGuid":{"format":"uuid","type":"string","example":"00000000-0000-0000-0000-000000000000"},"RelatedRouteVisitJobGuid":{"format":"uuid","type":"string","example":"00000000-0000-0000-0000-000000000000"},"RelatedWeighingInGuid":{"format":"uuid","type":"string","example":"00000000-0000-0000-0000-000000000000"},"RelatedWeighingOutGuid":{"format":"uuid","type":"string","example":"00000000-0000-0000-0000-000000000000"},"RelatedPONumberGuid":{"format":"uuid","type":"string","example":"00000000-0000-0000-0000-000000000000"},"RelatedPriceModifierGuid":{"format":"uuid","type":"string","example":"00000000-0000-0000-0000-000000000000"},"RelatedInvoiceGuid":{"format":"uuid","type":"string","example":"00000000-0000-0000-0000-000000000000"},"ActionListItem":{"$ref":"#/definitions/ApiIntegratorListItemResource"},"PONumber":{"type":"string"},"Amount":{"$ref":"#/definitions/ApiIntegratorChargeAmountResource"},"DoNotInvoice":{"type":"boolean"},"DoNotInvoiceReasonListItem":{"$ref":"#/definitions/ApiIntegratorListItemResource"},"ActionGuidFilter":{"format":"uuid","type":"string","example":"00000000-0000-0000-0000-000000000000"},"GUID":{"format":"uuid","type":"string","example":"00000000-0000-0000-0000-000000000000"}}},"ApiIntegratorChargeAmountResource":{"type":"object","properties":{"IsEstimate":{"type":"boolean"},"Price":{"format":"double","type":"number"},"PriceExVat":{"format":"double","type":"number"},"Rate":{"format":"double","type":"number"}}},"ApiResourceResultCollection[ApiIntegratorChargeResource]":{"type":"object","properties":{"resource":{"type":"array","items":{"$ref":"#/definitions/ApiIntegratorChargeResource"}},"extra":{"$ref":"#/definitions/ApiResourceResultCollectionExtra"},"errors":{"$ref":"#/definitions/ApiResourceErrors"},"status":{"$ref":"#/definitions/ApiResourceStatus"}}},"ApiResourceChanges[ApiIntegratorCommunicationResource]":{"type":"object","properties":{"resource":{"type":"array","items":{"$ref":"#/definitions/ApiIntegratorCommunicationResource"}},"extra":{"$ref":"#/definitions/ApiResourceResultUpdatesExtra"},"errors":{"$ref":"#/definitions/ApiResourceErrors"},"status":{"$ref":"#/definitions/ApiResourceStatus"}}},"ApiIntegratorCommunicationResource":{"type":"object","properties":{"ClosedDate":{"format":"localDate","type":"string","example":"2000-01-01"},"ExternalReference":{"type":"string"},"Notes":{"type":"string"},"OutcomeNotes":{"type":"string"},"RelatedUserOwnerGuid":{"format":"uuid","type":"string","example":"00000000-0000-0000-0000-000000000000"},"ReviewDate":{"format":"localDate","type":"string","example":"2000-01-01"},"CommunicationClassificationListItem":{"$ref":"#/definitions/ApiIntegratorListItemResource"},"CommunicationTypeListItem":{"$ref":"#/definitions/ApiIntegratorListItemResource"},"CommunicationOutcomeListItem":{"$ref":"#/definitions/ApiIntegratorListItemResource"},"Followups":{"type":"array","items":{"$ref":"#/definitions/ApiIntegratorCommunicationFollowupResource"}},"RouteVisits":{"type":"array","items":{"$ref":"#/definitions/ApiIntegratorCommunicationRouteVisitResource"}},"DocumentBlobs":{"type":"array","items":{"$ref":"#/definitions/ApiIntegratorCommunicationDocumentBlobResource"}},"Jobs":{"type":"array","items":{"$ref":"#/definitions/ApiIntegratorCommunicationJobResource"}},"RelatedUserAssignedToGuidFilter":{"format":"uuid","type":"string","example":"00000000-0000-0000-0000-000000000000"},"RelatedDocumentBlobGuidFilter":{"format":"uuid","type":"string","example":"00000000-0000-0000-0000-000000000000"},"RelatedRouteVisitGuidFilter":{"format":"uuid","type":"string","example":"00000000-0000-0000-0000-000000000000"},"RelatedJobGuidFilter":{"format":"uuid","type":"string","example":"00000000-0000-0000-0000-000000000000"},"FollowupGuidFilter":{"format":"uuid","type":"string","example":"00000000-0000-0000-0000-000000000000"},"RouteVisitGuidFilter":{"format":"uuid","type":"string","example":"00000000-0000-0000-0000-000000000000"},"JobGuidFilter":{"format":"uuid","type":"string","example":"00000000-0000-0000-0000-000000000000"},"IsDeleted":{"type":"boolean"},"GUID":{"format":"uuid","type":"string","example":"00000000-0000-0000-0000-000000000000"}}},"ApiIntegratorCommunicationFollowupResource":{"type":"object","properties":{"ClosedDate":{"format":"localDate","type":"string","example":"2000-01-01"},"RelatedUserAssignedToGuid":{"format":"uuid","type":"string","example":"00000000-0000-0000-0000-000000000000"},"IsDeleted":{"type":"boolean"},"GUID":{"format":"uuid","type":"string","example":"00000000-0000-0000-0000-000000000000"}}},"ApiIntegratorCommunicationRouteVisitResource":{"type":"object","properties":{"RelatedRouteVisitGuid":{"format":"uuid","type":"string","example":"00000000-0000-0000-0000-000000000000"},"IsDeleted":{"type":"boolean"},"GUID":{"format":"uuid","type":"string","example":"00000000-0000-0000-0000-000000000000"}}},"ApiIntegratorCommunicationDocumentBlobResource":{"type":"object","properties":{"Guid":{"format":"uuid","type":"string","example":"00000000-0000-0000-0000-000000000000"},"IsDeleted":{"type":"boolean"},"DocumentReference":{"type":"string"},"Description":{"type":"string"},"DocumentName":{"type":"string"}}},"ApiIntegratorCommunicationJobResource":{"type":"object","properties":{"RelatedJobGuid":{"format":"uuid","type":"string","example":"00000000-0000-0000-0000-000000000000"},"IsDeleted":{"type":"boolean"},"GUID":{"format":"uuid","type":"string","example":"00000000-0000-0000-0000-000000000000"}}},"ApiResourceResultEntity[ApiIntegratorCommunicationResource]":{"type":"object","properties":{"resource":{"$ref":"#/definitions/ApiIntegratorCommunicationResource"},"links":{"$ref":"#/definitions/ApiResourceResultEntityLinks"},"extra":{"$ref":"#/definitions/ApiResourceResultEntityExtra"},"errors":{"$ref":"#/definitions/ApiResourceErrors"},"status":{"$ref":"#/definitions/ApiResourceStatus"}}},"ApiResourceResultCollection[ApiIntegratorCommunicationResource]":{"type":"object","properties":{"resource":{"type":"array","items":{"$ref":"#/definitions/ApiIntegratorCommunicationResource"}},"extra":{"$ref":"#/definitions/ApiResourceResultCollectionExtra"},"errors":{"$ref":"#/definitions/ApiResourceErrors"},"status":{"$ref":"#/definitions/ApiResourceStatus"}}},"ApiResourceResultEntity[ApiIntegratorCommunicationClassificationResource]":{"type":"object","properties":{"resource":{"$ref":"#/definitions/ApiIntegratorCommunicationClassificationResource"},"links":{"$ref":"#/definitions/ApiResourceResultEntityLinks"},"extra":{"$ref":"#/definitions/ApiResourceResultEntityExtra"},"errors":{"$ref":"#/definitions/ApiResourceErrors"},"status":{"$ref":"#/definitions/ApiResourceStatus"}}},"ApiIntegratorCommunicationClassificationResource":{"type":"object","properties":{"Description":{"type":"string"},"IsDeleted":{"type":"boolean"},"GUID":{"format":"uuid","type":"string","example":"00000000-0000-0000-0000-000000000000"}}},"ApiResourceResultCollection[ApiIntegratorCommunicationClassificationResource]":{"type":"object","properties":{"resource":{"type":"array","items":{"$ref":"#/definitions/ApiIntegratorCommunicationClassificationResource"}},"extra":{"$ref":"#/definitions/ApiResourceResultCollectionExtra"},"errors":{"$ref":"#/definitions/ApiResourceErrors"},"status":{"$ref":"#/definitions/ApiResourceStatus"}}},"ApiResourceResultEntity[ApiIntegratorCommunicationOutcomeResource]":{"type":"object","properties":{"resource":{"$ref":"#/definitions/ApiIntegratorCommunicationOutcomeResource"},"links":{"$ref":"#/definitions/ApiResourceResultEntityLinks"},"extra":{"$ref":"#/definitions/ApiResourceResultEntityExtra"},"errors":{"$ref":"#/definitions/ApiResourceErrors"},"status":{"$ref":"#/definitions/ApiResourceStatus"}}},"ApiIntegratorCommunicationOutcomeResource":{"type":"object","properties":{"Description":{"type":"string"},"IsDeleted":{"type":"boolean"},"GUID":{"format":"uuid","type":"string","example":"00000000-0000-0000-0000-000000000000"}}},"ApiResourceResultCollection[ApiIntegratorCommunicationOutcomeResource]":{"type":"object","properties":{"resource":{"type":"array","items":{"$ref":"#/definitions/ApiIntegratorCommunicationOutcomeResource"}},"extra":{"$ref":"#/definitions/ApiResourceResultCollectionExtra"},"errors":{"$ref":"#/definitions/ApiResourceErrors"},"status":{"$ref":"#/definitions/ApiResourceStatus"}}},"ApiResourceResultEntity[ApiIntegratorCommunicationTypeResource]":{"type":"object","properties":{"resource":{"$ref":"#/definitions/ApiIntegratorCommunicationTypeResource"},"links":{"$ref":"#/definitions/ApiResourceResultEntityLinks"},"extra":{"$ref":"#/definitions/ApiResourceResultEntityExtra"},"errors":{"$ref":"#/definitions/ApiResourceErrors"},"status":{"$ref":"#/definitions/ApiResourceStatus"}}},"ApiIntegratorCommunicationTypeResource":{"type":"object","properties":{"Description":{"type":"string"},"IsDeleted":{"type":"boolean"},"GUID":{"format":"uuid","type":"string","example":"00000000-0000-0000-0000-000000000000"}}},"ApiResourceResultCollection[ApiIntegratorCommunicationTypeResource]":{"type":"object","properties":{"resource":{"type":"array","items":{"$ref":"#/definitions/ApiIntegratorCommunicationTypeResource"}},"extra":{"$ref":"#/definitions/ApiResourceResultCollectionExtra"},"errors":{"$ref":"#/definitions/ApiResourceErrors"},"status":{"$ref":"#/definitions/ApiResourceStatus"}}},"ApiResourceChanges[ApiIntegratorCompanyResource]":{"type":"object","properties":{"resource":{"type":"array","items":{"$ref":"#/definitions/ApiIntegratorCompanyResource"}},"extra":{"$ref":"#/definitions/ApiResourceResultUpdatesExtra"},"errors":{"$ref":"#/definitions/ApiResourceErrors"},"status":{"$ref":"#/definitions/ApiResourceStatus"}}},"ApiIntegratorCompanyResource":{"type":"object","properties":{"Description":{"type":"string"},"IsDeleted":{"type":"boolean"},"AnalysisCode":{"type":"string"},"CurrencyListItem":{"$ref":"#/definitions/ApiIntegratorListItemResource"},"GUID":{"format":"uuid","type":"string","example":"00000000-0000-0000-0000-000000000000"}}},"ApiResourceResultEntity[ApiIntegratorCompanyResource]":{"type":"object","properties":{"resource":{"$ref":"#/definitions/ApiIntegratorCompanyResource"},"links":{"$ref":"#/definitions/ApiResourceResultEntityLinks"},"extra":{"$ref":"#/definitions/ApiResourceResultEntityExtra"},"errors":{"$ref":"#/definitions/ApiResourceErrors"},"status":{"$ref":"#/definitions/ApiResourceStatus"}}},"ApiResourceResultCollection[ApiIntegratorCompanyResource]":{"type":"object","properties":{"resource":{"type":"array","items":{"$ref":"#/definitions/ApiIntegratorCompanyResource"}},"extra":{"$ref":"#/definitions/ApiResourceResultCollectionExtra"},"errors":{"$ref":"#/definitions/ApiResourceErrors"},"status":{"$ref":"#/definitions/ApiResourceStatus"}}},"ApiResourceResultEntity[ApiIntegratorOutletAnalysisCodeResource]":{"type":"object","properties":{"resource":{"$ref":"#/definitions/ApiIntegratorOutletAnalysisCodeResource"},"links":{"$ref":"#/definitions/ApiResourceResultEntityLinks"},"extra":{"$ref":"#/definitions/ApiResourceResultEntityExtra"},"errors":{"$ref":"#/definitions/ApiResourceErrors"},"status":{"$ref":"#/definitions/ApiResourceStatus"}}},"ApiIntegratorOutletAnalysisCodeResource":{"type":"object","properties":{"Description":{"type":"string"},"IsDeleted":{"type":"boolean"},"GUID":{"format":"uuid","type":"string","example":"00000000-0000-0000-0000-000000000000"}}},"ApiResourceResultCollection[ApiIntegratorOutletAnalysisCodeResource]":{"type":"object","properties":{"resource":{"type":"array","items":{"$ref":"#/definitions/ApiIntegratorOutletAnalysisCodeResource"}},"extra":{"$ref":"#/definitions/ApiResourceResultCollectionExtra"},"errors":{"$ref":"#/definitions/ApiResourceErrors"},"status":{"$ref":"#/definitions/ApiResourceStatus"}}},"ApiResourceChanges[ApiIntegratorContactResource]":{"type":"object","properties":{"resource":{"type":"array","items":{"$ref":"#/definitions/ApiIntegratorContactResource"}},"extra":{"$ref":"#/definitions/ApiResourceResultUpdatesExtra"},"errors":{"$ref":"#/definitions/ApiResourceErrors"},"status":{"$ref":"#/definitions/ApiResourceStatus"}}},"ApiIntegratorContactResource":{"type":"object","properties":{"Salutation":{"type":"string"},"Forename":{"type":"string"},"Surname":{"type":"string"},"JobTitle":{"type":"string"},"ActivationCode":{"type":"string"},"RelatedCustomerGuid":{"format":"uuid","type":"string","example":"00000000-0000-0000-0000-000000000000"},"RelatedLocationGuids":{"type":"array","items":{"$ref":"#/definitions/ApiIntegratorLocationContactResource"}},"ContactMethods":{"$ref":"#/definitions/ApiIntegratorContactMethodsResource"},"ContactRegistrationStatusListItem":{"$ref":"#/definitions/ApiIntegratorListItemResource"},"AccessGroupListItem":{"$ref":"#/definitions/ApiIntegratorListItemResource"},"PinCode":{"type":"string"},"ContactPassword":{"type":"string"},"ConfirmContactPassword":{"type":"string"},"ContactTypeListItems":{"type":"array","items":{"$ref":"#/definitions/ApiIntegratorContactContactTypeResource"}},"RelatedLocationGuidFilter":{"format":"uuid","type":"string","example":"00000000-0000-0000-0000-000000000000"},"IsDeleted":{"type":"boolean"},"GUID":{"format":"uuid","type":"string","example":"00000000-0000-0000-0000-000000000000"}}},"ApiIntegratorLocationContactResource":{"type":"object","properties":{"RelatedLocationGuid":{"format":"uuid","type":"string","example":"00000000-0000-0000-0000-000000000000"},"IsPrimary":{"type":"boolean"},"Guid":{"format":"uuid","type":"string","example":"00000000-0000-0000-0000-000000000000"}}},"ApiIntegratorContactMethodsResource":{"type":"object","properties":{"TelNo":{"type":"string"},"OtherTelNo":{"type":"string"},"Email":{"type":"string"}}},"ApiIntegratorContactContactTypeResource":{"type":"object","properties":{"ContactTypeListItem":{"$ref":"#/definitions/ApiIntegratorListItemResource"}}},"ApiResourceResultEntity[ApiIntegratorContactResource]":{"type":"object","properties":{"resource":{"$ref":"#/definitions/ApiIntegratorContactResource"},"links":{"$ref":"#/definitions/ApiResourceResultEntityLinks"},"extra":{"$ref":"#/definitions/ApiResourceResultEntityExtra"},"errors":{"$ref":"#/definitions/ApiResourceErrors"},"status":{"$ref":"#/definitions/ApiResourceStatus"}}},"ApiResourceResultCollection[ApiIntegratorContactResource]":{"type":"object","properties":{"resource":{"type":"array","items":{"$ref":"#/definitions/ApiIntegratorContactResource"}},"extra":{"$ref":"#/definitions/ApiResourceResultCollectionExtra"},"errors":{"$ref":"#/definitions/ApiResourceErrors"},"status":{"$ref":"#/definitions/ApiResourceStatus"}}},"ApiResourceResultEntity[ApiIntegratorContactRegistrationStatusResource]":{"type":"object","properties":{"resource":{"$ref":"#/definitions/ApiIntegratorContactRegistrationStatusResource"},"links":{"$ref":"#/definitions/ApiResourceResultEntityLinks"},"extra":{"$ref":"#/definitions/ApiResourceResultEntityExtra"},"errors":{"$ref":"#/definitions/ApiResourceErrors"},"status":{"$ref":"#/definitions/ApiResourceStatus"}}},"ApiIntegratorContactRegistrationStatusResource":{"type":"object","properties":{"Description":{"type":"string"},"GUID":{"format":"uuid","type":"string","example":"00000000-0000-0000-0000-000000000000"}}},"ApiResourceResultCollection[ApiIntegratorContactRegistrationStatusResource]":{"type":"object","properties":{"resource":{"type":"array","items":{"$ref":"#/definitions/ApiIntegratorContactRegistrationStatusResource"}},"extra":{"$ref":"#/definitions/ApiResourceResultCollectionExtra"},"errors":{"$ref":"#/definitions/ApiResourceErrors"},"status":{"$ref":"#/definitions/ApiResourceStatus"}}},"ApiResourceResultEntity[ApiIntegratorContactTypeResource]":{"type":"object","properties":{"resource":{"$ref":"#/definitions/ApiIntegratorContactTypeResource"},"links":{"$ref":"#/definitions/ApiResourceResultEntityLinks"},"extra":{"$ref":"#/definitions/ApiResourceResultEntityExtra"},"errors":{"$ref":"#/definitions/ApiResourceErrors"},"status":{"$ref":"#/definitions/ApiResourceStatus"}}},"ApiIntegratorContactTypeResource":{"type":"object","properties":{"Description":{"type":"string"},"GUID":{"format":"uuid","type":"string","example":"00000000-0000-0000-0000-000000000000"}}},"ApiResourceResultCollection[ApiIntegratorContactTypeResource]":{"type":"object","properties":{"resource":{"type":"array","items":{"$ref":"#/definitions/ApiIntegratorContactTypeResource"}},"extra":{"$ref":"#/definitions/ApiResourceResultCollectionExtra"},"errors":{"$ref":"#/definitions/ApiResourceErrors"},"status":{"$ref":"#/definitions/ApiResourceStatus"}}},"ApiResourceChanges[ApiIntegratorContainerResource]":{"type":"object","properties":{"resource":{"type":"array","items":{"$ref":"#/definitions/ApiIntegratorContainerResource"}},"extra":{"$ref":"#/definitions/ApiResourceResultUpdatesExtra"},"errors":{"$ref":"#/definitions/ApiResourceErrors"},"status":{"$ref":"#/definitions/ApiResourceStatus"}}},"ApiIntegratorContainerResource":{"type":"object","properties":{"IsDeleted":{"type":"boolean"},"IsCommercial":{"type":"boolean"},"IsStoplisted":{"type":"boolean"},"TipLocationListItem":{"$ref":"#/definitions/ApiIntegratorListItemResource"},"ContainerStatusListItem":{"$ref":"#/definitions/ApiIntegratorListItemResource"},"ContainerTypeListItem":{"$ref":"#/definitions/ApiIntegratorListItemResource"},"LastChangeReasonListItem":{"$ref":"#/definitions/ApiIntegratorListItemResource"},"CompanyOutletListItem":{"$ref":"#/definitions/ApiIntegratorListItemResource"},"Manufacture":{"$ref":"#/definitions/ApiIntegratorContainerManufactureResource"},"Geo":{"$ref":"#/definitions/ApiIntegratorContainerGeoResource"},"Note":{"type":"string"},"SerialNo":{"type":"string"},"Tag":{"type":"string"},"GUID":{"format":"uuid","type":"string","example":"00000000-0000-0000-0000-000000000000"}}},"ApiIntegratorContainerManufactureResource":{"type":"object","properties":{"DateOfDelivery":{"format":"localDate","type":"string","example":"2000-01-01"},"DateOfManufacture":{"format":"localDate","type":"string","example":"2000-01-01"},"WarrantyEndDate":{"format":"localDate","type":"string","example":"2000-01-01"},"RelatedSupplierSiteGuid":{"format":"uuid","type":"string","example":"00000000-0000-0000-0000-000000000000"},"RelatedAppliedCostGuid":{"format":"uuid","type":"string","example":"00000000-0000-0000-0000-000000000000"}}},"ApiIntegratorContainerGeoResource":{"type":"object","properties":{"Latitude":{"format":"double","type":"number"},"Longitude":{"format":"double","type":"number"}}},"ApiResourceResultEntity[ApiIntegratorContainerResource]":{"type":"object","properties":{"resource":{"$ref":"#/definitions/ApiIntegratorContainerResource"},"links":{"$ref":"#/definitions/ApiResourceResultEntityLinks"},"extra":{"$ref":"#/definitions/ApiResourceResultEntityExtra"},"errors":{"$ref":"#/definitions/ApiResourceErrors"},"status":{"$ref":"#/definitions/ApiResourceStatus"}}},"ApiResourceResultCollection[ApiIntegratorContainerResource]":{"type":"object","properties":{"resource":{"type":"array","items":{"$ref":"#/definitions/ApiIntegratorContainerResource"}},"extra":{"$ref":"#/definitions/ApiResourceResultCollectionExtra"},"errors":{"$ref":"#/definitions/ApiResourceErrors"},"status":{"$ref":"#/definitions/ApiResourceStatus"}}},"ApiResourceResultEntity[ApiIntegratorContainerCategoryResource]":{"type":"object","properties":{"resource":{"$ref":"#/definitions/ApiIntegratorContainerCategoryResource"},"links":{"$ref":"#/definitions/ApiResourceResultEntityLinks"},"extra":{"$ref":"#/definitions/ApiResourceResultEntityExtra"},"errors":{"$ref":"#/definitions/ApiResourceErrors"},"status":{"$ref":"#/definitions/ApiResourceStatus"}}},"ApiIntegratorContainerCategoryResource":{"type":"object","properties":{"Description":{"type":"string"},"IsDeleted":{"type":"boolean"},"AnalysisCode":{"type":"string"},"GUID":{"format":"uuid","type":"string","example":"00000000-0000-0000-0000-000000000000"}}},"ApiResourceResultCollection[ApiIntegratorContainerCategoryResource]":{"type":"object","properties":{"resource":{"type":"array","items":{"$ref":"#/definitions/ApiIntegratorContainerCategoryResource"}},"extra":{"$ref":"#/definitions/ApiResourceResultCollectionExtra"},"errors":{"$ref":"#/definitions/ApiResourceErrors"},"status":{"$ref":"#/definitions/ApiResourceStatus"}}},"ApiResourceResultEntity[ApiIntegratorContainerTypeResource]":{"type":"object","properties":{"resource":{"$ref":"#/definitions/ApiIntegratorContainerTypeResource"},"links":{"$ref":"#/definitions/ApiResourceResultEntityLinks"},"extra":{"$ref":"#/definitions/ApiResourceResultEntityExtra"},"errors":{"$ref":"#/definitions/ApiResourceErrors"},"status":{"$ref":"#/definitions/ApiResourceStatus"}}},"ApiIntegratorContainerTypeResource":{"type":"object","properties":{"Description":{"type":"string"},"IsDeleted":{"type":"boolean"},"ExternalDescription":{"type":"string"},"AnalysisCode":{"type":"string"},"ShortName":{"type":"string"},"ContainerCategoryListItem":{"$ref":"#/definitions/ApiIntegratorListItemResource"},"TrackingUnitOfMeasureListItem":{"$ref":"#/definitions/ApiIntegratorListItemResource"},"ItemCode":{"type":"string"},"Size":{"format":"double","type":"number"},"TareWeight":{"format":"double","type":"number"},"HandlingTime":{"format":"int32","type":"integer"},"GUID":{"format":"uuid","type":"string","example":"00000000-0000-0000-0000-000000000000"}}},"ApiResourceResultCollection[ApiIntegratorContainerTypeResource]":{"type":"object","properties":{"resource":{"type":"array","items":{"$ref":"#/definitions/ApiIntegratorContainerTypeResource"}},"extra":{"$ref":"#/definitions/ApiResourceResultCollectionExtra"},"errors":{"$ref":"#/definitions/ApiResourceErrors"},"status":{"$ref":"#/definitions/ApiResourceStatus"}}},"ApiResourceResultEntity[ApiIntegratorContractResource]":{"type":"object","properties":{"resource":{"$ref":"#/definitions/ApiIntegratorContractResource"},"links":{"$ref":"#/definitions/ApiResourceResultEntityLinks"},"extra":{"$ref":"#/definitions/ApiResourceResultEntityExtra"},"errors":{"$ref":"#/definitions/ApiResourceErrors"},"status":{"$ref":"#/definitions/ApiResourceStatus"}}},"ApiIntegratorContractResource":{"type":"object","properties":{"StartDate":{"format":"localDate","type":"string","example":"2000-01-01"},"CreditLimit":{"format":"double","type":"number"},"BalanceMigrated":{"format":"double","type":"number"},"VATExemptNumber":{"type":"string"},"VATExemptionExpiryDate":{"format":"localDate","type":"string","example":"2000-01-01"},"VATRegistrationNumber":{"type":"string"},"InvoiceCycleListItem":{"$ref":"#/definitions/ApiIntegratorListItemResource"},"DepartmentListItem":{"$ref":"#/definitions/ApiIntegratorListItemResource"},"ContractStatusListItem":{"$ref":"#/definitions/ApiIntegratorListItemResource"},"PaymentTypeListItem":{"$ref":"#/definitions/ApiIntegratorListItemResource"},"PaymentTermListItem":{"$ref":"#/definitions/ApiIntegratorListItemResource"},"InvoiceFrequencyTermListItem":{"$ref":"#/definitions/ApiIntegratorListItemResource"},"RebateInvoiceFrequencyTermListItem":{"$ref":"#/definitions/ApiIntegratorListItemResource"},"GUID":{"format":"uuid","type":"string","example":"00000000-0000-0000-0000-000000000000"}}},"ApiResourceResultCollection[ApiIntegratorContractResource]":{"type":"object","properties":{"resource":{"type":"array","items":{"$ref":"#/definitions/ApiIntegratorContractResource"}},"extra":{"$ref":"#/definitions/ApiResourceResultCollectionExtra"},"errors":{"$ref":"#/definitions/ApiResourceErrors"},"status":{"$ref":"#/definitions/ApiResourceStatus"}}},"ApiResourceResultEntity[ApiIntegratorContractStatusResource]":{"type":"object","properties":{"resource":{"$ref":"#/definitions/ApiIntegratorContractStatusResource"},"links":{"$ref":"#/definitions/ApiResourceResultEntityLinks"},"extra":{"$ref":"#/definitions/ApiResourceResultEntityExtra"},"errors":{"$ref":"#/definitions/ApiResourceErrors"},"status":{"$ref":"#/definitions/ApiResourceStatus"}}},"ApiIntegratorContractStatusResource":{"type":"object","properties":{"Description":{"type":"string"},"IsDeleted":{"type":"boolean"},"GUID":{"format":"uuid","type":"string","example":"00000000-0000-0000-0000-000000000000"}}},"ApiResourceResultCollection[ApiIntegratorContractStatusResource]":{"type":"object","properties":{"resource":{"type":"array","items":{"$ref":"#/definitions/ApiIntegratorContractStatusResource"}},"extra":{"$ref":"#/definitions/ApiResourceResultCollectionExtra"},"errors":{"$ref":"#/definitions/ApiResourceErrors"},"status":{"$ref":"#/definitions/ApiResourceStatus"}}},"ApiResourceChanges[ApiIntegratorCostAgreementResource]":{"type":"object","properties":{"resource":{"type":"array","items":{"$ref":"#/definitions/ApiIntegratorCostAgreementResource"}},"extra":{"$ref":"#/definitions/ApiResourceResultUpdatesExtra"},"errors":{"$ref":"#/definitions/ApiResourceErrors"},"status":{"$ref":"#/definitions/ApiResourceStatus"}}},"ApiIntegratorCostAgreementResource":{"type":"object","properties":{"Description":{"type":"string"},"IsDefault":{"type":"boolean"},"AgreementNumber":{"type":"string"},"CostCentreListItem":{"$ref":"#/definitions/ApiIntegratorListItemResource"},"RelatedSupplierGuid":{"format":"uuid","type":"string","example":"00000000-0000-0000-0000-000000000000"},"EndDate":{"format":"localDate","type":"string","example":"2000-01-01"},"EndReasonListItem":{"$ref":"#/definitions/ApiIntegratorListItemResource"},"IsAutoRenewal":{"type":"boolean"},"IsForAllSites":{"type":"boolean"},"PrimaryServiceListItem":{"$ref":"#/definitions/ApiIntegratorListItemResource"},"ReviewDate":{"format":"localDate","type":"string","example":"2000-01-01"},"StartDate":{"format":"localDate","type":"string","example":"2000-01-01"},"CompanyOutletListItems":{"type":"array","items":{"$ref":"#/definitions/ApiIntegratorCostAgreementCompanyOutletResource"}},"RelatedSupplierSiteGuids":{"type":"array","items":{"$ref":"#/definitions/ApiIntegratorCostAgreementRelatedSupplierSiteResource"}},"RelatedServiceAgreements":{"type":"array","items":{"$ref":"#/definitions/ApiIntegratorCostAgreementServiceAgreementResource"}},"Costs":{"type":"array","items":{"$ref":"#/definitions/ApiIntegratorCostAgreementCostResource"}},"RelatedSupplierSiteGuid":{"format":"uuid","type":"string","example":"00000000-0000-0000-0000-000000000000"},"RelatedLocationSourceGuid":{"format":"uuid","type":"string","example":"00000000-0000-0000-0000-000000000000"},"RelatedLocationDestinationGuid":{"format":"uuid","type":"string","example":"00000000-0000-0000-0000-000000000000"},"RelatedCostGuidFilter":{"format":"uuid","type":"string","example":"00000000-0000-0000-0000-000000000000"},"RelatedServiceAgreementGuidFilter":{"format":"uuid","type":"string","example":"00000000-0000-0000-0000-000000000000"},"GUID":{"format":"uuid","type":"string","example":"00000000-0000-0000-0000-000000000000"}}},"ApiIntegratorCostAgreementCompanyOutletResource":{"type":"object","properties":{"CompanyOutletListItem":{"$ref":"#/definitions/ApiIntegratorListItemResource"}}},"ApiIntegratorCostAgreementRelatedSupplierSiteResource":{"type":"object","properties":{"RelatedSupplierSiteGuid":{"format":"uuid","type":"string","example":"00000000-0000-0000-0000-000000000000"}}},"ApiIntegratorCostAgreementServiceAgreementResource":{"type":"object","properties":{"Guid":{"format":"uuid","type":"string","example":"00000000-0000-0000-0000-000000000000"},"IsDeleted":{"type":"boolean"},"RelatedServiceAgreementGuid":{"format":"uuid","type":"string","example":"00000000-0000-0000-0000-000000000000"}}},"ApiIntegratorCostAgreementCostResource":{"type":"object","properties":{"Guid":{"format":"uuid","type":"string","example":"00000000-0000-0000-0000-000000000000"},"IsDeleted":{"type":"boolean"},"DefaultActionListItem":{"$ref":"#/definitions/ApiIntegratorListItemResource"},"ServiceFrequencyListItem":{"$ref":"#/definitions/ApiIntegratorListItemResource"},"ContainerTypeListItem":{"$ref":"#/definitions/ApiIntegratorListItemResource"},"RentTermListItem":{"$ref":"#/definitions/ApiIntegratorListItemResource"},"MaterialListItem":{"$ref":"#/definitions/ApiIntegratorListItemResource"},"RelatedLocationSourceGuid":{"format":"uuid","type":"string","example":"00000000-0000-0000-0000-000000000000"},"RelatedLocationDestinationGuid":{"format":"uuid","type":"string","example":"00000000-0000-0000-0000-000000000000"},"EffectiveFrom":{"format":"localDate","type":"string","example":"2000-01-01"},"Amount":{"$ref":"#/definitions/ApiIntegratorCostAgreementAmountResource"}}},"ApiIntegratorCostAgreementAmountResource":{"type":"object","properties":{"Cost":{"format":"double","type":"number"},"MaximumCost":{"format":"double","type":"number"},"MinimumCost":{"format":"double","type":"number"},"Allowance":{"format":"double","type":"number"},"VATListItem":{"$ref":"#/definitions/ApiIntegratorListItemResource"},"TaxTemplateCollectionListItem":{"$ref":"#/definitions/ApiIntegratorListItemResource"}}},"ApiResourceResultEntity[ApiIntegratorCostAgreementResource]":{"type":"object","properties":{"resource":{"$ref":"#/definitions/ApiIntegratorCostAgreementResource"},"links":{"$ref":"#/definitions/ApiResourceResultEntityLinks"},"extra":{"$ref":"#/definitions/ApiResourceResultEntityExtra"},"errors":{"$ref":"#/definitions/ApiResourceErrors"},"status":{"$ref":"#/definitions/ApiResourceStatus"}}},"ApiResourceResultCollection[ApiIntegratorCostAgreementResource]":{"type":"object","properties":{"resource":{"type":"array","items":{"$ref":"#/definitions/ApiIntegratorCostAgreementResource"}},"extra":{"$ref":"#/definitions/ApiResourceResultCollectionExtra"},"errors":{"$ref":"#/definitions/ApiResourceErrors"},"status":{"$ref":"#/definitions/ApiResourceStatus"}}},"ApiResourceResultEntity[ApiIntegratorCostCentreResource]":{"type":"object","properties":{"resource":{"$ref":"#/definitions/ApiIntegratorCostCentreResource"},"links":{"$ref":"#/definitions/ApiResourceResultEntityLinks"},"extra":{"$ref":"#/definitions/ApiResourceResultEntityExtra"},"errors":{"$ref":"#/definitions/ApiResourceErrors"},"status":{"$ref":"#/definitions/ApiResourceStatus"}}},"ApiIntegratorCostCentreResource":{"type":"object","properties":{"Description":{"type":"string"},"AnalysisCode":{"type":"string"},"GUID":{"format":"uuid","type":"string","example":"00000000-0000-0000-0000-000000000000"}}},"ApiResourceResultCollection[ApiIntegratorCostCentreResource]":{"type":"object","properties":{"resource":{"type":"array","items":{"$ref":"#/definitions/ApiIntegratorCostCentreResource"}},"extra":{"$ref":"#/definitions/ApiResourceResultCollectionExtra"},"errors":{"$ref":"#/definitions/ApiResourceErrors"},"status":{"$ref":"#/definitions/ApiResourceStatus"}}},"ApiResourceResultEntity[ApiIntegratorCountryResource]":{"type":"object","properties":{"resource":{"$ref":"#/definitions/ApiIntegratorCountryResource"},"links":{"$ref":"#/definitions/ApiResourceResultEntityLinks"},"extra":{"$ref":"#/definitions/ApiResourceResultEntityExtra"},"errors":{"$ref":"#/definitions/ApiResourceErrors"},"status":{"$ref":"#/definitions/ApiResourceStatus"}}},"ApiIntegratorCountryResource":{"type":"object","properties":{"Description":{"type":"string"},"Abbreviation":{"type":"string"},"ISO3166Numeric":{"type":"string"},"ISOThreeChar":{"type":"string"},"ISOTwoChar":{"type":"string"},"IsDefault":{"type":"boolean"},"IsDeleted":{"type":"boolean"},"GUID":{"format":"uuid","type":"string","example":"00000000-0000-0000-0000-000000000000"}}},"ApiResourceResultCollection[ApiIntegratorCountryResource]":{"type":"object","properties":{"resource":{"type":"array","items":{"$ref":"#/definitions/ApiIntegratorCountryResource"}},"extra":{"$ref":"#/definitions/ApiResourceResultCollectionExtra"},"errors":{"$ref":"#/definitions/ApiResourceErrors"},"status":{"$ref":"#/definitions/ApiResourceStatus"}}},"ApiResourceChanges[ApiIntegratorCreditNoteResource]":{"type":"object","properties":{"resource":{"type":"array","items":{"$ref":"#/definitions/ApiIntegratorCreditNoteResource"}},"extra":{"$ref":"#/definitions/ApiResourceResultUpdatesExtra"},"errors":{"$ref":"#/definitions/ApiResourceErrors"},"status":{"$ref":"#/definitions/ApiResourceStatus"}}},"ApiIntegratorCreditNoteResource":{"type":"object","properties":{"RelatedCustomerGuid":{"format":"uuid","type":"string","example":"00000000-0000-0000-0000-000000000000"},"CreditNoteNumber":{"type":"string"},"Reference":{"type":"string"},"ExternalReference":{"type":"string"},"IsCreditJournal":{"type":"boolean"},"IsTaxAdjustment":{"type":"boolean"},"IsApproved":{"type":"boolean"},"Notes":{"type":"string"},"IsForClosingCustomer":{"type":"boolean"},"WriteOffReasonListItem":{"$ref":"#/definitions/ApiIntegratorListItemResource"},"AccountingPeriodListItem":{"$ref":"#/definitions/ApiIntegratorListItemResource"},"ReasonListItem":{"$ref":"#/definitions/ApiIntegratorListItemResource"},"DepartmentListItem":{"$ref":"#/definitions/ApiIntegratorListItemResource"},"OutletListItem":{"$ref":"#/definitions/ApiIntegratorListItemResource"},"Amount":{"$ref":"#/definitions/ApiIntegratorCreditNoteAmountResource"},"VATListItem":{"$ref":"#/definitions/ApiIntegratorListItemResource"},"VATListItems":{"type":"array","items":{"$ref":"#/definitions/ApiIntegratorListItemResource"}},"RelatedLocationInvoiceGuid":{"format":"uuid","type":"string","example":"00000000-0000-0000-0000-000000000000"},"RelatedInvoiceGuidFilter":{"format":"uuid","type":"string","example":"00000000-0000-0000-0000-000000000000"},"RelatedInvoiceDetailGuidFilter":{"format":"uuid","type":"string","example":"00000000-0000-0000-0000-000000000000"},"RelatedUserDeallocatedByGuidFilter":{"format":"uuid","type":"string","example":"00000000-0000-0000-0000-000000000000"},"RelatedCreditNoteAllocationGuidFilter":{"format":"uuid","type":"string","example":"00000000-0000-0000-0000-000000000000"},"PrintAddress":{"$ref":"#/definitions/ApiIntegratorCreditNoteAddressResource"},"Details":{"type":"array","items":{"$ref":"#/definitions/ApiIntegratorCreditNoteDetailResource"}},"Allocations":{"type":"array","items":{"$ref":"#/definitions/ApiIntegratorCreditNoteInvoiceResource"}},"Deallocations":{"type":"array","items":{"$ref":"#/definitions/ApiIntegratorCreditNoteDeallocationResource"}},"ReceivedDate":{"format":"localDate","type":"string","example":"2000-01-01"},"InputDate":{"format":"localDate","type":"string","example":"2000-01-01"},"ExportedDate":{"format":"localDate","type":"string","example":"2000-01-01"},"RelatedBlobHashes":{"type":"array","items":{"$ref":"#/definitions/ApiIntegratorCreditNoteOutputResource"}},"GUID":{"format":"uuid","type":"string","example":"00000000-0000-0000-0000-000000000000"}}},"ApiIntegratorCreditNoteAmountResource":{"type":"object","properties":{"ExchangeRate":{"$ref":"#/definitions/ApiIntegratorCreditNoteAmountExchangeRateResource"},"Amount":{"format":"double","type":"number"},"BaseAmount":{"format":"double","type":"number"}}},"ApiIntegratorCreditNoteAddressResource":{"type":"object","properties":{"HouseNumber":{"type":"string"},"Address1":{"type":"string"},"Address2":{"type":"string"},"Address3":{"type":"string"},"Address4":{"type":"string"},"Address5":{"type":"string"},"Postcode":{"type":"string"}}},"ApiIntegratorCreditNoteDetailResource":{"type":"object","properties":{"SiteName":{"type":"string"},"SiteAddress":{"$ref":"#/definitions/ApiIntegratorCreditNoteAddressResource"},"Reference":{"type":"string"},"ServiceListItem":{"$ref":"#/definitions/ApiIntegratorListItemResource"},"ActionListItem":{"$ref":"#/definitions/ApiIntegratorListItemResource"},"ContainerTypeListItem":{"$ref":"#/definitions/ApiIntegratorListItemResource"},"MaterialTypeListItem":{"$ref":"#/definitions/ApiIntegratorListItemResource"},"OutletListItem":{"$ref":"#/definitions/ApiIntegratorListItemResource"},"DepartmentListItem":{"$ref":"#/definitions/ApiIntegratorListItemResource"},"StartDate":{"format":"localDate","type":"string","example":"2000-01-01"},"EndDate":{"format":"localDate","type":"string","example":"2000-01-01"},"Quantity":{"format":"double","type":"number"},"Volume":{"format":"double","type":"number"},"NetWeight":{"format":"double","type":"number"},"Amount":{"format":"double","type":"number"},"AmountIncVAT":{"format":"double","type":"number"},"RelatedInvoiceDetailGuid":{"format":"uuid","type":"string","example":"00000000-0000-0000-0000-000000000000"},"IsDeleted":{"type":"boolean"},"Notes":{"type":"string"},"Guid":{"format":"uuid","type":"string","example":"00000000-0000-0000-0000-000000000000"}}},"ApiIntegratorCreditNoteInvoiceResource":{"type":"object","properties":{"Amount":{"format":"double","type":"number"},"DateInput":{"format":"dateTime","type":"string","example":"2000-01-01 00:00:00.000"},"IsDeleted":{"type":"boolean"},"RelatedInvoiceGuid":{"format":"uuid","type":"string","example":"00000000-0000-0000-0000-000000000000"},"AccountingPeriodListItem":{"$ref":"#/definitions/ApiIntegratorListItemResource"},"Guid":{"format":"uuid","type":"string","example":"00000000-0000-0000-0000-000000000000"}}},"ApiIntegratorCreditNoteDeallocationResource":{"type":"object","properties":{"Amount":{"format":"double","type":"number"},"DateDeallocated":{"format":"dateTime","type":"string","example":"2000-01-01 00:00:00.000"},"DateInput":{"format":"dateTime","type":"string","example":"2000-01-01 00:00:00.000"},"IsDeleted":{"type":"boolean"},"RelatedUserDeallocatedByGuid":{"format":"uuid","type":"string","example":"00000000-0000-0000-0000-000000000000"},"RelatedCreditNoteAllocationGuid":{"format":"uuid","type":"string","example":"00000000-0000-0000-0000-000000000000"},"RelatedInvoiceGuid":{"format":"uuid","type":"string","example":"00000000-0000-0000-0000-000000000000"},"AllocationAccountingPeriodListItem":{"$ref":"#/definitions/ApiIntegratorListItemResource"},"DeallocationAccountingPeriodListItem":{"$ref":"#/definitions/ApiIntegratorListItemResource"},"Guid":{"format":"uuid","type":"string","example":"00000000-0000-0000-0000-000000000000"}}},"ApiIntegratorCreditNoteOutputResource":{"type":"object","properties":{"Hash":{"type":"string"}}},"ApiIntegratorCreditNoteAmountExchangeRateResource":{"type":"object","properties":{"Rate":{"format":"double","type":"number"},"ExchangeDate":{"format":"localDate","type":"string","example":"2000-01-01"},"BaseCurrencyListItem":{"$ref":"#/definitions/ApiIntegratorListItemResource"},"ExchangeCurrencyListItem":{"$ref":"#/definitions/ApiIntegratorListItemResource"}}},"ApiResourceResultEntity[ApiIntegratorCreditNoteResource]":{"type":"object","properties":{"resource":{"$ref":"#/definitions/ApiIntegratorCreditNoteResource"},"links":{"$ref":"#/definitions/ApiResourceResultEntityLinks"},"extra":{"$ref":"#/definitions/ApiResourceResultEntityExtra"},"errors":{"$ref":"#/definitions/ApiResourceErrors"},"status":{"$ref":"#/definitions/ApiResourceStatus"}}},"ApiResourceResultCollection[ApiIntegratorCreditNoteResource]":{"type":"object","properties":{"resource":{"type":"array","items":{"$ref":"#/definitions/ApiIntegratorCreditNoteResource"}},"extra":{"$ref":"#/definitions/ApiResourceResultCollectionExtra"},"errors":{"$ref":"#/definitions/ApiResourceErrors"},"status":{"$ref":"#/definitions/ApiResourceStatus"}}},"ApiResourceChanges[ApiIntegratorCurrencyResource]":{"type":"object","properties":{"resource":{"type":"array","items":{"$ref":"#/definitions/ApiIntegratorCurrencyResource"}},"extra":{"$ref":"#/definitions/ApiResourceResultUpdatesExtra"},"errors":{"$ref":"#/definitions/ApiResourceErrors"},"status":{"$ref":"#/definitions/ApiResourceStatus"}}},"ApiIntegratorCurrencyResource":{"type":"object","properties":{"Description":{"type":"string"},"IsDeleted":{"type":"boolean"},"Symbol":{"type":"string"},"IntegrationCode":{"type":"string"},"CurrencyRoundingTypeListItem":{"$ref":"#/definitions/ApiIntegratorListItemResource"},"GUID":{"format":"uuid","type":"string","example":"00000000-0000-0000-0000-000000000000"}}},"ApiResourceResultEntity[ApiIntegratorCurrencyResource]":{"type":"object","properties":{"resource":{"$ref":"#/definitions/ApiIntegratorCurrencyResource"},"links":{"$ref":"#/definitions/ApiResourceResultEntityLinks"},"extra":{"$ref":"#/definitions/ApiResourceResultEntityExtra"},"errors":{"$ref":"#/definitions/ApiResourceErrors"},"status":{"$ref":"#/definitions/ApiResourceStatus"}}},"ApiResourceResultCollection[ApiIntegratorCurrencyResource]":{"type":"object","properties":{"resource":{"type":"array","items":{"$ref":"#/definitions/ApiIntegratorCurrencyResource"}},"extra":{"$ref":"#/definitions/ApiResourceResultCollectionExtra"},"errors":{"$ref":"#/definitions/ApiResourceErrors"},"status":{"$ref":"#/definitions/ApiResourceStatus"}}},"ApiResourceChanges[ApiIntegratorCurrencyRateResource]":{"type":"object","properties":{"resource":{"type":"array","items":{"$ref":"#/definitions/ApiIntegratorCurrencyRateResource"}},"extra":{"$ref":"#/definitions/ApiResourceResultUpdatesExtra"},"errors":{"$ref":"#/definitions/ApiResourceErrors"},"status":{"$ref":"#/definitions/ApiResourceStatus"}}},"ApiIntegratorCurrencyRateResource":{"type":"object","properties":{"FromCurrencyListItem":{"$ref":"#/definitions/ApiIntegratorListItemResource"},"ToCurrencyListItem":{"$ref":"#/definitions/ApiIntegratorListItemResource"},"EffectiveFrom":{"format":"localDate","type":"string","example":"2000-01-01"},"ExchangeRateDivider":{"format":"double","type":"number"},"ExchangeRateMultiplier":{"format":"double","type":"number"},"ExchangeRate":{"format":"double","type":"number"},"ExchangeRateInverse":{"format":"double","type":"number"},"ExchangeRateDisplay":{"format":"double","type":"number"},"IsDeleted":{"type":"boolean"},"GUID":{"format":"uuid","type":"string","example":"00000000-0000-0000-0000-000000000000"}}},"ApiResourceResultEntity[ApiIntegratorCurrencyRateResource]":{"type":"object","properties":{"resource":{"$ref":"#/definitions/ApiIntegratorCurrencyRateResource"},"links":{"$ref":"#/definitions/ApiResourceResultEntityLinks"},"extra":{"$ref":"#/definitions/ApiResourceResultEntityExtra"},"errors":{"$ref":"#/definitions/ApiResourceErrors"},"status":{"$ref":"#/definitions/ApiResourceStatus"}}},"ApiResourceResultCollection[ApiIntegratorCurrencyRateResource]":{"type":"object","properties":{"resource":{"type":"array","items":{"$ref":"#/definitions/ApiIntegratorCurrencyRateResource"}},"extra":{"$ref":"#/definitions/ApiResourceResultCollectionExtra"},"errors":{"$ref":"#/definitions/ApiResourceErrors"},"status":{"$ref":"#/definitions/ApiResourceStatus"}}},"ApiResourceResultEntity[ApiIntegratorCurrencyRoundingTypeResource]":{"type":"object","properties":{"resource":{"$ref":"#/definitions/ApiIntegratorCurrencyRoundingTypeResource"},"links":{"$ref":"#/definitions/ApiResourceResultEntityLinks"},"extra":{"$ref":"#/definitions/ApiResourceResultEntityExtra"},"errors":{"$ref":"#/definitions/ApiResourceErrors"},"status":{"$ref":"#/definitions/ApiResourceStatus"}}},"ApiIntegratorCurrencyRoundingTypeResource":{"type":"object","properties":{"Description":{"type":"string"},"IsDeleted":{"type":"boolean"},"GUID":{"format":"uuid","type":"string","example":"00000000-0000-0000-0000-000000000000"}}},"ApiResourceResultCollection[ApiIntegratorCurrencyRoundingTypeResource]":{"type":"object","properties":{"resource":{"type":"array","items":{"$ref":"#/definitions/ApiIntegratorCurrencyRoundingTypeResource"}},"extra":{"$ref":"#/definitions/ApiResourceResultCollectionExtra"},"errors":{"$ref":"#/definitions/ApiResourceErrors"},"status":{"$ref":"#/definitions/ApiResourceStatus"}}},"ApiResourceChanges[ApiIntegratorCustomerResource]":{"type":"object","properties":{"resource":{"type":"array","items":{"$ref":"#/definitions/ApiIntegratorCustomerResource"}},"extra":{"$ref":"#/definitions/ApiResourceResultUpdatesExtra"},"errors":{"$ref":"#/definitions/ApiResourceErrors"},"status":{"$ref":"#/definitions/ApiResourceStatus"}}},"ApiIntegratorCustomerResource":{"type":"object","properties":{"Name":{"type":"string"},"Reference":{"type":"string"},"ARAccountCode":{"type":"string"},"FederalId":{"type":"string"},"IsInternal":{"type":"boolean"},"ReceiveServiceUpdatesByEmail":{"type":"boolean"},"ReceiveServiceUpdatesByText":{"type":"boolean"},"ReceiveMarketingUpdatesByEmail":{"type":"boolean"},"ReceiveMarketingUpdatesByText":{"type":"boolean"},"CompanyListItem":{"$ref":"#/definitions/ApiIntegratorListItemResource"},"CustomerStateListItem":{"$ref":"#/definitions/ApiIntegratorListItemResource"},"CustomerTypeListItem":{"$ref":"#/definitions/ApiIntegratorListItemResource"},"CustomerCategoryListItem":{"$ref":"#/definitions/ApiIntegratorListItemResource"},"CustomerGroupListItem":{"$ref":"#/definitions/ApiIntegratorListItemResource"},"CurrencyListItem":{"$ref":"#/definitions/ApiIntegratorListItemResource"},"RelatedBlobHashes":{"type":"array","items":{"$ref":"#/definitions/ApiIntegratorCustomerRelatedBlobHashesResource"}},"RelatedReportBlobs":{"type":"array","items":{"$ref":"#/definitions/ApiIntegratorCustomerReportBlobHashesResource"}},"IsResidential":{"type":"boolean"},"AutoArAccountCode":{"$ref":"#/definitions/ApiIntegratorAutoArAccountCodeResource"},"GUID":{"format":"uuid","type":"string","example":"00000000-0000-0000-0000-000000000000"}}},"ApiResourceResultEntity[ApiIntegratorCustomerResource]":{"type":"object","properties":{"resource":{"$ref":"#/definitions/ApiIntegratorCustomerResource"},"links":{"$ref":"#/definitions/ApiResourceResultEntityLinks"},"extra":{"$ref":"#/definitions/ApiResourceResultEntityExtra"},"errors":{"$ref":"#/definitions/ApiResourceErrors"},"status":{"$ref":"#/definitions/ApiResourceStatus"}}},"ApiResourceResultCollection[ApiIntegratorCustomerResource]":{"type":"object","properties":{"resource":{"type":"array","items":{"$ref":"#/definitions/ApiIntegratorCustomerResource"}},"extra":{"$ref":"#/definitions/ApiResourceResultCollectionExtra"},"errors":{"$ref":"#/definitions/ApiResourceErrors"},"status":{"$ref":"#/definitions/ApiResourceStatus"}}},"ApiResourceResultEntity[ApiIntegratorCustomerCategoryResource]":{"type":"object","properties":{"resource":{"$ref":"#/definitions/ApiIntegratorCustomerCategoryResource"},"links":{"$ref":"#/definitions/ApiResourceResultEntityLinks"},"extra":{"$ref":"#/definitions/ApiResourceResultEntityExtra"},"errors":{"$ref":"#/definitions/ApiResourceErrors"},"status":{"$ref":"#/definitions/ApiResourceStatus"}}},"ApiIntegratorCustomerCategoryResource":{"type":"object","properties":{"Description":{"type":"string"},"ShortCode":{"type":"string"},"IsDeleted":{"type":"boolean"},"GUID":{"format":"uuid","type":"string","example":"00000000-0000-0000-0000-000000000000"}}},"ApiResourceResultCollection[ApiIntegratorCustomerCategoryResource]":{"type":"object","properties":{"resource":{"type":"array","items":{"$ref":"#/definitions/ApiIntegratorCustomerCategoryResource"}},"extra":{"$ref":"#/definitions/ApiResourceResultCollectionExtra"},"errors":{"$ref":"#/definitions/ApiResourceErrors"},"status":{"$ref":"#/definitions/ApiResourceStatus"}}},"ApiResourceResultEntity[ApiIntegratorCustomerGroupResource]":{"type":"object","properties":{"resource":{"$ref":"#/definitions/ApiIntegratorCustomerGroupResource"},"links":{"$ref":"#/definitions/ApiResourceResultEntityLinks"},"extra":{"$ref":"#/definitions/ApiResourceResultEntityExtra"},"errors":{"$ref":"#/definitions/ApiResourceErrors"},"status":{"$ref":"#/definitions/ApiResourceStatus"}}},"ApiIntegratorCustomerGroupResource":{"type":"object","properties":{"Description":{"type":"string"},"IsDeleted":{"type":"boolean"},"GUID":{"format":"uuid","type":"string","example":"00000000-0000-0000-0000-000000000000"}}},"ApiResourceResultCollection[ApiIntegratorCustomerGroupResource]":{"type":"object","properties":{"resource":{"type":"array","items":{"$ref":"#/definitions/ApiIntegratorCustomerGroupResource"}},"extra":{"$ref":"#/definitions/ApiResourceResultCollectionExtra"},"errors":{"$ref":"#/definitions/ApiResourceErrors"},"status":{"$ref":"#/definitions/ApiResourceStatus"}}},"ApiResourceResultEntity[ApiIntegratorCustomerSiteStateResource]":{"type":"object","properties":{"resource":{"$ref":"#/definitions/ApiIntegratorCustomerSiteStateResource"},"links":{"$ref":"#/definitions/ApiResourceResultEntityLinks"},"extra":{"$ref":"#/definitions/ApiResourceResultEntityExtra"},"errors":{"$ref":"#/definitions/ApiResourceErrors"},"status":{"$ref":"#/definitions/ApiResourceStatus"}}},"ApiIntegratorCustomerSiteStateResource":{"type":"object","properties":{"Description":{"type":"string"},"IsDeleted":{"type":"boolean"},"GUID":{"format":"uuid","type":"string","example":"00000000-0000-0000-0000-000000000000"}}},"ApiResourceResultCollection[ApiIntegratorCustomerSiteStateResource]":{"type":"object","properties":{"resource":{"type":"array","items":{"$ref":"#/definitions/ApiIntegratorCustomerSiteStateResource"}},"extra":{"$ref":"#/definitions/ApiResourceResultCollectionExtra"},"errors":{"$ref":"#/definitions/ApiResourceErrors"},"status":{"$ref":"#/definitions/ApiResourceStatus"}}},"ApiResourceResultEntity[ApiIntegratorCustomerStateResource]":{"type":"object","properties":{"resource":{"$ref":"#/definitions/ApiIntegratorCustomerStateResource"},"links":{"$ref":"#/definitions/ApiResourceResultEntityLinks"},"extra":{"$ref":"#/definitions/ApiResourceResultEntityExtra"},"errors":{"$ref":"#/definitions/ApiResourceErrors"},"status":{"$ref":"#/definitions/ApiResourceStatus"}}},"ApiIntegratorCustomerStateResource":{"type":"object","properties":{"Description":{"type":"string"},"IsDeleted":{"type":"boolean"},"GUID":{"format":"uuid","type":"string","example":"00000000-0000-0000-0000-000000000000"}}},"ApiResourceResultCollection[ApiIntegratorCustomerStateResource]":{"type":"object","properties":{"resource":{"type":"array","items":{"$ref":"#/definitions/ApiIntegratorCustomerStateResource"}},"extra":{"$ref":"#/definitions/ApiResourceResultCollectionExtra"},"errors":{"$ref":"#/definitions/ApiResourceErrors"},"status":{"$ref":"#/definitions/ApiResourceStatus"}}},"ApiResourceResultEntity[ApiIntegratorCustomerTemplateResource]":{"type":"object","properties":{"resource":{"$ref":"#/definitions/ApiIntegratorCustomerTemplateResource"},"links":{"$ref":"#/definitions/ApiResourceResultEntityLinks"},"extra":{"$ref":"#/definitions/ApiResourceResultEntityExtra"},"errors":{"$ref":"#/definitions/ApiResourceErrors"},"status":{"$ref":"#/definitions/ApiResourceStatus"}}},"ApiIntegratorCustomerTemplateResource":{"type":"object","properties":{"Description":{"type":"string"},"IsDeleted":{"type":"boolean"},"BusinessTypeListItem":{"$ref":"#/definitions/ApiIntegratorListItemResource"},"OutletListItem":{"$ref":"#/definitions/ApiIntegratorListItemResource"},"GUID":{"format":"uuid","type":"string","example":"00000000-0000-0000-0000-000000000000"}}},"ApiResourceResultCollection[ApiIntegratorCustomerTemplateResource]":{"type":"object","properties":{"resource":{"type":"array","items":{"$ref":"#/definitions/ApiIntegratorCustomerTemplateResource"}},"extra":{"$ref":"#/definitions/ApiResourceResultCollectionExtra"},"errors":{"$ref":"#/definitions/ApiResourceErrors"},"status":{"$ref":"#/definitions/ApiResourceStatus"}}},"ApiResourceResultEntity[ApiIntegratorCustomerTypeResource]":{"type":"object","properties":{"resource":{"$ref":"#/definitions/ApiIntegratorCustomerTypeResource"},"links":{"$ref":"#/definitions/ApiResourceResultEntityLinks"},"extra":{"$ref":"#/definitions/ApiResourceResultEntityExtra"},"errors":{"$ref":"#/definitions/ApiResourceErrors"},"status":{"$ref":"#/definitions/ApiResourceStatus"}}},"ApiIntegratorCustomerTypeResource":{"type":"object","properties":{"Description":{"type":"string"},"IsDeleted":{"type":"boolean"},"GUID":{"format":"uuid","type":"string","example":"00000000-0000-0000-0000-000000000000"}}},"ApiResourceResultCollection[ApiIntegratorCustomerTypeResource]":{"type":"object","properties":{"resource":{"type":"array","items":{"$ref":"#/definitions/ApiIntegratorCustomerTypeResource"}},"extra":{"$ref":"#/definitions/ApiResourceResultCollectionExtra"},"errors":{"$ref":"#/definitions/ApiResourceErrors"},"status":{"$ref":"#/definitions/ApiResourceStatus"}}},"ApiResourceResultEntity[ApiIntegratorDayOfOccurrenceInMonthResource]":{"type":"object","properties":{"resource":{"$ref":"#/definitions/ApiIntegratorDayOfOccurrenceInMonthResource"},"links":{"$ref":"#/definitions/ApiResourceResultEntityLinks"},"extra":{"$ref":"#/definitions/ApiResourceResultEntityExtra"},"errors":{"$ref":"#/definitions/ApiResourceErrors"},"status":{"$ref":"#/definitions/ApiResourceStatus"}}},"ApiIntegratorDayOfOccurrenceInMonthResource":{"type":"object","properties":{"Description":{"type":"string"},"GUID":{"format":"uuid","type":"string","example":"00000000-0000-0000-0000-000000000000"}}},"ApiResourceResultCollection[ApiIntegratorDayOfOccurrenceInMonthResource]":{"type":"object","properties":{"resource":{"type":"array","items":{"$ref":"#/definitions/ApiIntegratorDayOfOccurrenceInMonthResource"}},"extra":{"$ref":"#/definitions/ApiResourceResultCollectionExtra"},"errors":{"$ref":"#/definitions/ApiResourceErrors"},"status":{"$ref":"#/definitions/ApiResourceStatus"}}},"ApiResourceResultEntity[ApiIntegratorDayOfWeekResource]":{"type":"object","properties":{"resource":{"$ref":"#/definitions/ApiIntegratorDayOfWeekResource"},"links":{"$ref":"#/definitions/ApiResourceResultEntityLinks"},"extra":{"$ref":"#/definitions/ApiResourceResultEntityExtra"},"errors":{"$ref":"#/definitions/ApiResourceErrors"},"status":{"$ref":"#/definitions/ApiResourceStatus"}}},"ApiIntegratorDayOfWeekResource":{"type":"object","properties":{"DayOfWeek":{"type":"string"},"Descriminator":{"format":"int32","type":"integer"},"DatePartValue":{"format":"int32","type":"integer"},"GUID":{"format":"uuid","type":"string","example":"00000000-0000-0000-0000-000000000000"}}},"ApiResourceResultCollection[ApiIntegratorDayOfWeekResource]":{"type":"object","properties":{"resource":{"type":"array","items":{"$ref":"#/definitions/ApiIntegratorDayOfWeekResource"}},"extra":{"$ref":"#/definitions/ApiResourceResultCollectionExtra"},"errors":{"$ref":"#/definitions/ApiResourceErrors"},"status":{"$ref":"#/definitions/ApiResourceStatus"}}},"ApiResourceResultEntity[ApiIntegratorDefaultActionResource]":{"type":"object","properties":{"resource":{"$ref":"#/definitions/ApiIntegratorDefaultActionResource"},"links":{"$ref":"#/definitions/ApiResourceResultEntityLinks"},"extra":{"$ref":"#/definitions/ApiResourceResultEntityExtra"},"errors":{"$ref":"#/definitions/ApiResourceErrors"},"status":{"$ref":"#/definitions/ApiResourceStatus"}}},"ApiIntegratorDefaultActionResource":{"type":"object","properties":{"ActionListItem":{"$ref":"#/definitions/ApiIntegratorListItemResource"},"ServiceListItem":{"$ref":"#/definitions/ApiIntegratorListItemResource"},"PricingBasisListItem":{"$ref":"#/definitions/ApiIntegratorListItemResource"},"VATListItem":{"$ref":"#/definitions/ApiIntegratorListItemResource"},"MaterialClassListItem":{"$ref":"#/definitions/ApiIntegratorListItemResource"},"TaxTemplateCollectionListItem":{"$ref":"#/definitions/ApiIntegratorListItemResource"},"UnitOfMeasureListItem":{"$ref":"#/definitions/ApiIntegratorListItemResource"},"AnalysisCode":{"type":"string"},"SaleCode":{"type":"string"},"CostCode":{"type":"string"},"PurchaseCode":{"type":"string"},"IsDeleted":{"type":"boolean"},"HandlingTime":{"format":"int32","type":"integer"},"GUID":{"format":"uuid","type":"string","example":"00000000-0000-0000-0000-000000000000"}}},"ApiResourceResultCollection[ApiIntegratorDefaultActionResource]":{"type":"object","properties":{"resource":{"type":"array","items":{"$ref":"#/definitions/ApiIntegratorDefaultActionResource"}},"extra":{"$ref":"#/definitions/ApiResourceResultCollectionExtra"},"errors":{"$ref":"#/definitions/ApiResourceErrors"},"status":{"$ref":"#/definitions/ApiResourceStatus"}}},"ApiResourceResultEntity[ApiIntegratorDepartmentResource]":{"type":"object","properties":{"resource":{"$ref":"#/definitions/ApiIntegratorDepartmentResource"},"links":{"$ref":"#/definitions/ApiResourceResultEntityLinks"},"extra":{"$ref":"#/definitions/ApiResourceResultEntityExtra"},"errors":{"$ref":"#/definitions/ApiResourceErrors"},"status":{"$ref":"#/definitions/ApiResourceStatus"}}},"ApiIntegratorDepartmentResource":{"type":"object","properties":{"Description":{"type":"string"},"IsDeleted":{"type":"boolean"},"GUID":{"format":"uuid","type":"string","example":"00000000-0000-0000-0000-000000000000"}}},"ApiResourceResultCollection[ApiIntegratorDepartmentResource]":{"type":"object","properties":{"resource":{"type":"array","items":{"$ref":"#/definitions/ApiIntegratorDepartmentResource"}},"extra":{"$ref":"#/definitions/ApiResourceResultCollectionExtra"},"errors":{"$ref":"#/definitions/ApiResourceErrors"},"status":{"$ref":"#/definitions/ApiResourceStatus"}}},"ApiResourceResultEntity[ApiIntegratorDirectDebitAccountTypeResource]":{"type":"object","properties":{"resource":{"$ref":"#/definitions/ApiIntegratorDirectDebitAccountTypeResource"},"links":{"$ref":"#/definitions/ApiResourceResultEntityLinks"},"extra":{"$ref":"#/definitions/ApiResourceResultEntityExtra"},"errors":{"$ref":"#/definitions/ApiResourceErrors"},"status":{"$ref":"#/definitions/ApiResourceStatus"}}},"ApiIntegratorDirectDebitAccountTypeResource":{"type":"object","properties":{"Description":{"type":"string"},"IsDeleted":{"type":"boolean"},"GUID":{"format":"uuid","type":"string","example":"00000000-0000-0000-0000-000000000000"}}},"ApiResourceResultCollection[ApiIntegratorDirectDebitAccountTypeResource]":{"type":"object","properties":{"resource":{"type":"array","items":{"$ref":"#/definitions/ApiIntegratorDirectDebitAccountTypeResource"}},"extra":{"$ref":"#/definitions/ApiResourceResultCollectionExtra"},"errors":{"$ref":"#/definitions/ApiResourceErrors"},"status":{"$ref":"#/definitions/ApiResourceStatus"}}},"ApiResourceResultEntity[ApiIntegratorDirectDebitRunConfigurationResource]":{"type":"object","properties":{"resource":{"$ref":"#/definitions/ApiIntegratorDirectDebitRunConfigurationResource"},"links":{"$ref":"#/definitions/ApiResourceResultEntityLinks"},"extra":{"$ref":"#/definitions/ApiResourceResultEntityExtra"},"errors":{"$ref":"#/definitions/ApiResourceErrors"},"status":{"$ref":"#/definitions/ApiResourceStatus"}}},"ApiIntegratorDirectDebitRunConfigurationResource":{"type":"object","properties":{"ApplyFailedFee":{"type":"boolean"},"Description":{"type":"string"},"FileNo":{"format":"int32","type":"integer"},"IsCollectionDatesRequired":{"type":"boolean"},"SerialNo":{"format":"int32","type":"integer"},"AccountName":{"type":"string"},"AccountNo":{"type":"string"},"BankReference":{"type":"string"},"BankUsername":{"type":"string"},"BIC":{"type":"string"},"ChequeReport":{"type":"string"},"DefaultActionListItem":{"$ref":"#/definitions/ApiIntegratorListItemResource"},"FeeAmount":{"format":"double","type":"number"},"FileDescription":{"type":"string"},"IBAN":{"type":"string"},"RelatedPriceGuid":{"format":"uuid","type":"string","example":"00000000-0000-0000-0000-000000000000"},"SortCode":{"type":"string"},"IsDeleted":{"type":"boolean"},"CreditorIdentifier":{"type":"string"},"GUID":{"format":"uuid","type":"string","example":"00000000-0000-0000-0000-000000000000"}}},"ApiResourceResultCollection[ApiIntegratorDirectDebitRunConfigurationResource]":{"type":"object","properties":{"resource":{"type":"array","items":{"$ref":"#/definitions/ApiIntegratorDirectDebitRunConfigurationResource"}},"extra":{"$ref":"#/definitions/ApiResourceResultCollectionExtra"},"errors":{"$ref":"#/definitions/ApiResourceErrors"},"status":{"$ref":"#/definitions/ApiResourceStatus"}}},"ApiResourceResultEntity[ApiIntegratorDocumentDeliveryTypeResource]":{"type":"object","properties":{"resource":{"$ref":"#/definitions/ApiIntegratorDocumentDeliveryTypeResource"},"links":{"$ref":"#/definitions/ApiResourceResultEntityLinks"},"extra":{"$ref":"#/definitions/ApiResourceResultEntityExtra"},"errors":{"$ref":"#/definitions/ApiResourceErrors"},"status":{"$ref":"#/definitions/ApiResourceStatus"}}},"ApiIntegratorDocumentDeliveryTypeResource":{"type":"object","properties":{"Description":{"type":"string"},"IsActive":{"type":"boolean"},"GUID":{"format":"uuid","type":"string","example":"00000000-0000-0000-0000-000000000000"}}},"ApiResourceResultCollection[ApiIntegratorDocumentDeliveryTypeResource]":{"type":"object","properties":{"resource":{"type":"array","items":{"$ref":"#/definitions/ApiIntegratorDocumentDeliveryTypeResource"}},"extra":{"$ref":"#/definitions/ApiResourceResultCollectionExtra"},"errors":{"$ref":"#/definitions/ApiResourceErrors"},"status":{"$ref":"#/definitions/ApiResourceStatus"}}},"ApiResourceResultEntity[ApiIntegratorEwcCodeResource]":{"type":"object","properties":{"resource":{"$ref":"#/definitions/ApiIntegratorEwcCodeResource"},"links":{"$ref":"#/definitions/ApiResourceResultEntityLinks"},"extra":{"$ref":"#/definitions/ApiResourceResultEntityExtra"},"errors":{"$ref":"#/definitions/ApiResourceErrors"},"status":{"$ref":"#/definitions/ApiResourceStatus"}}},"ApiIntegratorEwcCodeResource":{"type":"object","properties":{"Code":{"type":"string"},"Description":{"type":"string"},"BriefDescription":{"type":"string"},"IsHazardous":{"type":"boolean"},"GUID":{"format":"uuid","type":"string","example":"00000000-0000-0000-0000-000000000000"}}},"ApiResourceResultCollection[ApiIntegratorEwcCodeResource]":{"type":"object","properties":{"resource":{"type":"array","items":{"$ref":"#/definitions/ApiIntegratorEwcCodeResource"}},"extra":{"$ref":"#/definitions/ApiResourceResultCollectionExtra"},"errors":{"$ref":"#/definitions/ApiResourceErrors"},"status":{"$ref":"#/definitions/ApiResourceStatus"}}},"ApiResourceResultEntity[ApiIntegratorExclusionTypeResource]":{"type":"object","properties":{"resource":{"$ref":"#/definitions/ApiIntegratorExclusionTypeResource"},"links":{"$ref":"#/definitions/ApiResourceResultEntityLinks"},"extra":{"$ref":"#/definitions/ApiResourceResultEntityExtra"},"errors":{"$ref":"#/definitions/ApiResourceErrors"},"status":{"$ref":"#/definitions/ApiResourceStatus"}}},"ApiIntegratorExclusionTypeResource":{"type":"object","properties":{"Description":{"type":"string"},"GUID":{"format":"uuid","type":"string","example":"00000000-0000-0000-0000-000000000000"}}},"ApiResourceResultCollection[ApiIntegratorExclusionTypeResource]":{"type":"object","properties":{"resource":{"type":"array","items":{"$ref":"#/definitions/ApiIntegratorExclusionTypeResource"}},"extra":{"$ref":"#/definitions/ApiResourceResultCollectionExtra"},"errors":{"$ref":"#/definitions/ApiResourceErrors"},"status":{"$ref":"#/definitions/ApiResourceStatus"}}},"ApiResourceResultCollection[ApiIntegratorExternalReferenceTypeResource]":{"type":"object","properties":{"resource":{"type":"array","items":{"$ref":"#/definitions/ApiIntegratorExternalReferenceTypeResource"}},"extra":{"$ref":"#/definitions/ApiResourceResultCollectionExtra"},"errors":{"$ref":"#/definitions/ApiResourceErrors"},"status":{"$ref":"#/definitions/ApiResourceStatus"}}},"ApiIntegratorExternalReferenceTypeResource":{"type":"object","properties":{"Description":{"type":"string"},"GUID":{"format":"uuid","type":"string","example":"00000000-0000-0000-0000-000000000000"}}},"ApiResourceResultEntity[ApiIntegratorExternalVehicleResource]":{"type":"object","properties":{"resource":{"$ref":"#/definitions/ApiIntegratorExternalVehicleResource"},"links":{"$ref":"#/definitions/ApiResourceResultEntityLinks"},"extra":{"$ref":"#/definitions/ApiResourceResultEntityExtra"},"errors":{"$ref":"#/definitions/ApiResourceErrors"},"status":{"$ref":"#/definitions/ApiResourceStatus"}}},"ApiIntegratorExternalVehicleResource":{"type":"object","properties":{"Registration":{"type":"string"},"Description":{"type":"string"},"VehicleTypeListItem":{"$ref":"#/definitions/ApiIntegratorListItemResource"},"CompanyOutletListItem":{"$ref":"#/definitions/ApiIntegratorListItemResource"},"RelatedTransportSupplierSiteGuid":{"format":"uuid","type":"string","example":"00000000-0000-0000-0000-000000000000"},"VolumeCapacity":{"format":"double","type":"number"},"UnitOfMeasurementListItem":{"$ref":"#/definitions/ApiIntegratorListItemResource"},"MaxGrossWeight":{"format":"double","type":"number"},"RFID":{"type":"string"},"IsSystemUse":{"type":"boolean"},"IsWeighOutRequired":{"type":"boolean"},"GUID":{"format":"uuid","type":"string","example":"00000000-0000-0000-0000-000000000000"}}},"ApiResourceResultCollection[ApiIntegratorExternalVehicleResource]":{"type":"object","properties":{"resource":{"type":"array","items":{"$ref":"#/definitions/ApiIntegratorExternalVehicleResource"}},"extra":{"$ref":"#/definitions/ApiResourceResultCollectionExtra"},"errors":{"$ref":"#/definitions/ApiResourceErrors"},"status":{"$ref":"#/definitions/ApiResourceStatus"}}},"ApiResourceResultEntity[ApiIntegratorFacilityTypeResource]":{"type":"object","properties":{"resource":{"$ref":"#/definitions/ApiIntegratorFacilityTypeResource"},"links":{"$ref":"#/definitions/ApiResourceResultEntityLinks"},"extra":{"$ref":"#/definitions/ApiResourceResultEntityExtra"},"errors":{"$ref":"#/definitions/ApiResourceErrors"},"status":{"$ref":"#/definitions/ApiResourceStatus"}}},"ApiIntegratorFacilityTypeResource":{"type":"object","properties":{"Description":{"type":"string"},"GUID":{"format":"uuid","type":"string","example":"00000000-0000-0000-0000-000000000000"}}},"ApiResourceResultCollection[ApiIntegratorFacilityTypeResource]":{"type":"object","properties":{"resource":{"type":"array","items":{"$ref":"#/definitions/ApiIntegratorFacilityTypeResource"}},"extra":{"$ref":"#/definitions/ApiResourceResultCollectionExtra"},"errors":{"$ref":"#/definitions/ApiResourceErrors"},"status":{"$ref":"#/definitions/ApiResourceStatus"}}},"ApiResourceChanges[ApiIntegratorGLBatchResource]":{"type":"object","properties":{"resource":{"type":"array","items":{"$ref":"#/definitions/ApiIntegratorGLBatchResource"}},"extra":{"$ref":"#/definitions/ApiResourceResultUpdatesExtra"},"errors":{"$ref":"#/definitions/ApiResourceErrors"},"status":{"$ref":"#/definitions/ApiResourceStatus"}}},"ApiIntegratorGLBatchResource":{"type":"object","properties":{"BatchType":{"type":"string"},"BatchName":{"type":"string"},"BatchStatus":{"type":"string"},"BatchApprovalStatus":{"type":"string"},"PostedDate":{"format":"offsetDateTime","type":"string","example":"2000-01-01T00:00:00+01:00"},"AccountingPeriodListItem":{"$ref":"#/definitions/ApiIntegratorListItemResource"},"CompanyListItem":{"$ref":"#/definitions/ApiIntegratorListItemResource"},"TransactionCount":{"format":"int32","type":"integer"},"LineCount":{"format":"int32","type":"integer"},"IsDeleted":{"type":"boolean"},"RelatedUserCreatedByGuid":{"format":"uuid","type":"string","example":"00000000-0000-0000-0000-000000000000"},"RelatedUserUpdatedByGuid":{"format":"uuid","type":"string","example":"00000000-0000-0000-0000-000000000000"},"CreationDateTime":{"format":"offsetDateTime","type":"string","example":"2000-01-01T00:00:00+01:00"},"UpdatedDateTime":{"format":"offsetDateTime","type":"string","example":"2000-01-01T00:00:00+01:00"},"FilterAccountingPeriodListItemGuid":{"format":"uuid","type":"string","example":"00000000-0000-0000-0000-000000000000"},"GUID":{"format":"uuid","type":"string","example":"00000000-0000-0000-0000-000000000000"}}},"ApiResourceResultEntity[ApiIntegratorGLBatchResource]":{"type":"object","properties":{"resource":{"$ref":"#/definitions/ApiIntegratorGLBatchResource"},"links":{"$ref":"#/definitions/ApiResourceResultEntityLinks"},"extra":{"$ref":"#/definitions/ApiResourceResultEntityExtra"},"errors":{"$ref":"#/definitions/ApiResourceErrors"},"status":{"$ref":"#/definitions/ApiResourceStatus"}}},"ApiResourceResultCollection[ApiIntegratorGLBatchResource]":{"type":"object","properties":{"resource":{"type":"array","items":{"$ref":"#/definitions/ApiIntegratorGLBatchResource"}},"extra":{"$ref":"#/definitions/ApiResourceResultCollectionExtra"},"errors":{"$ref":"#/definitions/ApiResourceErrors"},"status":{"$ref":"#/definitions/ApiResourceStatus"}}},"ApiResourceChanges[ApiIntegratorGLJournalResource]":{"type":"object","properties":{"resource":{"type":"array","items":{"$ref":"#/definitions/ApiIntegratorGLJournalResource"}},"extra":{"$ref":"#/definitions/ApiResourceResultUpdatesExtra"},"errors":{"$ref":"#/definitions/ApiResourceErrors"},"status":{"$ref":"#/definitions/ApiResourceStatus"}}},"ApiIntegratorGLJournalResource":{"type":"object","properties":{"BatchType":{"type":"string"},"BatchName":{"type":"string"},"BatchStatus":{"type":"string"},"BatchApprovalStatus":{"type":"string"},"PostingDate":{"format":"localDate","type":"string","example":"2000-01-01"},"PostedDate":{"format":"localDate","type":"string","example":"2000-01-01"},"AccountingPeriodCode":{"type":"string"},"AccountingPeriodListItem":{"$ref":"#/definitions/ApiIntegratorListItemResource"},"RelatedGLExportGuid":{"format":"uuid","type":"string","example":"00000000-0000-0000-0000-000000000000"},"RelatedUserCreatedByGuid":{"format":"uuid","type":"string","example":"00000000-0000-0000-0000-000000000000"},"RelatedUserUpdatedByGuid":{"format":"uuid","type":"string","example":"00000000-0000-0000-0000-000000000000"},"CreationDateTime":{"format":"offsetDateTime","type":"string","example":"2000-01-01T00:00:00+01:00"},"UpdatedDateTime":{"format":"offsetDateTime","type":"string","example":"2000-01-01T00:00:00+01:00"},"JournalHeaders":{"type":"array","items":{"$ref":"#/definitions/ApiIntegratorGLJournalHeaderResource"}},"JournalLines":{"type":"array","items":{"$ref":"#/definitions/ApiIntegratorGLJournalLineResource"}},"RelatedTransactionGuidFilter":{"format":"uuid","type":"string","example":"00000000-0000-0000-0000-000000000000"},"GUID":{"format":"uuid","type":"string","example":"00000000-0000-0000-0000-000000000000"}}},"ApiIntegratorGLJournalHeaderResource":{"type":"object","properties":{"JournalHeaderGuid":{"format":"uuid","type":"string","example":"00000000-0000-0000-0000-000000000000"},"HeaderName":{"type":"string"},"CompanyListItem":{"$ref":"#/definitions/ApiIntegratorListItemResource"},"Source":{"type":"string"},"BaseCurrencyIntegrationCode":{"type":"string"},"CurrencyIntegrationCode":{"type":"string"},"TransactionDate":{"format":"localDate","type":"string","example":"2000-01-01"},"GLDate":{"format":"localDate","type":"string","example":"2000-01-01"},"JournalType":{"type":"string"},"JournalStatus":{"type":"string"},"TotalDr":{"format":"double","type":"number"},"TotalCr":{"format":"double","type":"number"},"RelatedTransactionGuid":{"format":"uuid","type":"string","example":"00000000-0000-0000-0000-000000000000"},"CreationDateTime":{"format":"offsetDateTime","type":"string","example":"2000-01-01T00:00:00+01:00"},"UpdatedDateTime":{"format":"offsetDateTime","type":"string","example":"2000-01-01T00:00:00+01:00"}}},"ApiIntegratorGLJournalLineResource":{"type":"object","properties":{"RelatedJournalHeaderGuid":{"format":"uuid","type":"string","example":"00000000-0000-0000-0000-000000000000"},"JournalLineNo":{"format":"int32","type":"integer"},"TransactionFromDate":{"format":"localDate","type":"string","example":"2000-01-01"},"TransactionToDate":{"format":"localDate","type":"string","example":"2000-01-01"},"LineType":{"type":"string"},"LineDescription":{"type":"string"},"JnlDr":{"format":"double","type":"number"},"JnlCr":{"format":"double","type":"number"},"BaseDr":{"format":"double","type":"number"},"BaseCr":{"format":"double","type":"number"},"Category":{"type":"string"},"CreationDateTime":{"format":"offsetDateTime","type":"string","example":"2000-01-01T00:00:00+01:00"},"UpdatedDateTime":{"format":"offsetDateTime","type":"string","example":"2000-01-01T00:00:00+01:00"},"ExchangeRate":{"$ref":"#/definitions/ApiIntegratorGLJournalLineExchangeRateResource"},"Tax":{"$ref":"#/definitions/ApiIntegratorGLJournalLineTaxResource"},"AnalysisCodes":{"$ref":"#/definitions/ApiIntegratorGLJournalLineAnalysisCodesResource"},"Reference":{"$ref":"#/definitions/ApiIntegratorGLJournalLineReferenceResource"},"SummaryAccountCode":{"type":"string"}}},"ApiIntegratorGLJournalLineExchangeRateResource":{"type":"object","properties":{"RelatedExchangeRateGuid":{"format":"uuid","type":"string","example":"00000000-0000-0000-0000-000000000000"},"Rate":{"format":"double","type":"number"},"ExchangeDate":{"format":"localDate","type":"string","example":"2000-01-01"},"BaseCurrencyListItem":{"$ref":"#/definitions/ApiIntegratorListItemResource"},"CurrencyListItem":{"$ref":"#/definitions/ApiIntegratorListItemResource"}}},"ApiIntegratorGLJournalLineTaxResource":{"type":"object","properties":{"Code":{"type":"string"},"Rate":{"format":"double","type":"number"}}},"ApiIntegratorGLJournalLineAnalysisCodesResource":{"type":"object","properties":{"Element1":{"type":"string"},"Element2":{"type":"string"},"Element3":{"type":"string"},"Element4":{"type":"string"},"Element5":{"type":"string"},"Element6":{"type":"string"},"Element7":{"type":"string"},"Element8":{"type":"string"},"Element9":{"type":"string"},"Element10":{"type":"string"},"Site":{"type":"string"}}},"ApiIntegratorGLJournalLineReferenceResource":{"type":"object","properties":{"Context":{"type":"string"},"Reference1":{"type":"string"},"Reference2":{"type":"string"},"Reference3":{"type":"string"},"Reference4":{"type":"string"},"Reference5":{"type":"string"},"Reference6":{"type":"string"},"Reference7":{"type":"string"},"Reference8":{"type":"string"},"Reference9":{"type":"string"},"Reference10":{"type":"string"},"Reference11":{"type":"string"},"Reference12":{"type":"string"},"Reference13":{"type":"string"},"Reference14":{"type":"string"},"Reference15":{"type":"string"},"Reference16":{"type":"string"},"Reference17":{"type":"string"},"Reference18":{"type":"string"},"Reference19":{"type":"string"},"Reference20":{"type":"string"},"Reference21":{"type":"string"},"Reference22":{"type":"string"},"Reference23":{"type":"string"},"OrderNo":{"type":"string"}}},"ApiResourceResultEntity[ApiIntegratorGLJournalResource]":{"type":"object","properties":{"resource":{"$ref":"#/definitions/ApiIntegratorGLJournalResource"},"links":{"$ref":"#/definitions/ApiResourceResultEntityLinks"},"extra":{"$ref":"#/definitions/ApiResourceResultEntityExtra"},"errors":{"$ref":"#/definitions/ApiResourceErrors"},"status":{"$ref":"#/definitions/ApiResourceStatus"}}},"ApiResourceResultCollection[ApiIntegratorGLJournalResource]":{"type":"object","properties":{"resource":{"type":"array","items":{"$ref":"#/definitions/ApiIntegratorGLJournalResource"}},"extra":{"$ref":"#/definitions/ApiResourceResultCollectionExtra"},"errors":{"$ref":"#/definitions/ApiResourceErrors"},"status":{"$ref":"#/definitions/ApiResourceStatus"}}},"ApiResourceResultEntity[ApiIntegratorGpsMatchingSourceResource]":{"type":"object","properties":{"resource":{"$ref":"#/definitions/ApiIntegratorGpsMatchingSourceResource"},"links":{"$ref":"#/definitions/ApiResourceResultEntityLinks"},"extra":{"$ref":"#/definitions/ApiResourceResultEntityExtra"},"errors":{"$ref":"#/definitions/ApiResourceErrors"},"status":{"$ref":"#/definitions/ApiResourceStatus"}}},"ApiIntegratorGpsMatchingSourceResource":{"type":"object","properties":{"Description":{"type":"string"},"IsDeleted":{"type":"boolean"},"GUID":{"format":"uuid","type":"string","example":"00000000-0000-0000-0000-000000000000"}}},"ApiResourceResultCollection[ApiIntegratorGpsMatchingSourceResource]":{"type":"object","properties":{"resource":{"type":"array","items":{"$ref":"#/definitions/ApiIntegratorGpsMatchingSourceResource"}},"extra":{"$ref":"#/definitions/ApiResourceResultCollectionExtra"},"errors":{"$ref":"#/definitions/ApiResourceErrors"},"status":{"$ref":"#/definitions/ApiResourceStatus"}}},"ApiResourceResultEntity[ApiIntegratorHealthAndSafetyDocumentTypeResource]":{"type":"object","properties":{"resource":{"$ref":"#/definitions/ApiIntegratorHealthAndSafetyDocumentTypeResource"},"links":{"$ref":"#/definitions/ApiResourceResultEntityLinks"},"extra":{"$ref":"#/definitions/ApiResourceResultEntityExtra"},"errors":{"$ref":"#/definitions/ApiResourceErrors"},"status":{"$ref":"#/definitions/ApiResourceStatus"}}},"ApiIntegratorHealthAndSafetyDocumentTypeResource":{"type":"object","properties":{"Description":{"type":"string"},"GUID":{"format":"uuid","type":"string","example":"00000000-0000-0000-0000-000000000000"}}},"ApiResourceResultCollection[ApiIntegratorHealthAndSafetyDocumentTypeResource]":{"type":"object","properties":{"resource":{"type":"array","items":{"$ref":"#/definitions/ApiIntegratorHealthAndSafetyDocumentTypeResource"}},"extra":{"$ref":"#/definitions/ApiResourceResultCollectionExtra"},"errors":{"$ref":"#/definitions/ApiResourceErrors"},"status":{"$ref":"#/definitions/ApiResourceStatus"}}},"ApiResourceResultEntity[ApiIntegratorInspectionTypeResource]":{"type":"object","properties":{"resource":{"$ref":"#/definitions/ApiIntegratorInspectionTypeResource"},"links":{"$ref":"#/definitions/ApiResourceResultEntityLinks"},"extra":{"$ref":"#/definitions/ApiResourceResultEntityExtra"},"errors":{"$ref":"#/definitions/ApiResourceErrors"},"status":{"$ref":"#/definitions/ApiResourceStatus"}}},"ApiIntegratorInspectionTypeResource":{"type":"object","properties":{"Description":{"type":"string"},"IsDeleted":{"type":"boolean"},"GUID":{"format":"uuid","type":"string","example":"00000000-0000-0000-0000-000000000000"}}},"ApiResourceResultCollection[ApiIntegratorInspectionTypeResource]":{"type":"object","properties":{"resource":{"type":"array","items":{"$ref":"#/definitions/ApiIntegratorInspectionTypeResource"}},"extra":{"$ref":"#/definitions/ApiResourceResultCollectionExtra"},"errors":{"$ref":"#/definitions/ApiResourceErrors"},"status":{"$ref":"#/definitions/ApiResourceStatus"}}},"ApiResourceChanges[ApiIntegratorInvoiceResource]":{"type":"object","properties":{"resource":{"type":"array","items":{"$ref":"#/definitions/ApiIntegratorInvoiceResource"}},"extra":{"$ref":"#/definitions/ApiResourceResultUpdatesExtra"},"errors":{"$ref":"#/definitions/ApiResourceErrors"},"status":{"$ref":"#/definitions/ApiResourceStatus"}}},"ApiIntegratorInvoiceResource":{"type":"object","properties":{"InvoiceNumber":{"type":"string"},"RelatedCustomerGuid":{"format":"uuid","type":"string","example":"00000000-0000-0000-0000-000000000000"},"CustomerInvoiceNumber":{"type":"string"},"AccountingPeriodListItem":{"$ref":"#/definitions/ApiIntegratorListItemResource"},"InvoiceCycleListItem":{"$ref":"#/definitions/ApiIntegratorListItemResource"},"RebateInvoiceCycleListItem":{"$ref":"#/definitions/ApiIntegratorListItemResource"},"VATExemptNumber":{"type":"string"},"OutletListItem":{"$ref":"#/definitions/ApiIntegratorListItemResource"},"DepartmentListItem":{"$ref":"#/definitions/ApiIntegratorListItemResource"},"IsCash":{"type":"boolean"},"IsAccepted":{"type":"boolean"},"IsDebit":{"type":"boolean"},"IsRebilled":{"type":"boolean"},"IsTaxAdjustment":{"type":"boolean"},"IsRequestForPayment":{"type":"boolean"},"InputDate":{"format":"dateTime","type":"string","example":"2000-01-01 00:00:00.000"},"InvoiceDate":{"format":"dateTime","type":"string","example":"2000-01-01 00:00:00.000"},"DueDate":{"format":"dateTime","type":"string","example":"2000-01-01 00:00:00.000"},"WriteOffReasonListItem":{"$ref":"#/definitions/ApiIntegratorListItemResource"},"Amount":{"$ref":"#/definitions/ApiIntegratorInvoiceAmountResource"},"RelatedLocationGuid":{"format":"uuid","type":"string","example":"00000000-0000-0000-0000-000000000000"},"PrintAddress":{"$ref":"#/definitions/ApiIntegratorPrintAddressResource"},"RemitAddress":{"$ref":"#/definitions/ApiIntegratorRemitAddressResource"},"Notes":{"type":"string"},"Details":{"type":"array","items":{"$ref":"#/definitions/ApiIntegratorInvoiceDetailResource"}},"Batch":{"$ref":"#/definitions/ApiIntegratorInvoiceBatchResource"},"Deallocations":{"type":"array","items":{"$ref":"#/definitions/ApiIntegratorInvoiceDeallocationResource"}},"Allocations":{"type":"array","items":{"$ref":"#/definitions/ApiIntegratorInvoiceAllocationResource"}},"RelatedOrderGuid":{"format":"uuid","type":"string","example":"00000000-0000-0000-0000-000000000000"},"RelatedWeighingGuid":{"format":"uuid","type":"string","example":"00000000-0000-0000-0000-000000000000"},"RelatedWeighingInGuid":{"format":"uuid","type":"string","example":"00000000-0000-0000-0000-000000000000"},"RelatedWeighingOutGuid":{"format":"uuid","type":"string","example":"00000000-0000-0000-0000-000000000000"},"RelatedJobGuid":{"format":"uuid","type":"string","example":"00000000-0000-0000-0000-000000000000"},"RelatedRouteVisitGuid":{"format":"uuid","type":"string","example":"00000000-0000-0000-0000-000000000000"},"RelatedRouteVisitJobGuid":{"format":"uuid","type":"string","example":"00000000-0000-0000-0000-000000000000"},"RelatedSiteGuid":{"format":"uuid","type":"string","example":"00000000-0000-0000-0000-000000000000"},"RelatedBatchGuid":{"format":"uuid","type":"string","example":"00000000-0000-0000-0000-000000000000"},"RelatedUserGeneratedGuid":{"format":"uuid","type":"string","example":"00000000-0000-0000-0000-000000000000"},"RelatedUserAcceptedByGuid":{"format":"uuid","type":"string","example":"00000000-0000-0000-0000-000000000000"},"RelatedPONumberGuidFilter":{"format":"uuid","type":"string","example":"00000000-0000-0000-0000-000000000000"},"RelatedInvoiceAllocatedToGuidFilter":{"format":"uuid","type":"string","example":"00000000-0000-0000-0000-000000000000"},"RelatedUserDeallocatedByGuidFilter":{"format":"uuid","type":"string","example":"00000000-0000-0000-0000-000000000000"},"ReferenceFilter":{"type":"string"},"BatchGeneratedTimestampUtcFilter":{"format":"dateTime","type":"string","example":"2000-01-01 00:00:00.000"},"BatchAcceptedTimestampUtcFilter":{"format":"dateTime","type":"string","example":"2000-01-01 00:00:00.000"},"RelatedBlobHashes":{"type":"array","items":{"$ref":"#/definitions/ApiIntegratorInvoiceOutputResource"}},"GUID":{"format":"uuid","type":"string","example":"00000000-0000-0000-0000-000000000000"}}},"ApiIntegratorInvoiceAmountResource":{"type":"object","properties":{"Amount":{"format":"double","type":"number"},"BaseAmount":{"format":"double","type":"number"},"ExchangeRate":{"$ref":"#/definitions/ApiIntegratorInvoiceAmountExchangeRateResource"}}},"ApiIntegratorPrintAddressResource":{"type":"object","properties":{"HouseNumber":{"type":"string"},"Address1":{"type":"string"},"Address2":{"type":"string"},"Address3":{"type":"string"},"Address4":{"type":"string"},"Address5":{"type":"string"},"Postcode":{"type":"string"}}},"ApiIntegratorRemitAddressResource":{"type":"object","properties":{"SiteName":{"type":"string"},"HouseNumber":{"type":"string"},"Address1":{"type":"string"},"Address2":{"type":"string"},"Address3":{"type":"string"},"Address4":{"type":"string"},"Address5":{"type":"string"},"Postcode":{"type":"string"}}},"ApiIntegratorInvoiceDetailResource":{"type":"object","properties":{"Guid":{"format":"uuid","type":"string","example":"00000000-0000-0000-0000-000000000000"},"ItemDate":{"format":"localDate","type":"string","example":"2000-01-01"},"OrderNo":{"type":"string"},"CustomerOrderNo":{"type":"string"},"CustomerLoadReference":{"type":"string"},"PoNumber":{"type":"string"},"ReleaseNumber":{"type":"string"},"DepartmentListItem":{"$ref":"#/definitions/ApiIntegratorListItemResource"},"ServiceDescriptionOverride":{"type":"string"},"ActionDescriptionOverride":{"type":"string"},"UnitOfMeasurementListItem":{"$ref":"#/definitions/ApiIntegratorListItemResource"},"SiteAddress":{"$ref":"#/definitions/ApiIntegratorInvoiceDetailSiteAddressResource"},"Reason":{"type":"string"},"ServiceListItem":{"$ref":"#/definitions/ApiIntegratorListItemResource"},"ActionListItem":{"$ref":"#/definitions/ApiIntegratorListItemResource"},"ContainerTypeListItem":{"$ref":"#/definitions/ApiIntegratorListItemResource"},"MaterialListItem":{"$ref":"#/definitions/ApiIntegratorListItemResource"},"ServiceFrequencyListItem":{"$ref":"#/definitions/ApiIntegratorListItemResource"},"DefaultActionListItem":{"$ref":"#/definitions/ApiIntegratorListItemResource"},"Rent":{"$ref":"#/definitions/ApiIntegratorInvoiceDetailRentResource"},"Amount":{"$ref":"#/definitions/ApiIntegratorInvoiceDetailAmountResource"},"NotDueAmount":{"format":"double","type":"number"},"RelatedOrderGuid":{"format":"uuid","type":"string","example":"00000000-0000-0000-0000-000000000000"},"RelatedWeighingGuid":{"format":"uuid","type":"string","example":"00000000-0000-0000-0000-000000000000"},"RelatedWeighingInGuid":{"format":"uuid","type":"string","example":"00000000-0000-0000-0000-000000000000"},"RelatedWeighingOutGuid":{"format":"uuid","type":"string","example":"00000000-0000-0000-0000-000000000000"},"RelatedJobGuid":{"format":"uuid","type":"string","example":"00000000-0000-0000-0000-000000000000"},"RelatedRouteVisitGuid":{"format":"uuid","type":"string","example":"00000000-0000-0000-0000-000000000000"},"RelatedSiteGuid":{"format":"uuid","type":"string","example":"00000000-0000-0000-0000-000000000000"},"RelatedRouteVisitJobGuid":{"format":"uuid","type":"string","example":"00000000-0000-0000-0000-000000000000"},"RelatedPONumberGuid":{"format":"uuid","type":"string","example":"00000000-0000-0000-0000-000000000000"},"VATListItem":{"$ref":"#/definitions/ApiIntegratorListItemResource"},"Reference":{"type":"string"},"Notes":{"type":"string"}}},"ApiIntegratorInvoiceBatchResource":{"type":"object","properties":{"GeneratedTimestamp":{"format":"dateTimeOffset","type":"string","example":"2000-01-01T00:00:00.0000000+01:00"},"AcceptedTimestamp":{"format":"dateTimeOffset","type":"string","example":"2000-01-01T00:00:00.0000000+01:00"},"InvoiceDate":{"format":"localDate","type":"string","example":"2000-01-01"},"InvoiceUntil":{"format":"localDate","type":"string","example":"2000-01-01"},"IsAcceptanceInProgress":{"type":"boolean"},"IsGenerationInProgress":{"type":"boolean"},"IsExported":{"type":"boolean"},"RelatedUserGeneratedGuid":{"format":"uuid","type":"string","example":"00000000-0000-0000-0000-000000000000"},"RelatedUserAcceptedByGuid":{"format":"uuid","type":"string","example":"00000000-0000-0000-0000-000000000000"},"AnalysisCode":{"type":"string"},"Notes":{"type":"string"},"InvoiceBatchStatusListItem":{"$ref":"#/definitions/ApiIntegratorListItemResource"},"IsDeleted":{"type":"boolean"},"BatchGuid":{"format":"uuid","type":"string","example":"00000000-0000-0000-0000-000000000000"}}},"ApiIntegratorInvoiceDeallocationResource":{"type":"object","properties":{"Amount":{"format":"double","type":"number"},"RelatedInvoiceAllocatedToGuid":{"format":"uuid","type":"string","example":"00000000-0000-0000-0000-000000000000"},"DateDeallocated":{"format":"dateTime","type":"string","example":"2000-01-01 00:00:00.000"},"DateInput":{"format":"dateTime","type":"string","example":"2000-01-01 00:00:00.000"},"RelatedUserDeallocatedByGuid":{"format":"uuid","type":"string","example":"00000000-0000-0000-0000-000000000000"},"IsExported":{"type":"boolean"},"IsInvoiceBillDeallocationExported":{"type":"boolean"},"IsInvoiceBillExported":{"type":"boolean"},"IsDeleted":{"type":"boolean"},"AllocationAccountingPeriodListItem":{"$ref":"#/definitions/ApiIntegratorListItemResource"},"DateExported":{"format":"dateTime","type":"string","example":"2000-01-01 00:00:00.000"},"DateInvoiceBillDeallocationExported":{"format":"dateTime","type":"string","example":"2000-01-01 00:00:00.000"},"DateInvoiceBillExported":{"format":"dateTime","type":"string","example":"2000-01-01 00:00:00.000"},"DeallocationAccountingPeriodListItem":{"$ref":"#/definitions/ApiIntegratorListItemResource"},"Guid":{"format":"uuid","type":"string","example":"00000000-0000-0000-0000-000000000000"}}},"ApiIntegratorInvoiceAllocationResource":{"type":"object","properties":{"Amount":{"format":"double","type":"number"},"RelatedInvoiceAllocatedToGuid":{"format":"uuid","type":"string","example":"00000000-0000-0000-0000-000000000000"},"DateInput":{"format":"dateTime","type":"string","example":"2000-01-01 00:00:00.000"},"IsExported":{"type":"boolean"},"IsDeleted":{"type":"boolean"},"AccountingPeriodListItem":{"$ref":"#/definitions/ApiIntegratorListItemResource"},"DateExported":{"format":"dateTime","type":"string","example":"2000-01-01 00:00:00.000"},"Guid":{"format":"uuid","type":"string","example":"00000000-0000-0000-0000-000000000000"}}},"ApiIntegratorInvoiceOutputResource":{"type":"object","properties":{"Hash":{"type":"string"}}},"ApiIntegratorInvoiceAmountExchangeRateResource":{"type":"object","properties":{"Rate":{"format":"double","type":"number"},"ExchangeDate":{"format":"localDate","type":"string","example":"2000-01-01"},"BaseCurrencyListItem":{"$ref":"#/definitions/ApiIntegratorListItemResource"},"ExchangeCurrencyListItem":{"$ref":"#/definitions/ApiIntegratorListItemResource"}}},"ApiIntegratorInvoiceDetailSiteAddressResource":{"type":"object","properties":{"HouseNumber":{"type":"string"},"Address1":{"type":"string"},"Address2":{"type":"string"},"Address3":{"type":"string"},"Address4":{"type":"string"},"Address5":{"type":"string"},"Postcode":{"type":"string"},"ContactMethods":{"$ref":"#/definitions/ApiIntegratorInvoiceDetailSiteAddressContactMethodsResource"}}},"ApiIntegratorInvoiceDetailRentResource":{"type":"object","properties":{"RentTermListItem":{"$ref":"#/definitions/ApiIntegratorListItemResource"},"From":{"format":"localDate","type":"string","example":"2000-01-01"},"To":{"format":"localDate","type":"string","example":"2000-01-01"}}},"ApiIntegratorInvoiceDetailAmountResource":{"type":"object","properties":{"Rate":{"format":"double","type":"number"},"IsRebilled":{"type":"boolean"},"Quantity":{"format":"double","type":"number"},"Volume":{"format":"double","type":"number"},"Weight":{"format":"double","type":"number"},"Price":{"format":"double","type":"number"},"PriceIncVat":{"format":"double","type":"number"},"ChargeableHours":{"format":"double","type":"number"},"MinimumCharge":{"format":"double","type":"number"},"MaximumCharge":{"format":"double","type":"number"},"Allowance":{"format":"double","type":"number"},"RebillQuantity":{"format":"double","type":"number"},"RebillVolume":{"format":"double","type":"number"},"RebillWeight":{"format":"double","type":"number"},"RebilledPrice":{"format":"double","type":"number"},"RebilledPriceIncVat":{"format":"double","type":"number"},"RebilledChargeableHours":{"format":"double","type":"number"},"RebilledMinimumCharge":{"format":"double","type":"number"},"RebilledMaximumCharge":{"format":"double","type":"number"},"RebilledAllowance":{"format":"double","type":"number"}}},"ApiIntegratorInvoiceDetailSiteAddressContactMethodsResource":{"type":"object","properties":{"TelNo":{"type":"string"},"FaxNo":{"type":"string"}}},"ApiResourceResultEntity[ApiIntegratorInvoiceResource]":{"type":"object","properties":{"resource":{"$ref":"#/definitions/ApiIntegratorInvoiceResource"},"links":{"$ref":"#/definitions/ApiResourceResultEntityLinks"},"extra":{"$ref":"#/definitions/ApiResourceResultEntityExtra"},"errors":{"$ref":"#/definitions/ApiResourceErrors"},"status":{"$ref":"#/definitions/ApiResourceStatus"}}},"ApiResourceResultCollection[ApiIntegratorInvoiceResource]":{"type":"object","properties":{"resource":{"type":"array","items":{"$ref":"#/definitions/ApiIntegratorInvoiceResource"}},"extra":{"$ref":"#/definitions/ApiResourceResultCollectionExtra"},"errors":{"$ref":"#/definitions/ApiResourceErrors"},"status":{"$ref":"#/definitions/ApiResourceStatus"}}},"ApiResourceResultEntity[ApiIntegratorInvoiceCycleResource]":{"type":"object","properties":{"resource":{"$ref":"#/definitions/ApiIntegratorInvoiceCycleResource"},"links":{"$ref":"#/definitions/ApiResourceResultEntityLinks"},"extra":{"$ref":"#/definitions/ApiResourceResultEntityExtra"},"errors":{"$ref":"#/definitions/ApiResourceErrors"},"status":{"$ref":"#/definitions/ApiResourceStatus"}}},"ApiIntegratorInvoiceCycleResource":{"type":"object","properties":{"Description":{"type":"string"},"IsDeleted":{"type":"boolean"},"GUID":{"format":"uuid","type":"string","example":"00000000-0000-0000-0000-000000000000"}}},"ApiResourceResultCollection[ApiIntegratorInvoiceCycleResource]":{"type":"object","properties":{"resource":{"type":"array","items":{"$ref":"#/definitions/ApiIntegratorInvoiceCycleResource"}},"extra":{"$ref":"#/definitions/ApiResourceResultCollectionExtra"},"errors":{"$ref":"#/definitions/ApiResourceErrors"},"status":{"$ref":"#/definitions/ApiResourceStatus"}}},"ApiResourceResultEntity[ApiIntegratorInvoiceFrequencyResource]":{"type":"object","properties":{"resource":{"$ref":"#/definitions/ApiIntegratorInvoiceFrequencyResource"},"links":{"$ref":"#/definitions/ApiResourceResultEntityLinks"},"extra":{"$ref":"#/definitions/ApiResourceResultEntityExtra"},"errors":{"$ref":"#/definitions/ApiResourceErrors"},"status":{"$ref":"#/definitions/ApiResourceStatus"}}},"ApiIntegratorInvoiceFrequencyResource":{"type":"object","properties":{"Description":{"type":"string"},"IsDeleted":{"type":"boolean"},"GUID":{"format":"uuid","type":"string","example":"00000000-0000-0000-0000-000000000000"}}},"ApiResourceResultCollection[ApiIntegratorInvoiceFrequencyResource]":{"type":"object","properties":{"resource":{"type":"array","items":{"$ref":"#/definitions/ApiIntegratorInvoiceFrequencyResource"}},"extra":{"$ref":"#/definitions/ApiResourceResultCollectionExtra"},"errors":{"$ref":"#/definitions/ApiResourceErrors"},"status":{"$ref":"#/definitions/ApiResourceStatus"}}},"ApiResourceChanges[ApiIntegratorJobResource]":{"type":"object","properties":{"resource":{"type":"array","items":{"$ref":"#/definitions/ApiIntegratorJobResource"}},"extra":{"$ref":"#/definitions/ApiResourceResultUpdatesExtra"},"errors":{"$ref":"#/definitions/ApiResourceErrors"},"status":{"$ref":"#/definitions/ApiResourceStatus"}}},"ApiIntegratorJobResource":{"type":"object","properties":{"DeleteRouteAssignmentsOnCompletion":{"type":"boolean"},"InProgress":{"type":"boolean"},"IsAdhoc":{"type":"boolean"},"IsCompleted":{"type":"boolean"},"CompletedDate":{"format":"localDate","type":"string","example":"2000-01-01"},"IsConfirmed":{"type":"boolean"},"IsExternalTransport":{"type":"boolean"},"IsFinanciallyConfirmed":{"type":"boolean"},"IsHazardousPaperworkComplete":{"type":"boolean"},"IsScheduledTransfer":{"type":"boolean"},"IsWarranty":{"type":"boolean"},"IsDeleted":{"type":"boolean"},"DeleteReasonGuid":{"format":"uuid","type":"string","example":"00000000-0000-0000-0000-000000000000"},"RelatedExternalVehicleGuid":{"format":"uuid","type":"string","example":"00000000-0000-0000-0000-000000000000"},"RelatedPONumberGuid":{"format":"uuid","type":"string","example":"00000000-0000-0000-0000-000000000000"},"RelatedRouteVisitGuid":{"format":"uuid","type":"string","example":"00000000-0000-0000-0000-000000000000"},"RelatedScheduleGuid":{"format":"uuid","type":"string","example":"00000000-0000-0000-0000-000000000000"},"RelatedSiteOrderGuid":{"format":"uuid","type":"string","example":"00000000-0000-0000-0000-000000000000"},"RelatedSiteOrderItemGuid":{"format":"uuid","type":"string","example":"00000000-0000-0000-0000-000000000000"},"RelatedSupplierSiteTransportGuid":{"format":"uuid","type":"string","example":"00000000-0000-0000-0000-000000000000"},"ActionListItem":{"$ref":"#/definitions/ApiIntegratorListItemResource"},"CancelledReasonListItem":{"$ref":"#/definitions/ApiIntegratorListItemResource"},"CompanyOutletListItem":{"$ref":"#/definitions/ApiIntegratorListItemResource"},"ContainerTypeListItem":{"$ref":"#/definitions/ApiIntegratorListItemResource"},"DepartmentListItem":{"$ref":"#/definitions/ApiIntegratorListItemResource"},"MaterialListItem":{"$ref":"#/definitions/ApiIntegratorListItemResource"},"PaymentTypeListItem":{"$ref":"#/definitions/ApiIntegratorListItemResource"},"RepairReasonListItem":{"$ref":"#/definitions/ApiIntegratorListItemResource"},"Access":{"type":"array","items":{"$ref":"#/definitions/ApiIntegratorJobAccessTimeResource"}},"ContainerDetails":{"$ref":"#/definitions/ApiIntegratorJobContainerDetailsResource"},"VisitDetails":{"$ref":"#/definitions/ApiIntegratorJobVisitDetailsResource"},"CustomerOrderNo":{"type":"string"},"DateRequired":{"format":"localDate","type":"string","example":"2000-01-01"},"HazardousLoadReference":{"type":"string"},"ManualTicketNo":{"type":"string"},"MaterialSaleSlots":{"type":"array","items":{"$ref":"#/definitions/ApiIntegratorJobMaterialSaleSlotResource"}},"Notes":{"type":"string"},"PONumber":{"type":"string"},"Quantity":{"format":"double","type":"number"},"ReleaseNumber":{"type":"string"},"TicketNo":{"type":"string"},"RejectedReasonListItem":{"$ref":"#/definitions/ApiIntegratorListItemResource"},"RelatedLocationDestinationGuid":{"format":"uuid","type":"string","example":"00000000-0000-0000-0000-000000000000"},"RelatedPictureBlobHashes":{"type":"array","items":{"$ref":"#/definitions/ApiIntegratorJobPictureResource"}},"RelatedBlobJobDocketPdfHashes":{"type":"array","items":{"$ref":"#/definitions/ApiIntegratorJobDocketPdfResource"}},"RelatedWTNBlobHashes":{"type":"array","items":{"$ref":"#/definitions/ApiIntegratorJobWasteTransferNoteResource"}},"PriceOverrides":{"type":"array","items":{"$ref":"#/definitions/ApiIntegratorJobPriceResource"}},"RelatedPriceGuidFilter":{"format":"uuid","type":"string","example":"00000000-0000-0000-0000-000000000000"},"RequiredStartTime":{"format":"dateTime","type":"string","example":"2000-01-01 00:00:00.000"},"RequiredEndTime":{"format":"dateTime","type":"string","example":"2000-01-01 00:00:00.000"},"VATIntendedListItem":{"$ref":"#/definitions/ApiIntegratorListItemResource"},"ServiceListItem":{"$ref":"#/definitions/ApiIntegratorListItemResource"},"LastChangeReasonListItem":{"$ref":"#/definitions/ApiIntegratorListItemResource"},"RelatedCreatedByUserGuid":{"format":"uuid","type":"string","example":"00000000-0000-0000-0000-000000000000"},"Position":{"format":"int32","type":"integer"},"PriorityListItem":{"$ref":"#/definitions/ApiIntegratorListItemResource"},"LinkedJobs":{"type":"array","items":{"$ref":"#/definitions/ApiIntegratorLinkedJobResource"}},"LinkedJobGuidFilter":{"format":"uuid","type":"string","example":"00000000-0000-0000-0000-000000000000"},"RelatedJobGuidFilter":{"format":"uuid","type":"string","example":"00000000-0000-0000-0000-000000000000"},"MaterialSaleSlotSlotNumberFilter":{"type":"string"},"MaterialSaleSlotGuidFilter":{"format":"uuid","type":"string","example":"00000000-0000-0000-0000-000000000000"},"MaterialSaleSlotRelatedBookingSlotGuidFilter":{"format":"uuid","type":"string","example":"00000000-0000-0000-0000-000000000000"},"MaterialSaleSlotRelatedCustomerGuidFilter":{"format":"uuid","type":"string","example":"00000000-0000-0000-0000-000000000000"},"GUID":{"format":"uuid","type":"string","example":"00000000-0000-0000-0000-000000000000"}}},"ApiIntegratorJobAccessTimeResource":{"type":"object","properties":{"Contact":{"type":"string"},"StartTime":{"format":"zonedDateTime","type":"string","example":{"DateTime":"2000-01-01T00:00:00Z","TimeZone":"Europe/London"}},"EndTime":{"format":"zonedDateTime","type":"string","example":{"DateTime":"2000-01-01T00:00:00Z","TimeZone":"Europe/London"}},"Notes":{"type":"string"},"DayOfWeekId":{"format":"int32","type":"integer"},"Guid":{"format":"uuid","type":"string","example":"00000000-0000-0000-0000-000000000000"}}},"ApiIntegratorJobContainerDetailsResource":{"type":"object","properties":{"Delivered":{"$ref":"#/definitions/ApiIntegratorJobContainerDetailsDeliveredResource"},"Removed":{"$ref":"#/definitions/ApiIntegratorJobContainerDetailsRemovedResource"}}},"ApiIntegratorJobVisitDetailsResource":{"type":"object","properties":{"DriverNotes":{"type":"string"},"TimeInCustomerSite":{"format":"localDate","type":"string","example":"2000-01-01"},"TimeOutCustomerSite":{"format":"localDate","type":"string","example":"2000-01-01"},"HoursChargeable":{"format":"double","type":"number"},"HoursNotChargeable":{"format":"double","type":"number"}}},"ApiIntegratorJobMaterialSaleSlotResource":{"type":"object","properties":{"SlotNumber":{"type":"string"},"SlotDate":{"format":"dateTime","type":"string","example":"2000-01-01 00:00:00.000"},"SlotTime":{"format":"dateTime","type":"string","example":"2000-01-01 00:00:00.000"},"SlotEndTime":{"format":"dateTime","type":"string","example":"2000-01-01 00:00:00.000"},"CompanyOutletListItem":{"$ref":"#/definitions/ApiIntegratorListItemResource"},"MaterialListItem":{"$ref":"#/definitions/ApiIntegratorListItemResource"},"RelatedBookingSlotGuid":{"format":"uuid","type":"string","example":"00000000-0000-0000-0000-000000000000"},"RelatedCustomerGuid":{"format":"uuid","type":"string","example":"00000000-0000-0000-0000-000000000000"},"Notes":{"type":"string"},"IsSchedule":{"type":"boolean"},"IsManuallyAssigned":{"type":"boolean"},"IsDeleted":{"type":"boolean"},"Guid":{"format":"uuid","type":"string","example":"00000000-0000-0000-0000-000000000000"}}},"ApiIntegratorJobPictureResource":{"type":"object","properties":{"Description":{"type":"string"},"Hash":{"type":"string"}}},"ApiIntegratorJobDocketPdfResource":{"type":"object","properties":{"Hash":{"type":"string"}}},"ApiIntegratorJobWasteTransferNoteResource":{"type":"object","properties":{"Guid":{"format":"uuid","type":"string","example":"00000000-0000-0000-0000-000000000000"},"Hash":{"type":"string"}}},"ApiIntegratorJobPriceResource":{"type":"object","properties":{"RelatedPriceGuid":{"format":"uuid","type":"string","example":"00000000-0000-0000-0000-000000000000"},"Guid":{"format":"uuid","type":"string","example":"00000000-0000-0000-0000-000000000000"},"OverrideRate":{"format":"double","type":"number"},"IsSelected":{"type":"boolean"},"Breakdowns":{"type":"array","items":{"$ref":"#/definitions/ApiIntegratorJobPriceBreakdownResource"}}}},"ApiIntegratorLinkedJobResource":{"type":"object","properties":{"Guid":{"format":"uuid","type":"string","example":"00000000-0000-0000-0000-000000000000"},"IsDeleted":{"type":"boolean"},"RelatedJobGuid":{"format":"uuid","type":"string","example":"00000000-0000-0000-0000-000000000000"}}},"ApiIntegratorJobContainerDetailsDeliveredResource":{"type":"object","properties":{"RelatedContainerGuid":{"format":"uuid","type":"string","example":"00000000-0000-0000-0000-000000000000"},"ContainerTypeListItem":{"$ref":"#/definitions/ApiIntegratorListItemResource"},"Notes":{"type":"string"},"SerialNo":{"type":"string"},"Tag":{"type":"string"}}},"ApiIntegratorJobContainerDetailsRemovedResource":{"type":"object","properties":{"RelatedContainerGuid":{"format":"uuid","type":"string","example":"00000000-0000-0000-0000-000000000000"},"ContainerTypeListItem":{"$ref":"#/definitions/ApiIntegratorListItemResource"},"Notes":{"type":"string"},"SerialNo":{"type":"string"},"Tag":{"type":"string"}}},"ApiIntegratorJobPriceBreakdownResource":{"type":"object","properties":{"Guid":{"format":"uuid","type":"string","example":"00000000-0000-0000-0000-000000000000"},"IsDeleted":{"type":"boolean"},"FillLevel":{"format":"double","type":"number"},"Quantity":{"format":"int32","type":"integer"},"IsReceived":{"type":"boolean"},"Barcode":{"type":"string"},"JobPriceBreakdownTypeEnum":{"type":"string"}}},"ApiResourceResultEntity[ApiIntegratorJobResource]":{"type":"object","properties":{"resource":{"$ref":"#/definitions/ApiIntegratorJobResource"},"links":{"$ref":"#/definitions/ApiResourceResultEntityLinks"},"extra":{"$ref":"#/definitions/ApiResourceResultEntityExtra"},"errors":{"$ref":"#/definitions/ApiResourceErrors"},"status":{"$ref":"#/definitions/ApiResourceStatus"}}},"ApiResourceResultCollection[ApiIntegratorJobResource]":{"type":"object","properties":{"resource":{"type":"array","items":{"$ref":"#/definitions/ApiIntegratorJobResource"}},"extra":{"$ref":"#/definitions/ApiResourceResultCollectionExtra"},"errors":{"$ref":"#/definitions/ApiResourceErrors"},"status":{"$ref":"#/definitions/ApiResourceStatus"}}},"ApiResourceResultEntity[ApiIntegratorLatePaymentFeeTypeResource]":{"type":"object","properties":{"resource":{"$ref":"#/definitions/ApiIntegratorLatePaymentFeeTypeResource"},"links":{"$ref":"#/definitions/ApiResourceResultEntityLinks"},"extra":{"$ref":"#/definitions/ApiResourceResultEntityExtra"},"errors":{"$ref":"#/definitions/ApiResourceErrors"},"status":{"$ref":"#/definitions/ApiResourceStatus"}}},"ApiIntegratorLatePaymentFeeTypeResource":{"type":"object","properties":{"Description":{"type":"string"},"LatePaymentFeeListItem":{"$ref":"#/definitions/ApiIntegratorListItemResource"},"IsDeleted":{"type":"boolean"},"GUID":{"format":"uuid","type":"string","example":"00000000-0000-0000-0000-000000000000"}}},"ApiResourceResultCollection[ApiIntegratorLatePaymentFeeTypeResource]":{"type":"object","properties":{"resource":{"type":"array","items":{"$ref":"#/definitions/ApiIntegratorLatePaymentFeeTypeResource"}},"extra":{"$ref":"#/definitions/ApiResourceResultCollectionExtra"},"errors":{"$ref":"#/definitions/ApiResourceErrors"},"status":{"$ref":"#/definitions/ApiResourceStatus"}}},"ApiResourceChanges[ApiIntegratorLiftEventResource]":{"type":"object","properties":{"resource":{"type":"array","items":{"$ref":"#/definitions/ApiIntegratorLiftEventResource"}},"extra":{"$ref":"#/definitions/ApiResourceResultUpdatesExtra"},"errors":{"$ref":"#/definitions/ApiResourceErrors"},"status":{"$ref":"#/definitions/ApiResourceStatus"}}},"ApiIntegratorLiftEventResource":{"type":"object","properties":{"IsAutoGPSMatching":{"type":"boolean"},"IsAutoGPSMatchingResult":{"type":"boolean"},"IsBilled":{"type":"boolean"},"IsCollected":{"type":"boolean"},"IsContaminated":{"type":"boolean"},"IsDriverGPSMatching":{"type":"boolean"},"IsDriverGPSMatchingResult":{"type":"boolean"},"IsDumped":{"type":"boolean"},"IsAdHoc":{"type":"boolean"},"IsCombinedLift":{"type":"boolean"},"IsGeoCompressed":{"type":"boolean"},"IsManual":{"type":"boolean"},"IsOnHold":{"type":"boolean"},"IsOverridden":{"type":"boolean"},"IsStopListed":{"type":"boolean"},"BaseWeight":{"format":"double","type":"number"},"ChargeWeight":{"format":"double","type":"number"},"GrossWeight":{"format":"double","type":"number"},"NetWeight":{"format":"double","type":"number"},"TareWeight":{"format":"double","type":"number"},"Weight":{"format":"double","type":"number"},"DoubleDumps":{"format":"int32","type":"integer"},"ErrorCodeWeight":{"format":"int32","type":"integer"},"ErrorCodeTag":{"format":"int32","type":"integer"},"LifterSide":{"format":"int32","type":"integer"},"NumberOfPictures":{"format":"int32","type":"integer"},"QuantityCollected":{"format":"int32","type":"integer"},"RouteInstanceOrderNumber":{"format":"int32","type":"integer"},"RouteVersion":{"format":"int32","type":"integer"},"GPSMatchingSourceListItem":{"$ref":"#/definitions/ApiIntegratorListItemResource"},"ReasonLastChangeListItem":{"$ref":"#/definitions/ApiIntegratorListItemResource"},"ReasonLiftInformationListItem":{"$ref":"#/definitions/ApiIntegratorListItemResource"},"ReasonLiftProblemListItem":{"$ref":"#/definitions/ApiIntegratorListItemResource"},"ContainerTypeNewOfficeListItem":{"$ref":"#/definitions/ApiIntegratorListItemResource"},"MaterialTypeNewOfficeListItem":{"$ref":"#/definitions/ApiIntegratorListItemResource"},"UnitOfMeasurementListItem":{"$ref":"#/definitions/ApiIntegratorListItemResource"},"WeightChangeReasonListItem":{"$ref":"#/definitions/ApiIntegratorListItemResource"},"Location":{"$ref":"#/definitions/ApiIntegratorLiftEventLocationResource"},"VehicleCode":{"type":"string"},"InformationText":{"type":"string"},"LiftDataXml":{"type":"string"},"LiftText":{"type":"string"},"ProblemText":{"type":"string"},"Tag":{"type":"string"},"CollectionDate":{"format":"localDate","type":"string","example":"2000-01-01"},"CollectionTimeStamp":{"format":"offsetDateTime","type":"string","example":"2000-01-01T00:00:00+01:00"},"ImportTimeStamp":{"format":"zonedDateTime","type":"string","example":{"DateTime":"2000-01-01T00:00:00Z","TimeZone":"Europe/London"}},"InstrumentTimeStamp":{"format":"zonedDateTime","type":"string","example":{"DateTime":"2000-01-01T00:00:00Z","TimeZone":"Europe/London"}},"RouteInstanceStartTime":{"format":"offsetDateTime","type":"string","example":"2000-01-01T00:00:00+01:00"},"RelatedUserRecordedByGuid":{"format":"uuid","type":"string","example":"00000000-0000-0000-0000-000000000000"},"RelatedRouteGuid":{"format":"uuid","type":"string","example":"00000000-0000-0000-0000-000000000000"},"RelatedRouteVisitGuid":{"format":"uuid","type":"string","example":"00000000-0000-0000-0000-000000000000"},"RelatedSiteOrderContainerGuid":{"format":"uuid","type":"string","example":"00000000-0000-0000-0000-000000000000"},"RelatedVehicleGuid":{"format":"uuid","type":"string","example":"00000000-0000-0000-0000-000000000000"},"IsDeleted":{"type":"boolean"},"GUID":{"format":"uuid","type":"string","example":"00000000-0000-0000-0000-000000000000"}}},"ApiIntegratorLiftEventLocationResource":{"type":"object","properties":{"Lat":{"format":"double","type":"number"},"Long":{"format":"double","type":"number"}}},"ApiResourceResultEntity[ApiIntegratorLiftEventResource]":{"type":"object","properties":{"resource":{"$ref":"#/definitions/ApiIntegratorLiftEventResource"},"links":{"$ref":"#/definitions/ApiResourceResultEntityLinks"},"extra":{"$ref":"#/definitions/ApiResourceResultEntityExtra"},"errors":{"$ref":"#/definitions/ApiResourceErrors"},"status":{"$ref":"#/definitions/ApiResourceStatus"}}},"ApiResourceResultCollection[ApiIntegratorLiftEventResource]":{"type":"object","properties":{"resource":{"type":"array","items":{"$ref":"#/definitions/ApiIntegratorLiftEventResource"}},"extra":{"$ref":"#/definitions/ApiResourceResultCollectionExtra"},"errors":{"$ref":"#/definitions/ApiResourceErrors"},"status":{"$ref":"#/definitions/ApiResourceStatus"}}},"ApiResourceResultEntity[ApiIntegratorLocalAuthorityResource]":{"type":"object","properties":{"resource":{"$ref":"#/definitions/ApiIntegratorLocalAuthorityResource"},"links":{"$ref":"#/definitions/ApiResourceResultEntityLinks"},"extra":{"$ref":"#/definitions/ApiResourceResultEntityExtra"},"errors":{"$ref":"#/definitions/ApiResourceErrors"},"status":{"$ref":"#/definitions/ApiResourceStatus"}}},"ApiIntegratorLocalAuthorityResource":{"type":"object","properties":{"Description":{"type":"string"},"IsDeleted":{"type":"boolean"},"GUID":{"format":"uuid","type":"string","example":"00000000-0000-0000-0000-000000000000"}}},"ApiResourceResultCollection[ApiIntegratorLocalAuthorityResource]":{"type":"object","properties":{"resource":{"type":"array","items":{"$ref":"#/definitions/ApiIntegratorLocalAuthorityResource"}},"extra":{"$ref":"#/definitions/ApiResourceResultCollectionExtra"},"errors":{"$ref":"#/definitions/ApiResourceErrors"},"status":{"$ref":"#/definitions/ApiResourceStatus"}}},"ApiResourceChanges[ApiIntegratorLocationResource]":{"type":"object","properties":{"resource":{"type":"array","items":{"$ref":"#/definitions/ApiIntegratorLocationResource"}},"extra":{"$ref":"#/definitions/ApiResourceResultUpdatesExtra"},"errors":{"$ref":"#/definitions/ApiResourceErrors"},"status":{"$ref":"#/definitions/ApiResourceStatus"}}},"ApiIntegratorLocationResource":{"type":"object","properties":{"Description":{"type":"string"},"Address":{"$ref":"#/definitions/ApiIntegratorLocationAddressResource"},"TimeZone":{"type":"string"},"LegalName":{"type":"string"},"Directions":{"type":"string"},"Geo":{"$ref":"#/definitions/ApiIntegratorLocationGeoResource"},"UniqueReference":{"type":"string"},"Acreage":{"format":"double","type":"number"},"IsDeleted":{"type":"boolean"},"GUID":{"format":"uuid","type":"string","example":"00000000-0000-0000-0000-000000000000"}}},"ApiIntegratorLocationAddressResource":{"type":"object","properties":{"HouseNumber":{"type":"string"},"Address1":{"type":"string"},"Address2":{"type":"string"},"Address3":{"type":"string"},"Address4":{"type":"string"},"Address5":{"type":"string"},"Address6":{"type":"string"},"Address7":{"type":"string"},"Address8":{"type":"string"},"Address9":{"type":"string"},"Postcode":{"type":"string"},"ContactMethods":{"$ref":"#/definitions/ApiIntegratorLocationAddressContactMethodsResource"},"PostTownListItem":{"$ref":"#/definitions/ApiIntegratorListItemResource"},"RegionCodeListItem":{"$ref":"#/definitions/ApiIntegratorListItemResource"}}},"ApiIntegratorLocationGeoResource":{"type":"object","properties":{"ZoneListItem":{"$ref":"#/definitions/ApiIntegratorListItemResource"},"ParcelBoundaryListItem":{"$ref":"#/definitions/ApiIntegratorListItemResource"},"Location":{"$ref":"#/definitions/ApiIntegratorLocationGeoLocationResource"},"Latitude":{"format":"double","type":"number"},"Longitude":{"format":"double","type":"number"}}},"ApiIntegratorLocationAddressContactMethodsResource":{"type":"object","properties":{"TelNo":{"type":"string"},"FaxNo":{"type":"string"}}},"ApiIntegratorLocationGeoLocationResource":{"type":"object","properties":{"Lat":{"format":"double","type":"number"},"Long":{"format":"double","type":"number"}}},"ApiResourceResultEntity[ApiIntegratorLocationResource]":{"type":"object","properties":{"resource":{"$ref":"#/definitions/ApiIntegratorLocationResource"},"links":{"$ref":"#/definitions/ApiResourceResultEntityLinks"},"extra":{"$ref":"#/definitions/ApiResourceResultEntityExtra"},"errors":{"$ref":"#/definitions/ApiResourceErrors"},"status":{"$ref":"#/definitions/ApiResourceStatus"}}},"ApiResourceResultCollection[ApiIntegratorLocationResource]":{"type":"object","properties":{"resource":{"type":"array","items":{"$ref":"#/definitions/ApiIntegratorLocationResource"}},"extra":{"$ref":"#/definitions/ApiResourceResultCollectionExtra"},"errors":{"$ref":"#/definitions/ApiResourceErrors"},"status":{"$ref":"#/definitions/ApiResourceStatus"}}},"ApiResourceChanges[ApiIntegratorLodgementResource]":{"type":"object","properties":{"resource":{"type":"array","items":{"$ref":"#/definitions/ApiIntegratorLodgementResource"}},"extra":{"$ref":"#/definitions/ApiResourceResultUpdatesExtra"},"errors":{"$ref":"#/definitions/ApiResourceErrors"},"status":{"$ref":"#/definitions/ApiResourceStatus"}}},"ApiIntegratorLodgementResource":{"type":"object","properties":{"IsDeleted":{"type":"boolean"},"DateLodged":{"format":"localDate","type":"string","example":"2000-01-01"},"Reference":{"type":"string"},"LodgementTypeListItem":{"$ref":"#/definitions/ApiIntegratorListItemResource"},"GUID":{"format":"uuid","type":"string","example":"00000000-0000-0000-0000-000000000000"}}},"ApiResourceResultEntity[ApiIntegratorLodgementResource]":{"type":"object","properties":{"resource":{"$ref":"#/definitions/ApiIntegratorLodgementResource"},"links":{"$ref":"#/definitions/ApiResourceResultEntityLinks"},"extra":{"$ref":"#/definitions/ApiResourceResultEntityExtra"},"errors":{"$ref":"#/definitions/ApiResourceErrors"},"status":{"$ref":"#/definitions/ApiResourceStatus"}}},"ApiResourceResultCollection[ApiIntegratorLodgementResource]":{"type":"object","properties":{"resource":{"type":"array","items":{"$ref":"#/definitions/ApiIntegratorLodgementResource"}},"extra":{"$ref":"#/definitions/ApiResourceResultCollectionExtra"},"errors":{"$ref":"#/definitions/ApiResourceErrors"},"status":{"$ref":"#/definitions/ApiResourceStatus"}}},"ApiResourceResultEntity[ApiIntegratorLodgementTypeResource]":{"type":"object","properties":{"resource":{"$ref":"#/definitions/ApiIntegratorLodgementTypeResource"},"links":{"$ref":"#/definitions/ApiResourceResultEntityLinks"},"extra":{"$ref":"#/definitions/ApiResourceResultEntityExtra"},"errors":{"$ref":"#/definitions/ApiResourceErrors"},"status":{"$ref":"#/definitions/ApiResourceStatus"}}},"ApiIntegratorLodgementTypeResource":{"type":"object","properties":{"Description":{"type":"string"},"IsDeleted":{"type":"boolean"},"GUID":{"format":"uuid","type":"string","example":"00000000-0000-0000-0000-000000000000"}}},"ApiResourceResultCollection[ApiIntegratorLodgementTypeResource]":{"type":"object","properties":{"resource":{"type":"array","items":{"$ref":"#/definitions/ApiIntegratorLodgementTypeResource"}},"extra":{"$ref":"#/definitions/ApiResourceResultCollectionExtra"},"errors":{"$ref":"#/definitions/ApiResourceErrors"},"status":{"$ref":"#/definitions/ApiResourceStatus"}}},"ApiResourceResultEntity[ApiIntegratorMarketResource]":{"type":"object","properties":{"resource":{"$ref":"#/definitions/ApiIntegratorMarketResource"},"links":{"$ref":"#/definitions/ApiResourceResultEntityLinks"},"extra":{"$ref":"#/definitions/ApiResourceResultEntityExtra"},"errors":{"$ref":"#/definitions/ApiResourceErrors"},"status":{"$ref":"#/definitions/ApiResourceStatus"}}},"ApiIntegratorMarketResource":{"type":"object","properties":{"Description":{"type":"string"},"GUID":{"format":"uuid","type":"string","example":"00000000-0000-0000-0000-000000000000"}}},"ApiResourceResultCollection[ApiIntegratorMarketResource]":{"type":"object","properties":{"resource":{"type":"array","items":{"$ref":"#/definitions/ApiIntegratorMarketResource"}},"extra":{"$ref":"#/definitions/ApiResourceResultCollectionExtra"},"errors":{"$ref":"#/definitions/ApiResourceErrors"},"status":{"$ref":"#/definitions/ApiResourceStatus"}}},"ApiResourceChanges[ApiIntegratorMasterCustomerResource]":{"type":"object","properties":{"resource":{"type":"array","items":{"$ref":"#/definitions/ApiIntegratorMasterCustomerResource"}},"extra":{"$ref":"#/definitions/ApiResourceResultUpdatesExtra"},"errors":{"$ref":"#/definitions/ApiResourceErrors"},"status":{"$ref":"#/definitions/ApiResourceStatus"}}},"ApiIntegratorMasterCustomerResource":{"type":"object","properties":{"Name":{"type":"string"},"ARAccountCode":{"type":"string"},"APAccountCode":{"type":"string"},"CurrencyListItem":{"$ref":"#/definitions/ApiIntegratorListItemResource"},"GUID":{"format":"uuid","type":"string","example":"00000000-0000-0000-0000-000000000000"}}},"ApiResourceResultEntity[ApiIntegratorMasterCustomerResource]":{"type":"object","properties":{"resource":{"$ref":"#/definitions/ApiIntegratorMasterCustomerResource"},"links":{"$ref":"#/definitions/ApiResourceResultEntityLinks"},"extra":{"$ref":"#/definitions/ApiResourceResultEntityExtra"},"errors":{"$ref":"#/definitions/ApiResourceErrors"},"status":{"$ref":"#/definitions/ApiResourceStatus"}}},"ApiResourceResultCollection[ApiIntegratorMasterCustomerResource]":{"type":"object","properties":{"resource":{"type":"array","items":{"$ref":"#/definitions/ApiIntegratorMasterCustomerResource"}},"extra":{"$ref":"#/definitions/ApiResourceResultCollectionExtra"},"errors":{"$ref":"#/definitions/ApiResourceErrors"},"status":{"$ref":"#/definitions/ApiResourceStatus"}}},"ApiResourceResultEntity[ApiIntegratorMaterialResource]":{"type":"object","properties":{"resource":{"$ref":"#/definitions/ApiIntegratorMaterialResource"},"links":{"$ref":"#/definitions/ApiResourceResultEntityLinks"},"extra":{"$ref":"#/definitions/ApiResourceResultEntityExtra"},"errors":{"$ref":"#/definitions/ApiResourceErrors"},"status":{"$ref":"#/definitions/ApiResourceStatus"}}},"ApiIntegratorMaterialResource":{"type":"object","properties":{"Description":{"type":"string"},"IsDeleted":{"type":"boolean"},"Color":{"type":"string"},"AnalysisCode":{"type":"string"},"ShortName":{"type":"string"},"MaterialStateListItem":{"$ref":"#/definitions/ApiIntegratorListItemResource"},"MaterialClassListItem":{"$ref":"#/definitions/ApiIntegratorListItemResource"},"EWCCodeListItem":{"$ref":"#/definitions/ApiIntegratorListItemResource"},"GUID":{"format":"uuid","type":"string","example":"00000000-0000-0000-0000-000000000000"}}},"ApiResourceResultCollection[ApiIntegratorMaterialResource]":{"type":"object","properties":{"resource":{"type":"array","items":{"$ref":"#/definitions/ApiIntegratorMaterialResource"}},"extra":{"$ref":"#/definitions/ApiResourceResultCollectionExtra"},"errors":{"$ref":"#/definitions/ApiResourceErrors"},"status":{"$ref":"#/definitions/ApiResourceStatus"}}},"ApiResourceChanges[ApiIntegratorMaterialClassResource]":{"type":"object","properties":{"resource":{"type":"array","items":{"$ref":"#/definitions/ApiIntegratorMaterialClassResource"}},"extra":{"$ref":"#/definitions/ApiResourceResultUpdatesExtra"},"errors":{"$ref":"#/definitions/ApiResourceErrors"},"status":{"$ref":"#/definitions/ApiResourceStatus"}}},"ApiIntegratorMaterialClassResource":{"type":"object","properties":{"Description":{"type":"string"},"IsDeleted":{"type":"boolean"},"AnalysisCode":{"type":"string"},"MaterialClassGroupListItem":{"$ref":"#/definitions/ApiIntegratorListItemResource"},"GUID":{"format":"uuid","type":"string","example":"00000000-0000-0000-0000-000000000000"}}},"ApiResourceResultEntity[ApiIntegratorMaterialClassResource]":{"type":"object","properties":{"resource":{"$ref":"#/definitions/ApiIntegratorMaterialClassResource"},"links":{"$ref":"#/definitions/ApiResourceResultEntityLinks"},"extra":{"$ref":"#/definitions/ApiResourceResultEntityExtra"},"errors":{"$ref":"#/definitions/ApiResourceErrors"},"status":{"$ref":"#/definitions/ApiResourceStatus"}}},"ApiResourceResultCollection[ApiIntegratorMaterialClassResource]":{"type":"object","properties":{"resource":{"type":"array","items":{"$ref":"#/definitions/ApiIntegratorMaterialClassResource"}},"extra":{"$ref":"#/definitions/ApiResourceResultCollectionExtra"},"errors":{"$ref":"#/definitions/ApiResourceErrors"},"status":{"$ref":"#/definitions/ApiResourceStatus"}}},"ApiResourceChanges[ApiIntegratorMaterialClassGroupResource]":{"type":"object","properties":{"resource":{"type":"array","items":{"$ref":"#/definitions/ApiIntegratorMaterialClassGroupResource"}},"extra":{"$ref":"#/definitions/ApiResourceResultUpdatesExtra"},"errors":{"$ref":"#/definitions/ApiResourceErrors"},"status":{"$ref":"#/definitions/ApiResourceStatus"}}},"ApiIntegratorMaterialClassGroupResource":{"type":"object","properties":{"Description":{"type":"string"},"IsDeleted":{"type":"boolean"},"GUID":{"format":"uuid","type":"string","example":"00000000-0000-0000-0000-000000000000"}}},"ApiResourceResultEntity[ApiIntegratorMaterialClassGroupResource]":{"type":"object","properties":{"resource":{"$ref":"#/definitions/ApiIntegratorMaterialClassGroupResource"},"links":{"$ref":"#/definitions/ApiResourceResultEntityLinks"},"extra":{"$ref":"#/definitions/ApiResourceResultEntityExtra"},"errors":{"$ref":"#/definitions/ApiResourceErrors"},"status":{"$ref":"#/definitions/ApiResourceStatus"}}},"ApiResourceResultCollection[ApiIntegratorMaterialClassGroupResource]":{"type":"object","properties":{"resource":{"type":"array","items":{"$ref":"#/definitions/ApiIntegratorMaterialClassGroupResource"}},"extra":{"$ref":"#/definitions/ApiResourceResultCollectionExtra"},"errors":{"$ref":"#/definitions/ApiResourceErrors"},"status":{"$ref":"#/definitions/ApiResourceStatus"}}},"ApiResourceResultEntity[ApiIntegratorMaterialFinishedStateResource]":{"type":"object","properties":{"resource":{"$ref":"#/definitions/ApiIntegratorMaterialFinishedStateResource"},"links":{"$ref":"#/definitions/ApiResourceResultEntityLinks"},"extra":{"$ref":"#/definitions/ApiResourceResultEntityExtra"},"errors":{"$ref":"#/definitions/ApiResourceErrors"},"status":{"$ref":"#/definitions/ApiResourceStatus"}}},"ApiIntegratorMaterialFinishedStateResource":{"type":"object","properties":{"Description":{"type":"string"},"IsDeleted":{"type":"boolean"},"GUID":{"format":"uuid","type":"string","example":"00000000-0000-0000-0000-000000000000"}}},"ApiResourceResultCollection[ApiIntegratorMaterialFinishedStateResource]":{"type":"object","properties":{"resource":{"type":"array","items":{"$ref":"#/definitions/ApiIntegratorMaterialFinishedStateResource"}},"extra":{"$ref":"#/definitions/ApiResourceResultCollectionExtra"},"errors":{"$ref":"#/definitions/ApiResourceErrors"},"status":{"$ref":"#/definitions/ApiResourceStatus"}}},"ApiResourceResultEntity[ApiIntegratorMaterialProducerTypeResource]":{"type":"object","properties":{"resource":{"$ref":"#/definitions/ApiIntegratorMaterialProducerTypeResource"},"links":{"$ref":"#/definitions/ApiResourceResultEntityLinks"},"extra":{"$ref":"#/definitions/ApiResourceResultEntityExtra"},"errors":{"$ref":"#/definitions/ApiResourceErrors"},"status":{"$ref":"#/definitions/ApiResourceStatus"}}},"ApiIntegratorMaterialProducerTypeResource":{"type":"object","properties":{"Description":{"type":"string"},"IsDeleted":{"type":"boolean"},"GUID":{"format":"uuid","type":"string","example":"00000000-0000-0000-0000-000000000000"}}},"ApiResourceResultCollection[ApiIntegratorMaterialProducerTypeResource]":{"type":"object","properties":{"resource":{"type":"array","items":{"$ref":"#/definitions/ApiIntegratorMaterialProducerTypeResource"}},"extra":{"$ref":"#/definitions/ApiResourceResultCollectionExtra"},"errors":{"$ref":"#/definitions/ApiResourceErrors"},"status":{"$ref":"#/definitions/ApiResourceStatus"}}},"ApiResourceResultEntity[ApiIntegratorMaterialStateResource]":{"type":"object","properties":{"resource":{"$ref":"#/definitions/ApiIntegratorMaterialStateResource"},"links":{"$ref":"#/definitions/ApiResourceResultEntityLinks"},"extra":{"$ref":"#/definitions/ApiResourceResultEntityExtra"},"errors":{"$ref":"#/definitions/ApiResourceErrors"},"status":{"$ref":"#/definitions/ApiResourceStatus"}}},"ApiIntegratorMaterialStateResource":{"type":"object","properties":{"Description":{"type":"string"},"IsDeleted":{"type":"boolean"},"GUID":{"format":"uuid","type":"string","example":"00000000-0000-0000-0000-000000000000"}}},"ApiResourceResultCollection[ApiIntegratorMaterialStateResource]":{"type":"object","properties":{"resource":{"type":"array","items":{"$ref":"#/definitions/ApiIntegratorMaterialStateResource"}},"extra":{"$ref":"#/definitions/ApiResourceResultCollectionExtra"},"errors":{"$ref":"#/definitions/ApiResourceErrors"},"status":{"$ref":"#/definitions/ApiResourceStatus"}}},"ApiResourceResultEntity[ApiIntegratorMobileSettingsProfileListResource]":{"type":"object","properties":{"resource":{"$ref":"#/definitions/ApiIntegratorMobileSettingsProfileListResource"},"links":{"$ref":"#/definitions/ApiResourceResultEntityLinks"},"extra":{"$ref":"#/definitions/ApiResourceResultEntityExtra"},"errors":{"$ref":"#/definitions/ApiResourceErrors"},"status":{"$ref":"#/definitions/ApiResourceStatus"}}},"ApiIntegratorMobileSettingsProfileListResource":{"type":"object","properties":{"Description":{"type":"string"},"IsDeleted":{"type":"boolean"},"GUID":{"format":"uuid","type":"string","example":"00000000-0000-0000-0000-000000000000"}}},"ApiResourceResultCollection[ApiIntegratorMobileSettingsProfileListResource]":{"type":"object","properties":{"resource":{"type":"array","items":{"$ref":"#/definitions/ApiIntegratorMobileSettingsProfileListResource"}},"extra":{"$ref":"#/definitions/ApiResourceResultCollectionExtra"},"errors":{"$ref":"#/definitions/ApiResourceErrors"},"status":{"$ref":"#/definitions/ApiResourceStatus"}}},"ApiResourceResultCollection[ApiIntegratorMunicipalAccountBuildingTypeResource]":{"type":"object","properties":{"resource":{"type":"array","items":{"$ref":"#/definitions/ApiIntegratorMunicipalAccountBuildingTypeResource"}},"extra":{"$ref":"#/definitions/ApiResourceResultCollectionExtra"},"errors":{"$ref":"#/definitions/ApiResourceErrors"},"status":{"$ref":"#/definitions/ApiResourceStatus"}}},"ApiIntegratorMunicipalAccountBuildingTypeResource":{"type":"object","properties":{"Description":{"type":"string"},"IsDeleted":{"type":"boolean"},"GUID":{"format":"uuid","type":"string","example":"00000000-0000-0000-0000-000000000000"}}},"ApiResourceResultCollection[ApiIntegratorMunicipalAccountStateResource]":{"type":"object","properties":{"resource":{"type":"array","items":{"$ref":"#/definitions/ApiIntegratorMunicipalAccountStateResource"}},"extra":{"$ref":"#/definitions/ApiResourceResultCollectionExtra"},"errors":{"$ref":"#/definitions/ApiResourceErrors"},"status":{"$ref":"#/definitions/ApiResourceStatus"}}},"ApiIntegratorMunicipalAccountStateResource":{"type":"object","properties":{"Description":{"type":"string"},"IsDeleted":{"type":"boolean"},"GUID":{"format":"uuid","type":"string","example":"00000000-0000-0000-0000-000000000000"}}},"ApiResourceChanges[ApiIntegratorNotificationResource]":{"type":"object","properties":{"resource":{"type":"array","items":{"$ref":"#/definitions/ApiIntegratorNotificationResource"}},"extra":{"$ref":"#/definitions/ApiResourceResultUpdatesExtra"},"errors":{"$ref":"#/definitions/ApiResourceErrors"},"status":{"$ref":"#/definitions/ApiResourceStatus"}}},"ApiIntegratorNotificationResource":{"type":"object","properties":{"ThirdPartyKey":{"type":"string"},"GeneratedTimestamp":{"format":"dateTimeOffset","type":"string","example":"2000-01-01T00:00:00.0000000+01:00"},"SentTimeStamp":{"format":"dateTime","type":"string","example":"2000-01-01 00:00:00.000"},"ResponseDate":{"format":"dateTime","type":"string","example":"2000-01-01 00:00:00.000"},"ResponseString":{"type":"string"},"RelatedApplicationNotificationMessageTransportProviderGuid":{"format":"uuid","type":"string","example":"00000000-0000-0000-0000-000000000000"},"RelatedApplicationNotificationMessageTransportGuid":{"format":"uuid","type":"string","example":"00000000-0000-0000-0000-000000000000"},"RelatedApplicationNotificationRunItemGuid":{"format":"uuid","type":"string","example":"00000000-0000-0000-0000-000000000000"},"Subject":{"type":"string"},"DestinationAddress":{"type":"string"},"Message":{"type":"string"},"IsSent":{"type":"boolean"},"GUID":{"format":"uuid","type":"string","example":"00000000-0000-0000-0000-000000000000"}}},"ApiResourceResultEntity[ApiIntegratorNotificationResource]":{"type":"object","properties":{"resource":{"$ref":"#/definitions/ApiIntegratorNotificationResource"},"links":{"$ref":"#/definitions/ApiResourceResultEntityLinks"},"extra":{"$ref":"#/definitions/ApiResourceResultEntityExtra"},"errors":{"$ref":"#/definitions/ApiResourceErrors"},"status":{"$ref":"#/definitions/ApiResourceStatus"}}},"ApiResourceResultCollection[ApiIntegratorNotificationResource]":{"type":"object","properties":{"resource":{"type":"array","items":{"$ref":"#/definitions/ApiIntegratorNotificationResource"}},"extra":{"$ref":"#/definitions/ApiResourceResultCollectionExtra"},"errors":{"$ref":"#/definitions/ApiResourceErrors"},"status":{"$ref":"#/definitions/ApiResourceStatus"}}},"ApiResourceChanges[ApiIntegratorOneOffActionResource]":{"type":"object","properties":{"resource":{"type":"array","items":{"$ref":"#/definitions/ApiIntegratorOneOffActionResource"}},"extra":{"$ref":"#/definitions/ApiResourceResultUpdatesExtra"},"errors":{"$ref":"#/definitions/ApiResourceErrors"},"status":{"$ref":"#/definitions/ApiResourceStatus"}}},"ApiIntegratorOneOffActionResource":{"type":"object","properties":{"RelatedOrderGuid":{"format":"uuid","type":"string","example":"00000000-0000-0000-0000-000000000000"},"RelatedPriceGuid":{"format":"uuid","type":"string","example":"00000000-0000-0000-0000-000000000000"},"RelatedPriceAdjustmentGuid":{"format":"uuid","type":"string","example":"00000000-0000-0000-0000-000000000000"},"RelatedUserFinanciallyConfirmedByGuid":{"format":"uuid","type":"string","example":"00000000-0000-0000-0000-000000000000"},"RelatedJobGuid":{"format":"uuid","type":"string","example":"00000000-0000-0000-0000-000000000000"},"RelatedRouteVisitGuid":{"format":"uuid","type":"string","example":"00000000-0000-0000-0000-000000000000"},"RelatedPONumberGuid":{"format":"uuid","type":"string","example":"00000000-0000-0000-0000-000000000000"},"RelatedServiceAgreementGuid":{"format":"uuid","type":"string","example":"00000000-0000-0000-0000-000000000000"},"RelatedWeighingInGuid":{"format":"uuid","type":"string","example":"00000000-0000-0000-0000-000000000000"},"RelatedWeighingOutGuid":{"format":"uuid","type":"string","example":"00000000-0000-0000-0000-000000000000"},"ContainerTypeListItem":{"$ref":"#/definitions/ApiIntegratorListItemResource"},"MaterialListItem":{"$ref":"#/definitions/ApiIntegratorListItemResource"},"ReasonListItem":{"$ref":"#/definitions/ApiIntegratorListItemResource"},"ServiceListItem":{"$ref":"#/definitions/ApiIntegratorListItemResource"},"ActionListItem":{"$ref":"#/definitions/ApiIntegratorListItemResource"},"DateCreated":{"format":"localDate","type":"string","example":"2000-01-01"},"DateRequired":{"format":"localDate","type":"string","example":"2000-01-01"},"IsDiscount":{"type":"boolean"},"IsFinanciallyConfirmed":{"type":"boolean"},"IsQuantityAdjustment":{"type":"boolean"},"IsRateAdjustment":{"type":"boolean"},"IsWeightAdjustment":{"type":"boolean"},"PriceOverride":{"format":"double","type":"number"},"AdjustedRate":{"format":"double","type":"number"},"AdjustedWeight":{"format":"double","type":"number"},"CustomerOrderNo":{"type":"string"},"DateTo":{"format":"localDate","type":"string","example":"2000-01-01"},"HoursChargable":{"format":"double","type":"number"},"Notes":{"type":"string"},"PONumber":{"type":"string"},"Quantity":{"format":"int32","type":"integer"},"ReferenceNo":{"type":"string"},"GUID":{"format":"uuid","type":"string","example":"00000000-0000-0000-0000-000000000000"}}},"ApiResourceResultEntity[ApiIntegratorOneOffActionResource]":{"type":"object","properties":{"resource":{"$ref":"#/definitions/ApiIntegratorOneOffActionResource"},"links":{"$ref":"#/definitions/ApiResourceResultEntityLinks"},"extra":{"$ref":"#/definitions/ApiResourceResultEntityExtra"},"errors":{"$ref":"#/definitions/ApiResourceErrors"},"status":{"$ref":"#/definitions/ApiResourceStatus"}}},"ApiResourceResultCollection[ApiIntegratorOneOffActionResource]":{"type":"object","properties":{"resource":{"type":"array","items":{"$ref":"#/definitions/ApiIntegratorOneOffActionResource"}},"extra":{"$ref":"#/definitions/ApiResourceResultCollectionExtra"},"errors":{"$ref":"#/definitions/ApiResourceErrors"},"status":{"$ref":"#/definitions/ApiResourceStatus"}}},"ApiResourceChanges[ApiIntegratorOrderResource]":{"type":"object","properties":{"resource":{"type":"array","items":{"$ref":"#/definitions/ApiIntegratorOrderResource"}},"extra":{"$ref":"#/definitions/ApiResourceResultUpdatesExtra"},"errors":{"$ref":"#/definitions/ApiResourceErrors"},"status":{"$ref":"#/definitions/ApiResourceStatus"}}},"ApiIntegratorOrderResource":{"type":"object","properties":{"RelatedSiteGuid":{"format":"uuid","type":"string","example":"00000000-0000-0000-0000-000000000000"},"RelatedSiteAreaGuid":{"format":"uuid","type":"string","example":"00000000-0000-0000-0000-000000000000"},"RelatedSupplierSiteForServiceGuid":{"format":"uuid","type":"string","example":"00000000-0000-0000-0000-000000000000"},"RelatedSupplierSiteForTransportGuid":{"format":"uuid","type":"string","example":"00000000-0000-0000-0000-000000000000"},"RelatedUserSalesRepGuid":{"format":"uuid","type":"string","example":"00000000-0000-0000-0000-000000000000"},"RelatedServiceAgreementGuid":{"format":"uuid","type":"string","example":"00000000-0000-0000-0000-000000000000"},"OrderNumber":{"type":"string"},"CustomerOrderNumber":{"type":"string"},"OrderedBy":{"type":"string"},"ProcessFrom":{"format":"localDate","type":"string","example":"2000-01-01"},"ValidUntil":{"format":"localDate","type":"string","example":"2000-01-01"},"Notes":{"type":"string"},"DriverNotes":{"type":"string"},"IsCustomerOwnedEquipment":{"type":"boolean"},"CompanyOutletListItem":{"$ref":"#/definitions/ApiIntegratorListItemResource"},"ServiceListItem":{"$ref":"#/definitions/ApiIntegratorListItemResource"},"MaterialListItem":{"$ref":"#/definitions/ApiIntegratorListItemResource"},"DefaultContainerTypeListItem":{"$ref":"#/definitions/ApiIntegratorListItemResource"},"PriorityListItem":{"$ref":"#/definitions/ApiIntegratorListItemResource"},"PaymentTypeListItem":{"$ref":"#/definitions/ApiIntegratorListItemResource"},"RelatedLocationDestinationGuid":{"format":"uuid","type":"string","example":"00000000-0000-0000-0000-000000000000"},"Containers":{"type":"array","items":{"$ref":"#/definitions/ApiIntegratorOrderContainerResource"}},"AreaOfOriginListItem":{"$ref":"#/definitions/ApiIntegratorListItemResource"},"ItemRentals":{"type":"array","items":{"$ref":"#/definitions/ApiIntegratorOrderItemRentalResource"}},"InspectionTypeListItem":{"$ref":"#/definitions/ApiIntegratorListItemResource"},"ItemTimeStamp":{"format":"dateTime","type":"string","example":"2000-01-01 00:00:00.000"},"PermitRequired":{"type":"boolean"},"StandingJobs":{"type":"array","items":{"$ref":"#/definitions/ApiIntegratorOrderStandingJobResource"}},"RouteAssignments":{"type":"array","items":{"$ref":"#/definitions/ApiIntegratorOrderRouteAssignmentResource"}},"RouteCalloutRequests":{"type":"array","items":{"$ref":"#/definitions/ApiIntegratorOrderRouteCalloutRequestResource"}},"IsDeleted":{"type":"boolean"},"RelatedOrderCombinationGroupingGuid":{"format":"uuid","type":"string","example":"00000000-0000-0000-0000-000000000000"},"RelatedPriceGuidFilter":{"format":"uuid","type":"string","example":"00000000-0000-0000-0000-000000000000"},"RelatedPriceModifierGuidFilter":{"format":"uuid","type":"string","example":"00000000-0000-0000-0000-000000000000"},"RelatedCostGuidFilter":{"format":"uuid","type":"string","example":"00000000-0000-0000-0000-000000000000"},"StandingJobsSiteAreaGuidFilter":{"format":"uuid","type":"string","example":"00000000-0000-0000-0000-000000000000"},"StandingJobsSysUserDriverGuidFilter":{"format":"uuid","type":"string","example":"00000000-0000-0000-0000-000000000000"},"StandingJobsVehicleGuidFilter":{"format":"uuid","type":"string","example":"00000000-0000-0000-0000-000000000000"},"StandingJobsStartDateFilter":{"format":"localDate","type":"string","example":"2000-01-01"},"StandingJobsEndDateFilter":{"format":"localDate","type":"string","example":"2000-01-01"},"RouteAssignmentSiteAreaGuidFilter":{"format":"uuid","type":"string","example":"00000000-0000-0000-0000-000000000000"},"RouteAssignmentStartDateFilter":{"format":"localDate","type":"string","example":"2000-01-01"},"RouteAssignmentEndDateFilter":{"format":"localDate","type":"string","example":"2000-01-01"},"RelatedContainerGuidFilter":{"format":"uuid","type":"string","example":"00000000-0000-0000-0000-000000000000"},"ContainersGeoLocationLatFilter":{"format":"double","type":"number"},"ContainersGeoLocationLongFilter":{"format":"double","type":"number"},"RelatedRouteVisitGuidFilter":{"format":"uuid","type":"string","example":"00000000-0000-0000-0000-000000000000"},"RouteCalloutRequestGuidFilter":{"format":"uuid","type":"string","example":"00000000-0000-0000-0000-000000000000"},"GUID":{"format":"uuid","type":"string","example":"00000000-0000-0000-0000-000000000000"}}},"ApiIntegratorOrderContainerResource":{"type":"object","properties":{"Guid":{"format":"uuid","type":"string","example":"00000000-0000-0000-0000-000000000000"},"RelatedContainerGuid":{"format":"uuid","type":"string","example":"00000000-0000-0000-0000-000000000000"},"ContainerTypeListItem":{"$ref":"#/definitions/ApiIntegratorListItemResource"},"ContainerStateListItem":{"$ref":"#/definitions/ApiIntegratorListItemResource"},"Notes":{"type":"string"},"IsDeleted":{"type":"boolean"},"IsContainerAssignedWithoutJob":{"type":"boolean"},"IsFromIncreasedOrder":{"type":"boolean"},"IsContainerRemovedWithoutJob":{"type":"boolean"},"IsFixLocation":{"type":"boolean"},"Geo":{"$ref":"#/definitions/ApiIntegratorSiteOrderItemLocationGeoResource"},"StartDate":{"format":"localDate","type":"string","example":"2000-01-01"},"EndDate":{"format":"localDate","type":"string","example":"2000-01-01"},"DateLinked":{"format":"dateTimeOffset","type":"string","example":"2000-01-01T00:00:00.0000000+01:00"}}},"ApiIntegratorOrderItemRentalResource":{"type":"object","properties":{"RelatedPriceGuid":{"format":"uuid","type":"string","example":"00000000-0000-0000-0000-000000000000"},"RelatedPriceModifierGuid":{"format":"uuid","type":"string","example":"00000000-0000-0000-0000-000000000000"},"RelatedCostGuid":{"format":"uuid","type":"string","example":"00000000-0000-0000-0000-000000000000"},"ContainerTypeListItem":{"$ref":"#/definitions/ApiIntegratorListItemResource"},"ActionListItem":{"$ref":"#/definitions/ApiIntegratorListItemResource"},"StartDate":{"format":"localDate","type":"string","example":"2000-01-01"},"EndDate":{"format":"localDate","type":"string","example":"2000-01-01"},"IsStartOnStartOfCycle":{"type":"boolean"},"IsEndOnEndOfCycle":{"type":"boolean"},"Quantity":{"format":"int32","type":"integer"},"Notes":{"type":"string"},"IsArrears":{"type":"boolean"},"RentalQuantityAttributeListItem":{"$ref":"#/definitions/ApiIntegratorListItemResource"},"IsBinOnSiteBasedOnQuantityNow":{"type":"boolean"},"IsDiscount":{"type":"boolean"},"IsDeleted":{"type":"boolean"},"DiscountOverridePrice":{"format":"double","type":"number"},"DiscountReasonListItem":{"$ref":"#/definitions/ApiIntegratorListItemResource"},"Guid":{"format":"uuid","type":"string","example":"00000000-0000-0000-0000-000000000000"}}},"ApiIntegratorOrderStandingJobResource":{"type":"object","properties":{"Guid":{"format":"uuid","type":"string","example":"00000000-0000-0000-0000-000000000000"},"ActionListItem":{"$ref":"#/definitions/ApiIntegratorListItemResource"},"ContainerTypeListItem":{"$ref":"#/definitions/ApiIntegratorListItemResource"},"EndOnJobCompletion":{"type":"boolean"},"ExcludeNoBinOnSite":{"type":"boolean"},"IsNoPlannedDay":{"type":"boolean"},"PickupIntervalListItem":{"$ref":"#/definitions/ApiIntegratorListItemResource"},"StartDate":{"format":"localDate","type":"string","example":"2000-01-01"},"EndDate":{"format":"localDate","type":"string","example":"2000-01-01"},"CompanyOutletListItem":{"$ref":"#/definitions/ApiIntegratorListItemResource"},"RelatedSiteAreaGuid":{"format":"uuid","type":"string","example":"00000000-0000-0000-0000-000000000000"},"DayOfWeekListItem":{"$ref":"#/definitions/ApiIntegratorListItemResource"},"RelatedSysUserDriverGuid":{"format":"uuid","type":"string","example":"00000000-0000-0000-0000-000000000000"},"RelatedVehicleGuid":{"format":"uuid","type":"string","example":"00000000-0000-0000-0000-000000000000"},"RequestedBy":{"type":"string"},"IsDeleted":{"type":"boolean"}}},"ApiIntegratorOrderRouteAssignmentResource":{"type":"object","properties":{"Guid":{"format":"uuid","type":"string","example":"00000000-0000-0000-0000-000000000000"},"ActionListItem":{"$ref":"#/definitions/ApiIntegratorListItemResource"},"ContainerTypeListItem":{"$ref":"#/definitions/ApiIntegratorListItemResource"},"PickupIntervalListItem":{"$ref":"#/definitions/ApiIntegratorListItemResource"},"DayOfWeekListItem":{"$ref":"#/definitions/ApiIntegratorListItemResource"},"DayOfOccurrenceInMonthListItem":{"$ref":"#/definitions/ApiIntegratorListItemResource"},"Position":{"format":"int32","type":"integer"},"StartDate":{"format":"localDate","type":"string","example":"2000-01-01"},"EndDate":{"format":"localDate","type":"string","example":"2000-01-01"},"RequestedBy":{"type":"string"},"Notes":{"type":"string"},"MaxLiftQuantity":{"format":"int32","type":"integer"},"MinLiftQuantity":{"format":"int32","type":"integer"},"RequiresQuantity":{"type":"boolean"},"IsGpsAutoMatchingDisabled":{"type":"boolean"},"IsNoPlannedDate":{"type":"boolean"},"IsNoBinOnSiteExcluded":{"type":"boolean"},"RelatedRouteTemplateGuid":{"format":"uuid","type":"string","example":"00000000-0000-0000-0000-000000000000"},"RelatedSiteAreaGuid":{"format":"uuid","type":"string","example":"00000000-0000-0000-0000-000000000000"},"IsDeleted":{"type":"boolean"},"Exclusions":{"type":"array","items":{"$ref":"#/definitions/ApiIntegratorOrderRouteAssignmentExclusionResource"}}}},"ApiIntegratorOrderRouteCalloutRequestResource":{"type":"object","properties":{"Guid":{"format":"uuid","type":"string","example":"00000000-0000-0000-0000-000000000000"},"ActionListItem":{"$ref":"#/definitions/ApiIntegratorListItemResource"},"OutletListItem":{"$ref":"#/definitions/ApiIntegratorListItemResource"},"ContainerTypeListItem":{"$ref":"#/definitions/ApiIntegratorListItemResource"},"DateRequired":{"format":"localDate","type":"string","example":"2000-01-01"},"Notes":{"type":"string"},"RelatedRouteVisitGuid":{"format":"uuid","type":"string","example":"00000000-0000-0000-0000-000000000000"},"RequestedBy":{"type":"string"},"MaxLiftQuantity":{"format":"int32","type":"integer"},"IsDeleted":{"type":"boolean"}}},"ApiIntegratorSiteOrderItemLocationGeoResource":{"type":"object","properties":{"Location":{"$ref":"#/definitions/ApiIntegratorLocationGeoLocationResource"}}},"ApiIntegratorOrderRouteAssignmentExclusionResource":{"type":"object","properties":{"Guid":{"format":"uuid","type":"string","example":"00000000-0000-0000-0000-000000000000"},"ExcludeFrom":{"format":"localDate","type":"string","example":"2000-01-01"},"ExcludeTo":{"format":"localDate","type":"string","example":"2000-01-01"},"ExclusionTypeListItem":{"$ref":"#/definitions/ApiIntegratorListItemResource"},"ReasonListItem":{"$ref":"#/definitions/ApiIntegratorListItemResource"},"Notes":{"type":"string"}}},"ApiResourceResultEntity[ApiIntegratorOrderResource]":{"type":"object","properties":{"resource":{"$ref":"#/definitions/ApiIntegratorOrderResource"},"links":{"$ref":"#/definitions/ApiResourceResultEntityLinks"},"extra":{"$ref":"#/definitions/ApiResourceResultEntityExtra"},"errors":{"$ref":"#/definitions/ApiResourceErrors"},"status":{"$ref":"#/definitions/ApiResourceStatus"}}},"ApiResourceResultCollection[ApiIntegratorOrderResource]":{"type":"object","properties":{"resource":{"type":"array","items":{"$ref":"#/definitions/ApiIntegratorOrderResource"}},"extra":{"$ref":"#/definitions/ApiResourceResultCollectionExtra"},"errors":{"$ref":"#/definitions/ApiResourceErrors"},"status":{"$ref":"#/definitions/ApiResourceStatus"}}},"ApiResourceChanges[ApiIntegratorOrderCombinationGroupingResource]":{"type":"object","properties":{"resource":{"type":"array","items":{"$ref":"#/definitions/ApiIntegratorOrderCombinationGroupingResource"}},"extra":{"$ref":"#/definitions/ApiResourceResultUpdatesExtra"},"errors":{"$ref":"#/definitions/ApiResourceErrors"},"status":{"$ref":"#/definitions/ApiResourceStatus"}}},"ApiIntegratorOrderCombinationGroupingResource":{"type":"object","properties":{"RelatedOrderCombinationGroupGuid":{"format":"uuid","type":"string","example":"00000000-0000-0000-0000-000000000000"},"RelatedSiteGuid":{"format":"uuid","type":"string","example":"00000000-0000-0000-0000-000000000000"},"RelatedInvoiceBatchGuid":{"format":"uuid","type":"string","example":"00000000-0000-0000-0000-000000000000"},"RelatedPaymentGuid":{"format":"uuid","type":"string","example":"00000000-0000-0000-0000-000000000000"},"IsDeleted":{"type":"boolean"},"GUID":{"format":"uuid","type":"string","example":"00000000-0000-0000-0000-000000000000"}}},"ApiResourceResultEntity[ApiIntegratorOrderCombinationGroupingResource]":{"type":"object","properties":{"resource":{"$ref":"#/definitions/ApiIntegratorOrderCombinationGroupingResource"},"links":{"$ref":"#/definitions/ApiResourceResultEntityLinks"},"extra":{"$ref":"#/definitions/ApiResourceResultEntityExtra"},"errors":{"$ref":"#/definitions/ApiResourceErrors"},"status":{"$ref":"#/definitions/ApiResourceStatus"}}},"ApiResourceResultCollection[ApiIntegratorOrderCombinationGroupingResource]":{"type":"object","properties":{"resource":{"type":"array","items":{"$ref":"#/definitions/ApiIntegratorOrderCombinationGroupingResource"}},"extra":{"$ref":"#/definitions/ApiResourceResultCollectionExtra"},"errors":{"$ref":"#/definitions/ApiResourceErrors"},"status":{"$ref":"#/definitions/ApiResourceStatus"}}},"ApiResourceResultEntity[ApiIntegratorCompanyOutletResource]":{"type":"object","properties":{"resource":{"$ref":"#/definitions/ApiIntegratorCompanyOutletResource"},"links":{"$ref":"#/definitions/ApiResourceResultEntityLinks"},"extra":{"$ref":"#/definitions/ApiResourceResultEntityExtra"},"errors":{"$ref":"#/definitions/ApiResourceErrors"},"status":{"$ref":"#/definitions/ApiResourceStatus"}}},"ApiIntegratorCompanyOutletResource":{"type":"object","properties":{"Description":{"type":"string"},"IsDeleted":{"type":"boolean"},"AbbreviatedDescription":{"type":"string"},"AnalysisCode":{"type":"string"},"CompanyListItem":{"$ref":"#/definitions/ApiIntegratorListItemResource"},"OutletTypeListItem":{"$ref":"#/definitions/ApiIntegratorListItemResource"},"Address":{"$ref":"#/definitions/ApiIntegratorCompanyOutletAddressResource"},"DepartmentListItems":{"type":"array","items":{"$ref":"#/definitions/ApiIntegratorListItemResource"}},"AcceptedMaterials":{"type":"array","items":{"$ref":"#/definitions/ApiIntegratorCompanyOutletAcceptedMaterialResource"}},"AnalysisCodes":{"type":"array","items":{"$ref":"#/definitions/ApiIntegratorCompanyOutletAnalysisCodesResource"}},"VATRegistrationNumber":{"type":"string"},"RelatedLocationGuid":{"format":"uuid","type":"string","example":"00000000-0000-0000-0000-000000000000"},"GUID":{"format":"uuid","type":"string","example":"00000000-0000-0000-0000-000000000000"}}},"ApiIntegratorCompanyOutletAddressResource":{"type":"object","properties":{"HouseNumber":{"type":"string"},"Address1":{"type":"string"},"Address2":{"type":"string"},"Address3":{"type":"string"},"Address4":{"type":"string"},"Address5":{"type":"string"},"Postcode":{"type":"string"}}},"ApiIntegratorCompanyOutletAcceptedMaterialResource":{"type":"object","properties":{"WarnOnMinimumLoad":{"type":"boolean"},"MinimumLoadWeight":{"format":"double","type":"number"},"MaterialListItem":{"$ref":"#/definitions/ApiIntegratorListItemResource"},"IsDeleted":{"type":"boolean"},"Guid":{"format":"uuid","type":"string","example":"00000000-0000-0000-0000-000000000000"}}},"ApiIntegratorCompanyOutletAnalysisCodesResource":{"type":"object","properties":{"Description":{"type":"string"},"IsDeleted":{"type":"boolean"},"Guid":{"format":"uuid","type":"string","example":"00000000-0000-0000-0000-000000000000"}}},"ApiResourceResultCollection[ApiIntegratorCompanyOutletResource]":{"type":"object","properties":{"resource":{"type":"array","items":{"$ref":"#/definitions/ApiIntegratorCompanyOutletResource"}},"extra":{"$ref":"#/definitions/ApiResourceResultCollectionExtra"},"errors":{"$ref":"#/definitions/ApiResourceErrors"},"status":{"$ref":"#/definitions/ApiResourceStatus"}}},"ApiResourceResultEntity[ApiIntegratorOutletTypeResource]":{"type":"object","properties":{"resource":{"$ref":"#/definitions/ApiIntegratorOutletTypeResource"},"links":{"$ref":"#/definitions/ApiResourceResultEntityLinks"},"extra":{"$ref":"#/definitions/ApiResourceResultEntityExtra"},"errors":{"$ref":"#/definitions/ApiResourceErrors"},"status":{"$ref":"#/definitions/ApiResourceStatus"}}},"ApiIntegratorOutletTypeResource":{"type":"object","properties":{"Description":{"type":"string"},"IsDeleted":{"type":"boolean"},"GUID":{"format":"uuid","type":"string","example":"00000000-0000-0000-0000-000000000000"}}},"ApiResourceResultCollection[ApiIntegratorOutletTypeResource]":{"type":"object","properties":{"resource":{"type":"array","items":{"$ref":"#/definitions/ApiIntegratorOutletTypeResource"}},"extra":{"$ref":"#/definitions/ApiResourceResultCollectionExtra"},"errors":{"$ref":"#/definitions/ApiResourceErrors"},"status":{"$ref":"#/definitions/ApiResourceStatus"}}},"ApiResourceResultEntity[ApiIntegratorParcelBoundaryResource]":{"type":"object","properties":{"resource":{"$ref":"#/definitions/ApiIntegratorParcelBoundaryResource"},"links":{"$ref":"#/definitions/ApiResourceResultEntityLinks"},"extra":{"$ref":"#/definitions/ApiResourceResultEntityExtra"},"errors":{"$ref":"#/definitions/ApiResourceErrors"},"status":{"$ref":"#/definitions/ApiResourceStatus"}}},"ApiIntegratorParcelBoundaryResource":{"type":"object","properties":{"GeoJSON":{"type":"string"},"ParcelNo":{"type":"string"},"GUID":{"format":"uuid","type":"string","example":"00000000-0000-0000-0000-000000000000"}}},"ApiResourceResultCollection[ApiIntegratorParcelBoundaryResource]":{"type":"object","properties":{"resource":{"type":"array","items":{"$ref":"#/definitions/ApiIntegratorParcelBoundaryResource"}},"extra":{"$ref":"#/definitions/ApiResourceResultCollectionExtra"},"errors":{"$ref":"#/definitions/ApiResourceErrors"},"status":{"$ref":"#/definitions/ApiResourceStatus"}}},"ApiResourceChanges[ApiIntegratorPaymentResource]":{"type":"object","properties":{"resource":{"type":"array","items":{"$ref":"#/definitions/ApiIntegratorPaymentResource"}},"extra":{"$ref":"#/definitions/ApiResourceResultUpdatesExtra"},"errors":{"$ref":"#/definitions/ApiResourceErrors"},"status":{"$ref":"#/definitions/ApiResourceStatus"}}},"ApiIntegratorPaymentResource":{"type":"object","properties":{"RelatedCustomerGuid":{"format":"uuid","type":"string","example":"00000000-0000-0000-0000-000000000000"},"PaymentTypeListItem":{"$ref":"#/definitions/ApiIntegratorListItemResource"},"Amount":{"format":"double","type":"number"},"Reference":{"type":"string"},"EndToEndReference":{"type":"string"},"Notes":{"type":"string"},"IsBad":{"type":"boolean"},"IsAutoAllocated":{"type":"boolean"},"PaymentPointListItem":{"$ref":"#/definitions/ApiIntegratorListItemResource"},"CurrencyListItem":{"$ref":"#/definitions/ApiIntegratorListItemResource"},"DateBad":{"format":"zonedDateTime","type":"string","example":{"DateTime":"2000-01-01T00:00:00Z","TimeZone":"Europe/London"}},"DateBadExported":{"format":"zonedDateTime","type":"string","example":{"DateTime":"2000-01-01T00:00:00Z","TimeZone":"Europe/London"}},"DateCleared":{"format":"zonedDateTime","type":"string","example":{"DateTime":"2000-01-01T00:00:00Z","TimeZone":"Europe/London"}},"DateExported":{"format":"zonedDateTime","type":"string","example":{"DateTime":"2000-01-01T00:00:00Z","TimeZone":"Europe/London"}},"DateProcessed":{"format":"zonedDateTime","type":"string","example":{"DateTime":"2000-01-01T00:00:00Z","TimeZone":"Europe/London"}},"DateInput":{"format":"zonedDateTime","type":"string","example":{"DateTime":"2000-01-01T00:00:00Z","TimeZone":"Europe/London"}},"DateReceived":{"format":"zonedDateTime","type":"string","example":{"DateTime":"2000-01-01T00:00:00Z","TimeZone":"Europe/London"}},"AccountingPeriodListItem":{"$ref":"#/definitions/ApiIntegratorListItemResource"},"Allocations":{"type":"array","items":{"$ref":"#/definitions/ApiIntegratorPaymentAllocationResource"}},"Deallocations":{"type":"array","items":{"$ref":"#/definitions/ApiIntegratorPaymentDeallocationResource"}},"PaymentTransactions":{"type":"array","items":{"$ref":"#/definitions/ApiIntegratorPaymentTransactionResource"}},"RelatedJobGuids":{"type":"array","items":{"$ref":"#/definitions/ApiIntegratorJobPaymentResource"}},"RelatedInvoiceGuidFilter":{"format":"uuid","type":"string","example":"00000000-0000-0000-0000-000000000000"},"ReasonBadListItem":{"$ref":"#/definitions/ApiIntegratorListItemResource"},"AccountingPeriodBadListItem":{"$ref":"#/definitions/ApiIntegratorListItemResource"},"IsRefund":{"type":"boolean"},"TransactionPaymentReferenceFilter":{"type":"string"},"TransactionReferenceFilter":{"type":"string"},"RelatedRemitLocationGuid":{"format":"uuid","type":"string","example":"00000000-0000-0000-0000-000000000000"},"GUID":{"format":"uuid","type":"string","example":"00000000-0000-0000-0000-000000000000"}}},"ApiIntegratorPaymentAllocationResource":{"type":"object","properties":{"Guid":{"format":"uuid","type":"string","example":"00000000-0000-0000-0000-000000000000"},"Amount":{"format":"double","type":"number"},"DateInput":{"format":"zonedDateTime","type":"string","example":{"DateTime":"2000-01-01T00:00:00Z","TimeZone":"Europe/London"}},"AccountingPeriodListItem":{"$ref":"#/definitions/ApiIntegratorListItemResource"},"RelatedInvoiceGuid":{"format":"uuid","type":"string","example":"00000000-0000-0000-0000-000000000000"}}},"ApiIntegratorPaymentDeallocationResource":{"type":"object","properties":{"Guid":{"format":"uuid","type":"string","example":"00000000-0000-0000-0000-000000000000"},"RelatedInvoiceGuid":{"format":"uuid","type":"string","example":"00000000-0000-0000-0000-000000000000"},"RelatedUserDeallocatedByGuid":{"format":"uuid","type":"string","example":"00000000-0000-0000-0000-000000000000"},"Amount":{"format":"double","type":"number"},"DateInput":{"format":"zonedDateTime","type":"string","example":{"DateTime":"2000-01-01T00:00:00Z","TimeZone":"Europe/London"}},"DateDeallocated":{"format":"zonedDateTime","type":"string","example":{"DateTime":"2000-01-01T00:00:00Z","TimeZone":"Europe/London"}},"AllocationAccountingPeriodListItem":{"$ref":"#/definitions/ApiIntegratorListItemResource"},"DeallocationAccountingPeriodListItem":{"$ref":"#/definitions/ApiIntegratorListItemResource"}}},"ApiIntegratorPaymentTransactionResource":{"type":"object","properties":{"Guid":{"format":"uuid","type":"string","example":"00000000-0000-0000-0000-000000000000"},"IsDeleted":{"type":"boolean"},"CardType":{"type":"string"},"MaskedCardNumber":{"type":"string"},"DateReceived":{"format":"dateTime","type":"string","example":"2000-01-01 00:00:00.000"},"PaymentTypeListItem":{"$ref":"#/definitions/ApiIntegratorListItemResource"},"TransactionStatusListItem":{"$ref":"#/definitions/ApiIntegratorListItemResource"},"ReasonListItem":{"$ref":"#/definitions/ApiIntegratorListItemResource"},"ContactGuid":{"format":"uuid","type":"string","example":"00000000-0000-0000-0000-000000000000"},"PaymentReference":{"type":"string"},"Reference":{"type":"string"},"PaymentProvider":{"type":"string"},"ResultMessage":{"type":"string"},"Notes":{"type":"string"},"ResponseCode":{"type":"string"},"CurrencyCode":{"type":"string"},"Amount":{"format":"double","type":"number"},"AmountRefundable":{"format":"double","type":"number"},"PaymentProviderListItem":{"$ref":"#/definitions/ApiIntegratorListItemResource"},"PaymentPointListItem":{"$ref":"#/definitions/ApiIntegratorListItemResource"}}},"ApiIntegratorJobPaymentResource":{"type":"object","properties":{"RelatedJobGuid":{"format":"uuid","type":"string","example":"00000000-0000-0000-0000-000000000000"}}},"ApiResourceResultEntity[ApiIntegratorPaymentResource]":{"type":"object","properties":{"resource":{"$ref":"#/definitions/ApiIntegratorPaymentResource"},"links":{"$ref":"#/definitions/ApiResourceResultEntityLinks"},"extra":{"$ref":"#/definitions/ApiResourceResultEntityExtra"},"errors":{"$ref":"#/definitions/ApiResourceErrors"},"status":{"$ref":"#/definitions/ApiResourceStatus"}}},"ApiResourceResultCollection[ApiIntegratorPaymentResource]":{"type":"object","properties":{"resource":{"type":"array","items":{"$ref":"#/definitions/ApiIntegratorPaymentResource"}},"extra":{"$ref":"#/definitions/ApiResourceResultCollectionExtra"},"errors":{"$ref":"#/definitions/ApiResourceErrors"},"status":{"$ref":"#/definitions/ApiResourceStatus"}}},"ApiResourceResultEntity[ApiIntegratorPaymentHandlingCodeResource]":{"type":"object","properties":{"resource":{"$ref":"#/definitions/ApiIntegratorPaymentHandlingCodeResource"},"links":{"$ref":"#/definitions/ApiResourceResultEntityLinks"},"extra":{"$ref":"#/definitions/ApiResourceResultEntityExtra"},"errors":{"$ref":"#/definitions/ApiResourceErrors"},"status":{"$ref":"#/definitions/ApiResourceStatus"}}},"ApiIntegratorPaymentHandlingCodeResource":{"type":"object","properties":{"Description":{"type":"string"},"GUID":{"format":"uuid","type":"string","example":"00000000-0000-0000-0000-000000000000"}}},"ApiResourceResultCollection[ApiIntegratorPaymentHandlingCodeResource]":{"type":"object","properties":{"resource":{"type":"array","items":{"$ref":"#/definitions/ApiIntegratorPaymentHandlingCodeResource"}},"extra":{"$ref":"#/definitions/ApiResourceResultCollectionExtra"},"errors":{"$ref":"#/definitions/ApiResourceErrors"},"status":{"$ref":"#/definitions/ApiResourceStatus"}}},"ApiResourceResultEntity[ApiIntegratorPaymentPointResource]":{"type":"object","properties":{"resource":{"$ref":"#/definitions/ApiIntegratorPaymentPointResource"},"links":{"$ref":"#/definitions/ApiResourceResultEntityLinks"},"extra":{"$ref":"#/definitions/ApiResourceResultEntityExtra"},"errors":{"$ref":"#/definitions/ApiResourceErrors"},"status":{"$ref":"#/definitions/ApiResourceStatus"}}},"ApiIntegratorPaymentPointResource":{"type":"object","properties":{"Description":{"type":"string"},"GUID":{"format":"uuid","type":"string","example":"00000000-0000-0000-0000-000000000000"}}},"ApiResourceResultCollection[ApiIntegratorPaymentPointResource]":{"type":"object","properties":{"resource":{"type":"array","items":{"$ref":"#/definitions/ApiIntegratorPaymentPointResource"}},"extra":{"$ref":"#/definitions/ApiResourceResultCollectionExtra"},"errors":{"$ref":"#/definitions/ApiResourceErrors"},"status":{"$ref":"#/definitions/ApiResourceStatus"}}},"ApiResourceResultEntity[ApiIntegratorPaymentTermResource]":{"type":"object","properties":{"resource":{"$ref":"#/definitions/ApiIntegratorPaymentTermResource"},"links":{"$ref":"#/definitions/ApiResourceResultEntityLinks"},"extra":{"$ref":"#/definitions/ApiResourceResultEntityExtra"},"errors":{"$ref":"#/definitions/ApiResourceErrors"},"status":{"$ref":"#/definitions/ApiResourceStatus"}}},"ApiIntegratorPaymentTermResource":{"type":"object","properties":{"Description":{"type":"string"},"IsDeleted":{"type":"boolean"},"ShortCode":{"type":"string"},"GUID":{"format":"uuid","type":"string","example":"00000000-0000-0000-0000-000000000000"}}},"ApiResourceResultCollection[ApiIntegratorPaymentTermResource]":{"type":"object","properties":{"resource":{"type":"array","items":{"$ref":"#/definitions/ApiIntegratorPaymentTermResource"}},"extra":{"$ref":"#/definitions/ApiResourceResultCollectionExtra"},"errors":{"$ref":"#/definitions/ApiResourceErrors"},"status":{"$ref":"#/definitions/ApiResourceStatus"}}},"ApiResourceResultEntity[ApiIntegratorPaymentTypeResource]":{"type":"object","properties":{"resource":{"$ref":"#/definitions/ApiIntegratorPaymentTypeResource"},"links":{"$ref":"#/definitions/ApiResourceResultEntityLinks"},"extra":{"$ref":"#/definitions/ApiResourceResultEntityExtra"},"errors":{"$ref":"#/definitions/ApiResourceErrors"},"status":{"$ref":"#/definitions/ApiResourceStatus"}}},"ApiIntegratorPaymentTypeResource":{"type":"object","properties":{"Description":{"type":"string"},"IsDeleted":{"type":"boolean"},"IsDirectDebit":{"type":"boolean"},"IsCash":{"type":"boolean"},"IsAutoPay":{"type":"boolean"},"IsCard":{"type":"boolean"},"IsElectronic":{"type":"boolean"},"IsCheque":{"type":"boolean"},"AcceptLowValue":{"type":"boolean"},"IsSystemPayment":{"type":"boolean"},"CanMarkAsBad":{"type":"boolean"},"IsNegative":{"type":"boolean"},"IsForLodgement":{"type":"boolean"},"ShortCode":{"type":"string"},"GUID":{"format":"uuid","type":"string","example":"00000000-0000-0000-0000-000000000000"}}},"ApiResourceResultCollection[ApiIntegratorPaymentTypeResource]":{"type":"object","properties":{"resource":{"type":"array","items":{"$ref":"#/definitions/ApiIntegratorPaymentTypeResource"}},"extra":{"$ref":"#/definitions/ApiResourceResultCollectionExtra"},"errors":{"$ref":"#/definitions/ApiResourceErrors"},"status":{"$ref":"#/definitions/ApiResourceStatus"}}},"ApiResourceResultEntity[ApiIntegratorPickupIntervalResource]":{"type":"object","properties":{"resource":{"$ref":"#/definitions/ApiIntegratorPickupIntervalResource"},"links":{"$ref":"#/definitions/ApiResourceResultEntityLinks"},"extra":{"$ref":"#/definitions/ApiResourceResultEntityExtra"},"errors":{"$ref":"#/definitions/ApiResourceErrors"},"status":{"$ref":"#/definitions/ApiResourceStatus"}}},"ApiIntegratorPickupIntervalResource":{"type":"object","properties":{"Description":{"type":"string"},"NoOfDays":{"format":"int32","type":"integer"},"NoOfMonths":{"format":"int32","type":"integer"},"IsWeekly":{"type":"boolean"},"IsMonthly":{"type":"boolean"},"GUID":{"format":"uuid","type":"string","example":"00000000-0000-0000-0000-000000000000"}}},"ApiResourceResultCollection[ApiIntegratorPickupIntervalResource]":{"type":"object","properties":{"resource":{"type":"array","items":{"$ref":"#/definitions/ApiIntegratorPickupIntervalResource"}},"extra":{"$ref":"#/definitions/ApiResourceResultCollectionExtra"},"errors":{"$ref":"#/definitions/ApiResourceErrors"},"status":{"$ref":"#/definitions/ApiResourceStatus"}}},"ApiResourceResultEntity[ApiIntegratorPostTownResource]":{"type":"object","properties":{"resource":{"$ref":"#/definitions/ApiIntegratorPostTownResource"},"links":{"$ref":"#/definitions/ApiResourceResultEntityLinks"},"extra":{"$ref":"#/definitions/ApiResourceResultEntityExtra"},"errors":{"$ref":"#/definitions/ApiResourceErrors"},"status":{"$ref":"#/definitions/ApiResourceStatus"}}},"ApiIntegratorPostTownResource":{"type":"object","properties":{"Description":{"type":"string"},"GUID":{"format":"uuid","type":"string","example":"00000000-0000-0000-0000-000000000000"}}},"ApiResourceResultCollection[ApiIntegratorPostTownResource]":{"type":"object","properties":{"resource":{"type":"array","items":{"$ref":"#/definitions/ApiIntegratorPostTownResource"}},"extra":{"$ref":"#/definitions/ApiResourceResultCollectionExtra"},"errors":{"$ref":"#/definitions/ApiResourceErrors"},"status":{"$ref":"#/definitions/ApiResourceStatus"}}},"ApiResourceResultEntity[ApiIntegratorPriceModifierResource]":{"type":"object","properties":{"resource":{"$ref":"#/definitions/ApiIntegratorPriceModifierResource"},"links":{"$ref":"#/definitions/ApiResourceResultEntityLinks"},"extra":{"$ref":"#/definitions/ApiResourceResultEntityExtra"},"errors":{"$ref":"#/definitions/ApiResourceErrors"},"status":{"$ref":"#/definitions/ApiResourceStatus"}}},"ApiIntegratorPriceModifierResource":{"type":"object","properties":{"Description":{"type":"string"},"GUID":{"format":"uuid","type":"string","example":"00000000-0000-0000-0000-000000000000"}}},"ApiResourceResultCollection[ApiIntegratorPriceModifierResource]":{"type":"object","properties":{"resource":{"type":"array","items":{"$ref":"#/definitions/ApiIntegratorPriceModifierResource"}},"extra":{"$ref":"#/definitions/ApiResourceResultCollectionExtra"},"errors":{"$ref":"#/definitions/ApiResourceErrors"},"status":{"$ref":"#/definitions/ApiResourceStatus"}}},"ApiResourceResultEntity[ApiIntegratorPricingBasisResource]":{"type":"object","properties":{"resource":{"$ref":"#/definitions/ApiIntegratorPricingBasisResource"},"links":{"$ref":"#/definitions/ApiResourceResultEntityLinks"},"extra":{"$ref":"#/definitions/ApiResourceResultEntityExtra"},"errors":{"$ref":"#/definitions/ApiResourceErrors"},"status":{"$ref":"#/definitions/ApiResourceStatus"}}},"ApiIntegratorPricingBasisResource":{"type":"object","properties":{"Description":{"type":"string"},"GUID":{"format":"uuid","type":"string","example":"00000000-0000-0000-0000-000000000000"}}},"ApiResourceResultCollection[ApiIntegratorPricingBasisResource]":{"type":"object","properties":{"resource":{"type":"array","items":{"$ref":"#/definitions/ApiIntegratorPricingBasisResource"}},"extra":{"$ref":"#/definitions/ApiResourceResultCollectionExtra"},"errors":{"$ref":"#/definitions/ApiResourceErrors"},"status":{"$ref":"#/definitions/ApiResourceStatus"}}},"ApiResourceResultEntity[ApiIntegratorPriorityResource]":{"type":"object","properties":{"resource":{"$ref":"#/definitions/ApiIntegratorPriorityResource"},"links":{"$ref":"#/definitions/ApiResourceResultEntityLinks"},"extra":{"$ref":"#/definitions/ApiResourceResultEntityExtra"},"errors":{"$ref":"#/definitions/ApiResourceErrors"},"status":{"$ref":"#/definitions/ApiResourceStatus"}}},"ApiIntegratorPriorityResource":{"type":"object","properties":{"Description":{"type":"string"},"IsDeleted":{"type":"boolean"},"GUID":{"format":"uuid","type":"string","example":"00000000-0000-0000-0000-000000000000"}}},"ApiResourceResultCollection[ApiIntegratorPriorityResource]":{"type":"object","properties":{"resource":{"type":"array","items":{"$ref":"#/definitions/ApiIntegratorPriorityResource"}},"extra":{"$ref":"#/definitions/ApiResourceResultCollectionExtra"},"errors":{"$ref":"#/definitions/ApiResourceErrors"},"status":{"$ref":"#/definitions/ApiResourceStatus"}}},"ApiResourceResultEntity[ApiIntegratorPurchaseOrderAmountTypeResource]":{"type":"object","properties":{"resource":{"$ref":"#/definitions/ApiIntegratorPurchaseOrderAmountTypeResource"},"links":{"$ref":"#/definitions/ApiResourceResultEntityLinks"},"extra":{"$ref":"#/definitions/ApiResourceResultEntityExtra"},"errors":{"$ref":"#/definitions/ApiResourceErrors"},"status":{"$ref":"#/definitions/ApiResourceStatus"}}},"ApiIntegratorPurchaseOrderAmountTypeResource":{"type":"object","properties":{"Description":{"type":"string"},"IsDeleted":{"type":"boolean"},"GUID":{"format":"uuid","type":"string","example":"00000000-0000-0000-0000-000000000000"}}},"ApiResourceResultCollection[ApiIntegratorPurchaseOrderAmountTypeResource]":{"type":"object","properties":{"resource":{"type":"array","items":{"$ref":"#/definitions/ApiIntegratorPurchaseOrderAmountTypeResource"}},"extra":{"$ref":"#/definitions/ApiResourceResultCollectionExtra"},"errors":{"$ref":"#/definitions/ApiResourceErrors"},"status":{"$ref":"#/definitions/ApiResourceStatus"}}},"ApiResourceChanges[ApiIntegratorPurchaseOrderNumberChainResource]":{"type":"object","properties":{"resource":{"type":"array","items":{"$ref":"#/definitions/ApiIntegratorPurchaseOrderNumberChainResource"}},"extra":{"$ref":"#/definitions/ApiResourceResultUpdatesExtra"},"errors":{"$ref":"#/definitions/ApiResourceErrors"},"status":{"$ref":"#/definitions/ApiResourceStatus"}}},"ApiIntegratorPurchaseOrderNumberChainResource":{"type":"object","properties":{"RelatedCustomerGuid":{"format":"uuid","type":"string","example":"00000000-0000-0000-0000-000000000000"},"Description":{"type":"string"},"StartDate":{"format":"localDate","type":"string","example":"2000-01-01"},"EndDate":{"format":"localDate","type":"string","example":"2000-01-01"},"IsDeleted":{"type":"boolean"},"PONumbers":{"type":"array","items":{"$ref":"#/definitions/ApiIntegratorPONumberResource"}},"RelatedPONumberGuidFilter":{"format":"uuid","type":"string","example":"00000000-0000-0000-0000-000000000000"},"RelatedPONumberFilter":{"type":"string"},"GUID":{"format":"uuid","type":"string","example":"00000000-0000-0000-0000-000000000000"}}},"ApiIntegratorPONumberResource":{"type":"object","properties":{"PONumber":{"type":"string"},"StartDate":{"format":"localDate","type":"string","example":"2000-01-01"},"EndDate":{"format":"localDate","type":"string","example":"2000-01-01"},"Amount":{"format":"double","type":"number"},"AmountTypeListItem":{"$ref":"#/definitions/ApiIntegratorListItemResource"},"IsDeleted":{"type":"boolean"},"Guid":{"format":"uuid","type":"string","example":"00000000-0000-0000-0000-000000000000"}}},"ApiResourceResultEntity[ApiIntegratorPurchaseOrderNumberChainResource]":{"type":"object","properties":{"resource":{"$ref":"#/definitions/ApiIntegratorPurchaseOrderNumberChainResource"},"links":{"$ref":"#/definitions/ApiResourceResultEntityLinks"},"extra":{"$ref":"#/definitions/ApiResourceResultEntityExtra"},"errors":{"$ref":"#/definitions/ApiResourceErrors"},"status":{"$ref":"#/definitions/ApiResourceStatus"}}},"ApiResourceResultCollection[ApiIntegratorPurchaseOrderNumberChainResource]":{"type":"object","properties":{"resource":{"type":"array","items":{"$ref":"#/definitions/ApiIntegratorPurchaseOrderNumberChainResource"}},"extra":{"$ref":"#/definitions/ApiResourceResultCollectionExtra"},"errors":{"$ref":"#/definitions/ApiResourceErrors"},"status":{"$ref":"#/definitions/ApiResourceStatus"}}},"ApiResourceResultEntity[ApiIntegratorReasonResource]":{"type":"object","properties":{"resource":{"$ref":"#/definitions/ApiIntegratorReasonResource"},"links":{"$ref":"#/definitions/ApiResourceResultEntityLinks"},"extra":{"$ref":"#/definitions/ApiResourceResultEntityExtra"},"errors":{"$ref":"#/definitions/ApiResourceErrors"},"status":{"$ref":"#/definitions/ApiResourceStatus"}}},"ApiIntegratorReasonResource":{"type":"object","properties":{"Description":{"type":"string"},"IsDeleted":{"type":"boolean"},"FullDescription":{"type":"string"},"AnalysisCode":{"type":"string"},"ReasonCategoryListItem":{"$ref":"#/definitions/ApiIntegratorListItemResource"},"GUID":{"format":"uuid","type":"string","example":"00000000-0000-0000-0000-000000000000"}}},"ApiResourceResultCollection[ApiIntegratorReasonResource]":{"type":"object","properties":{"resource":{"type":"array","items":{"$ref":"#/definitions/ApiIntegratorReasonResource"}},"extra":{"$ref":"#/definitions/ApiResourceResultCollectionExtra"},"errors":{"$ref":"#/definitions/ApiResourceErrors"},"status":{"$ref":"#/definitions/ApiResourceStatus"}}},"ApiResourceResultEntity[ApiIntegratorReasonCategoryResource]":{"type":"object","properties":{"resource":{"$ref":"#/definitions/ApiIntegratorReasonCategoryResource"},"links":{"$ref":"#/definitions/ApiResourceResultEntityLinks"},"extra":{"$ref":"#/definitions/ApiResourceResultEntityExtra"},"errors":{"$ref":"#/definitions/ApiResourceErrors"},"status":{"$ref":"#/definitions/ApiResourceStatus"}}},"ApiIntegratorReasonCategoryResource":{"type":"object","properties":{"Description":{"type":"string"},"IsDeleted":{"type":"boolean"},"GUID":{"format":"uuid","type":"string","example":"00000000-0000-0000-0000-000000000000"}}},"ApiResourceResultCollection[ApiIntegratorReasonCategoryResource]":{"type":"object","properties":{"resource":{"type":"array","items":{"$ref":"#/definitions/ApiIntegratorReasonCategoryResource"}},"extra":{"$ref":"#/definitions/ApiResourceResultCollectionExtra"},"errors":{"$ref":"#/definitions/ApiResourceErrors"},"status":{"$ref":"#/definitions/ApiResourceStatus"}}},"ApiResourceResultEntity[ApiIntegratorRegionResource]":{"type":"object","properties":{"resource":{"$ref":"#/definitions/ApiIntegratorRegionResource"},"links":{"$ref":"#/definitions/ApiResourceResultEntityLinks"},"extra":{"$ref":"#/definitions/ApiResourceResultEntityExtra"},"errors":{"$ref":"#/definitions/ApiResourceErrors"},"status":{"$ref":"#/definitions/ApiResourceStatus"}}},"ApiIntegratorRegionResource":{"type":"object","properties":{"Description":{"type":"string"},"Abbreviation":{"type":"string"},"StateListItem":{"$ref":"#/definitions/ApiIntegratorListItemResource"},"CompanyOutletListItem":{"$ref":"#/definitions/ApiIntegratorListItemResource"},"IsNonSpecific":{"type":"boolean"},"IsDeleted":{"type":"boolean"},"GUID":{"format":"uuid","type":"string","example":"00000000-0000-0000-0000-000000000000"}}},"ApiResourceResultCollection[ApiIntegratorRegionResource]":{"type":"object","properties":{"resource":{"type":"array","items":{"$ref":"#/definitions/ApiIntegratorRegionResource"}},"extra":{"$ref":"#/definitions/ApiResourceResultCollectionExtra"},"errors":{"$ref":"#/definitions/ApiResourceErrors"},"status":{"$ref":"#/definitions/ApiResourceStatus"}}},"ApiResourceResultEntity[ApiIntegratorRegionCodeResource]":{"type":"object","properties":{"resource":{"$ref":"#/definitions/ApiIntegratorRegionCodeResource"},"links":{"$ref":"#/definitions/ApiResourceResultEntityLinks"},"extra":{"$ref":"#/definitions/ApiResourceResultEntityExtra"},"errors":{"$ref":"#/definitions/ApiResourceErrors"},"status":{"$ref":"#/definitions/ApiResourceStatus"}}},"ApiIntegratorRegionCodeResource":{"type":"object","properties":{"Region":{"type":"string"},"RegionCode":{"type":"string"},"GUID":{"format":"uuid","type":"string","example":"00000000-0000-0000-0000-000000000000"}}},"ApiResourceResultCollection[ApiIntegratorRegionCodeResource]":{"type":"object","properties":{"resource":{"type":"array","items":{"$ref":"#/definitions/ApiIntegratorRegionCodeResource"}},"extra":{"$ref":"#/definitions/ApiResourceResultCollectionExtra"},"errors":{"$ref":"#/definitions/ApiResourceErrors"},"status":{"$ref":"#/definitions/ApiResourceStatus"}}},"ApiResourceResultEntity[ApiIntegratorReminderLetterPolicyResource]":{"type":"object","properties":{"resource":{"$ref":"#/definitions/ApiIntegratorReminderLetterPolicyResource"},"links":{"$ref":"#/definitions/ApiResourceResultEntityLinks"},"extra":{"$ref":"#/definitions/ApiResourceResultEntityExtra"},"errors":{"$ref":"#/definitions/ApiResourceErrors"},"status":{"$ref":"#/definitions/ApiResourceStatus"}}},"ApiIntegratorReminderLetterPolicyResource":{"type":"object","properties":{"CustomerCategoryListItem":{"$ref":"#/definitions/ApiIntegratorListItemResource"},"Description":{"type":"string"},"IsDeleted":{"type":"boolean"},"GracePeriod":{"format":"int32","type":"integer"},"PaymentTypeListItem":{"$ref":"#/definitions/ApiIntegratorListItemResource"},"PrintThirdReminderLetterLocally":{"type":"boolean"},"SecondReminderLetterInterval":{"format":"int32","type":"integer"},"ThirdReminderLetterInterval":{"format":"int32","type":"integer"},"MinimumOverdueAmount":{"format":"double","type":"number"},"ShortCode":{"type":"string"},"GUID":{"format":"uuid","type":"string","example":"00000000-0000-0000-0000-000000000000"}}},"ApiResourceResultCollection[ApiIntegratorReminderLetterPolicyResource]":{"type":"object","properties":{"resource":{"type":"array","items":{"$ref":"#/definitions/ApiIntegratorReminderLetterPolicyResource"}},"extra":{"$ref":"#/definitions/ApiResourceResultCollectionExtra"},"errors":{"$ref":"#/definitions/ApiResourceErrors"},"status":{"$ref":"#/definitions/ApiResourceStatus"}}},"ApiResourceResultEntity[ApiIntegratorRentalQuantityAttributeResource]":{"type":"object","properties":{"resource":{"$ref":"#/definitions/ApiIntegratorRentalQuantityAttributeResource"},"links":{"$ref":"#/definitions/ApiResourceResultEntityLinks"},"extra":{"$ref":"#/definitions/ApiResourceResultEntityExtra"},"errors":{"$ref":"#/definitions/ApiResourceErrors"},"status":{"$ref":"#/definitions/ApiResourceStatus"}}},"ApiIntegratorRentalQuantityAttributeResource":{"type":"object","properties":{"Description":{"type":"string"},"GUID":{"format":"uuid","type":"string","example":"00000000-0000-0000-0000-000000000000"}}},"ApiResourceResultCollection[ApiIntegratorRentalQuantityAttributeResource]":{"type":"object","properties":{"resource":{"type":"array","items":{"$ref":"#/definitions/ApiIntegratorRentalQuantityAttributeResource"}},"extra":{"$ref":"#/definitions/ApiResourceResultCollectionExtra"},"errors":{"$ref":"#/definitions/ApiResourceErrors"},"status":{"$ref":"#/definitions/ApiResourceStatus"}}},"ApiResourceResultEntity[ApiIntegratorRentTermResource]":{"type":"object","properties":{"resource":{"$ref":"#/definitions/ApiIntegratorRentTermResource"},"links":{"$ref":"#/definitions/ApiResourceResultEntityLinks"},"extra":{"$ref":"#/definitions/ApiResourceResultEntityExtra"},"errors":{"$ref":"#/definitions/ApiResourceErrors"},"status":{"$ref":"#/definitions/ApiResourceStatus"}}},"ApiIntegratorRentTermResource":{"type":"object","properties":{"Description":{"type":"string"},"GUID":{"format":"uuid","type":"string","example":"00000000-0000-0000-0000-000000000000"}}},"ApiResourceResultCollection[ApiIntegratorRentTermResource]":{"type":"object","properties":{"resource":{"type":"array","items":{"$ref":"#/definitions/ApiIntegratorRentTermResource"}},"extra":{"$ref":"#/definitions/ApiResourceResultCollectionExtra"},"errors":{"$ref":"#/definitions/ApiResourceErrors"},"status":{"$ref":"#/definitions/ApiResourceStatus"}}},"ApiResourceChanges[ApiIntegratorRouteResource]":{"type":"object","properties":{"resource":{"type":"array","items":{"$ref":"#/definitions/ApiIntegratorRouteResource"}},"extra":{"$ref":"#/definitions/ApiResourceResultUpdatesExtra"},"errors":{"$ref":"#/definitions/ApiResourceErrors"},"status":{"$ref":"#/definitions/ApiResourceStatus"}}},"ApiIntegratorRouteResource":{"type":"object","properties":{"Description":{"type":"string"},"RouteManagementTypeListItem":{"$ref":"#/definitions/ApiIntegratorListItemResource"},"IsDiffReasonRequired":{"type":"boolean"},"IsWeighingsComplete":{"type":"boolean"},"IsCompleted":{"type":"boolean"},"IsDeleted":{"type":"boolean"},"IsMissedReasonRequired":{"type":"boolean"},"IsPromptForLiftsOnVisitCompletion":{"type":"boolean"},"IsOrderSupplierUsedForCostGeneration":{"type":"boolean"},"RelatedRouteTemplateGuid":{"format":"uuid","type":"string","example":"00000000-0000-0000-0000-000000000000"},"RelatedLocationDestinationGuid":{"format":"uuid","type":"string","example":"00000000-0000-0000-0000-000000000000"},"RelatedVehicleGuid":{"format":"uuid","type":"string","example":"00000000-0000-0000-0000-000000000000"},"RelatedExternalVehicleGuid":{"format":"uuid","type":"string","example":"00000000-0000-0000-0000-000000000000"},"RelatedMasterRouteGuid":{"format":"uuid","type":"string","example":"00000000-0000-0000-0000-000000000000"},"RelatedSupplierSiteGuid":{"format":"uuid","type":"string","example":"00000000-0000-0000-0000-000000000000"},"RelatedSupplierSiteTransportGuid":{"format":"uuid","type":"string","example":"00000000-0000-0000-0000-000000000000"},"AreaOfOriginListItem":{"$ref":"#/definitions/ApiIntegratorListItemResource"},"VehicleTypeListItem":{"$ref":"#/definitions/ApiIntegratorListItemResource"},"MaterialListItem":{"$ref":"#/definitions/ApiIntegratorListItemResource"},"CompanyOutletListItem":{"$ref":"#/definitions/ApiIntegratorListItemResource"},"DefaultTipMaterialListItem":{"$ref":"#/definitions/ApiIntegratorListItemResource"},"RouteDate":{"format":"zonedDateTime","type":"string","example":{"DateTime":"2000-01-01T00:00:00Z","TimeZone":"Europe/London"}},"RouteNo":{"format":"int32","type":"integer"},"IsSubContracted":{"type":"boolean"},"StartLeaveYardTime":{"format":"zonedDateTime","type":"string","example":{"DateTime":"2000-01-01T00:00:00Z","TimeZone":"Europe/London"}},"EndYardLeaveTime":{"format":"zonedDateTime","type":"string","example":{"DateTime":"2000-01-01T00:00:00Z","TimeZone":"Europe/London"}},"StartPlannedTime":{"format":"zonedDateTime","type":"string","example":{"DateTime":"2000-01-01T00:00:00Z","TimeZone":"Europe/London"}},"EndPlannedTime":{"format":"zonedDateTime","type":"string","example":{"DateTime":"2000-01-01T00:00:00Z","TimeZone":"Europe/London"}},"StartRouteTime":{"format":"zonedDateTime","type":"string","example":{"DateTime":"2000-01-01T00:00:00Z","TimeZone":"Europe/London"}},"EndRouteTime":{"format":"zonedDateTime","type":"string","example":{"DateTime":"2000-01-01T00:00:00Z","TimeZone":"Europe/London"}},"DistanceTravelled":{"format":"double","type":"number"},"FuelUsed":{"format":"double","type":"number"},"FuelCost":{"format":"double","type":"number"},"IsNoTagStopEnabled":{"type":"boolean"},"FleetPlannerTripNo":{"type":"string"},"AcceptedMaterials":{"type":"array","items":{"$ref":"#/definitions/ApiIntegratorRouteAcceptedMaterialsResource"}},"Driver":{"$ref":"#/definitions/ApiIntegratorRouteDriverResource"},"VehicleChecks":{"$ref":"#/definitions/ApiIntegratorRouteVehicleCheckResource"},"RelatedUserDriverGuidFilter":{"format":"uuid","type":"string","example":"00000000-0000-0000-0000-000000000000"},"RelatedUserStartDefectCheckGuid":{"format":"uuid","type":"string","example":"00000000-0000-0000-0000-000000000000"},"RelatedUserEndDefectCheckGuid":{"format":"uuid","type":"string","example":"00000000-0000-0000-0000-000000000000"},"Notes":{"type":"string"},"GUID":{"format":"uuid","type":"string","example":"00000000-0000-0000-0000-000000000000"}}},"ApiIntegratorRouteAcceptedMaterialsResource":{"type":"object","properties":{"Guid":{"format":"uuid","type":"string","example":"00000000-0000-0000-0000-000000000000"},"IsDeleted":{"type":"boolean"},"MaterialClassListItem":{"$ref":"#/definitions/ApiIntegratorListItemResource"}}},"ApiIntegratorRouteDriverResource":{"type":"object","properties":{"RelatedUserDriverGuid":{"format":"uuid","type":"string","example":"00000000-0000-0000-0000-000000000000"},"ClockOnTime":{"format":"zonedDateTime","type":"string","example":{"DateTime":"2000-01-01T00:00:00Z","TimeZone":"Europe/London"}},"ClockOffTime":{"format":"zonedDateTime","type":"string","example":{"DateTime":"2000-01-01T00:00:00Z","TimeZone":"Europe/London"}},"CrewNumber":{"format":"int32","type":"integer"}}},"ApiIntegratorRouteVehicleCheckResource":{"type":"object","properties":{"StartMileage":{"format":"double","type":"number"},"EndMileage":{"format":"double","type":"number"},"Notes":{"type":"string"},"StartSafetyCheck":{"type":"boolean"},"StartDefectTicketNo":{"type":"string"},"RelatedUserStartDefectCheckGuid":{"format":"uuid","type":"string","example":"00000000-0000-0000-0000-000000000000"},"StartNotes":{"type":"string"},"EndSafetyCheck":{"type":"boolean"},"EndDefectTicketNo":{"type":"string"},"RelatedUserEndDefectCheckGuid":{"format":"uuid","type":"string","example":"00000000-0000-0000-0000-000000000000"},"EndNotes":{"type":"string"},"StartHubometerDistance":{"format":"double","type":"number"},"EndHubometerDistance":{"format":"double","type":"number"},"StartHubometerTime":{"format":"double","type":"number"},"EndHubometerTime":{"format":"double","type":"number"}}},"ApiResourceResultEntity[ApiIntegratorRouteResource]":{"type":"object","properties":{"resource":{"$ref":"#/definitions/ApiIntegratorRouteResource"},"links":{"$ref":"#/definitions/ApiResourceResultEntityLinks"},"extra":{"$ref":"#/definitions/ApiResourceResultEntityExtra"},"errors":{"$ref":"#/definitions/ApiResourceErrors"},"status":{"$ref":"#/definitions/ApiResourceStatus"}}},"ApiResourceResultCollection[ApiIntegratorRouteResource]":{"type":"object","properties":{"resource":{"type":"array","items":{"$ref":"#/definitions/ApiIntegratorRouteResource"}},"extra":{"$ref":"#/definitions/ApiResourceResultCollectionExtra"},"errors":{"$ref":"#/definitions/ApiResourceErrors"},"status":{"$ref":"#/definitions/ApiResourceStatus"}}},"ApiResourceResultEntity[ApiIntegratorRouteAssignmentResource]":{"type":"object","properties":{"resource":{"$ref":"#/definitions/ApiIntegratorRouteAssignmentResource"},"links":{"$ref":"#/definitions/ApiResourceResultEntityLinks"},"extra":{"$ref":"#/definitions/ApiResourceResultEntityExtra"},"errors":{"$ref":"#/definitions/ApiResourceErrors"},"status":{"$ref":"#/definitions/ApiResourceStatus"}}},"ApiIntegratorRouteAssignmentResource":{"type":"object","properties":{"RelatedOrderGuid":{"format":"uuid","type":"string","example":"00000000-0000-0000-0000-000000000000"},"ActionListItem":{"$ref":"#/definitions/ApiIntegratorListItemResource"},"ContainerTypeListItem":{"$ref":"#/definitions/ApiIntegratorListItemResource"},"PickupIntervalListItem":{"$ref":"#/definitions/ApiIntegratorListItemResource"},"DayOfWeekListItem":{"$ref":"#/definitions/ApiIntegratorListItemResource"},"DayOfOccurrenceInMonthListItem":{"$ref":"#/definitions/ApiIntegratorListItemResource"},"RelatedRouteTemplateGuid":{"format":"uuid","type":"string","example":"00000000-0000-0000-0000-000000000000"},"Position":{"format":"int32","type":"integer"},"StartDate":{"format":"localDate","type":"string","example":"2000-01-01"},"EndDate":{"format":"localDate","type":"string","example":"2000-01-01"},"RequestedBy":{"type":"string"},"Notes":{"type":"string"},"MaxLiftQuantity":{"format":"int32","type":"integer"},"MinLiftQuantity":{"format":"int32","type":"integer"},"RequiresQuantity":{"type":"boolean"},"IsGpsAutoMatchingDisabled":{"type":"boolean"},"IsNoPlannedDate":{"type":"boolean"},"IsNoBinOnSiteExcluded":{"type":"boolean"},"RelatedContainerGuid":{"format":"uuid","type":"string","example":"00000000-0000-0000-0000-000000000000"},"AccessTimes":{"type":"array","items":{"$ref":"#/definitions/ApiIntegratorRouteAssignmentAccessTimeResource"}},"Details":{"type":"array","items":{"$ref":"#/definitions/ApiIntegratorRouteAssignmentDetailResource"}},"GUID":{"format":"uuid","type":"string","example":"00000000-0000-0000-0000-000000000000"}}},"ApiIntegratorRouteAssignmentAccessTimeResource":{"type":"object","properties":{"Guid":{"format":"uuid","type":"string","example":"00000000-0000-0000-0000-000000000000"},"AccessContact":{"type":"string"},"AccessNotes":{"type":"string"},"FromExclusion":{"type":"boolean"},"AccessStartTime":{"format":"zonedDateTime","type":"string","example":{"DateTime":"2000-01-01T00:00:00Z","TimeZone":"Europe/London"}},"AccessEndTime":{"format":"zonedDateTime","type":"string","example":{"DateTime":"2000-01-01T00:00:00Z","TimeZone":"Europe/London"}},"DayOfWeekListItem":{"$ref":"#/definitions/ApiIntegratorListItemResource"}}},"ApiIntegratorRouteAssignmentDetailResource":{"type":"object","properties":{"Guid":{"format":"uuid","type":"string","example":"00000000-0000-0000-0000-000000000000"},"ContainerTypeListItem":{"$ref":"#/definitions/ApiIntegratorListItemResource"},"PlannedQuantity":{"format":"double","type":"number"}}},"ApiResourceResultCollection[ApiIntegratorRouteAssignmentResource]":{"type":"object","properties":{"resource":{"type":"array","items":{"$ref":"#/definitions/ApiIntegratorRouteAssignmentResource"}},"extra":{"$ref":"#/definitions/ApiResourceResultCollectionExtra"},"errors":{"$ref":"#/definitions/ApiResourceErrors"},"status":{"$ref":"#/definitions/ApiResourceStatus"}}},"ApiResourceChanges[ApiIntegratorRouteBuildScheduleLogResource]":{"type":"object","properties":{"resource":{"type":"array","items":{"$ref":"#/definitions/ApiIntegratorRouteBuildScheduleLogResource"}},"extra":{"$ref":"#/definitions/ApiResourceResultUpdatesExtra"},"errors":{"$ref":"#/definitions/ApiResourceErrors"},"status":{"$ref":"#/definitions/ApiResourceStatus"}}},"ApiIntegratorRouteBuildScheduleLogResource":{"type":"object","properties":{"BuildStart":{"format":"dateTime","type":"string","example":"2000-01-01 00:00:00.000"},"BuildEnd":{"format":"dateTime","type":"string","example":"2000-01-01 00:00:00.000"},"IsSuccess":{"type":"boolean"},"RouteTemplateGuid":{"format":"uuid","type":"string","example":"00000000-0000-0000-0000-000000000000"},"IsDeleted":{"type":"boolean"},"GUID":{"format":"uuid","type":"string","example":"00000000-0000-0000-0000-000000000000"}}},"ApiResourceResultEntity[ApiIntegratorRouteBuildScheduleLogResource]":{"type":"object","properties":{"resource":{"$ref":"#/definitions/ApiIntegratorRouteBuildScheduleLogResource"},"links":{"$ref":"#/definitions/ApiResourceResultEntityLinks"},"extra":{"$ref":"#/definitions/ApiResourceResultEntityExtra"},"errors":{"$ref":"#/definitions/ApiResourceErrors"},"status":{"$ref":"#/definitions/ApiResourceStatus"}}},"ApiResourceResultCollection[ApiIntegratorRouteBuildScheduleLogResource]":{"type":"object","properties":{"resource":{"type":"array","items":{"$ref":"#/definitions/ApiIntegratorRouteBuildScheduleLogResource"}},"extra":{"$ref":"#/definitions/ApiResourceResultCollectionExtra"},"errors":{"$ref":"#/definitions/ApiResourceErrors"},"status":{"$ref":"#/definitions/ApiResourceStatus"}}},"ApiResourceResultEntity[ApiIntegratorRouteManagementTypeResource]":{"type":"object","properties":{"resource":{"$ref":"#/definitions/ApiIntegratorRouteManagementTypeResource"},"links":{"$ref":"#/definitions/ApiResourceResultEntityLinks"},"extra":{"$ref":"#/definitions/ApiResourceResultEntityExtra"},"errors":{"$ref":"#/definitions/ApiResourceErrors"},"status":{"$ref":"#/definitions/ApiResourceStatus"}}},"ApiIntegratorRouteManagementTypeResource":{"type":"object","properties":{"Description":{"type":"string"},"IsDeleted":{"type":"boolean"},"GUID":{"format":"uuid","type":"string","example":"00000000-0000-0000-0000-000000000000"}}},"ApiResourceResultCollection[ApiIntegratorRouteManagementTypeResource]":{"type":"object","properties":{"resource":{"type":"array","items":{"$ref":"#/definitions/ApiIntegratorRouteManagementTypeResource"}},"extra":{"$ref":"#/definitions/ApiResourceResultCollectionExtra"},"errors":{"$ref":"#/definitions/ApiResourceErrors"},"status":{"$ref":"#/definitions/ApiResourceStatus"}}},"ApiResourceChanges[ApiIntegratorRouteTemplateResource]":{"type":"object","properties":{"resource":{"type":"array","items":{"$ref":"#/definitions/ApiIntegratorRouteTemplateResource"}},"extra":{"$ref":"#/definitions/ApiResourceResultUpdatesExtra"},"errors":{"$ref":"#/definitions/ApiResourceErrors"},"status":{"$ref":"#/definitions/ApiResourceStatus"}}},"ApiIntegratorRouteTemplateResource":{"type":"object","properties":{"AcceptedMaterials":{"type":"array","items":{"$ref":"#/definitions/ApiIntegratorRouteTemplateAcceptedMaterialsResource"}},"ArchiveMissedRouteVisitReasonListItem":{"$ref":"#/definitions/ApiIntegratorListItemResource"},"ArchiveRouteVisitDays":{"format":"int32","type":"integer"},"AreaOfOriginListItem":{"$ref":"#/definitions/ApiIntegratorListItemResource"},"AuditDays":{"format":"int32","type":"integer"},"AuditStartDate":{"format":"localDate","type":"string","example":"2000-01-01"},"AutoCompleteVisits":{"type":"boolean"},"AutoSend":{"type":"boolean"},"BuildDaysBeforeNextPlannedDate":{"format":"int32","type":"integer"},"BuildSimpleRouteInstance":{"type":"boolean"},"CanRunOnSchedule":{"type":"boolean"},"CompanyOutletListItem":{"$ref":"#/definitions/ApiIntegratorListItemResource"},"DayOccurrenceInMonthListItem":{"$ref":"#/definitions/ApiIntegratorListItemResource"},"DayOfWeekListItem":{"$ref":"#/definitions/ApiIntegratorListItemResource"},"DaysBeforeExpiry":{"format":"int32","type":"integer"},"DefaultTipMaterialListItem":{"$ref":"#/definitions/ApiIntegratorListItemResource"},"Description":{"type":"string"},"DiffReasonRequired":{"type":"boolean"},"DoubleDumpTimeInSeconds":{"format":"int32","type":"integer"},"ExcludeMunicipalCustomerFromHandheld":{"type":"boolean"},"ExcludeMunicipalCustomerFromRouteConfirmation":{"type":"boolean"},"ExcludeMunicipalCustomerFromRouteWorksheet":{"type":"boolean"},"ForceWeightsOnRouteCompletion":{"type":"boolean"},"GPSMatchingEnabled":{"type":"boolean"},"GpsMatchingMaxRange":{"format":"float","type":"number"},"GpsmatchingMinProximity":{"format":"float","type":"number"},"GuidedNavigationPassword":{"type":"string"},"GuidedNavigationUsername":{"type":"string"},"GuideVersion":{"format":"localDate","type":"string","example":"2000-01-01"},"HideTipLocationMapMarkers":{"type":"boolean"},"IsAutoCompleteOnBuild":{"type":"boolean"},"IsDeleted":{"type":"boolean"},"IsNightRoute":{"type":"boolean"},"IsProximityOrderedVisits":{"type":"boolean"},"IsRouteNavigationEnabled":{"type":"boolean"},"IsRouteStatisticGenerationOn":{"type":"boolean"},"IsSubContracted":{"type":"boolean"},"MarketListItem":{"$ref":"#/definitions/ApiIntegratorListItemResource"},"MissedReasonRequired":{"type":"boolean"},"MobileForceManualLiftMatching":{"type":"boolean"},"MobileSettingsProfileListItem":{"$ref":"#/definitions/ApiIntegratorListItemResource"},"NextPlannedDate":{"format":"localDate","type":"string","example":"2000-01-01"},"NoMatchAlertThreshold":{"format":"int32","type":"integer"},"NoTagStopEnabled":{"type":"boolean"},"Notes":{"type":"string"},"PickupIntervalListItem":{"$ref":"#/definitions/ApiIntegratorListItemResource"},"PlannedEndTime":{"format":"localDate","type":"string","example":"2000-01-01"},"PlannedStartTime":{"format":"localDate","type":"string","example":"2000-01-01"},"PrintExceptionsOnly":{"type":"boolean"},"PromptForLiftsOnVisitCompletion":{"type":"boolean"},"RelatedCompanyOutletGuidFilter":{"format":"uuid","type":"string","example":"00000000-0000-0000-0000-000000000000"},"RelatedLocationDestinationGuid":{"format":"uuid","type":"string","example":"00000000-0000-0000-0000-000000000000"},"RelatedMasterRouteGuid":{"format":"uuid","type":"string","example":"00000000-0000-0000-0000-000000000000"},"RelatedRouteGroupGuid":{"format":"uuid","type":"string","example":"00000000-0000-0000-0000-000000000000"},"RelatedSupplierSiteGuid":{"format":"uuid","type":"string","example":"00000000-0000-0000-0000-000000000000"},"RelatedSupplierSiteTransportGuid":{"format":"uuid","type":"string","example":"00000000-0000-0000-0000-000000000000"},"RelatedVehicleDefaultExternalGuid":{"format":"uuid","type":"string","example":"00000000-0000-0000-0000-000000000000"},"RelatedVehicleDefaultGuid":{"format":"uuid","type":"string","example":"00000000-0000-0000-0000-000000000000"},"RelatedUserDefaultDriverGuid":{"format":"uuid","type":"string","example":"00000000-0000-0000-0000-000000000000"},"RFIDAlertThreshold":{"format":"int32","type":"integer"},"RouteManagementTypeListItem":{"$ref":"#/definitions/ApiIntegratorListItemResource"},"RouteNo":{"format":"int32","type":"integer"},"RouteVisitProximityRadius":{"format":"int32","type":"integer"},"StoplistPollingRate":{"format":"int32","type":"integer"},"SupplierEmailAddress":{"type":"string"},"UseOrderSupplierForCostGeneration":{"type":"boolean"},"UseSystemGPSMatchingSettings":{"type":"boolean"},"VehicleTypeListItem":{"$ref":"#/definitions/ApiIntegratorListItemResource"},"ZeroWeightAlertThreshold":{"format":"int32","type":"integer"},"GUID":{"format":"uuid","type":"string","example":"00000000-0000-0000-0000-000000000000"}}},"ApiIntegratorRouteTemplateAcceptedMaterialsResource":{"type":"object","properties":{"Guid":{"format":"uuid","type":"string","example":"00000000-0000-0000-0000-000000000000"},"IsDeleted":{"type":"boolean"},"MaterialClassListItem":{"$ref":"#/definitions/ApiIntegratorListItemResource"}}},"ApiResourceResultEntity[ApiIntegratorRouteTemplateResource]":{"type":"object","properties":{"resource":{"$ref":"#/definitions/ApiIntegratorRouteTemplateResource"},"links":{"$ref":"#/definitions/ApiResourceResultEntityLinks"},"extra":{"$ref":"#/definitions/ApiResourceResultEntityExtra"},"errors":{"$ref":"#/definitions/ApiResourceErrors"},"status":{"$ref":"#/definitions/ApiResourceStatus"}}},"ApiResourceResultCollection[ApiIntegratorRouteTemplateResource]":{"type":"object","properties":{"resource":{"type":"array","items":{"$ref":"#/definitions/ApiIntegratorRouteTemplateResource"}},"extra":{"$ref":"#/definitions/ApiResourceResultCollectionExtra"},"errors":{"$ref":"#/definitions/ApiResourceErrors"},"status":{"$ref":"#/definitions/ApiResourceStatus"}}},"ApiResourceChanges[ApiIntegratorRouteVisitResource]":{"type":"object","properties":{"resource":{"type":"array","items":{"$ref":"#/definitions/ApiIntegratorRouteVisitResource"}},"extra":{"$ref":"#/definitions/ApiResourceResultUpdatesExtra"},"errors":{"$ref":"#/definitions/ApiResourceErrors"},"status":{"$ref":"#/definitions/ApiResourceStatus"}}},"ApiIntegratorRouteVisitResource":{"type":"object","properties":{"RelatedSiteOrderGuid":{"format":"uuid","type":"string","example":"00000000-0000-0000-0000-000000000000"},"RelatedRouteGuid":{"format":"uuid","type":"string","example":"00000000-0000-0000-0000-000000000000"},"ActionListItem":{"$ref":"#/definitions/ApiIntegratorListItemResource"},"ContainerTypeListItem":{"$ref":"#/definitions/ApiIntegratorListItemResource"},"ExclusionTypeListItem":{"$ref":"#/definitions/ApiIntegratorListItemResource"},"RelatedSiteOrderRouteAssignmentGuid":{"format":"uuid","type":"string","example":"00000000-0000-0000-0000-000000000000"},"TicketNo":{"type":"string"},"ManualTicketNo":{"type":"string"},"Position":{"format":"int32","type":"integer"},"IntendedPrice":{"format":"double","type":"number"},"IntendedVatListItem":{"$ref":"#/definitions/ApiIntegratorListItemResource"},"DriverNotes":{"type":"string"},"Notes":{"type":"string"},"Access":{"type":"array","items":{"$ref":"#/definitions/ApiIntegratorAccessArrayResource"}},"RejectedReasonListItem":{"$ref":"#/definitions/ApiIntegratorListItemResource"},"RejectReasonAdditionalNotes":{"type":"string"},"VisitStatusListItem":{"$ref":"#/definitions/ApiIntegratorListItemResource"},"IsAcknowledgementRequired":{"type":"boolean"},"MaxLiftQuantity":{"format":"int32","type":"integer"},"MinLiftQuantity":{"format":"int32","type":"integer"},"IsQuantityRequired":{"type":"boolean"},"QuantityPlanned":{"format":"double","type":"number"},"QuantityOverride":{"format":"double","type":"number"},"Weight":{"format":"double","type":"number"},"QuantityNotPlannedReasonListItem":{"$ref":"#/definitions/ApiIntegratorListItemResource"},"QuantityConfirmed":{"format":"int32","type":"integer"},"QuantityProblem":{"format":"int32","type":"integer"},"MinBillLevelShortfall":{"format":"int32","type":"integer"},"StartTimeActual":{"format":"dateTimeOffset","type":"string","example":"2000-01-01T00:00:00.0000000+01:00"},"EndTimeActual":{"format":"dateTimeOffset","type":"string","example":"2000-01-01T00:00:00.0000000+01:00"},"IsFinanciallyConfirmed":{"type":"boolean"},"RelatedUserFinanciallyConfirmedGuid":{"format":"uuid","type":"string","example":"00000000-0000-0000-0000-000000000000"},"IsFleetPlannerCompleted":{"type":"boolean"},"IsCancelled":{"type":"boolean"},"PONumber":{"type":"string"},"OriginalDate":{"format":"localDate","type":"string","example":"2000-01-01"},"GUID":{"format":"uuid","type":"string","example":"00000000-0000-0000-0000-000000000000"}}},"ApiIntegratorAccessArrayResource":{"type":"object","properties":{"AccessNotes":{"type":"string"},"AccessContact":{"type":"string"},"StartTimeAccess":{"format":"zonedDateTime","type":"string","example":{"DateTime":"2000-01-01T00:00:00Z","TimeZone":"Europe/London"}},"EndTimeAccess":{"format":"zonedDateTime","type":"string","example":{"DateTime":"2000-01-01T00:00:00Z","TimeZone":"Europe/London"}},"DayOfWeekId":{"format":"int32","type":"integer"},"Guid":{"format":"uuid","type":"string","example":"00000000-0000-0000-0000-000000000000"}}},"ApiResourceResultEntity[ApiIntegratorRouteVisitResource]":{"type":"object","properties":{"resource":{"$ref":"#/definitions/ApiIntegratorRouteVisitResource"},"links":{"$ref":"#/definitions/ApiResourceResultEntityLinks"},"extra":{"$ref":"#/definitions/ApiResourceResultEntityExtra"},"errors":{"$ref":"#/definitions/ApiResourceErrors"},"status":{"$ref":"#/definitions/ApiResourceStatus"}}},"ApiResourceResultCollection[ApiIntegratorRouteVisitResource]":{"type":"object","properties":{"resource":{"type":"array","items":{"$ref":"#/definitions/ApiIntegratorRouteVisitResource"}},"extra":{"$ref":"#/definitions/ApiResourceResultCollectionExtra"},"errors":{"$ref":"#/definitions/ApiResourceErrors"},"status":{"$ref":"#/definitions/ApiResourceStatus"}}},"ApiResourceChanges[ApiIntegratorRouteVisitJobResource]":{"type":"object","properties":{"resource":{"type":"array","items":{"$ref":"#/definitions/ApiIntegratorRouteVisitJobResource"}},"extra":{"$ref":"#/definitions/ApiResourceResultUpdatesExtra"},"errors":{"$ref":"#/definitions/ApiResourceErrors"},"status":{"$ref":"#/definitions/ApiResourceStatus"}}},"ApiIntegratorRouteVisitJobResource":{"type":"object","properties":{"MaterialListItem":{"$ref":"#/definitions/ApiIntegratorListItemResource"},"ContainerTypeListItem":{"$ref":"#/definitions/ApiIntegratorListItemResource"},"Quantity":{"format":"double","type":"number"},"Weight":{"format":"double","type":"number"},"JobTimeStamp":{"format":"zonedDateTime","type":"string","example":{"DateTime":"2000-01-01T00:00:00Z","TimeZone":"Europe/London"}},"QuantityNotPlannedListItem":{"$ref":"#/definitions/ApiIntegratorListItemResource"},"QuantityPlanned":{"format":"double","type":"number"},"DeferredRevenueAccountingPeriodListItem":{"$ref":"#/definitions/ApiIntegratorListItemResource"},"RelatedRouteVisitGuid":{"format":"uuid","type":"string","example":"00000000-0000-0000-0000-000000000000"},"GUID":{"format":"uuid","type":"string","example":"00000000-0000-0000-0000-000000000000"}}},"ApiResourceResultEntity[ApiIntegratorRouteVisitJobResource]":{"type":"object","properties":{"resource":{"$ref":"#/definitions/ApiIntegratorRouteVisitJobResource"},"links":{"$ref":"#/definitions/ApiResourceResultEntityLinks"},"extra":{"$ref":"#/definitions/ApiResourceResultEntityExtra"},"errors":{"$ref":"#/definitions/ApiResourceErrors"},"status":{"$ref":"#/definitions/ApiResourceStatus"}}},"ApiResourceResultCollection[ApiIntegratorRouteVisitJobResource]":{"type":"object","properties":{"resource":{"type":"array","items":{"$ref":"#/definitions/ApiIntegratorRouteVisitJobResource"}},"extra":{"$ref":"#/definitions/ApiResourceResultCollectionExtra"},"errors":{"$ref":"#/definitions/ApiResourceErrors"},"status":{"$ref":"#/definitions/ApiResourceStatus"}}},"ApiResourceChanges[ApiIntegratorScheduleResource]":{"type":"object","properties":{"resource":{"type":"array","items":{"$ref":"#/definitions/ApiIntegratorScheduleResource"}},"extra":{"$ref":"#/definitions/ApiResourceResultUpdatesExtra"},"errors":{"$ref":"#/definitions/ApiResourceErrors"},"status":{"$ref":"#/definitions/ApiResourceStatus"}}},"ApiIntegratorScheduleResource":{"type":"object","properties":{"ScheduledDate":{"format":"localDate","type":"string","example":"2000-01-01"},"Description":{"type":"string"},"IsContainerSchedule":{"type":"boolean"},"Notes":{"type":"string"},"LeaveYardTime":{"format":"zonedDateTime","type":"string","example":{"DateTime":"2000-01-01T00:00:00Z","TimeZone":"Europe/London"}},"ReturnYardTime":{"format":"zonedDateTime","type":"string","example":{"DateTime":"2000-01-01T00:00:00Z","TimeZone":"Europe/London"}},"Driver":{"$ref":"#/definitions/ApiIntegratorScheduleDriverResource"},"VehicleChecks":{"$ref":"#/definitions/ApiIntegratorScheduleVehicleCheckResource"},"CompanyOutletListItem":{"$ref":"#/definitions/ApiIntegratorListItemResource"},"IsCompleted":{"type":"boolean"},"IsForVehicle":{"type":"boolean"},"IsManifestCompleted":{"type":"boolean"},"IsManifestExported":{"type":"boolean"},"IsManifestExportedFailed":{"type":"boolean"},"IsManifestRequired":{"type":"boolean"},"IsThirdPartySchedule":{"type":"boolean"},"FuelUsed":{"format":"double","type":"number"},"FuelCost":{"format":"double","type":"number"},"Position":{"format":"int32","type":"integer"},"RelatedVehicleGuid":{"format":"uuid","type":"string","example":"00000000-0000-0000-0000-000000000000"},"RelatedUserDriverGuid":{"format":"uuid","type":"string","example":"00000000-0000-0000-0000-000000000000"},"RelatedUserStartCheckByGuid":{"format":"uuid","type":"string","example":"00000000-0000-0000-0000-000000000000"},"RelatedUserEndCheckByGuid":{"format":"uuid","type":"string","example":"00000000-0000-0000-0000-000000000000"},"GUID":{"format":"uuid","type":"string","example":"00000000-0000-0000-0000-000000000000"}}},"ApiIntegratorScheduleDriverResource":{"type":"object","properties":{"RelatedUserDriverGuid":{"format":"uuid","type":"string","example":"00000000-0000-0000-0000-000000000000"},"ClockOffDateTime":{"format":"zonedDateTime","type":"string","example":{"DateTime":"2000-01-01T00:00:00Z","TimeZone":"Europe/London"}},"ClockOnDateTime":{"format":"zonedDateTime","type":"string","example":{"DateTime":"2000-01-01T00:00:00Z","TimeZone":"Europe/London"}}}},"ApiIntegratorScheduleVehicleCheckResource":{"type":"object","properties":{"StartMileage":{"format":"double","type":"number"},"EndMileage":{"format":"double","type":"number"},"IsStartSafetyChecked":{"type":"boolean"},"StartNotes":{"type":"string"},"IsEndSafetyChecked":{"type":"boolean"},"EndNotes":{"type":"string"},"StartDefectTicketNo":{"type":"string"},"EndDefectTicketNo":{"type":"string"},"RelatedUserStartCheckByGuid":{"format":"uuid","type":"string","example":"00000000-0000-0000-0000-000000000000"},"RelatedUserEndCheckByGuid":{"format":"uuid","type":"string","example":"00000000-0000-0000-0000-000000000000"}}},"ApiResourceResultEntity[ApiIntegratorScheduleResource]":{"type":"object","properties":{"resource":{"$ref":"#/definitions/ApiIntegratorScheduleResource"},"links":{"$ref":"#/definitions/ApiResourceResultEntityLinks"},"extra":{"$ref":"#/definitions/ApiResourceResultEntityExtra"},"errors":{"$ref":"#/definitions/ApiResourceErrors"},"status":{"$ref":"#/definitions/ApiResourceStatus"}}},"ApiResourceResultCollection[ApiIntegratorScheduleResource]":{"type":"object","properties":{"resource":{"type":"array","items":{"$ref":"#/definitions/ApiIntegratorScheduleResource"}},"extra":{"$ref":"#/definitions/ApiResourceResultCollectionExtra"},"errors":{"$ref":"#/definitions/ApiResourceErrors"},"status":{"$ref":"#/definitions/ApiResourceStatus"}}},"ApiResourceResultEntity[ApiIntegratorServiceResource]":{"type":"object","properties":{"resource":{"$ref":"#/definitions/ApiIntegratorServiceResource"},"links":{"$ref":"#/definitions/ApiResourceResultEntityLinks"},"extra":{"$ref":"#/definitions/ApiResourceResultEntityExtra"},"errors":{"$ref":"#/definitions/ApiResourceErrors"},"status":{"$ref":"#/definitions/ApiResourceStatus"}}},"ApiIntegratorServiceResource":{"type":"object","properties":{"Description":{"type":"string"},"IsDeleted":{"type":"boolean"},"ExternalDescription":{"type":"string"},"ShortName":{"type":"string"},"AnalysisCode":{"type":"string"},"AllowBarcodeScanningOnQuantityBasedBreakdown":{"type":"boolean"},"AllowBulkMovements":{"type":"boolean"},"AllowDriverResequence":{"type":"boolean"},"AllowManualBarcodeEntry":{"type":"boolean"},"AllowQuantityBasedBreakdown":{"type":"boolean"},"AllowRecordBreakdownNotCollected":{"type":"boolean"},"AllowWasteTransferFormatSignatures":{"type":"boolean"},"AllowZeroWeightsOnMobile":{"type":"boolean"},"CaptureFillLevelOnQuantityBasedBreakdown":{"type":"boolean"},"CreditAccountRequired":{"type":"boolean"},"DynamicOptimisationEnabled":{"type":"boolean"},"EnableChargeExcessWeightPerBin":{"type":"boolean"},"ExcludeAssetTracking":{"type":"boolean"},"AssetTrackingUsingSerialOrTag":{"type":"boolean"},"FilterOrderActionsbyMaterialProfile":{"type":"boolean"},"IsAccountsPayable":{"type":"boolean"},"IsBookable":{"type":"boolean"},"IsBrokerageOnly":{"type":"boolean"},"IsCollection":{"type":"boolean"},"IsDirectMovement":{"type":"boolean"},"IsDisposalMaterialChangeEnabled":{"type":"boolean"},"IsExport":{"type":"boolean"},"IsIncludedWhereDOCRequired":{"type":"boolean"},"IsManagement":{"type":"boolean"},"IsManifest":{"type":"boolean"},"IsMaterialOut":{"type":"boolean"},"IsQuantityBased":{"type":"boolean"},"IsRouteWeighing":{"type":"boolean"},"IsScheduled":{"type":"boolean"},"IsScheduledBag":{"type":"boolean"},"IsStandingOrder":{"type":"boolean"},"IsSupplierConfirmationRequired":{"type":"boolean"},"IsTipper":{"type":"boolean"},"IsTransferOut":{"type":"boolean"},"IsUnScheduledMaterial":{"type":"boolean"},"IsWeighingSignatureRequired":{"type":"boolean"},"IsWorkOrder":{"type":"boolean"},"OneInvoicePerJobDefault":{"type":"boolean"},"RecordSummaryQuantity":{"type":"boolean"},"RequiresPeriodicDoC":{"type":"boolean"},"ShowJobPaymentDetailsOnMobile":{"type":"boolean"},"ShowOrderDefaultsOnBaleCollection":{"type":"boolean"},"WarnOnOutOfCycle":{"type":"boolean"},"JobStatusTrackingLevel":{"format":"int32","type":"integer"},"PremiumHireDayThreshold":{"format":"int32","type":"integer"},"ServiceCategoryListItem":{"$ref":"#/definitions/ApiIntegratorListItemResource"},"BusinessTypeListItem":{"$ref":"#/definitions/ApiIntegratorListItemResource"},"GUID":{"format":"uuid","type":"string","example":"00000000-0000-0000-0000-000000000000"}}},"ApiResourceResultCollection[ApiIntegratorServiceResource]":{"type":"object","properties":{"resource":{"type":"array","items":{"$ref":"#/definitions/ApiIntegratorServiceResource"}},"extra":{"$ref":"#/definitions/ApiResourceResultCollectionExtra"},"errors":{"$ref":"#/definitions/ApiResourceErrors"},"status":{"$ref":"#/definitions/ApiResourceStatus"}}},"ApiResourceChanges[ApiIntegratorServiceAgreementResource]":{"type":"object","properties":{"resource":{"type":"array","items":{"$ref":"#/definitions/ApiIntegratorServiceAgreementResource"}},"extra":{"$ref":"#/definitions/ApiResourceResultUpdatesExtra"},"errors":{"$ref":"#/definitions/ApiResourceErrors"},"status":{"$ref":"#/definitions/ApiResourceStatus"}}},"ApiIntegratorServiceAgreementResource":{"type":"object","properties":{"Description":{"type":"string"},"StartDate":{"format":"localDate","type":"string","example":"2000-01-01"},"EndDate":{"format":"localDate","type":"string","example":"2000-01-01"},"ReviewDate":{"format":"localDate","type":"string","example":"2000-01-01"},"RelatedCustomerGuid":{"format":"uuid","type":"string","example":"00000000-0000-0000-0000-000000000000"},"EndReasonListItem":{"$ref":"#/definitions/ApiIntegratorListItemResource"},"InvoiceFrequencyListItem":{"$ref":"#/definitions/ApiIntegratorListItemResource"},"InvoiceCycleListItem":{"$ref":"#/definitions/ApiIntegratorListItemResource"},"OutletListItem":{"$ref":"#/definitions/ApiIntegratorListItemResource"},"PaymentTypeListItem":{"$ref":"#/definitions/ApiIntegratorListItemResource"},"PaymentTermListItem":{"$ref":"#/definitions/ApiIntegratorListItemResource"},"DepartmentListItem":{"$ref":"#/definitions/ApiIntegratorListItemResource"},"PrimaryServiceListItem":{"$ref":"#/definitions/ApiIntegratorListItemResource"},"Prices":{"type":"array","items":{"$ref":"#/definitions/ApiIntegratorServiceAgreementPriceResource"}},"OrderCombinationGroups":{"type":"array","items":{"$ref":"#/definitions/ApiIntegratorServiceAgreementOrderCombinationGroupsResource"}},"RelatedOutlets":{"type":"array","items":{"$ref":"#/definitions/ApiIntegratorServiceAgreementRelatedOutletsResource"}},"RelatedCustomers":{"type":"array","items":{"$ref":"#/definitions/ApiIntegratorServiceAgreementRelatedCustomersResource"}},"BillingUsagePolicies":{"type":"array","items":{"$ref":"#/definitions/ApiIntegratorServiceAgreementBillingUsagePolicyResource"}},"IsDeleted":{"type":"boolean"},"PriceGuidFilter":{"format":"uuid","type":"string","example":"00000000-0000-0000-0000-000000000000"},"CompanyOutletListItemGuidFilter":{"format":"uuid","type":"string","example":"00000000-0000-0000-0000-000000000000"},"RelatedCustomerGuidFilter":{"format":"uuid","type":"string","example":"00000000-0000-0000-0000-000000000000"},"RelatedCustomersGuidFilter":{"format":"uuid","type":"string","example":"00000000-0000-0000-0000-000000000000"},"RelatedSiteGuidFilter":{"format":"uuid","type":"string","example":"00000000-0000-0000-0000-000000000000"},"GUID":{"format":"uuid","type":"string","example":"00000000-0000-0000-0000-000000000000"}}},"ApiIntegratorServiceAgreementPriceResource":{"type":"object","properties":{"PriceGuid":{"format":"uuid","type":"string","example":"00000000-0000-0000-0000-000000000000"},"DefaultActionListItem":{"$ref":"#/definitions/ApiIntegratorListItemResource"},"CostCode":{"type":"string"},"PurchaseCode":{"type":"string"},"DateDeleted":{"format":"dateTime","type":"string","example":"2000-01-01 00:00:00.000"},"IsDeleted":{"type":"boolean"},"ContainerTypeListItem":{"$ref":"#/definitions/ApiIntegratorListItemResource"},"MaterialListItem":{"$ref":"#/definitions/ApiIntegratorListItemResource"},"Amount":{"$ref":"#/definitions/ApiIntegratorServiceAgreementPriceAmountResource"},"LatePaymentFeeDefinition":{"$ref":"#/definitions/ApiIntegratorServiceAgreementPriceLatePaymentFeeDefinitionResource"}}},"ApiIntegratorServiceAgreementOrderCombinationGroupsResource":{"type":"object","properties":{"Guid":{"format":"uuid","type":"string","example":"00000000-0000-0000-0000-000000000000"},"InvoiceCycleListItem":{"$ref":"#/definitions/ApiIntegratorListItemResource"},"IsConcessionary":{"type":"boolean"},"IsRequiresPrePay":{"type":"boolean"},"ForceFullPayment":{"type":"boolean"},"RelatedContractTermLengthGuid":{"format":"uuid","type":"string","example":"00000000-0000-0000-0000-000000000000"},"UseOutletLevelPricing":{"type":"boolean"},"Name":{"type":"string"},"IsOutletLevelPricingUsed":{"type":"boolean"},"AnnualContractCost":{"format":"double","type":"number"},"AnnualContractValue":{"format":"double","type":"number"},"BillingUsagePolicyGuid":{"format":"uuid","type":"string","example":"00000000-0000-0000-0000-000000000000"},"IsUseReducedRateForAdditionalBin":{"type":"boolean"},"RefundableAdvanceDeposit":{"format":"double","type":"number"},"StartDateDeferredDays":{"format":"int32","type":"integer"},"SubscriptionTypeListItem":{"$ref":"#/definitions/ApiIntegratorListItemResource"},"IsDeleted":{"type":"boolean"}}},"ApiIntegratorServiceAgreementRelatedOutletsResource":{"type":"object","properties":{"Guid":{"format":"uuid","type":"string","example":"00000000-0000-0000-0000-000000000000"},"CompanyOutletListItem":{"$ref":"#/definitions/ApiIntegratorListItemResource"},"IsRelatedOutletDeleted":{"type":"boolean"}}},"ApiIntegratorServiceAgreementRelatedCustomersResource":{"type":"object","properties":{"Guid":{"format":"uuid","type":"string","example":"00000000-0000-0000-0000-000000000000"},"RelatedCustomerGuid":{"format":"uuid","type":"string","example":"00000000-0000-0000-0000-000000000000"},"IsForAllSites":{"type":"boolean"},"IsRelatedCustomerDeleted":{"type":"boolean"},"RelatedSites":{"type":"array","items":{"$ref":"#/definitions/ApiIntegratorServiceAgreementRelatedSitesResource"}}}},"ApiIntegratorServiceAgreementBillingUsagePolicyResource":{"type":"object","properties":{"Guid":{"format":"uuid","type":"string","example":"00000000-0000-0000-0000-000000000000"},"Thresholds":{"type":"array","items":{"$ref":"#/definitions/ApiIntegratorServiceAgreementBillingUsagePolicyWeightThresholdResource"}},"IsDeleted":{"type":"boolean"},"AltWeightSourceForOutsideThreshold":{"format":"int32","type":"integer"},"AltWeightSourceForZeroWeight":{"format":"int32","type":"integer"},"ApplyToWeightsOutsideThresholds":{"type":"boolean"},"ApplyToZeroWeights":{"type":"boolean"},"Description":{"type":"string"},"IsUseAccumulatedWeight":{"type":"boolean"},"IsUseActualLifts":{"type":"boolean"},"IsUseExpectedLifts":{"type":"boolean"},"FairUsageMonths":{"format":"int32","type":"integer"},"LiftsForAverage":{"format":"int32","type":"integer"},"MonthlyLag":{"format":"int32","type":"integer"}}},"ApiIntegratorServiceAgreementPriceAmountResource":{"type":"object","properties":{"Price":{"format":"double","type":"number"},"Offset":{"format":"double","type":"number"},"Percentage":{"format":"double","type":"number"},"FloorPrice":{"format":"double","type":"number"},"CeilingPrice":{"format":"double","type":"number"},"MinimumCharge":{"format":"double","type":"number"},"MaximumCharge":{"format":"double","type":"number"},"Allowance":{"format":"float","type":"number"},"VatListItem":{"$ref":"#/definitions/ApiIntegratorListItemResource"},"EffectiveFrom":{"format":"dateTime","type":"string","example":"2000-01-01 00:00:00.000"},"EffectiveTo":{"format":"dateTime","type":"string","example":"2000-01-01 00:00:00.000"},"TaxTemplateCollectionListItem":{"$ref":"#/definitions/ApiIntegratorListItemResource"},"IsRebate":{"type":"boolean"}}},"ApiIntegratorServiceAgreementPriceLatePaymentFeeDefinitionResource":{"type":"object","properties":{"Description":{"type":"string"},"CustomerCategoryListItem":{"$ref":"#/definitions/ApiIntegratorListItemResource"},"LatePaymentFeeTypeListItem":{"$ref":"#/definitions/ApiIntegratorListItemResource"},"ActionListItem":{"$ref":"#/definitions/ApiIntegratorListItemResource"},"DefaultActionListItem":{"$ref":"#/definitions/ApiIntegratorListItemResource"},"RelatedPriceGuid":{"format":"uuid","type":"string","example":"00000000-0000-0000-0000-000000000000"},"GraceDays":{"format":"int32","type":"integer"},"FlatFeeAmount":{"format":"double","type":"number"},"PercentageFeeDecimalAmount":{"format":"double","type":"number"},"PercentageFeeAmount":{"format":"double","type":"number"},"MinimumCharge":{"format":"double","type":"number"},"MaximumCharge":{"format":"double","type":"number"},"IsDeleted":{"type":"boolean"},"Guid":{"format":"uuid","type":"string","example":"00000000-0000-0000-0000-000000000000"}}},"ApiIntegratorServiceAgreementRelatedSitesResource":{"type":"object","properties":{"Guid":{"format":"uuid","type":"string","example":"00000000-0000-0000-0000-000000000000"},"RelatedSiteGuid":{"format":"uuid","type":"string","example":"00000000-0000-0000-0000-000000000000"},"IsRelatedSiteDeleted":{"type":"boolean"}}},"ApiIntegratorServiceAgreementBillingUsagePolicyWeightThresholdResource":{"type":"object","properties":{"Guid":{"format":"uuid","type":"string","example":"00000000-0000-0000-0000-000000000000"},"ContainerTypeListItem":{"$ref":"#/definitions/ApiIntegratorListItemResource"},"MaterialListItem":{"$ref":"#/definitions/ApiIntegratorListItemResource"},"UnitOfMeasurementListItem":{"$ref":"#/definitions/ApiIntegratorListItemResource"},"MinWeight":{"format":"double","type":"number"},"MaxWeight":{"format":"double","type":"number"},"IsDeleted":{"type":"boolean"}}},"ApiResourceResultEntity[ApiIntegratorServiceAgreementResource]":{"type":"object","properties":{"resource":{"$ref":"#/definitions/ApiIntegratorServiceAgreementResource"},"links":{"$ref":"#/definitions/ApiResourceResultEntityLinks"},"extra":{"$ref":"#/definitions/ApiResourceResultEntityExtra"},"errors":{"$ref":"#/definitions/ApiResourceErrors"},"status":{"$ref":"#/definitions/ApiResourceStatus"}}},"ApiResourceResultCollection[ApiIntegratorServiceAgreementResource]":{"type":"object","properties":{"resource":{"type":"array","items":{"$ref":"#/definitions/ApiIntegratorServiceAgreementResource"}},"extra":{"$ref":"#/definitions/ApiResourceResultCollectionExtra"},"errors":{"$ref":"#/definitions/ApiResourceErrors"},"status":{"$ref":"#/definitions/ApiResourceStatus"}}},"ApiResourceResultEntity[ApiIntegratorServiceCategoryResource]":{"type":"object","properties":{"resource":{"$ref":"#/definitions/ApiIntegratorServiceCategoryResource"},"links":{"$ref":"#/definitions/ApiResourceResultEntityLinks"},"extra":{"$ref":"#/definitions/ApiResourceResultEntityExtra"},"errors":{"$ref":"#/definitions/ApiResourceErrors"},"status":{"$ref":"#/definitions/ApiResourceStatus"}}},"ApiIntegratorServiceCategoryResource":{"type":"object","properties":{"Description":{"type":"string"},"IsDeleted":{"type":"boolean"},"AnalysisCode":{"type":"string"},"GUID":{"format":"uuid","type":"string","example":"00000000-0000-0000-0000-000000000000"}}},"ApiResourceResultCollection[ApiIntegratorServiceCategoryResource]":{"type":"object","properties":{"resource":{"type":"array","items":{"$ref":"#/definitions/ApiIntegratorServiceCategoryResource"}},"extra":{"$ref":"#/definitions/ApiResourceResultCollectionExtra"},"errors":{"$ref":"#/definitions/ApiResourceErrors"},"status":{"$ref":"#/definitions/ApiResourceStatus"}}},"ApiResourceResultEntity[ApiIntegratorServiceFrequencyResource]":{"type":"object","properties":{"resource":{"$ref":"#/definitions/ApiIntegratorServiceFrequencyResource"},"links":{"$ref":"#/definitions/ApiResourceResultEntityLinks"},"extra":{"$ref":"#/definitions/ApiResourceResultEntityExtra"},"errors":{"$ref":"#/definitions/ApiResourceErrors"},"status":{"$ref":"#/definitions/ApiResourceStatus"}}},"ApiIntegratorServiceFrequencyResource":{"type":"object","properties":{"Description":{"type":"string"},"GUID":{"format":"uuid","type":"string","example":"00000000-0000-0000-0000-000000000000"}}},"ApiResourceResultCollection[ApiIntegratorServiceFrequencyResource]":{"type":"object","properties":{"resource":{"type":"array","items":{"$ref":"#/definitions/ApiIntegratorServiceFrequencyResource"}},"extra":{"$ref":"#/definitions/ApiResourceResultCollectionExtra"},"errors":{"$ref":"#/definitions/ApiResourceErrors"},"status":{"$ref":"#/definitions/ApiResourceStatus"}}},"ApiResourceResultEntity[ApiIntegratorSicCodeResource]":{"type":"object","properties":{"resource":{"$ref":"#/definitions/ApiIntegratorSicCodeResource"},"links":{"$ref":"#/definitions/ApiResourceResultEntityLinks"},"extra":{"$ref":"#/definitions/ApiResourceResultEntityExtra"},"errors":{"$ref":"#/definitions/ApiResourceErrors"},"status":{"$ref":"#/definitions/ApiResourceStatus"}}},"ApiIntegratorSicCodeResource":{"type":"object","properties":{"Description2007":{"type":"string"},"Code2007":{"type":"string"},"Description2003":{"type":"string"},"Code2003":{"type":"string"},"IsDeleted":{"type":"boolean"},"GUID":{"format":"uuid","type":"string","example":"00000000-0000-0000-0000-000000000000"}}},"ApiResourceResultCollection[ApiIntegratorSicCodeResource]":{"type":"object","properties":{"resource":{"type":"array","items":{"$ref":"#/definitions/ApiIntegratorSicCodeResource"}},"extra":{"$ref":"#/definitions/ApiResourceResultCollectionExtra"},"errors":{"$ref":"#/definitions/ApiResourceErrors"},"status":{"$ref":"#/definitions/ApiResourceStatus"}}},"ApiResourceChanges[ApiIntegratorSiteResource]":{"type":"object","properties":{"resource":{"type":"array","items":{"$ref":"#/definitions/ApiIntegratorSiteResource"}},"extra":{"$ref":"#/definitions/ApiResourceResultUpdatesExtra"},"errors":{"$ref":"#/definitions/ApiResourceErrors"},"status":{"$ref":"#/definitions/ApiResourceStatus"}}},"ApiIntegratorSiteResource":{"type":"object","properties":{"Name":{"type":"string"},"Reference":{"type":"string"},"SiteTypeListItem":{"$ref":"#/definitions/ApiIntegratorListItemResource"},"FederalId":{"type":"string"},"AnalysisCode":{"type":"string"},"RelatedCustomerGuid":{"format":"uuid","type":"string","example":"00000000-0000-0000-0000-000000000000"},"UniqueCustomerSiteCode":{"type":"string"},"IsNonServiceSite":{"type":"boolean"},"SICCodeListItem":{"$ref":"#/definitions/ApiIntegratorListItemResource"},"SalesTerritoryListItem":{"$ref":"#/definitions/ApiIntegratorListItemResource"},"CompanyOutletListItem":{"$ref":"#/definitions/ApiIntegratorListItemResource"},"CustomerSiteStateListItem":{"$ref":"#/definitions/ApiIntegratorListItemResource"},"ZoneListItem":{"$ref":"#/definitions/ApiIntegratorListItemResource"},"RebatePaymentTypeListItem":{"$ref":"#/definitions/ApiIntegratorListItemResource"},"RebatePaymentTermListItem":{"$ref":"#/definitions/ApiIntegratorListItemResource"},"ContactMethods":{"$ref":"#/definitions/ApiIntegratorSiteContactMethodsResource"},"PaymentHandlingCodeListItem":{"$ref":"#/definitions/ApiIntegratorListItemResource"},"ReminderLetterPolicyListItem":{"$ref":"#/definitions/ApiIntegratorListItemResource"},"DocumentDeliveryMethods":{"type":"array","items":{"$ref":"#/definitions/ApiIntegratorDocumentDeliveryMethodsResource"}},"RelatedLocationInvoiceGuid":{"format":"uuid","type":"string","example":"00000000-0000-0000-0000-000000000000"},"RelatedLocationRemitGuid":{"format":"uuid","type":"string","example":"00000000-0000-0000-0000-000000000000"},"RelatedLocationDocumentGuid":{"format":"uuid","type":"string","example":"00000000-0000-0000-0000-000000000000"},"RelatedLocationStatementGuid":{"format":"uuid","type":"string","example":"00000000-0000-0000-0000-000000000000"},"RelatedLocationQuotationGuid":{"format":"uuid","type":"string","example":"00000000-0000-0000-0000-000000000000"},"RelatedLocationGuid":{"format":"uuid","type":"string","example":"00000000-0000-0000-0000-000000000000"},"NumberOfUnits":{"format":"int32","type":"integer"},"AccessTimes":{"type":"array","items":{"$ref":"#/definitions/ApiIntegratorSiteAccessTimeResource"}},"RelatedTradingNames":{"type":"array","items":{"$ref":"#/definitions/ApiIntegratorSiteTradingNameResource"}},"RelatedHealthAndSafetyBlobs":{"type":"array","items":{"$ref":"#/definitions/ApiIntegratorSiteHealthAndSafetyBlobResource"}},"RelatedTradingNameGuidFilter":{"format":"uuid","type":"string","example":"00000000-0000-0000-0000-000000000000"},"Areas":{"type":"array","items":{"$ref":"#/definitions/ApiIntegratorSiteAreaResource"}},"VisitStatusListItem":{"$ref":"#/definitions/ApiIntegratorListItemResource"},"LocalAuthorityListItem":{"$ref":"#/definitions/ApiIntegratorListItemResource"},"AreasGuidFilter":{"format":"uuid","type":"string","example":"00000000-0000-0000-0000-000000000000"},"AreasRelatedLocationGuidFilter":{"format":"uuid","type":"string","example":"00000000-0000-0000-0000-000000000000"},"IsDeleted":{"type":"boolean"},"LocalAuthorityGuidFilter":{"format":"uuid","type":"string","example":"00000000-0000-0000-0000-000000000000"},"GUID":{"format":"uuid","type":"string","example":"00000000-0000-0000-0000-000000000000"}}},"ApiIntegratorSiteContactMethodsResource":{"type":"object","properties":{"Email":{"type":"string"}}},"ApiIntegratorSiteAccessTimeResource":{"type":"object","properties":{"Guid":{"format":"uuid","type":"string","example":"00000000-0000-0000-0000-000000000000"},"AccessContact":{"type":"string"},"AccessNotes":{"type":"string"},"AccessStartTime":{"format":"zonedDateTime","type":"string","example":{"DateTime":"2000-01-01T00:00:00Z","TimeZone":"Europe/London"}},"AccessEndTime":{"format":"zonedDateTime","type":"string","example":{"DateTime":"2000-01-01T00:00:00Z","TimeZone":"Europe/London"}},"DayOfWeekListItem":{"$ref":"#/definitions/ApiIntegratorListItemResource"}}},"ApiIntegratorSiteTradingNameResource":{"type":"object","properties":{"Guid":{"format":"uuid","type":"string","example":"00000000-0000-0000-0000-000000000000"},"RelatedTradingNameGuid":{"format":"uuid","type":"string","example":"00000000-0000-0000-0000-000000000000"},"Description":{"type":"string"}}},"ApiIntegratorSiteHealthAndSafetyBlobResource":{"type":"object","properties":{"Guid":{"format":"uuid","type":"string","example":"00000000-0000-0000-0000-000000000000"},"Hash":{"type":"string"},"DocumentName":{"type":"string"},"DocumentReference":{"type":"string"},"HealthAndSafetyDocumentTypeListItem":{"$ref":"#/definitions/ApiIntegratorListItemResource"},"ValidFrom":{"format":"localDate","type":"string","example":"2000-01-01"},"ValidUntil":{"format":"localDate","type":"string","example":"2000-01-01"},"IsHighRisk":{"type":"boolean"},"IsSentToVehicle":{"type":"boolean"}}},"ApiIntegratorSiteAreaResource":{"type":"object","properties":{"Guid":{"format":"uuid","type":"string","example":"00000000-0000-0000-0000-000000000000"},"Description":{"type":"string"},"RelatedLocationGuid":{"format":"uuid","type":"string","example":"00000000-0000-0000-0000-000000000000"},"IsDeleted":{"type":"boolean"}}},"ApiResourceResultEntity[ApiIntegratorSiteResource]":{"type":"object","properties":{"resource":{"$ref":"#/definitions/ApiIntegratorSiteResource"},"links":{"$ref":"#/definitions/ApiResourceResultEntityLinks"},"extra":{"$ref":"#/definitions/ApiResourceResultEntityExtra"},"errors":{"$ref":"#/definitions/ApiResourceErrors"},"status":{"$ref":"#/definitions/ApiResourceStatus"}}},"ApiResourceResultCollection[ApiIntegratorSiteResource]":{"type":"object","properties":{"resource":{"type":"array","items":{"$ref":"#/definitions/ApiIntegratorSiteResource"}},"extra":{"$ref":"#/definitions/ApiResourceResultCollectionExtra"},"errors":{"$ref":"#/definitions/ApiResourceErrors"},"status":{"$ref":"#/definitions/ApiResourceStatus"}}},"ApiResourceResultEntity[ApiIntegratorSiteTypeResource]":{"type":"object","properties":{"resource":{"$ref":"#/definitions/ApiIntegratorSiteTypeResource"},"links":{"$ref":"#/definitions/ApiResourceResultEntityLinks"},"extra":{"$ref":"#/definitions/ApiResourceResultEntityExtra"},"errors":{"$ref":"#/definitions/ApiResourceErrors"},"status":{"$ref":"#/definitions/ApiResourceStatus"}}},"ApiIntegratorSiteTypeResource":{"type":"object","properties":{"Description":{"type":"string"},"IsDeleted":{"type":"boolean"},"GUID":{"format":"uuid","type":"string","example":"00000000-0000-0000-0000-000000000000"}}},"ApiResourceResultCollection[ApiIntegratorSiteTypeResource]":{"type":"object","properties":{"resource":{"type":"array","items":{"$ref":"#/definitions/ApiIntegratorSiteTypeResource"}},"extra":{"$ref":"#/definitions/ApiResourceResultCollectionExtra"},"errors":{"$ref":"#/definitions/ApiResourceErrors"},"status":{"$ref":"#/definitions/ApiResourceStatus"}}},"ApiResourceResultEntity[ApiIntegratorStaffTypeResource]":{"type":"object","properties":{"resource":{"$ref":"#/definitions/ApiIntegratorStaffTypeResource"},"links":{"$ref":"#/definitions/ApiResourceResultEntityLinks"},"extra":{"$ref":"#/definitions/ApiResourceResultEntityExtra"},"errors":{"$ref":"#/definitions/ApiResourceErrors"},"status":{"$ref":"#/definitions/ApiResourceStatus"}}},"ApiIntegratorStaffTypeResource":{"type":"object","properties":{"Description":{"type":"string"},"IsDeleted":{"type":"boolean"},"GUID":{"format":"uuid","type":"string","example":"00000000-0000-0000-0000-000000000000"}}},"ApiResourceResultCollection[ApiIntegratorStaffTypeResource]":{"type":"object","properties":{"resource":{"type":"array","items":{"$ref":"#/definitions/ApiIntegratorStaffTypeResource"}},"extra":{"$ref":"#/definitions/ApiResourceResultCollectionExtra"},"errors":{"$ref":"#/definitions/ApiResourceErrors"},"status":{"$ref":"#/definitions/ApiResourceStatus"}}},"ApiResourceResultEntity[ApiIntegratorSubscriptionResource]":{"type":"object","properties":{"resource":{"$ref":"#/definitions/ApiIntegratorSubscriptionResource"},"links":{"$ref":"#/definitions/ApiResourceResultEntityLinks"},"extra":{"$ref":"#/definitions/ApiResourceResultEntityExtra"},"errors":{"$ref":"#/definitions/ApiResourceErrors"},"status":{"$ref":"#/definitions/ApiResourceStatus"}}},"ApiIntegratorSubscriptionResource":{"type":"object","properties":{"Description":{"type":"string"},"IsDeleted":{"type":"boolean"},"GUID":{"format":"uuid","type":"string","example":"00000000-0000-0000-0000-000000000000"}}},"ApiResourceResultCollection[ApiIntegratorSubscriptionResource]":{"type":"object","properties":{"resource":{"type":"array","items":{"$ref":"#/definitions/ApiIntegratorSubscriptionResource"}},"extra":{"$ref":"#/definitions/ApiResourceResultCollectionExtra"},"errors":{"$ref":"#/definitions/ApiResourceErrors"},"status":{"$ref":"#/definitions/ApiResourceStatus"}}},"ApiResourceResultEntity[ApiIntegratorSubscriptionTypeResource]":{"type":"object","properties":{"resource":{"$ref":"#/definitions/ApiIntegratorSubscriptionTypeResource"},"links":{"$ref":"#/definitions/ApiResourceResultEntityLinks"},"extra":{"$ref":"#/definitions/ApiResourceResultEntityExtra"},"errors":{"$ref":"#/definitions/ApiResourceErrors"},"status":{"$ref":"#/definitions/ApiResourceStatus"}}},"ApiIntegratorSubscriptionTypeResource":{"type":"object","properties":{"Description":{"type":"string"},"IsDeleted":{"type":"boolean"},"SubscriptionListItem":{"$ref":"#/definitions/ApiIntegratorListItemResource"},"GUID":{"format":"uuid","type":"string","example":"00000000-0000-0000-0000-000000000000"}}},"ApiResourceResultCollection[ApiIntegratorSubscriptionTypeResource]":{"type":"object","properties":{"resource":{"type":"array","items":{"$ref":"#/definitions/ApiIntegratorSubscriptionTypeResource"}},"extra":{"$ref":"#/definitions/ApiResourceResultCollectionExtra"},"errors":{"$ref":"#/definitions/ApiResourceErrors"},"status":{"$ref":"#/definitions/ApiResourceStatus"}}},"ApiResourceChanges[ApiIntegratorSupplierAccountResource]":{"type":"object","properties":{"resource":{"type":"array","items":{"$ref":"#/definitions/ApiIntegratorSupplierAccountResource"}},"extra":{"$ref":"#/definitions/ApiResourceResultUpdatesExtra"},"errors":{"$ref":"#/definitions/ApiResourceErrors"},"status":{"$ref":"#/definitions/ApiResourceStatus"}}},"ApiIntegratorSupplierAccountResource":{"type":"object","properties":{"CompanyOutletListItem":{"$ref":"#/definitions/ApiIntegratorListItemResource"},"ApAccountCode":{"type":"string"},"Description":{"type":"string"},"IsTransportSupplier":{"type":"boolean"},"PaymentTypeListItem":{"$ref":"#/definitions/ApiIntegratorListItemResource"},"PaymentTermListItem":{"$ref":"#/definitions/ApiIntegratorListItemResource"},"CurrencyListItem":{"$ref":"#/definitions/ApiIntegratorListItemResource"},"BankDetails":{"$ref":"#/definitions/ApiIntegratorSupplierAccountBankDetailsResource"},"GUID":{"format":"uuid","type":"string","example":"00000000-0000-0000-0000-000000000000"}}},"ApiIntegratorSupplierAccountBankDetailsResource":{"type":"object","properties":{"BankName":{"type":"string"},"AccountName":{"type":"string"},"AccountNo":{"type":"string"},"SortCode":{"type":"string"},"BIC":{"type":"string"},"IBAN":{"type":"string"},"Address":{"$ref":"#/definitions/ApiIntegratorSupplierAccountBankDetailsAddressResource"},"DirectDebitRunConfigListItem":{"$ref":"#/definitions/ApiIntegratorListItemResource"}}},"ApiIntegratorSupplierAccountBankDetailsAddressResource":{"type":"object","properties":{"Address1":{"type":"string"},"Address2":{"type":"string"},"Address3":{"type":"string"},"Address4":{"type":"string"},"Address5":{"type":"string"},"Postcode":{"type":"string"}}},"ApiResourceResultEntity[ApiIntegratorSupplierAccountResource]":{"type":"object","properties":{"resource":{"$ref":"#/definitions/ApiIntegratorSupplierAccountResource"},"links":{"$ref":"#/definitions/ApiResourceResultEntityLinks"},"extra":{"$ref":"#/definitions/ApiResourceResultEntityExtra"},"errors":{"$ref":"#/definitions/ApiResourceErrors"},"status":{"$ref":"#/definitions/ApiResourceStatus"}}},"ApiResourceResultCollection[ApiIntegratorSupplierAccountResource]":{"type":"object","properties":{"resource":{"type":"array","items":{"$ref":"#/definitions/ApiIntegratorSupplierAccountResource"}},"extra":{"$ref":"#/definitions/ApiResourceResultCollectionExtra"},"errors":{"$ref":"#/definitions/ApiResourceErrors"},"status":{"$ref":"#/definitions/ApiResourceStatus"}}},"ApiResourceChanges[ApiIntegratorSupplierBillResource]":{"type":"object","properties":{"resource":{"type":"array","items":{"$ref":"#/definitions/ApiIntegratorSupplierBillResource"}},"extra":{"$ref":"#/definitions/ApiResourceResultUpdatesExtra"},"errors":{"$ref":"#/definitions/ApiResourceErrors"},"status":{"$ref":"#/definitions/ApiResourceStatus"}}},"ApiIntegratorSupplierBillResource":{"type":"object","properties":{"RelatedSupplierGuid":{"format":"uuid","type":"string","example":"00000000-0000-0000-0000-000000000000"},"RelatedSupplierSiteGuid":{"format":"uuid","type":"string","example":"00000000-0000-0000-0000-000000000000"},"Reference":{"type":"string"},"Description":{"type":"string"},"Amount":{"format":"double","type":"number"},"AmountExVat":{"format":"double","type":"number"},"IsFinalised":{"type":"boolean"},"IsMatched":{"type":"boolean"},"Date":{"format":"localDate","type":"string","example":"2000-01-01"},"DueDate":{"format":"localDate","type":"string","example":"2000-01-01"},"Number":{"type":"string"},"BillNo":{"format":"int32","type":"integer"},"GUID":{"format":"uuid","type":"string","example":"00000000-0000-0000-0000-000000000000"}}},"ApiResourceResultEntity[ApiIntegratorSupplierBillResource]":{"type":"object","properties":{"resource":{"$ref":"#/definitions/ApiIntegratorSupplierBillResource"},"links":{"$ref":"#/definitions/ApiResourceResultEntityLinks"},"extra":{"$ref":"#/definitions/ApiResourceResultEntityExtra"},"errors":{"$ref":"#/definitions/ApiResourceErrors"},"status":{"$ref":"#/definitions/ApiResourceStatus"}}},"ApiResourceResultCollection[ApiIntegratorSupplierBillResource]":{"type":"object","properties":{"resource":{"type":"array","items":{"$ref":"#/definitions/ApiIntegratorSupplierBillResource"}},"extra":{"$ref":"#/definitions/ApiResourceResultCollectionExtra"},"errors":{"$ref":"#/definitions/ApiResourceErrors"},"status":{"$ref":"#/definitions/ApiResourceStatus"}}},"ApiResourceChanges[ApiIntegratorSupplierPaymentResource]":{"type":"object","properties":{"resource":{"type":"array","items":{"$ref":"#/definitions/ApiIntegratorSupplierPaymentResource"}},"extra":{"$ref":"#/definitions/ApiResourceResultUpdatesExtra"},"errors":{"$ref":"#/definitions/ApiResourceErrors"},"status":{"$ref":"#/definitions/ApiResourceStatus"}}},"ApiIntegratorSupplierPaymentResource":{"type":"object","properties":{"Amount":{"format":"double","type":"number"},"DateInput":{"format":"localDate","type":"string","example":"2000-01-01"},"DateReceived":{"format":"localDate","type":"string","example":"2000-01-01"},"IsBad":{"type":"boolean"},"PaymentTypeListItem":{"$ref":"#/definitions/ApiIntegratorListItemResource"},"RelatedSupplierGuid":{"format":"uuid","type":"string","example":"00000000-0000-0000-0000-000000000000"},"AccountingPeriodListItem":{"$ref":"#/definitions/ApiIntegratorListItemResource"},"APPaymentStatusListItem":{"$ref":"#/definitions/ApiIntegratorListItemResource"},"DateBad":{"format":"localDate","type":"string","example":"2000-01-01"},"DateBadExported":{"format":"localDate","type":"string","example":"2000-01-01"},"DateCleared":{"format":"localDate","type":"string","example":"2000-01-01"},"DateExported":{"format":"localDate","type":"string","example":"2000-01-01"},"DateProcessed":{"format":"localDate","type":"string","example":"2000-01-01"},"Notes":{"type":"string"},"PayableCycleListItem":{"$ref":"#/definitions/ApiIntegratorListItemResource"},"PaymentPointListItem":{"$ref":"#/definitions/ApiIntegratorListItemResource"},"Reference":{"type":"string"},"Allocations":{"type":"array","items":{"$ref":"#/definitions/ApiIntegratorAllocationResource"}},"IsDeleted":{"type":"boolean"},"RelatedSupplierBillGuidFilter":{"format":"uuid","type":"string","example":"00000000-0000-0000-0000-000000000000"},"GUID":{"format":"uuid","type":"string","example":"00000000-0000-0000-0000-000000000000"}}},"ApiIntegratorAllocationResource":{"type":"object","properties":{"Guid":{"format":"uuid","type":"string","example":"00000000-0000-0000-0000-000000000000"},"Amount":{"format":"double","type":"number"},"DateInput":{"format":"localDate","type":"string","example":"2000-01-01"},"RelatedSupplierBillGuid":{"format":"uuid","type":"string","example":"00000000-0000-0000-0000-000000000000"},"IsDeleted":{"type":"boolean"}}},"ApiResourceResultEntity[ApiIntegratorSupplierPaymentResource]":{"type":"object","properties":{"resource":{"$ref":"#/definitions/ApiIntegratorSupplierPaymentResource"},"links":{"$ref":"#/definitions/ApiResourceResultEntityLinks"},"extra":{"$ref":"#/definitions/ApiResourceResultEntityExtra"},"errors":{"$ref":"#/definitions/ApiResourceErrors"},"status":{"$ref":"#/definitions/ApiResourceStatus"}}},"ApiResourceResultCollection[ApiIntegratorSupplierPaymentResource]":{"type":"object","properties":{"resource":{"type":"array","items":{"$ref":"#/definitions/ApiIntegratorSupplierPaymentResource"}},"extra":{"$ref":"#/definitions/ApiResourceResultCollectionExtra"},"errors":{"$ref":"#/definitions/ApiResourceErrors"},"status":{"$ref":"#/definitions/ApiResourceStatus"}}},"ApiResourceChanges[ApiIntegratorSupplierSiteResource]":{"type":"object","properties":{"resource":{"type":"array","items":{"$ref":"#/definitions/ApiIntegratorSupplierSiteResource"}},"extra":{"$ref":"#/definitions/ApiResourceResultUpdatesExtra"},"errors":{"$ref":"#/definitions/ApiResourceErrors"},"status":{"$ref":"#/definitions/ApiResourceStatus"}}},"ApiIntegratorSupplierSiteResource":{"type":"object","properties":{"Name":{"type":"string"},"RelatedSupplierGuid":{"format":"uuid","type":"string","example":"00000000-0000-0000-0000-000000000000"},"RelatedLocationPaymentGuid":{"format":"uuid","type":"string","example":"00000000-0000-0000-0000-000000000000"},"PaymentTypeListItem":{"$ref":"#/definitions/ApiIntegratorListItemResource"},"PaymentTermListItem":{"$ref":"#/definitions/ApiIntegratorListItemResource"},"SICCodeListItem":{"$ref":"#/definitions/ApiIntegratorListItemResource"},"PayableCycleListItem":{"$ref":"#/definitions/ApiIntegratorListItemResource"},"RelatedLocationGuid":{"format":"uuid","type":"string","example":"00000000-0000-0000-0000-000000000000"},"BankDetails":{"$ref":"#/definitions/ApiIntegratorSupplierSiteBankDetailsResource"},"PaymentHandlingCodeListItem":{"$ref":"#/definitions/ApiIntegratorListItemResource"},"FacilityTypeListItem":{"$ref":"#/definitions/ApiIntegratorListItemResource"},"SupplierTypesListItems":{"type":"array","items":{"$ref":"#/definitions/ApiIntegratorSupplierSiteSiteTypeResource"}},"GUID":{"format":"uuid","type":"string","example":"00000000-0000-0000-0000-000000000000"}}},"ApiIntegratorSupplierSiteBankDetailsResource":{"type":"object","properties":{"BankName":{"type":"string"},"AccountName":{"type":"string"},"AccountNo":{"type":"string"},"SortCode":{"type":"string"},"BIC":{"type":"string"},"IBAN":{"type":"string"},"DirectDebitRunConfigListItem":{"$ref":"#/definitions/ApiIntegratorListItemResource"},"Address":{"$ref":"#/definitions/ApiIntegratorSupplierSiteBankDetailsAddressResource"}}},"ApiIntegratorSupplierSiteSiteTypeResource":{"type":"object","properties":{"SupplierTypeListItem":{"$ref":"#/definitions/ApiIntegratorListItemResource"}}},"ApiIntegratorSupplierSiteBankDetailsAddressResource":{"type":"object","properties":{"HouseNumber":{"type":"string"},"Address1":{"type":"string"},"Address2":{"type":"string"},"Address3":{"type":"string"},"Address4":{"type":"string"},"Address5":{"type":"string"},"Postcode":{"type":"string"}}},"ApiResourceResultEntity[ApiIntegratorSupplierSiteResource]":{"type":"object","properties":{"resource":{"$ref":"#/definitions/ApiIntegratorSupplierSiteResource"},"links":{"$ref":"#/definitions/ApiResourceResultEntityLinks"},"extra":{"$ref":"#/definitions/ApiResourceResultEntityExtra"},"errors":{"$ref":"#/definitions/ApiResourceErrors"},"status":{"$ref":"#/definitions/ApiResourceStatus"}}},"ApiResourceResultCollection[ApiIntegratorSupplierSiteResource]":{"type":"object","properties":{"resource":{"type":"array","items":{"$ref":"#/definitions/ApiIntegratorSupplierSiteResource"}},"extra":{"$ref":"#/definitions/ApiResourceResultCollectionExtra"},"errors":{"$ref":"#/definitions/ApiResourceErrors"},"status":{"$ref":"#/definitions/ApiResourceStatus"}}},"ApiResourceResultEntity[ApiIntegratorSupplierTypeResource]":{"type":"object","properties":{"resource":{"$ref":"#/definitions/ApiIntegratorSupplierTypeResource"},"links":{"$ref":"#/definitions/ApiResourceResultEntityLinks"},"extra":{"$ref":"#/definitions/ApiResourceResultEntityExtra"},"errors":{"$ref":"#/definitions/ApiResourceErrors"},"status":{"$ref":"#/definitions/ApiResourceStatus"}}},"ApiIntegratorSupplierTypeResource":{"type":"object","properties":{"Description":{"type":"string"},"GUID":{"format":"uuid","type":"string","example":"00000000-0000-0000-0000-000000000000"}}},"ApiResourceResultCollection[ApiIntegratorSupplierTypeResource]":{"type":"object","properties":{"resource":{"type":"array","items":{"$ref":"#/definitions/ApiIntegratorSupplierTypeResource"}},"extra":{"$ref":"#/definitions/ApiResourceResultCollectionExtra"},"errors":{"$ref":"#/definitions/ApiResourceErrors"},"status":{"$ref":"#/definitions/ApiResourceStatus"}}},"ApiResourceResultEntity[ApiIntegratorSystemConfigurationResource]":{"type":"object","properties":{"resource":{"$ref":"#/definitions/ApiIntegratorSystemConfigurationResource"},"links":{"$ref":"#/definitions/ApiResourceResultEntityLinks"},"extra":{"$ref":"#/definitions/ApiResourceResultEntityExtra"},"errors":{"$ref":"#/definitions/ApiResourceErrors"},"status":{"$ref":"#/definitions/ApiResourceStatus"}}},"ApiIntegratorSystemConfigurationResource":{"type":"object","properties":{"Name":{"type":"string"},"Value":{"type":"string"},"HelpDescription":{"type":"string"},"IsInternal":{"type":"boolean"},"IsDeleted":{"type":"boolean"},"GUID":{"format":"uuid","type":"string","example":"00000000-0000-0000-0000-000000000000"}}},"ApiResourceResultCollection[ApiIntegratorSystemConfigurationResource]":{"type":"object","properties":{"resource":{"type":"array","items":{"$ref":"#/definitions/ApiIntegratorSystemConfigurationResource"}},"extra":{"$ref":"#/definitions/ApiResourceResultCollectionExtra"},"errors":{"$ref":"#/definitions/ApiResourceErrors"},"status":{"$ref":"#/definitions/ApiResourceStatus"}}},"ApiResourceResultEntity[ApiIntegratorTaxTemplateCollectionResource]":{"type":"object","properties":{"resource":{"$ref":"#/definitions/ApiIntegratorTaxTemplateCollectionResource"},"links":{"$ref":"#/definitions/ApiResourceResultEntityLinks"},"extra":{"$ref":"#/definitions/ApiResourceResultEntityExtra"},"errors":{"$ref":"#/definitions/ApiResourceErrors"},"status":{"$ref":"#/definitions/ApiResourceStatus"}}},"ApiIntegratorTaxTemplateCollectionResource":{"type":"object","properties":{"Description":{"type":"string"},"IsDeleted":{"type":"boolean"},"Code":{"type":"string"},"GUID":{"format":"uuid","type":"string","example":"00000000-0000-0000-0000-000000000000"}}},"ApiResourceResultCollection[ApiIntegratorTaxTemplateCollectionResource]":{"type":"object","properties":{"resource":{"type":"array","items":{"$ref":"#/definitions/ApiIntegratorTaxTemplateCollectionResource"}},"extra":{"$ref":"#/definitions/ApiResourceResultCollectionExtra"},"errors":{"$ref":"#/definitions/ApiResourceErrors"},"status":{"$ref":"#/definitions/ApiResourceStatus"}}},"ApiResourceResultEntity[ApiIntegratorTipLocationResource]":{"type":"object","properties":{"resource":{"$ref":"#/definitions/ApiIntegratorTipLocationResource"},"links":{"$ref":"#/definitions/ApiResourceResultEntityLinks"},"extra":{"$ref":"#/definitions/ApiResourceResultEntityExtra"},"errors":{"$ref":"#/definitions/ApiResourceErrors"},"status":{"$ref":"#/definitions/ApiResourceStatus"}}},"ApiIntegratorTipLocationResource":{"type":"object","properties":{"Description":{"type":"string"},"IsDeleted":{"type":"boolean"},"GUID":{"format":"uuid","type":"string","example":"00000000-0000-0000-0000-000000000000"}}},"ApiResourceResultCollection[ApiIntegratorTipLocationResource]":{"type":"object","properties":{"resource":{"type":"array","items":{"$ref":"#/definitions/ApiIntegratorTipLocationResource"}},"extra":{"$ref":"#/definitions/ApiResourceResultCollectionExtra"},"errors":{"$ref":"#/definitions/ApiResourceErrors"},"status":{"$ref":"#/definitions/ApiResourceStatus"}}},"ApiResourceResultEntity[ApiIntegratorTradingNameTypeResource]":{"type":"object","properties":{"resource":{"$ref":"#/definitions/ApiIntegratorTradingNameTypeResource"},"links":{"$ref":"#/definitions/ApiResourceResultEntityLinks"},"extra":{"$ref":"#/definitions/ApiResourceResultEntityExtra"},"errors":{"$ref":"#/definitions/ApiResourceErrors"},"status":{"$ref":"#/definitions/ApiResourceStatus"}}},"ApiIntegratorTradingNameTypeResource":{"type":"object","properties":{"Description":{"type":"string"},"GUID":{"format":"uuid","type":"string","example":"00000000-0000-0000-0000-000000000000"}}},"ApiResourceResultCollection[ApiIntegratorTradingNameTypeResource]":{"type":"object","properties":{"resource":{"type":"array","items":{"$ref":"#/definitions/ApiIntegratorTradingNameTypeResource"}},"extra":{"$ref":"#/definitions/ApiResourceResultCollectionExtra"},"errors":{"$ref":"#/definitions/ApiResourceErrors"},"status":{"$ref":"#/definitions/ApiResourceStatus"}}},"ApiResourceChanges[ApiIntegratorTrailerResource]":{"type":"object","properties":{"resource":{"type":"array","items":{"$ref":"#/definitions/ApiIntegratorTrailerResource"}},"extra":{"$ref":"#/definitions/ApiResourceResultUpdatesExtra"},"errors":{"$ref":"#/definitions/ApiResourceErrors"},"status":{"$ref":"#/definitions/ApiResourceStatus"}}},"ApiIntegratorTrailerResource":{"type":"object","properties":{"Description":{"type":"string"},"GUID":{"format":"uuid","type":"string","example":"00000000-0000-0000-0000-000000000000"}}},"ApiResourceResultEntity[ApiIntegratorTrailerResource]":{"type":"object","properties":{"resource":{"$ref":"#/definitions/ApiIntegratorTrailerResource"},"links":{"$ref":"#/definitions/ApiResourceResultEntityLinks"},"extra":{"$ref":"#/definitions/ApiResourceResultEntityExtra"},"errors":{"$ref":"#/definitions/ApiResourceErrors"},"status":{"$ref":"#/definitions/ApiResourceStatus"}}},"ApiResourceResultCollection[ApiIntegratorTrailerResource]":{"type":"object","properties":{"resource":{"type":"array","items":{"$ref":"#/definitions/ApiIntegratorTrailerResource"}},"extra":{"$ref":"#/definitions/ApiResourceResultCollectionExtra"},"errors":{"$ref":"#/definitions/ApiResourceErrors"},"status":{"$ref":"#/definitions/ApiResourceStatus"}}},"ApiResourceResultEntity[ApiIntegratorUnitOfMeasurementResource]":{"type":"object","properties":{"resource":{"$ref":"#/definitions/ApiIntegratorUnitOfMeasurementResource"},"links":{"$ref":"#/definitions/ApiResourceResultEntityLinks"},"extra":{"$ref":"#/definitions/ApiResourceResultEntityExtra"},"errors":{"$ref":"#/definitions/ApiResourceErrors"},"status":{"$ref":"#/definitions/ApiResourceStatus"}}},"ApiIntegratorUnitOfMeasurementResource":{"type":"object","properties":{"Description":{"type":"string"},"IsDeleted":{"type":"boolean"},"Code":{"type":"string"},"PricingBasisListItem":{"$ref":"#/definitions/ApiIntegratorListItemResource"},"ShortName":{"type":"string"},"GUID":{"format":"uuid","type":"string","example":"00000000-0000-0000-0000-000000000000"}}},"ApiResourceResultCollection[ApiIntegratorUnitOfMeasurementResource]":{"type":"object","properties":{"resource":{"type":"array","items":{"$ref":"#/definitions/ApiIntegratorUnitOfMeasurementResource"}},"extra":{"$ref":"#/definitions/ApiResourceResultCollectionExtra"},"errors":{"$ref":"#/definitions/ApiResourceErrors"},"status":{"$ref":"#/definitions/ApiResourceStatus"}}},"ApiResourceResultEntity[ApiIntegratorUserResource]":{"type":"object","properties":{"resource":{"$ref":"#/definitions/ApiIntegratorUserResource"},"links":{"$ref":"#/definitions/ApiResourceResultEntityLinks"},"extra":{"$ref":"#/definitions/ApiResourceResultEntityExtra"},"errors":{"$ref":"#/definitions/ApiResourceErrors"},"status":{"$ref":"#/definitions/ApiResourceStatus"}}},"ApiIntegratorUserResource":{"type":"object","properties":{"UserName":{"type":"string"},"Forename":{"type":"string"},"Surname":{"type":"string"},"IsOwnerDriver":{"type":"boolean"},"Email":{"type":"string"},"AccessRightEnumFilter":{"format":"int32","type":"integer"},"MobileTelNo":{"type":"string"},"CompanyOutletListItem":{"$ref":"#/definitions/ApiIntegratorListItemResource"},"StaffTypeListItem":{"$ref":"#/definitions/ApiIntegratorListItemResource"},"GUID":{"format":"uuid","type":"string","example":"00000000-0000-0000-0000-000000000000"}}},"ApiResourceResultCollection[ApiIntegratorUserResource]":{"type":"object","properties":{"resource":{"type":"array","items":{"$ref":"#/definitions/ApiIntegratorUserResource"}},"extra":{"$ref":"#/definitions/ApiResourceResultCollectionExtra"},"errors":{"$ref":"#/definitions/ApiResourceErrors"},"status":{"$ref":"#/definitions/ApiResourceStatus"}}},"ApiResourceResultEntity[ApiIntegratorVatResource]":{"type":"object","properties":{"resource":{"$ref":"#/definitions/ApiIntegratorVatResource"},"links":{"$ref":"#/definitions/ApiResourceResultEntityLinks"},"extra":{"$ref":"#/definitions/ApiResourceResultEntityExtra"},"errors":{"$ref":"#/definitions/ApiResourceErrors"},"status":{"$ref":"#/definitions/ApiResourceStatus"}}},"ApiIntegratorVatResource":{"type":"object","properties":{"Description":{"type":"string"},"IsDeleted":{"type":"boolean"},"Rate":{"format":"double","type":"number"},"GUID":{"format":"uuid","type":"string","example":"00000000-0000-0000-0000-000000000000"}}},"ApiResourceResultCollection[ApiIntegratorVatResource]":{"type":"object","properties":{"resource":{"type":"array","items":{"$ref":"#/definitions/ApiIntegratorVatResource"}},"extra":{"$ref":"#/definitions/ApiResourceResultCollectionExtra"},"errors":{"$ref":"#/definitions/ApiResourceErrors"},"status":{"$ref":"#/definitions/ApiResourceStatus"}}},"ApiResourceChanges[ApiIntegratorVehicleResource]":{"type":"object","properties":{"resource":{"type":"array","items":{"$ref":"#/definitions/ApiIntegratorVehicleResource"}},"extra":{"$ref":"#/definitions/ApiResourceResultUpdatesExtra"},"errors":{"$ref":"#/definitions/ApiResourceErrors"},"status":{"$ref":"#/definitions/ApiResourceStatus"}}},"ApiIntegratorVehicleResource":{"type":"object","properties":{"IsZeroWeightBinAccumulated":{"type":"boolean"},"IsNoTagStopEnabled":{"type":"boolean"},"RegistrationNo":{"type":"string"},"VehicleCode":{"type":"string"},"Make":{"type":"string"},"Model":{"type":"string"},"MaxWeight":{"format":"double","type":"number"},"TareWeight":{"format":"double","type":"number"},"VolumeCapacity":{"format":"double","type":"number"},"Notes":{"type":"string"},"CompanyOutletListItem":{"$ref":"#/definitions/ApiIntegratorListItemResource"},"FilterCompanyOutletListItemGuid":{"format":"uuid","type":"string","example":"00000000-0000-0000-0000-000000000000"},"ContainerTypeListItems":{"type":"array","items":{"$ref":"#/definitions/ApiIntegratorVehicleContainerTypeResource"}},"VehicleTypeListItem":{"$ref":"#/definitions/ApiIntegratorListItemResource"},"RelatedSupplierGuid":{"format":"uuid","type":"string","example":"00000000-0000-0000-0000-000000000000"},"RelatedSupplierSiteGuid":{"format":"uuid","type":"string","example":"00000000-0000-0000-0000-000000000000"},"GUID":{"format":"uuid","type":"string","example":"00000000-0000-0000-0000-000000000000"}}},"ApiIntegratorVehicleContainerTypeResource":{"type":"object","properties":{"ContainerTypeListItem":{"$ref":"#/definitions/ApiIntegratorListItemResource"}}},"ApiResourceResultEntity[ApiIntegratorVehicleResource]":{"type":"object","properties":{"resource":{"$ref":"#/definitions/ApiIntegratorVehicleResource"},"links":{"$ref":"#/definitions/ApiResourceResultEntityLinks"},"extra":{"$ref":"#/definitions/ApiResourceResultEntityExtra"},"errors":{"$ref":"#/definitions/ApiResourceErrors"},"status":{"$ref":"#/definitions/ApiResourceStatus"}}},"ApiResourceResultCollection[ApiIntegratorVehicleResource]":{"type":"object","properties":{"resource":{"type":"array","items":{"$ref":"#/definitions/ApiIntegratorVehicleResource"}},"extra":{"$ref":"#/definitions/ApiResourceResultCollectionExtra"},"errors":{"$ref":"#/definitions/ApiResourceErrors"},"status":{"$ref":"#/definitions/ApiResourceStatus"}}},"ApiResourceChanges[ApiIntegratorVehicleEventResource]":{"type":"object","properties":{"resource":{"type":"array","items":{"$ref":"#/definitions/ApiIntegratorVehicleEventResource"}},"extra":{"$ref":"#/definitions/ApiResourceResultUpdatesExtra"},"errors":{"$ref":"#/definitions/ApiResourceErrors"},"status":{"$ref":"#/definitions/ApiResourceStatus"}}},"ApiIntegratorVehicleEventResource":{"type":"object","properties":{"AdditionalInformation":{"type":"string"},"BinVisitedCount":{"format":"int32","type":"integer"},"CurrentWeight":{"format":"double","type":"number"},"Distance":{"format":"double","type":"number"},"FlexibleData":{"type":"string"},"IsGeoCompressed":{"type":"boolean"},"Location":{"$ref":"#/definitions/ApiIntegratorLocationGeoLocationResource"},"NumberOfPictures":{"format":"int32","type":"integer"},"TimeStamp":{"format":"offsetDateTime","type":"string","example":"2000-01-01T00:00:00+01:00"},"TotalDistance":{"format":"double","type":"number"},"VehicleCode":{"type":"string"},"VehicleEventXML":{"type":"string"},"VehicleEventTypeListItem":{"$ref":"#/definitions/ApiIntegratorListItemResource"},"RelatedScheduleGuid":{"format":"uuid","type":"string","example":"00000000-0000-0000-0000-000000000000"},"RelatedJobGuid":{"format":"uuid","type":"string","example":"00000000-0000-0000-0000-000000000000"},"RelatedRouteGuid":{"format":"uuid","type":"string","example":"00000000-0000-0000-0000-000000000000"},"RelatedRouteVisitGroupGuid":{"format":"uuid","type":"string","example":"00000000-0000-0000-0000-000000000000"},"RelatedVehicleGuid":{"format":"uuid","type":"string","example":"00000000-0000-0000-0000-000000000000"},"EventDate":{"format":"localDate","type":"string","example":"2000-01-01"},"IsAcknowledged":{"type":"boolean"},"IsDeleted":{"type":"boolean"},"GUID":{"format":"uuid","type":"string","example":"00000000-0000-0000-0000-000000000000"}}},"ApiResourceResultEntity[ApiIntegratorVehicleEventResource]":{"type":"object","properties":{"resource":{"$ref":"#/definitions/ApiIntegratorVehicleEventResource"},"links":{"$ref":"#/definitions/ApiResourceResultEntityLinks"},"extra":{"$ref":"#/definitions/ApiResourceResultEntityExtra"},"errors":{"$ref":"#/definitions/ApiResourceErrors"},"status":{"$ref":"#/definitions/ApiResourceStatus"}}},"ApiResourceResultCollection[ApiIntegratorVehicleEventResource]":{"type":"object","properties":{"resource":{"type":"array","items":{"$ref":"#/definitions/ApiIntegratorVehicleEventResource"}},"extra":{"$ref":"#/definitions/ApiResourceResultCollectionExtra"},"errors":{"$ref":"#/definitions/ApiResourceErrors"},"status":{"$ref":"#/definitions/ApiResourceStatus"}}},"ApiResourceChanges[ApiIntegratorVehicleEventGeoSummaryResource]":{"type":"object","properties":{"resource":{"type":"array","items":{"$ref":"#/definitions/ApiIntegratorVehicleEventGeoSummaryResource"}},"extra":{"$ref":"#/definitions/ApiResourceResultUpdatesExtra"},"errors":{"$ref":"#/definitions/ApiResourceErrors"},"status":{"$ref":"#/definitions/ApiResourceStatus"}}},"ApiIntegratorVehicleEventGeoSummaryResource":{"type":"object","properties":{"DemoRegion":{"type":"string"},"FromTimeStamp":{"format":"offsetDateTime","type":"string","example":"2000-01-01T00:00:00+01:00"},"GeoJSON":{"format":"byte","type":"string"},"NumberOfVehicleEvents":{"format":"int32","type":"integer"},"ToTimeStamp":{"format":"offsetDateTime","type":"string","example":"2000-01-01T00:00:00+01:00"},"RelatedVehicleGuid":{"format":"uuid","type":"string","example":"00000000-0000-0000-0000-000000000000"},"Version":{"format":"int32","type":"integer"},"IsDeleted":{"type":"boolean"},"GUID":{"format":"uuid","type":"string","example":"00000000-0000-0000-0000-000000000000"}}},"ApiResourceResultEntity[ApiIntegratorVehicleEventGeoSummaryResource]":{"type":"object","properties":{"resource":{"$ref":"#/definitions/ApiIntegratorVehicleEventGeoSummaryResource"},"links":{"$ref":"#/definitions/ApiResourceResultEntityLinks"},"extra":{"$ref":"#/definitions/ApiResourceResultEntityExtra"},"errors":{"$ref":"#/definitions/ApiResourceErrors"},"status":{"$ref":"#/definitions/ApiResourceStatus"}}},"ApiResourceResultCollection[ApiIntegratorVehicleEventGeoSummaryResource]":{"type":"object","properties":{"resource":{"type":"array","items":{"$ref":"#/definitions/ApiIntegratorVehicleEventGeoSummaryResource"}},"extra":{"$ref":"#/definitions/ApiResourceResultCollectionExtra"},"errors":{"$ref":"#/definitions/ApiResourceErrors"},"status":{"$ref":"#/definitions/ApiResourceStatus"}}},"ApiResourceResultEntity[ApiIntegratorVehicleEventTypeResource]":{"type":"object","properties":{"resource":{"$ref":"#/definitions/ApiIntegratorVehicleEventTypeResource"},"links":{"$ref":"#/definitions/ApiResourceResultEntityLinks"},"extra":{"$ref":"#/definitions/ApiResourceResultEntityExtra"},"errors":{"$ref":"#/definitions/ApiResourceErrors"},"status":{"$ref":"#/definitions/ApiResourceStatus"}}},"ApiIntegratorVehicleEventTypeResource":{"type":"object","properties":{"Description":{"type":"string"},"IsDeleted":{"type":"boolean"},"GUID":{"format":"uuid","type":"string","example":"00000000-0000-0000-0000-000000000000"}}},"ApiResourceResultCollection[ApiIntegratorVehicleEventTypeResource]":{"type":"object","properties":{"resource":{"type":"array","items":{"$ref":"#/definitions/ApiIntegratorVehicleEventTypeResource"}},"extra":{"$ref":"#/definitions/ApiResourceResultCollectionExtra"},"errors":{"$ref":"#/definitions/ApiResourceErrors"},"status":{"$ref":"#/definitions/ApiResourceStatus"}}},"ApiResourceResultEntity[ApiIntegratorVehicleTypeResource]":{"type":"object","properties":{"resource":{"$ref":"#/definitions/ApiIntegratorVehicleTypeResource"},"links":{"$ref":"#/definitions/ApiResourceResultEntityLinks"},"extra":{"$ref":"#/definitions/ApiResourceResultEntityExtra"},"errors":{"$ref":"#/definitions/ApiResourceErrors"},"status":{"$ref":"#/definitions/ApiResourceStatus"}}},"ApiIntegratorVehicleTypeResource":{"type":"object","properties":{"Description":{"type":"string"},"Code":{"type":"string"},"CollectionType":{"type":"string"},"IsDeleted":{"type":"boolean"},"GUID":{"format":"uuid","type":"string","example":"00000000-0000-0000-0000-000000000000"}}},"ApiResourceResultCollection[ApiIntegratorVehicleTypeResource]":{"type":"object","properties":{"resource":{"type":"array","items":{"$ref":"#/definitions/ApiIntegratorVehicleTypeResource"}},"extra":{"$ref":"#/definitions/ApiResourceResultCollectionExtra"},"errors":{"$ref":"#/definitions/ApiResourceErrors"},"status":{"$ref":"#/definitions/ApiResourceStatus"}}},"ApiResourceResultEntity[ApiIntegratorVisitStatusResource]":{"type":"object","properties":{"resource":{"$ref":"#/definitions/ApiIntegratorVisitStatusResource"},"links":{"$ref":"#/definitions/ApiResourceResultEntityLinks"},"extra":{"$ref":"#/definitions/ApiResourceResultEntityExtra"},"errors":{"$ref":"#/definitions/ApiResourceErrors"},"status":{"$ref":"#/definitions/ApiResourceStatus"}}},"ApiIntegratorVisitStatusResource":{"type":"object","properties":{"Description":{"type":"string"},"GUID":{"format":"uuid","type":"string","example":"00000000-0000-0000-0000-000000000000"}}},"ApiResourceResultCollection[ApiIntegratorVisitStatusResource]":{"type":"object","properties":{"resource":{"type":"array","items":{"$ref":"#/definitions/ApiIntegratorVisitStatusResource"}},"extra":{"$ref":"#/definitions/ApiResourceResultCollectionExtra"},"errors":{"$ref":"#/definitions/ApiResourceErrors"},"status":{"$ref":"#/definitions/ApiResourceStatus"}}},"ApiResourceChanges[ApiIntegratorWeighingResource]":{"type":"object","properties":{"resource":{"type":"array","items":{"$ref":"#/definitions/ApiIntegratorWeighingResource"}},"extra":{"$ref":"#/definitions/ApiResourceResultUpdatesExtra"},"errors":{"$ref":"#/definitions/ApiResourceErrors"},"status":{"$ref":"#/definitions/ApiResourceStatus"}}},"ApiIntegratorWeighingResource":{"type":"object","properties":{"RelatedScheduleGuid":{"format":"uuid","type":"string","example":"00000000-0000-0000-0000-000000000000"},"RelatedRouteGuid":{"format":"uuid","type":"string","example":"00000000-0000-0000-0000-000000000000"},"RelatedJobGuid":{"format":"uuid","type":"string","example":"00000000-0000-0000-0000-000000000000"},"RelatedVehicleGuid":{"format":"uuid","type":"string","example":"00000000-0000-0000-0000-000000000000"},"RelatedExternalVehicleGuid":{"format":"uuid","type":"string","example":"00000000-0000-0000-0000-000000000000"},"RelatedMaterialGuid":{"format":"uuid","type":"string","example":"00000000-0000-0000-0000-000000000000"},"RelatedAreaOfOriginGuid":{"format":"uuid","type":"string","example":"00000000-0000-0000-0000-000000000000"},"RelatedSupplierThirdPartyCarrierGuid":{"format":"uuid","type":"string","example":"00000000-0000-0000-0000-000000000000"},"RelatedTransferDestinationWeighingGuid":{"format":"uuid","type":"string","example":"00000000-0000-0000-0000-000000000000"},"TicketNo":{"type":"string"},"ExternalTicketNo":{"type":"string"},"DestinationTicketNo":{"type":"string"},"CustomerLoadReference":{"type":"string"},"CustomerInvoiceReference":{"type":"string"},"Notes":{"type":"string"},"WeighingTypeListItem":{"$ref":"#/definitions/ApiIntegratorListItemResource"},"HaulierName":{"type":"string"},"Driver":{"$ref":"#/definitions/ApiIntegratorWeighingDriverResource"},"IsComplete":{"type":"boolean"},"IsDestinationConfirmed":{"type":"boolean"},"IsExternalVehicle":{"type":"boolean"},"IsEstimatedWeight":{"type":"boolean"},"IsGradingConfirmed":{"type":"boolean"},"IsIncContainer":{"type":"boolean"},"IsInspectionConfirmed":{"type":"boolean"},"IsOutboundWeighingComplete":{"type":"boolean"},"IsPassThrough":{"type":"boolean"},"IsPrinted":{"type":"boolean"},"StartedFromANPR":{"type":"boolean"},"CashCollected":{"format":"double","type":"number"},"WeighingDate":{"format":"dateTime","type":"string","example":"2000-01-01 00:00:00.000"},"Weights":{"$ref":"#/definitions/ApiIntegratorWeighingWeightsWeightResource"},"DestinationWeight":{"$ref":"#/definitions/ApiIntegratorWeighingDestinationWeightResource"},"WeighingIns":{"type":"array","items":{"$ref":"#/definitions/ApiIntegratorWeighingInResource"}},"WeighingOuts":{"type":"array","items":{"$ref":"#/definitions/ApiIntegratorWeighingOutResource"}},"ContainerIdentifier":{"type":"string"},"SealIdentifier":{"type":"string"},"ContainerTare":{"format":"double","type":"number"},"VerifiedGrossMaximum":{"format":"double","type":"number"},"ContainerNotes":{"type":"string"},"RelatedWeighingInGuid":{"format":"uuid","type":"string","example":"00000000-0000-0000-0000-000000000000"},"RelatedWeighingOutGuid":{"format":"uuid","type":"string","example":"00000000-0000-0000-0000-000000000000"},"RelatedLocationGuid":{"format":"uuid","type":"string","example":"00000000-0000-0000-0000-000000000000"},"RelatedLocationDestinationGuid":{"format":"uuid","type":"string","example":"00000000-0000-0000-0000-000000000000"},"RelatedBlobHashes":{"type":"array","items":{"$ref":"#/definitions/ApiIntegratorWeighingPictureResource"}},"RelatedTrailerGuid":{"format":"uuid","type":"string","example":"00000000-0000-0000-0000-000000000000"},"RelatedBlobWeighingDocketPdfHashes":{"type":"array","items":{"$ref":"#/definitions/ApiIntegratorWeighingDocketPdfResource"}},"RelatedWeighingInDetailGuid":{"format":"uuid","type":"string","example":"00000000-0000-0000-0000-000000000000"},"RelatedJobOverrideBreakdownGuid":{"format":"uuid","type":"string","example":"00000000-0000-0000-0000-000000000000"},"TimeInWeighing":{"format":"dateTime","type":"string","example":"2000-01-01 00:00:00.000"},"TimeOutWeighing":{"format":"dateTime","type":"string","example":"2000-01-01 00:00:00.000"},"CustomerRound":{"type":"string"},"GrossManualWeightReasonListItem":{"$ref":"#/definitions/ApiIntegratorListItemResource"},"TareManualWeightReasonListItem":{"$ref":"#/definitions/ApiIntegratorListItemResource"},"WeighingOutsRelatedWeighingInGuidFilter":{"format":"uuid","type":"string","example":"00000000-0000-0000-0000-000000000000"},"GUID":{"format":"uuid","type":"string","example":"00000000-0000-0000-0000-000000000000"}}},"ApiIntegratorWeighingDriverResource":{"type":"object","properties":{"LicenceNumber":{"type":"string"},"Name":{"type":"string"}}},"ApiIntegratorWeighingWeightsWeightResource":{"type":"object","properties":{"BridgeName":{"type":"string"},"GrossWeight":{"$ref":"#/definitions/ApiIntegratorWeighingWeightResource"},"TareWeight":{"$ref":"#/definitions/ApiIntegratorWeighingWeightResource"},"Quantity":{"format":"double","type":"number"},"Volume":{"format":"double","type":"number"}}},"ApiIntegratorWeighingDestinationWeightResource":{"type":"object","properties":{"GrossWeight":{"format":"double","type":"number"},"TareWeight":{"format":"double","type":"number"},"Quantity":{"format":"double","type":"number"},"Volume":{"format":"double","type":"number"}}},"ApiIntegratorWeighingInResource":{"type":"object","properties":{"Guid":{"format":"uuid","type":"string","example":"00000000-0000-0000-0000-000000000000"},"TicketNo":{"type":"string"},"IsAutomatic":{"type":"boolean"},"TareTallyNo":{"type":"string"},"MaterialListItem":{"$ref":"#/definitions/ApiIntegratorListItemResource"},"ContainerTypeListItem":{"$ref":"#/definitions/ApiIntegratorListItemResource"},"Weights":{"$ref":"#/definitions/ApiIntegratorWeighingWeightsResource"},"Details":{"type":"array","items":{"$ref":"#/definitions/ApiIntegratorWeighingInDetailResource"}}}},"ApiIntegratorWeighingOutResource":{"type":"object","properties":{"Guid":{"format":"uuid","type":"string","example":"00000000-0000-0000-0000-000000000000"},"TicketNo":{"type":"string"},"IsAutomatic":{"type":"boolean"},"GrossTallyNo":{"type":"string"},"MaterialListItem":{"$ref":"#/definitions/ApiIntegratorListItemResource"},"ContainerTypeListItem":{"$ref":"#/definitions/ApiIntegratorListItemResource"},"RelatedWeighingInGuid":{"format":"uuid","type":"string","example":"00000000-0000-0000-0000-000000000000"},"Weights":{"$ref":"#/definitions/ApiIntegratorWeighingWeightsResource"}}},"ApiIntegratorWeighingPictureResource":{"type":"object","properties":{"Description":{"type":"string"},"Hash":{"type":"string"}}},"ApiIntegratorWeighingDocketPdfResource":{"type":"object","properties":{"Hash":{"type":"string"}}},"ApiIntegratorWeighingWeightResource":{"type":"object","properties":{"Guid":{"format":"uuid","type":"string","example":"00000000-0000-0000-0000-000000000000"},"Weight":{"format":"double","type":"number"},"Timestamp":{"format":"zonedDateTime","type":"string","example":{"DateTime":"2000-01-01T00:00:00Z","TimeZone":"Europe/London"}},"WeightTypeListItem":{"$ref":"#/definitions/ApiIntegratorListItemResource"}}},"ApiIntegratorWeighingWeightsResource":{"type":"object","properties":{"GrossWeight":{"$ref":"#/definitions/ApiIntegratorWeighingWeightResource"},"TareWeight":{"$ref":"#/definitions/ApiIntegratorWeighingWeightResource"},"Quantity":{"format":"double","type":"number"},"Volume":{"format":"double","type":"number"}}},"ApiIntegratorWeighingInDetailResource":{"type":"object","properties":{"Guid":{"format":"uuid","type":"string","example":"00000000-0000-0000-0000-000000000000"},"Barcode":{"type":"string"},"Weight":{"format":"double","type":"number"},"RelatedJobOverrideBreakdownGuid":{"format":"uuid","type":"string","example":"00000000-0000-0000-0000-000000000000"},"ReasonListItem":{"$ref":"#/definitions/ApiIntegratorListItemResource"},"IsDeleted":{"type":"boolean"}}},"ApiResourceResultEntity[ApiIntegratorWeighingResource]":{"type":"object","properties":{"resource":{"$ref":"#/definitions/ApiIntegratorWeighingResource"},"links":{"$ref":"#/definitions/ApiResourceResultEntityLinks"},"extra":{"$ref":"#/definitions/ApiResourceResultEntityExtra"},"errors":{"$ref":"#/definitions/ApiResourceErrors"},"status":{"$ref":"#/definitions/ApiResourceStatus"}}},"ApiResourceResultCollection[ApiIntegratorWeighingResource]":{"type":"object","properties":{"resource":{"type":"array","items":{"$ref":"#/definitions/ApiIntegratorWeighingResource"}},"extra":{"$ref":"#/definitions/ApiResourceResultCollectionExtra"},"errors":{"$ref":"#/definitions/ApiResourceErrors"},"status":{"$ref":"#/definitions/ApiResourceStatus"}}},"ApiResourceResultEntity[ApiIntegratorWeighingTypeResource]":{"type":"object","properties":{"resource":{"$ref":"#/definitions/ApiIntegratorWeighingTypeResource"},"links":{"$ref":"#/definitions/ApiResourceResultEntityLinks"},"extra":{"$ref":"#/definitions/ApiResourceResultEntityExtra"},"errors":{"$ref":"#/definitions/ApiResourceErrors"},"status":{"$ref":"#/definitions/ApiResourceStatus"}}},"ApiIntegratorWeighingTypeResource":{"type":"object","properties":{"Description":{"type":"string"},"GUID":{"format":"uuid","type":"string","example":"00000000-0000-0000-0000-000000000000"}}},"ApiResourceResultCollection[ApiIntegratorWeighingTypeResource]":{"type":"object","properties":{"resource":{"type":"array","items":{"$ref":"#/definitions/ApiIntegratorWeighingTypeResource"}},"extra":{"$ref":"#/definitions/ApiResourceResultCollectionExtra"},"errors":{"$ref":"#/definitions/ApiResourceErrors"},"status":{"$ref":"#/definitions/ApiResourceStatus"}}},"ApiResourceResultEntity[ApiIntegratorWeightTypeResource]":{"type":"object","properties":{"resource":{"$ref":"#/definitions/ApiIntegratorWeightTypeResource"},"links":{"$ref":"#/definitions/ApiResourceResultEntityLinks"},"extra":{"$ref":"#/definitions/ApiResourceResultEntityExtra"},"errors":{"$ref":"#/definitions/ApiResourceErrors"},"status":{"$ref":"#/definitions/ApiResourceStatus"}}},"ApiIntegratorWeightTypeResource":{"type":"object","properties":{"Description":{"type":"string"},"GUID":{"format":"uuid","type":"string","example":"00000000-0000-0000-0000-000000000000"}}},"ApiResourceResultCollection[ApiIntegratorWeightTypeResource]":{"type":"object","properties":{"resource":{"type":"array","items":{"$ref":"#/definitions/ApiIntegratorWeightTypeResource"}},"extra":{"$ref":"#/definitions/ApiResourceResultCollectionExtra"},"errors":{"$ref":"#/definitions/ApiResourceErrors"},"status":{"$ref":"#/definitions/ApiResourceStatus"}}},"ApiResourceResultEntity[ApiIntegratorWriteOffReasonResource]":{"type":"object","properties":{"resource":{"$ref":"#/definitions/ApiIntegratorWriteOffReasonResource"},"links":{"$ref":"#/definitions/ApiResourceResultEntityLinks"},"extra":{"$ref":"#/definitions/ApiResourceResultEntityExtra"},"errors":{"$ref":"#/definitions/ApiResourceErrors"},"status":{"$ref":"#/definitions/ApiResourceStatus"}}},"ApiIntegratorWriteOffReasonResource":{"type":"object","properties":{"Description":{"type":"string"},"IsDeleted":{"type":"boolean"},"AnalysisCode":{"type":"string"},"GUID":{"format":"uuid","type":"string","example":"00000000-0000-0000-0000-000000000000"}}},"ApiResourceResultCollection[ApiIntegratorWriteOffReasonResource]":{"type":"object","properties":{"resource":{"type":"array","items":{"$ref":"#/definitions/ApiIntegratorWriteOffReasonResource"}},"extra":{"$ref":"#/definitions/ApiResourceResultCollectionExtra"},"errors":{"$ref":"#/definitions/ApiResourceErrors"},"status":{"$ref":"#/definitions/ApiResourceStatus"}}},"ApiResourceResultEntity[ApiIntegratorZoneResource]":{"type":"object","properties":{"resource":{"$ref":"#/definitions/ApiIntegratorZoneResource"},"links":{"$ref":"#/definitions/ApiResourceResultEntityLinks"},"extra":{"$ref":"#/definitions/ApiResourceResultEntityExtra"},"errors":{"$ref":"#/definitions/ApiResourceErrors"},"status":{"$ref":"#/definitions/ApiResourceStatus"}}},"ApiIntegratorZoneResource":{"type":"object","properties":{"Description":{"type":"string"},"GUID":{"format":"uuid","type":"string","example":"00000000-0000-0000-0000-000000000000"}}},"ApiResourceResultCollection[ApiIntegratorZoneResource]":{"type":"object","properties":{"resource":{"type":"array","items":{"$ref":"#/definitions/ApiIntegratorZoneResource"}},"extra":{"$ref":"#/definitions/ApiResourceResultCollectionExtra"},"errors":{"$ref":"#/definitions/ApiResourceErrors"},"status":{"$ref":"#/definitions/ApiResourceStatus"}}}}}